<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>GrapeCity.Spreadsheet</name>
  </assembly>
  <members>
    <member name="T:GrapeCity.Spreadsheet.IAreas">
      <summary>
            Represents a collection of the areas, or contiguous blocks of cells, within a selection.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAreas.Count">
      <summary>
            Gets an integer value that indicates the number of objects in the collection.
            </summary>
      <value>An integer value represents the number of objects in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAreas.Item(System.Int32)">
      <summary>
            Gets a single <see cref="T:GrapeCity.Spreadsheet.IRange" /> object from the collection.
            </summary>
      <param name="index">An integer value indicates the index number of the <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object at the specified index.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder">
      <summary>
            Represents the geometry of a freeform while it's being built.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.Clone">
      <summary>
            Creates a new <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder" /> object that is a copy of the current <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder" /> instance.
            </summary>
      <returns>A new <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder" /> object that is a copy of this <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder" /> instance.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.AddNodes(GrapeCity.Spreadsheet.Drawing.SegmentType,GrapeCity.Spreadsheet.Drawing.EditingType,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a point in the current shape, and then draws a line from the current node to the last node that was added.
            </summary>
      <param name="segmentType">The type of segment to be added.</param>
      <param name="editingType">The editing property of the vertex.</param>
      <param name="x1">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the end point of the new segment.<br />
            If the <paramref name="editingType" /> of the new node is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the first control point for the new segment.
            </param>
      <param name="y1">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the end point of the new segment.<br />
            If the <paramref name="editingType" /> of the new node is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the first control point for the new segment.
            </param>
      <param name="x2">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
      <param name="y2">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
      <param name="x3">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
      <param name="y3">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.Drawing.IFreeFormBuilder" /> object represent the geometry of a freeform while it's being built.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.ReplaceLastNode(GrapeCity.Spreadsheet.Drawing.SegmentType,GrapeCity.Spreadsheet.Drawing.EditingType,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Replaces the last point in the current shape, and then draws a line from the current node to the last node that was added.
            </summary>
      <param name="segmentType">The type of segment to be added.</param>
      <param name="editingType">The editing property of the vertex.</param>
      <param name="x1">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the end point of the new segment.<br />
            If the <paramref name="editingType" /> of the new node is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the first control point for the new segment.
            </param>
      <param name="y1">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the end point of the new segment.<br />
            If the <paramref name="editingType" /> of the new node is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the first control point for the new segment.
            </param>
      <param name="x2">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
      <param name="y2">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
      <param name="x3">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
      <param name="y3">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.RemoveLastNodesFrom(System.Int32,System.Int32)">
      <summary>
            Removes the last shape node.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.ConvertToShape">
      <summary>
            Creates a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> that has the geometric characteristics of the specified <see cref="T:GrapeCity.Spreadsheet.Drawing.IFreeFormBuilder" /> object
            </summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object that represents the new shape.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.ConvertToShape(GrapeCity.Spreadsheet.Drawing.Shape,System.Boolean)">
      <summary>
            Creates/Modifies a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> that has the geometric characteristics of the specified <see cref="T:GrapeCity.Spreadsheet.Drawing.IFreeFormBuilder" /> object
            </summary>
      <param name="shape">The current shape to update.</param>
      <param name="applyDisplayFormulas">Checks whether DisplayFormula was applied.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> object that represents the new shape.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.GetNodes(System.Int32,System.Int32@,System.Boolean)">
      <summary>
            Get an array of <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode" /> that was provided by the <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder" />.  
            </summary>
      <param name="pathIndex">The index of array.</param>
      <param name="length">The size of this array</param>
      <returns>An array of <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.GetNode(System.Int32,System.Int32)">
      <summary>
            Get an array of <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode" /> that was provided by the <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder" />.  
            </summary>
      <param name="pathIndex">The index of array.</param>
      <param name="nodeIndex">The index of node in current path</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.PathCount">
      <summary>
            Get the number of path that builds a shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.ShapeBounds">
      <summary>
            Gets the boundary of building shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.FindSmoothCurveControlPoint(System.Nullable{GrapeCity.Drawing.Point},GrapeCity.Drawing.Point,System.Nullable{GrapeCity.Drawing.Point})">
      <summary>
            Find the smooth control points of the specified point.
            </summary>
      <param name="pt_before">The before point.</param>
      <param name="pt">The point that should be calculated its control points</param>
      <param name="pt_after">The after point.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.FromShape(GrapeCity.Spreadsheet.Drawing.Shape,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Create <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder" /> from a shape
            </summary>
      <param name="shape">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> that provide segments</param>
      <param name="correctEditingType">If True the editing type of each node should be re-calculate, otherwise skipped.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.CreateAddingNode(System.Double,System.Double,System.Nullable{GrapeCity.Spreadsheet.API.Drawing.FreeFormNode},System.Nullable{GrapeCity.Spreadsheet.API.Drawing.FreeFormNode},System.Boolean)">
      <summary>
            Create a new node to processing
            </summary>
      <param name="x">The X coordinate</param>
      <param name="y">The Y coordinate</param>
      <param name="beforeNode">The node in segment that is before of the creating node.</param>
      <param name="afterNode">The node in segment that is after of the creating node.</param>
      <param name="smoothly">If true, the node will be Smooth otherwise Corner.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.AddNode(GrapeCity.Spreadsheet.Drawing.Shape@,GrapeCity.Spreadsheet.API.Drawing.FreeFormNode,System.Nullable{GrapeCity.Spreadsheet.API.Drawing.FreeFormNode},System.Nullable{GrapeCity.Spreadsheet.API.Drawing.FreeFormNode},System.Boolean,System.Boolean)">
      <summary>
            Add new node to the segments of this shape.
            </summary>
      <param name="shape">The shape that will be modified.</param>
      <param name="node">The node will be added to shape's segment.</param>
      <param name="beforeNode">The node in segment that is before of the adding node.</param>
      <param name="afterNode">The node in segment that is after of the adding node.</param>
      <param name="modifyShape">Set True if you want to modify shape after adding node. If you don't want set it to False</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.RemoveNode(GrapeCity.Spreadsheet.Drawing.Shape@,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Remove a node from shape's geometries
            </summary>
      <param name="shape">The Shape that will be modified geometry</param>
      <param name="nodeIndex">The node of segment will be removed</param>
      <returns>true if remove node successfully, otherwise false</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.GetNeighborNode(GrapeCity.Spreadsheet.API.Drawing.FreeFormNode,System.Boolean)">
      <summary>
            Get these neighbors of the specified node.
            </summary>
      <param name="node">The node that have to get neighbors.</param>
      <param name="before">true if get before node, otherwise get after node.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.AdjustNode(GrapeCity.Spreadsheet.Drawing.Shape@,System.Int32,System.Int32,GrapeCity.Drawing.Size,GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes,System.Boolean,System.Boolean)">
      <summary>
            Adjust the free form node to change 
            </summary>
      <param name="nodeIndex">The affect node</param>
      <param name="moveDistance">The distance that node moved</param>
      <param name="adjustType">0: Adjust the node, 1: Adjust the first control point, 2: Adjust the second control point.</param>
      <param name="modifyShape">Set True if you want to modify shape after adjusting. If you don't want set it to False</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.AdjustNode(GrapeCity.Spreadsheet.Drawing.EditingType,GrapeCity.Drawing.Point@,GrapeCity.Drawing.Point@,GrapeCity.Drawing.Point@,GrapeCity.Drawing.Size,GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes)">
      <summary>
            Adjust these points as Smooth, Straight or Cornor
            </summary>
      <param name="editingType">The <see cref="T:GrapeCity.Spreadsheet.Drawing.EditingType" /> of the node.</param>
      <param name="location">The location of the node.</param>
      <param name="control1">The location of 1st control of the node.</param>
      <param name="control2">The location of 2nd control of the node.</param>
      <param name="adjustSize">The adjust size.</param>
      <param name="adjustPointType">The <see cref="T:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes" /> on control point.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.NodeCount">
      <summary>
            Get the number of nodes.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.GetIndexes(GrapeCity.Spreadsheet.API.Drawing.FreeFormNode,System.Int32@,System.Int32@)">
      <summary>
            Get the index of the specified node
            </summary>
      <param name="node">The node which determined indexes</param>
      <param name="pathIndex">The output index of the path on this builder</param>
      <param name="nodeIndex">The output index of node on this path</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.GetPathIndex(GrapeCity.Spreadsheet.API.Drawing.FreeFormNode,GrapeCity.Spreadsheet.API.Drawing.FreeFormNode)">
      <summary>
            Get the index of the specified path
            </summary>
      <param name="beforeNode">The before node of the segment.</param>
      <param name="afterNode">The after node of the segment.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.GetIndexes(GrapeCity.Spreadsheet.API.Drawing.FreeFormNode,GrapeCity.Spreadsheet.API.Drawing.FreeFormNode,System.Int32@,System.Int32@)">
      <summary>
            Get the indexs of nodes on the segment that defined by two nodes.
            </summary>
      <param name="beforeNode">The <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode" /> before.</param>
      <param name="afterNode">The <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode" /> after.</param>
      <param name="beforeIndex">The index of before node.</param>
      <param name="afterIndex">The index of after node.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.IsClosedPath(System.Int32)">
      <summary>
            Gets a boolean value indicates whether the specified path is closed.
            </summary>
      <param name="pathIndex">The index of specified path</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.DeleteSegment(GrapeCity.Spreadsheet.Drawing.Shape@,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Remove the specifed segment that determined by <paramref name="node" /></summary>
      <param name="shape">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> that will be modified</param>
      <param name="beforeNodeIndex">The before node of this segment</param>
      <param name="afterNodeIndex">The before node of this segment</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.OpenPath(GrapeCity.Spreadsheet.Drawing.Shape@,GrapeCity.Spreadsheet.API.Drawing.FreeFormNode,System.Boolean,System.Boolean)">
      <summary>
            Open the specifed path that determined by <paramref name="node" /></summary>
      <param name="node">The before node of the selected segment or the current selected node</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.OpenPath">
      <summary>
            Open the editing path.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.ClosePath(GrapeCity.Spreadsheet.Drawing.Shape@,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Close the specifed path that determined by <paramref name="node" /></summary>
      <param name="pathIndex">The index of the path which will be removed</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.ChangeSegment(GrapeCity.Spreadsheet.Drawing.Shape@,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Drawing.SegmentType,System.Boolean,System.Boolean)">
      <summary>
            Change the segment of specified node
            </summary>
      <param name="shape">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> that will be modified</param>
      <param name="node1">The before node of this segment</param>
      <param name="node2">The after node of this segment</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder.ChangeEditingType(GrapeCity.Spreadsheet.Drawing.Shape@,System.Int32,System.Int32,GrapeCity.Spreadsheet.Drawing.EditingType,System.Boolean,System.Boolean)">
      <summary>
            Change the editing type of the current node
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode">
      <summary>
            The node element that built shape's segment
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode.Location">
      <summary>
            The location of this <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode" /></summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode.Control1">
      <summary>
            The first control point of the node that defines the curve with before node.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode.Control2">
      <summary>
            The second control point of the node that defines the curve with after node.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode.SegmentType">
      <summary>
            The segment type of this node.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode.IsClosedNode">
      <summary>
            The boolean value determine the node is closed or not.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.API.StyleExtendDataModifier">
      <summary>
            Represents a modifier which allow other products modify the extended data of style
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.API.StyleExtendDataModifier.Modify(GrapeCity.Spreadsheet.ICompositeExtendData)">
      <summary>
            Use current data to modify compositeExtendData
            </summary>
      <param name="compositeExtendData">This will be change by data of current modifier</param>
      <returns>The edited compositeExtendData</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.API.NumberFormatExtendDataModifier">
      <summary>
            Represents a modifier allow other product modify extend data of NumberFormat 
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.API.StyleModifier">
      <summary>
            Represents a style modifier which manipulate some part of style (font, fill, border...)
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ICharacters">
      <summary>
            Represents characters in an object that contains text.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICharacters.Delete">
      <summary>
            Deletes the object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICharacters.Insert(System.String)">
      <summary>
            Inserts a string preceding the selected characters.
            </summary>
      <param name="text">The string to insert.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICharacters.Text">
      <summary>
            Gets a string value that represents the text of this range of characters.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICharacters.Count">
      <summary>
            Gets an integer value that represents the number of characters.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICharacters.Font">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the specified object.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IReadonlyArray`1">
      <summary>
            Represents a read-only array of items which are declared as <typeparamref name="T" /> type.
            </summary>
      <typeparam name="T">The type of items.</typeparam>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IReadonlyArray`1.Length">
      <summary>
            Gets the total number of items.
            </summary>
      <value>The total number of items.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IReadonlyArray`1.Item(System.Int32)">
      <summary>
            Gets the item at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of the item.</param>
      <returns>The <see cref="!:T" /> item.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IArray`1">
      <summary>
            Represents an array of items which are declared as <typeparamref name="T" /> type.
            </summary>
      <typeparam name="T">The type of items.</typeparam>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IArray`1.Count">
      <summary>
            Gets the total number of items.
            </summary>
      <value>The total number of items.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IArray`1.Item(System.Int32)">
      <summary>
            Gets the item at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of the item.</param>
      <returns>The <see cref="!:T" /> item.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SpecialCellType">
      <summary>
            Specifies the type of cells. 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellType.AllFormatConditions">
      <summary>
            Cells of any format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellType.AllValidation">
      <summary>
            Cells having validation criteria.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellType.Blanks">
      <summary>
            Empty cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellType.Comments">
      <summary>
            Cells containing notes.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellType.Constants">
      <summary>
            Cells containing constants. Use the <see cref="T:GrapeCity.Spreadsheet.SpecialCellsValue" /> to filter values by data types.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellType.Formulas">
      <summary>
            Cells containing formulas. Use the <see cref="T:GrapeCity.Spreadsheet.SpecialCellsValue" /> to filter formulas by return types.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellType.LastCell">
      <summary>
            The last cell in the used range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellType.SameFormatConditions">
      <summary>
            Cells having the same format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellType.SameValidation">
      <summary>
            Cells having the same validation criteria.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellType.Visible">
      <summary>
            All visible cells.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SpecialCellsValue">
      <summary>
            Specifies cells with a particular type of value to include in the result.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellsValue.All">
      <summary>
            Cells with any value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellsValue.Errors">
      <summary>
            Cells with errors.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellsValue.Logical">
      <summary>
            Cells with logical values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellsValue.Numbers">
      <summary>
            Cells with numeric values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SpecialCellsValue.TextValues">
      <summary>
            Cells with text.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TextParsingType">
      <summary>
            Specifies the column format for the data in the text file that you are importing into a query table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TextParsingType.Delimited">
      <summary>
            Indicates that the file is delimited by delimiter characters.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TextParsingType.FixedWidth">
      <summary>
            Indicates that the data in the file is arranged in columns of fixed widths.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TextQualifier">
      <summary>
            Specifies the delimiter to use to specify text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TextQualifier.None">
      <summary>
            No delimiter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TextQualifier.DoubleQuote">
      <summary>
            Double quotation mark (").
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TextQualifier.SingleQuote">
      <summary>
            Single quotation mark (').
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ColumnDataType">
      <summary>
            Specifies how a column is to be parsed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColumnDataType.General">
      <summary>
            General.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColumnDataType.Text">
      <summary>
            Text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColumnDataType.MDY">
      <summary>
            MDY date format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColumnDataType.DMY">
      <summary>
            DMY date format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColumnDataType.YMD">
      <summary>
            YMD date format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColumnDataType.MYD">
      <summary>
            MYD date format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColumnDataType.DYM">
      <summary>
            DYM date format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColumnDataType.YDM">
      <summary>
            YDM date format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColumnDataType.SkipColumn">
      <summary>
            Column is not parsed.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Direction">
      <summary>
            Specifies the direction in which to move.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DisplayFormat">
      <summary>
            Represents the display settings for an associated Range object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Borders">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.IBorders" /> object that represents the borders of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object as it is displayed in the current user interface.
            </summary>
      <value>The borders of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Font">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object as it is displayed in the current user interface.
            </summary>
      <value>The font of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.HorizontalAlignment">
      <summary>
            Returns a value that represents the horizontal alignment of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object as it is displayed in the current user interface.
            </summary>
      <value>The horizontal alignment of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.IndentLevel">
      <summary>
            Gets a value that represents the indent level of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object as it is displayed in the current user interface.
            </summary>
      <value>The indent level of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Interior">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object as it is displayed in the current user interface.
            </summary>
      <value>The interior of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Locked">
      <summary>
            Gets a value that indicates if the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object is locked as it is displayed in the current user interface.
            </summary>
      <value>
        <c>true</c> if the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object is locked; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.MergeCells">
      <summary>
            Gets a value that indicates if the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object contains merged cells as it is displayed in the current user interface.
            </summary>
      <value>
        <c>true</c> if the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object contains merged cells; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.CellType">
      <summary>
            Gets the cell type for cells in this <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" />.
            </summary>
      <value>The cell type of for cells in this <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.NumberFormat">
      <summary>
            Gets a value that represents the format code of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object as it is displayed in the current user interface.
            </summary>
      <value>The number format of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Orientation">
      <summary>
            Gets a value that represents the text orientation of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object as it is displayed in the current user interface.
            </summary>
      <value>The orientation of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.ShrinkToFit">
      <summary>
            Gets a value that indicates if Spread automatically shrinks text to fit in the available column width of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object as it is displayed in the current user interface.
            </summary>
      <value>
        <c>true</c> if Spread automatically shrinks text to fit in the available column width; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.Style">
      <summary>
            Gets a value, containing a Style object, that represents the style of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object as it is displayed in the current user interface.
            </summary>
      <value>The style of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.VerticalAlignment">
      <summary>
            Gets a value that represents the vertical alignment of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object as it is displayed in the current user interface.
            </summary>
      <value>The vertical alignment of the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.WrapText">
      <summary>
            Gets a value that indicates if Spread wraps the text of the associated <see cref="T:GrapeCity.Spreadsheet.DisplayFormat" /> object as it is displayed in the current user interface.
            </summary>
      <value>
        <c>true</c> if Spread wraps the text; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.GrapeCity#Spreadsheet#IBorders#Item(GrapeCity.Spreadsheet.BordersIndex)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IBorder" /> at the specified index.
            </summary>
      <param name="index">The index.</param>
      <returns>IBorder.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.GrapeCity#Spreadsheet#IBorder#Color">
      <summary>
            Gets or sets the primary color of the object.
            </summary>
      <value>The color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DisplayFormat.GrapeCity#Spreadsheet#IBorder#LineStyle">
      <summary>
            Gets or sets the line style for the border.
            </summary>
      <value>The line style.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DisplayFormat.GrapeCity#Spreadsheet#IBorders#ApplyBorder(GrapeCity.Spreadsheet.Border)">
      <summary>
            Apply border setting for whole the border
            </summary>
      <param name="border">The border's setting</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IControlFormat">
      <summary>
            Represents all control properties.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IControlFormat.PrintObject">
      <summary>
            Gets or sets a boolean value indicating whether the object will be printed when the document is printed.
            </summary>
      <value>
        <c>true</c> if the object will be printed when the document is printed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IPictures">
      <summary>
            Represents a collection of all the <see cref="T:GrapeCity.Spreadsheet.Drawing.IPicture" /> objects on the specified sheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictures.Count">
      <summary>
            Gets the number of pictures in the collection.
            </summary>
      <value>The number of pictures in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictures.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IPicture" /> object at the specified index.
            </summary>
      <param name="index">The index of the shape.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IPicture" /> object at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictures.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IPicture" /> object with the specified name.
            </summary>
      <param name="name">The name of the picture.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IPicture" /> object with the specified name.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPictures.Paste(GrapeCity.Spreadsheet.IRange,System.Boolean)">
      <summary>
            Pastes the contents of the Clipboard onto the sheet.
            </summary>
      <param name="destination">An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that specifies where the Clipboard contents should be pasted. If this argument is omitted, the current selection is used.</param>
      <param name="link">
        <c>true</c> to establish a link to the source of the pasted picture; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPictures.Paste(System.String,System.Boolean)">
      <summary>
            Pastes the contents of the Clipboard onto the sheet.
            </summary>
      <param name="destination">A <see cref="T:System.String" /> value that specifies where the Clipboard contents should be pasted. If this argument is omitted, the current selection is used.</param>
      <param name="link">
        <c>true</c> to establish a link to the source of the pasted picture; otherwise, <c>false</c>.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IPicture">
      <summary>
            Represents a picture in the drawing layer.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.BottomRightCell">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the cell that lies under the lower-right corner of the shape.
            </summary>
      <value>The bottom right cell of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.TopLeftCell">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the cell that lies under the upper-left corner of the shape.
            </summary>
      <value>The top left cell of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.Formula">
      <summary>
            Gets or sets the shape formula.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.Top">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the distance, in pixels, from the top edge of the topmost shape in the shape range to the top edge of the worksheet.
            </summary>
      <value>The top edge of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.Left">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the distance, in pixels, from the left edge of the shape to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).
            </summary>
      <value>The left edge of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.Width">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the width, in pixels, of the shape.
            </summary>
      <value>The width of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.Height">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the height, in pixels, of the shape.
            </summary>
      <value>The height of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.Locked">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> is locked.
            </summary>
      <value>
        <c>true</c> if if the object is locked; otherwise, <c>false</c> if the object can be modified when the sheet is protected.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.Name">
      <summary>
            Gets or sets a string value representing the name of the shape.
            </summary>
      <value>The name of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.Placement">
      <summary>
            Gets or sets an <see cref="P:GrapeCity.Spreadsheet.Drawing.IPicture.Placement" /> value that represents the way the shape is attached to the cells below it.
            </summary>
      <value>The way the shape is attached to the cells below it.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.Shadow">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShadowFormat" /> object that contains shadow formatting properties for the specified shape or shapes.
            </summary>
      <value>The shadow format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.Visible">
      <summary>
            Gets or sets a boolean value that determines whether the shape is visible.
            </summary>
      <value>
        <c>true</c> if the shape is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPicture.ZOrderPosition">
      <summary>
            Gets the position of the specified shape in the z-order.
            </summary>
      <value>The position of the specified shape in the z-order.</value>
      <remarks>To set the shape's position in the z-order, use the ZOrder method.
            <para>A shape's position in the z-order corresponds to the shape's index number in the Shapes collection.
            Whenever you add a new shape to a collection, it's added to the front of the z-order by default.</para></remarks>
    </member>
    <member name="E:GrapeCity.Spreadsheet.Drawing.IPicture.Action">
      <summary>
            Occurs when the shape is chosen.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPicture.ChangeImage(System.String,GrapeCity.Drawing.AspectRatio)">
      <summary>
            Replaces the current image with a different image.
            </summary>
      <param name="fileName">The path to the new image.</param>
      <param name="aspect">Specifies how to resize the new image. If omitted, the original height is kept.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPicture.ChangeImage(System.IO.Stream,GrapeCity.Drawing.AspectRatio)">
      <summary>
            Replaces the current image with a different image.
            </summary>
      <param name="stream">The image data.</param>
      <param name="aspect">Specifies how to resize the new image. If omitted, the original height is kept.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPicture.ChangeImage(System.Byte[],GrapeCity.Drawing.AspectRatio)">
      <summary>
            Replaces the current image with a different image.
            </summary>
      <param name="data">The image data.</param>
      <param name="aspect">Specifies how to resize the new image. If omitted, the original height is kept.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPicture.Paste(GrapeCity.Drawing.AspectRatio)">
      <summary>
            Replaces the current image with the image from clipboard.
            </summary>
      <param name="aspect">Specifies how to resize the new image. Default value is <see cref="F:GrapeCity.Drawing.AspectRatio.ActualSize" />.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing">
      <summary>
            Represents all drawing objects within the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetCameraAutoSize(GrapeCity.Spreadsheet.WorksheetReference)">
      <summary>
            Gets the auto size of a camera shape.
            </summary>
      <param name="wsRef">The cell range of the camera.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GrapeCity#Spreadsheet#Drawing#IShapes#Delete">
      <summary>
            Deletes all shapes.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.RotateShape(GrapeCity.Spreadsheet.Drawing.Shape,System.Double)">
      <summary>
            Rotate the shape to an angle without notifyUI.
            </summary>
      <param name="shape">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> that will be effected.</param>
      <param name="angle">The angle in degree.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetRotation(GrapeCity.Spreadsheet.Drawing.Shape)">
      <summary>
            Get the angle in degree of a <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /></summary>
      <param name="shape">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.BuildFreeform(GrapeCity.Spreadsheet.Drawing.EditingType,System.Double,System.Double)">
      <summary>
            Create the <see cref="T:GrapeCity.Spreadsheet.Drawing.IFreeFormBuilder" /> object indicates the geometry of a freeform while it's being built.
            </summary>
      <param name="editingType">An <see cref="T:GrapeCity.Spreadsheet.Drawing.EditingType" /> value indicates the editing type of a node.</param>
      <param name="x">A double value indicates the x-location of a node.</param>
      <param name="y">A double value indicates the y-location of a node.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.BuildFreeform">
      <summary>
            Create the <see cref="T:GrapeCity.Spreadsheet.Drawing.IFreeFormBuilder" /> object indicates the geometry of a freeform while it's being built.
            </summary>
      <param name="editingType">An <see cref="T:GrapeCity.Spreadsheet.Drawing.EditingType" /> value indicates the editing type of a node.</param>
      <param name="x">A double value indicates the x-location of a node.</param>
      <param name="y">A double value indicates the y-location of a node.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GrapeCity#Spreadsheet#Drawing#IPictures#Paste(GrapeCity.Spreadsheet.IRange,System.Boolean)">
      <summary>
            Pastes the contents of the Clipboard onto the sheet.
            </summary>
      <param name="destination">An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that specifies where the Clipboard contents should be pasted. If this argument is omitted, the current selection is used.</param>
      <param name="link">
        <c>true</c> to establish a link to the source of the pasted picture; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GrapeCity#Spreadsheet#Drawing#IPictures#Paste(System.String,System.Boolean)">
      <summary>
            Pastes the contents of the Clipboard onto the sheet.
            </summary>
      <param name="destination">A <see cref="T:System.String" /> value that specifies where the Clipboard contents should be pasted.</param>
      <param name="link">
        <c>true</c> to establish a link to the source of the pasted picture; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.OnStartEditingText(GrapeCity.Spreadsheet.Drawing.Shape)">
      <summary>
            Starts editing text of the specified shape.
            </summary>
      <param name="shape">The shape to edit text.</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.MinimumSize">
      <summary>
            Indicates the minimum size for width or height of the drawing object
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.StartPaintingSimulation">
      <summary>
            Starts painting process which doesn't belong to the spreadsheet control.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.StopPaintingSimulation(System.Object)">
      <summary>
            Stops painting process which doesn't belong to the spreadsheet control.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.Worksheet">
      <summary>
            Gets the owner worksheet of this <see cref="T:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.ShapeEditingData">
      <summary>
            Gets the shape's editing data.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.StartEditingShape(GrapeCity.Spreadsheet.Drawing.Shape,System.Int32,System.Int32)">
      <summary>
            Starts editing points of the specified shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.CreateShapeEditingData(GrapeCity.Spreadsheet.Drawing.ShapeEditingData.ShapeEditingType)">
      <summary>
            Instantiates the new isntance of <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeEditingData" />.
            </summary>
      <returns>The new isntance of <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeEditingData" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.StopEditingShape">
      <summary>
            Stops editing points of the specified shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetPictureSourceImageRectangle(GrapeCity.Spreadsheet.Drawing.Picture)">
      <summary>
            Get boundary of the image source in the picture.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetPaintingPictureSourceImageRectangle(GrapeCity.Spreadsheet.Drawing.Picture,System.Boolean)">
      <summary>
            Get boundary of the image source in the picture for painting.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.StartCropping(GrapeCity.Spreadsheet.Drawing.IPicture,System.Boolean)">
      <summary>
            Start cropping a picture
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.StopCropping(System.Boolean)">
      <summary>
            Stop cropping a picture
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.AdjustPicture(GrapeCity.Spreadsheet.Drawing.Picture,GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.Rectangle)">
      <summary>
            Adjust dimension and location of the specified picture.
            </summary>
      <param name="croppingPicture">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Picture" /> that will be adjusted.</param>
      <param name="shapeRect">The boundary of the picture.</param>
      <param name="sourceImageRect">The boundary of the image brush.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.SelectedDrawingObjects">
      <summary>
            Gets the selected drawing objects.
            </summary>
      <value>The selected drawing objects.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.IsAvailable">
      <summary>
            Gets a boolean value indicating whether there is at least one drawing object.
            </summary>
      <returns>
        <c>true</c> if there is at least one drawing object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.SelectedDrawingObjectCount">
      <summary>
            Gets the total number of selected drawing objects.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetProcessingDrawingObjects">
      <summary>
            Gets the drawing objects is being selected to process.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.ContainsSelectedDrawingObjects">
      <summary>
            Gets a value indicating there is selected drawing object.
            </summary>
      <value>
        <c>true</c> if there is selected drawing object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.Active">
      <summary>
            Gets a value indicating whether there is at least one drawing object selected.
            </summary>
      <value>
        <c>true</c> if there is at least one drawing object selected; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.Select(GrapeCity.Spreadsheet.Drawing.Shape,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Selects the specified drawing object.
            </summary>
      <param name="shape">The drawing object to select.</param>
      <param name="replace">if set to <c>true</c>, all current selected drawing objects will be deselected.</param>
      <param name="fireEvent">if set to <c>true</c>, <see cref="E:GrapeCity.Spreadsheet.Drawing.IShape.Action" /> will be fired.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.SelectConnector(GrapeCity.Spreadsheet.Drawing.Shape)">
      <summary>
            Select all the connectors of the drawingObject
            </summary>
      <param name="connector"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.DeselectConnector">
      <summary>
            DeSelect all connectors that has been selected before by SelectConnector.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.SelectAll(System.Boolean,System.Boolean)">
      <summary>
            Select all shapes.
            <param name="isUIAction"> a boolean value indicates whether executed from an UI action.</param></summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.SelectNextDrawingObject(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Select the next drawing object of the selected one.
            </summary>
      <param name="nextTo">
        <c>true</c> if the next shape is selected; otherwise, the previous shape is selected.</param>
      <param name="isUIAction"> a boolean value indicates whether executed from an UI action.</param>
      <returns>return true if the selected object has been changed, otherwise return false</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.Deselect(GrapeCity.Spreadsheet.Drawing.Shape,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            De-selects the specified drawing object.
            </summary>
      <param name="shape">The drawing object to deselect.</param>
      <param name="mustHaveOneSelected">if set to <c>true</c>, the drawing object won't be deselected if it's the last selected drawing object.</param>
      <param name="fireEvent">if set to <c>true</c>, <see cref="E:GrapeCity.Spreadsheet.UI.UIManager.ShapeChanged" /> will be fired.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.DeSelectChildren(GrapeCity.Spreadsheet.Drawing.DrawingObject,System.Boolean)">
      <summary>
            DeSelect drawing object's children.
            </summary>
      <param name="drawingObject"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.ClearCachePaintingLayout(GrapeCity.Spreadsheet.Drawing.DrawingObject,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Clears all cached painting data of the specified drawing object.
            </summary>
      <param name="drawingObject">The drawing object.</param>
      <param name="includeAncestors">
        <c>true</c> if the cached painting data of ancestors should be cleared too.</param>
      <param name="includeDescendants">
        <c>true</c> if the cached painting data of descendants should be cleared too.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.QueryObjects(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Queries all drawing objects appeared in the specified cell range.
            </summary>
      <param name="row">The top row index of the cell range.</param>
      <param name="column">The left column index of the cell range.</param>
      <param name="row2">The bottom row index of the cell range.</param>
      <param name="column2">The right column index of the cell range.</param>
      <param name="includeFreeFloating">
        <c>true</c> to also get free floating drawing objects.</param>
      <param name="overlaped">
        <c>true</c> to return the drawing object which is overlaped by the cell range.</param>
      <returns>The array of drawing objects to paint</returns>
      <remarks>Returned drawing objects must be sorted by painting order.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.QueryPaintObjects(System.Double,System.Double,System.Double,System.Double,System.Boolean,GrapeCity.Spreadsheet.Drawing.QueryShapeType)">
      <summary>
            Queries all drawing objects appeared in the specified cell range.
            </summary>
      <param name="x">The left side of the painting area.</param>
      <param name="y">The top side of the painting area.</param>
      <param name="x2">The right side of the painting area.</param>
      <param name="y2">The bottom side of the painting area.</param>
      <param name="keepOrder">
        <c>true</c> if the display order of drawing objects are retrieved.</param>
      <param name="shapeOnly">
        <c>true</c> to return shapes only.</param>
      <returns>The array of drawing objects to paint</returns>
      <remarks>Returned drawing objects must be sorted by painting order.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.ResizeBy(GrapeCity.Spreadsheet.Drawing.DrawingObject,GrapeCity.Spreadsheet.Drawing.DrawingObject[],GrapeCity.Spreadsheet.Drawing.ResizeAnchor,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Boolean})">
      <summary>
            Resize the specified drawing objects by both of horizontal and vertical.
            </summary>
      <param name="activeDrawingObject">The drawing objects to calculate aspect ratio.</param>
      <param name="drawingObjects">The drawing objects to resize.</param>
      <param name="horizontal">The horizontal distance to resize the drawing object.</param>
      <param name="vertical">The vertical distance to resize the drawing object.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.CorrectDrawingObjectRectangle(GrapeCity.Spreadsheet.Drawing.DrawingObject,GrapeCity.Drawing.Rectangle@)">
      <summary>
            Correcting the drawingObject's rectangle to the degree of zero.
            </summary>
      <param name="drawingObject"></param>
      <param name="rect"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetConnectorDirection(GrapeCity.Spreadsheet.Drawing.DrawingObject,GrapeCity.Spreadsheet.Drawing.ResizeAnchor)">
      <summary>
            Get the connector's direction
            </summary>
      <param name="drawingObject"></param>
      <param name="resize"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetResizeRectangle(GrapeCity.Spreadsheet.Drawing.DrawingObject,GrapeCity.Drawing.Rectangle,GrapeCity.Spreadsheet.Drawing.ResizeAnchor@,System.Double@,System.Double@,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Double)">
      <summary>
            Get the result boudary of the Drawing Object based on resize distance.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.PullRectangleInsideLayout(GrapeCity.Drawing.Rectangle@)">
      <summary>
            Pull the <see cref="T:GrapeCity.Drawing.Rectangle" /> to fit inside the layout of sheetview.
            </summary>
      <param name="rect">The <see cref="T:GrapeCity.Drawing.Rectangle" /></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.MinMaxAnchorPoints(GrapeCity.Spreadsheet.Drawing.DrawingObject[],System.Int32,System.Double@,System.Double@,System.Double@,System.Double@,System.Boolean,System.Double,System.Boolean)">
      <summary>
            Get the union area as anchor points of all drawing objects.
            </summary>
      <param name="drawingObjects">The drawing objects.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.UnionAnchorPoints(GrapeCity.Spreadsheet.Drawing.DrawingObject[],GrapeCity.Spreadsheet.Drawing.AnchorPoint@,GrapeCity.Spreadsheet.Drawing.AnchorPoint@)">
      <summary>
            Get the union area as anchor points of all drawing objects.
            </summary>
      <param name="drawingObjects">The drawing objects.</param>
      <param name="unionStartAnchorPoint">The union start anchor point.</param>
      <param name="unionEndAnchorPoint">The union end anchor point.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.MoveBy(GrapeCity.Spreadsheet.Drawing.AnchorPoint,System.Double,System.Double,System.Double)">
      <summary>
            Moves the <see cref="T:GrapeCity.Spreadsheet.Drawing.AnchorPoint" /> value by the specified horizontal and vertical distance.
            </summary>
      <param name="point">The <see cref="T:GrapeCity.Spreadsheet.Drawing.AnchorPoint" /> value to move.</param>
      <param name="horizontal">The horizontal distance.</param>
      <param name="vertical">The vertical distance.</param>
      <returns>The new <see cref="T:GrapeCity.Spreadsheet.Drawing.AnchorPoint" /> location.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetChildrenShapes(GrapeCity.Spreadsheet.Drawing.GroupShape,System.Boolean)">
      <summary>
            Get all shapes without GroupShapes.
            </summary>
      <param name="root">The root of shape.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.MoveBy(GrapeCity.Spreadsheet.Drawing.AnchorPoint@,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Moves the <see cref="T:GrapeCity.Spreadsheet.Drawing.AnchorPoint" /> value by the specified horizontal and vertical distance.
            </summary>
      <param name="point">The <see cref="T:GrapeCity.Spreadsheet.Drawing.AnchorPoint" /> value to move.</param>
      <param name="horizontal">The horizontal distance.</param>
      <param name="vertical">The vertical distance.</param>
      <returns>
        <c>true</c> if the anchor row or column is changed; otherwise, only row/column offset changed.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetDisplayRectangle(GrapeCity.Spreadsheet.Drawing.DrawingObject,GrapeCity.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>
            Gets the preferred display rectangle of the specified drawing object.
            </summary>
      <param name="drawingObject">The drawing object.</param>
      <param name="paintingRectangle">The rectangle where object was painted.</param>
      <param name="applyRightToLeft">The boolean value checks whether RTL mode has affected on this <paramref name="drawingObject" /></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetDisplayRectangle(GrapeCity.Spreadsheet.Drawing.DrawingObject)">
      <summary>
            Gets the preferred display rectangle of the specified drawing object.
            </summary>
      <param name="drawingObject">The drawing object.</param>
      <returns>A <see cref="T:GrapeCity.Drawing.Rectangle" /> value represents the preferred display rectangle of the drawing object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetGeometryBounds(GrapeCity.Spreadsheet.API.Drawing.FreeFormBuilder)">
      <summary>
            Get the boundary of the shape that was represented by their geometries
            </summary>
      <param name="builder">The builder that construct shape's geometries</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetRectangle(GrapeCity.Spreadsheet.Drawing.DrawingObject,System.Boolean)">
      <summary>
            Gets the virtual paint rectangle of the specified drawing object.
            </summary>
      <param name="drawingObject">The drawing object.</param>
      <returns>A <see cref="T:GrapeCity.Drawing.Rectangle" /> value represents the painting rectangle of the drawing object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetRectangle(GrapeCity.Spreadsheet.Drawing.DrawingObject,System.Double,System.Double,System.Boolean)">
      <summary>
            Gets the shape's rectangle at 0 degrees and affected by zoom scale.
            </summary>
      <param name="shape">The drawing object.</param>
      <param name="scaleX">The horizontal scale unit.</param>
      <param name="scaleY">The vertical scale unit.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetRectangleFromAnchorPoints(GrapeCity.Spreadsheet.Drawing.DrawingObject,System.Boolean,System.Boolean,System.Double)">
      <summary>
            Get the boundary of the <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /></summary>
      <param name="shape">The drawing object</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetTextRectangle(GrapeCity.Spreadsheet.Drawing.Shape,GrapeCity.Drawing.Rectangle)">
      <summary>
            Gets the virtual paint rectangle of the text part of a shape.
            </summary>
      <param name="shape">The shape.</param>
      <returns>A <see cref="T:GrapeCity.Drawing.Rectangle" /> value represents the painting rectangle of the text part.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetRectangle(GrapeCity.Spreadsheet.Drawing.AnchorPoint@,GrapeCity.Spreadsheet.Drawing.AnchorPoint@,GrapeCity.Spreadsheet.Drawing.AnchorPoint@,System.Double,System.Double)">
      <summary>
            Gets the paint rectangle of the specified drawing object.
            </summary>
      <param name="drawingObject">The drawing object.</param>
      <returns>A <see cref="T:GrapeCity.Drawing.Rectangle" /> value represents the painting rectangle of the drawing object.</returns>
      <remarks>
            The paint rectangle related to the <paramref name="anchorPoint" />. It means that [0, 0] if the anchor point.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetDistance(GrapeCity.Spreadsheet.Drawing.AnchorPoint@,GrapeCity.Spreadsheet.Drawing.AnchorPoint@,System.Double@,System.Double@,System.Double,System.Double)">
      <summary>
            Gets the distances (in horizontal and vertical) from the <paramref name="anchorPoint" /> position to the <paramref name="targetPoint" /> position.
            </summary>
      <param name="anchorPoint">The <see cref="T:GrapeCity.Spreadsheet.Drawing.AnchorPoint" /> value indicates the anchor point.</param>
      <param name="targetPoint">The <see cref="T:GrapeCity.Spreadsheet.Drawing.AnchorPoint" /> value indicates the target point.</param>
      <param name="width">The horizontal distance of 2 <see cref="T:GrapeCity.Spreadsheet.Drawing.AnchorPoint" /> points.</param>
      <param name="height">The vertical distance of 2 <see cref="T:GrapeCity.Spreadsheet.Drawing.AnchorPoint" /> points.</param>
      <param name="scaleX">The horizontal scale.</param>
      <param name="scaleY">The vertical scale.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.UnionAnchorPoints(GrapeCity.Spreadsheet.Drawing.AnchorPoint@,GrapeCity.Spreadsheet.Drawing.AnchorPoint@)">
      <summary>
            Get the union area as anchor points of all drawing objects.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.CreateNewShape(GrapeCity.Spreadsheet.Drawing.AutoShapeType,GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Creates a new shape with new WorksheetDrawing
            </summary>
      <param name="type"></param>
      <param name="worksheet"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetConnectionLocation(GrapeCity.Spreadsheet.Drawing.ConnectionShape,GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.Point@,GrapeCity.Drawing.Point@)">
      <summary>
            Get the location of connection.
            </summary>
      <param name="shape">The connection shape.</param>
      <param name="shapeRect">The shape painting boundary.</param>
      <param name="startPoint">The start point of the connection shape.</param>
      <param name="endPoint">The end point of the connection shape.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.FlipShape(GrapeCity.Spreadsheet.Drawing.Shape,System.Boolean)">
      <summary>
            Change flip property only.
            </summary>
      <param name="shape"></param>
      <param name="horizontal"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetUniqueSelectedShape(GrapeCity.Spreadsheet.Drawing.Shape)">
      <summary>
            Gets the unique selected shape.
            </summary>
      <param name="shape">The container shape.</param>
      <returns>The actual unique selected shape.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.GetCommentIndicatorLocation(GrapeCity.Drawing.IDrawingContext,GrapeCity.Spreadsheet.Drawing.AnchorPoint@,System.Double,System.Boolean)">
      <summary>
            Get the location of comment indicator
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing.CanProcessShape(GrapeCity.Spreadsheet.Drawing.Shape[],System.Boolean)">
      <summary>
            Determine whether can process the shape.
            </summary>
      <param name="shapes">The input arrays of shape.</param>
      <param name="isUIAction"> a boolean value indicates whether executed from an UI action.</param>
      <returns>Return true if can process shape, otherwise false.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IShapes">
      <summary>
            Represents a collection of all the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> objects on the specified sheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapes.Count">
      <summary>
            Gets the number of shapes in the collection.
            </summary>
      <value>The number of shapes in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapes.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object at the specified index.
            </summary>
      <param name="index">The index of the shape.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapes.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object with the specified name.
            </summary>
      <param name="name">The name of the shape.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object with the specified name.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.AddCallout(GrapeCity.Spreadsheet.Drawing.CalloutType,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a borderless line callout.
            </summary>
      <param name="type">The type of callout line.</param>
      <param name="x">The position (in pixels) of the upper-left corner of the callout's bounding box relative to the upper-left corner of the document.</param>
      <param name="y">The position (in pixels) of the upper-left corner of the callout's bounding box relative to the upper-left corner of the document.</param>
      <param name="width">The width of the callout's bounding box, in pixels.</param>
      <param name="height">The height of the callout's bounding box, in pixels.</param>
      <returns>A borderless line callout.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.AddCalloutToCell(GrapeCity.Spreadsheet.Drawing.CalloutType,System.Int32,System.Int32,System.Double,System.Double)">
      <summary>
            Creates a borderless line callout.
            </summary>
      <param name="type">The type of callout line.</param>
      <param name="row">The row index of the upper-left corner of the shape's bounding box.</param>
      <param name="column">The column index of the upper-left corner of the shape's bounding box.</param>
      <param name="width">The width of the callout's bounding box, in pixels.</param>
      <param name="height">The height of the callout's bounding box, in pixels.</param>
      <returns>A borderless line callout.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.AddConnector(GrapeCity.Spreadsheet.Drawing.ConnectorType,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a connector.
            </summary>
      <param name="type">The connector type to add.</param>
      <param name="beginX">The horizontal position (in pixels) of the connector's starting point relative to the upper-left corner of the document.</param>
      <param name="beginY">The vertical position (in pixels) of the connector's starting point relative to the upper-left corner of the document.</param>
      <param name="endX">The horizontal position (in pixels) of the connector's end point relative to the upper-left corner of the document.</param>
      <param name="endY">The vertical position (in pixels) of the connector's end point relative to the upper-left corner of the document.</param>
      <returns>The new connector in a worksheet.</returns>
      <remarks>When a connector is added, it's not connected to anything.
            Use the BeginConnect and EndConnect methods to attach the beginning and end of a connector to other shapes in the document.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.AddConnectorToCell(GrapeCity.Spreadsheet.Drawing.ConnectorType,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a connector.
            </summary>
      <param name="type">The connector type to add.</param>
      <param name="row">The row index of the upper-left corner of the shape's bounding box.</param>
      <param name="column">The column index of the upper-left corner of the shape's bounding box.</param>
      <param name="row2">The row index of the lower-right corner of the shape's bounding box.</param>
      <param name="column2">The column index of the lower-right corner of the shape's bounding box.</param>
      <returns>The new connector in a worksheet.</returns>
      <remarks>When a connector is added, it's not connected to anything.
            Use the BeginConnect and EndConnect methods to attach the beginning and end of a connector to other shapes in the document.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.AddPicture(System.String,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a picture from an existing file.
            </summary>
      <param name="fileName">The file from which the picture is to be created.</param>
      <param name="linkToFile">The file to link to.</param>
      <param name="saveWithDocument">To save the picture with the document.</param>
      <param name="x">The position (in pixels) of the upper-left corner of the picture relative to the upper-left corner of the document.</param>
      <param name="y">The position (in pixels) of the upper-left corner of the picture relative to the upper-left corner of the document.</param>
      <param name="width">The width of the picture, in pixels.</param>
      <param name="height">The height of the picture, in pixels.</param>
      <returns>The new picture.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.AddPictureToCell(System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Double,System.Double)">
      <summary>
            Creates a picture from an existing file.
            </summary>
      <param name="fileName">The file from which the picture is to be created.</param>
      <param name="linkToFile">The file to link to.</param>
      <param name="saveWithDocument">To save the picture with the document.</param>
      <param name="row">The row index of the upper-left corner of the shape's bounding box.</param>
      <param name="column">The column index of the upper-left corner of the shape's bounding box.</param>
      <param name="width">The width of the picture, in pixels.</param>
      <param name="height">The height of the picture, in pixels.</param>
      <returns>The new picture.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.AddShape(GrapeCity.Spreadsheet.Drawing.AutoShapeType,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a new shape.
            </summary>
      <param name="type">Specifies the type of <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> to create.</param>
      <param name="x">The initial horizontal position of the shape, in pixels, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <param name="y">The initial vertical position of the shape, in pixels, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <param name="width">The initial width, in pixels, of the shape.</param>
      <param name="height">The initial height, in pixels, of the shape.</param>
      <returns>The created <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.AddShapeToCell(GrapeCity.Spreadsheet.Drawing.AutoShapeType,System.Int32,System.Int32,System.Double,System.Double)">
      <summary>
            Creates a new shape.
            </summary>
      <param name="type">Specifies the type of <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> to create.</param>
      <param name="row">The row index of the upper-left corner of the shape's bounding box.</param>
      <param name="column">The column index of the upper-left corner of the shape's bounding box.</param>
      <param name="width">The initial width, in pixels, of the shape.</param>
      <param name="height">The initial height, in pixels, of the shape.</param>
      <returns>The created <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.AddTextEffect(GrapeCity.Spreadsheet.Drawing.PresetTextEffect,System.String,System.String,System.Double,System.Boolean,System.Boolean,System.Double,System.Double)">
      <summary>
            Creates an <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object that represents the new text effect object.
            </summary>
      <param name="textEffect">The preset text effect.</param>
      <param name="text">The text in the shape.</param>
      <param name="fontName">The name of the font used in the shape.</param>
      <param name="fontSize">The size (in points) of the font used in the shape.</param>
      <param name="bold">The font used in the shape to bold.</param>
      <param name="italic">The font used in the shape to italic.</param>
      <param name="x">The position (in pixels) of the upper-left corner of the shape's bounding box relative to the upper-left corner of the document.</param>
      <param name="y">The position (in pixels) of the upper-left corner of the shape's bounding box relative to the top of the document.</param>
      <returns>The created <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.AddTextEffectToCell(GrapeCity.Spreadsheet.Drawing.PresetTextEffect,System.String,System.String,System.Double,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>
            Creates an <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object that represents the new text effect object.
            </summary>
      <param name="textEffect">The preset text effect.</param>
      <param name="text">The text in the shape.</param>
      <param name="fontName">The name of the font used in the shape.</param>
      <param name="fontSize">The size (in points) of the font used in the shape.</param>
      <param name="bold">The font used in the shape to bold.</param>
      <param name="italic">The font used in the shape to italic.</param>
      <param name="row">The row index of the upper-left corner of the shape's bounding box.</param>
      <param name="column">The column index of the upper-left corner of the shape's bounding box.</param>
      <returns>The created <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.SelectAll">
      <summary>
            Selects all the shapes in the specified Shapes collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.Range">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeRange" /> object that represents all shapes in a <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object.
            </summary>
      <returns>The subset of the shapes in a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapes" /> collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.Range(System.Int32[])">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeRange" /> object that represents a subset of the shapes in a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapes" /> collection.
            </summary>
      <param name="indexes">The individual shapes to be included in the range.</param>
      <returns>The subset of the shapes in a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapes" /> collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.Range(System.String[])">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeRange" /> object that represents a subset of the shapes in a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapes" /> collection.
            </summary>
      <param name="names">The individual shapes to be included in the range.</param>
      <returns>The subset of the shapes in a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapes" /> collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.Range(System.Object[])">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeRange" /> object that represents a subset of the shapes in a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapes" /> collection.
            </summary>
      <param name="shapes">The individual shapes to be included in the range. Any <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object, shape index or shape name can be used.</param>
      <returns>The subset of the shapes in a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapes" /> collection.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapes.SelectedShapes">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeRange" /> object that represents all selected shapes.
            </summary>
      <returns>The selected shapes in a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapes" /> collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.Delete">
      <summary>
            Deletes all shapes.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapes.BuildFreeform(GrapeCity.Spreadsheet.Drawing.EditingType,System.Double,System.Double)">
      <summary>
            Builds a freeform object. Returns a <see cref="T:GrapeCity.Spreadsheet.Drawing.IFreeFormBuilder" /> object that represents the freeform as it is being built.
            </summary>
      <param name="editingType">The editing property of the first node.</param>
      <param name="x">The initial horizontal position of the shape, in pixels, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <param name="y">The initial vertical position of the shape, in pixels, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IFreeFormBuilder">
      <summary>
            Represents the geometry of a freeform while it's being built.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFreeFormBuilder.AddNodes(GrapeCity.Spreadsheet.Drawing.SegmentType,GrapeCity.Spreadsheet.Drawing.EditingType,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a point in the current shape, and then draws a line from the current node to the last node that was added.
            </summary>
      <param name="segmentType">The type of segment to be added.</param>
      <param name="editingType">The editing property of the vertex.</param>
      <param name="x1">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the end point of the new segment.<br />
            If the <paramref name="editingType" /> of the new node is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the first control point for the new segment.
            </param>
      <param name="y1">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the end point of the new segment.<br />
            If the <paramref name="editingType" /> of the new node is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the first control point for the new segment.
            </param>
      <param name="x2">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
      <param name="y2">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
      <param name="x3">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the horizontal distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
      <param name="y3">
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the vertical distance, in pixcels, from the upper-left corner of the document to the second control point of the new segment.<br />
            If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, don't specify a value for this argument.
            </param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFreeFormBuilder.ConvertToShape">
      <summary>
            Creates a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> that has the geometric characteristics of the specified <see cref="T:GrapeCity.Spreadsheet.Drawing.IFreeFormBuilder" /> object
            </summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object that represents the new shape.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IShapeNode">
      <summary>
            Represents the geometry and the geometry-editing properties of the nodes in a user-defined freeform.
            </summary>
      <remarks>Nodes include the vertices between the segments of the freeform and the control points for curved segments.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeNode.EditingType">
      <summary>
            Gets the value that indicates how changes made to the node affect the two segments connected to the node.
            </summary>
      <value>The type of the editing.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeNode.Points">
      <summary>
            Gets the position of the specified node as a coordinate pair. Each coordinate is expressed in points.
            </summary>
      <value>The position of the specified node as a coordinate pair.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeNode.SegmentType">
      <summary>
            Gets the value that indicates whether the segment associated with the specified node is straight or curved.
            </summary>
      <value>The segment associated with the specified node is straight or curved.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IShapeNodes">
      <summary>
            Interface IShapeNodes
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeNodes.Count">
      <summary>
            Gets an Integer value that represents the number of objects in the collection.
            </summary>
      <value>The number of objects in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeNodes.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeNode" /> at the specified index.
            </summary>
      <param name="index">The index number for the object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeNode" /> at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeNodes.Delete(System.Int32)">
      <summary>
            Deletes the object.
            </summary>
      <param name="index">The index of the object to delete.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeNodes.Insert(System.Int32,GrapeCity.Spreadsheet.Drawing.SegmentType,GrapeCity.Spreadsheet.Drawing.EditingType,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Inserts a node into a freeform shape.
            </summary>
      <param name="index">The number of the shape node after which to insert a new node.</param>
      <param name="segmentType">The segment type.</param>
      <param name="editingType">The editing type.</param>
      <param name="x1">If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, this argument specifies the horizontal distance, measured in pixels, 
            from the upper-left corner of the document to the end point of the new segment.
            <para>If the <paramref name="editingType" /> of the new node is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" /> , this argument specifies the horizontal distance, measured in pixels,
            from the upper-left corner of the document to the first control point for the new segment.</para></param>
      <param name="y1">If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" />, this argument specifies the vertical distance, measured in pixels,
            from the upper-left corner of the document to the end point of the new segment.
            <para>If the <paramref name="editingType" /> of the new node is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" /> , this argument specifies the vertical distance, measured in pixels,
            from the upper-left corner of the document to the first control point for the new segment.</para></param>
      <param name="x2">If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" />, this argument specifies the horizontal distance, measured in pixels,
            from the upper-left corner of the document to the second control point for the new segment.
            <para>If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" /> , don't specify a value for this argument.</para></param>
      <param name="y2">If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" /> , this argument specifies the vertical distance, measured in pixels,
            from the upper-left corner of the document to the second control point for the new segment.
            <para>If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" /> , don't specify a value for this argument.</para></param>
      <param name="x3">If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" /> , this argument specifies the horizontal distance, measured in pixels,
            from the upper-left corner of the document to the end point of the new segment.
            <para>If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" /> , don't specify a value for this argument.</para></param>
      <param name="y3">If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner" /> , this argument specifies the vertical distance, measured in pixels,
            from the upper-left corner of the document to the end point of the new segment.
            <para>If the <paramref name="editingType" /> of the new segment is <see cref="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto" /> , don't specify a value for this argument.</para></param>
      <returns>IShapeNode.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeNodes.SetEditingType(System.Int32,GrapeCity.Spreadsheet.Drawing.EditingType)">
      <summary>
            Sets the editing type of the node specified by <paramref name="index" />.
            If the node is a control point for a curved segment, this method sets the editing type of the node adjacent to it that joins two segments.
            </summary>
      <param name="index">The node whose editing type is to be set.</param>
      <param name="editingType">The editing property of the vertex.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeNodes.SetPosition(System.Int32,System.Double,System.Double)">
      <summary>
            Sets the location of the node specified by <paramref name="index" />.
            </summary>
      <param name="index">The node whose position is to be set.</param>
      <param name="x1">The position (in points) of the new node relative to the upper-left corner of the document.</param>
      <param name="y1">The position (in points) of the new node relative to the upper-left corner of the document.</param>
      <remarks>Note that, depending on the editing type of the node, this method may affect the position of adjacent nodes.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeNodes.SetSegmentType(System.Int32,GrapeCity.Spreadsheet.Drawing.SegmentType)">
      <summary>
            Sets the segment type of the segment that follows the node specified by <paramref name="index" />.
            If the node is a control point for a curved segment, this method sets the segment type for that curve.
            </summary>
      <param name="index">The node whose segment type is to be set.</param>
      <param name="segmentType">Specifies if the segment is straight or curved.</param>
      <remarks>Note that this may affect the total number of nodes by inserting or deleting adjacent nodes.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.SegmentType">
      <summary>
            Specifies the type for a segment.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.SegmentType.Curve">
      <summary>
            Curve
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.SegmentType.Line">
      <summary>
            Line
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.EditingType">
      <summary>
            Specifies the editing type of a node.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.EditingType.Auto">
      <summary>
            Editing type is appropriate to the segments being connected.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.EditingType.Corner">
      <summary>
            Corner node
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.EditingType.Smooth">
      <summary>
            Smooth node
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.EditingType.Symmetric">
      <summary>
            Symmetric node
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.PictureCompress">
      <summary>
            Specifies whether a picture will be compressed or not when inserted into a file.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureCompress.Default">
      <summary>
            The picture is compressed or not depending on the settings for the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureCompress.False">
      <summary>
            The picture is not compressed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureCompress.True">
      <summary>
            The picture will be compressed.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.TextOrientation">
      <summary>
            Specifies orientation for text.
            </summary>
      <remarks>
            Not support types: Vertical, HorizontalRotatedFarEast
            </remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextOrientation.Horizontal">
      <summary>
            Horizontal
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextOrientation.Vertical">
      <summary>
            Vertical
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextOrientation.Downward">
      <summary>
            Downward
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextOrientation.HorizontalRotatedFarEast">
      <summary>
            Horizontal and rotated as required for Asian language support
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextOrientation.Upward">
      <summary>
            Upward
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ConnectorType">
      <summary>
            Specifies a type of connector.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ConnectorType.Straight">
      <summary>
            Straight line connector
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ConnectorType.Elbow">
      <summary>
            Elbow connector
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ConnectorType.Curve">
      <summary>
            Curved connector
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.CalloutType">
      <summary>
            Specifies the type of callout line.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutType.One">
      <summary>
            Single, angled callout line.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutType.Two">
      <summary>
            Callout line made up of two line segments. Callout line is attached on the left side of the text bounding box.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutType.Three">
      <summary>
            Callout line made up of two line segments. Callout line is attached on the right side of the text bounding box.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IGroupShapes">
      <summary>
            Represents the individual shapes within a grouped shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGroupShapes.Count">
      <summary>
            Gets the number of individual shapes.
            </summary>
      <value>The count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGroupShapes.Item(System.Int32)">
      <summary>
            Gets an individual shape from the grouped shape.
            </summary>
      <param name="index">The index.</param>
      <returns>IShape.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IConnectorFormat">
      <summary>
            Contains properties and methods that apply to connectors.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IConnectorFormat.BeginConnected">
      <summary>
            Gets a boolean value indicating whether the beginning of the specified connector is connected to a shape.
            </summary>
      <value>
        <c>true</c> if the beginning of the specified connector is connected to a shape; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IConnectorFormat.BeginConnectedShape">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object that represents the shape that the beginning of the specified connector is attached to.
            </summary>
      <value>The shape that the beginning of the specified connector is attached to.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IConnectorFormat.BeginConnectionSite">
      <summary>
            Gets an integer that specifies the connection site that the beginning of a connector is connected to.
            </summary>
      <value>The connection site that the beginning of a connector is connected to.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IConnectorFormat.EndConnected">
      <summary>
            Gets a boolean value indicating whether the end of the specified connector is connected to a shape.
            </summary>
      <value>
        <c>true</c> if the end of the specified connector is connected to a shape; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IConnectorFormat.EndConnectedShape">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object that represents the shape that the end of the specified connector is attached to.
            </summary>
      <value>The shape that the end of the specified connector is attached to.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IConnectorFormat.EndConnectionSite">
      <summary>
            Gets an integer that specifies the connection site that the end of a connector is connected to.
            </summary>
      <value>The connection site that the end of a connector is connected to.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IConnectorFormat.Type">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Drawing.ConnectorType" /> value that represents the connector format type.
            </summary>
      <value>The connector format type.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IConnectorFormat.BeginConnect(GrapeCity.Spreadsheet.Drawing.IShape,System.Int32)">
      <summary>
            Attaches the beginning of the specified connector to a specified shape.
            </summary>
      <param name="connectedShape">The shape to attach the beginning of the connector to. The specified Shape object must be in the same Shapes collection as the connector.</param>
      <param name="connectionSite">A connection site on the shape specified by ConnectedShape.
            Must be a non-negative integer less the integer returned by the ConnectionSiteCount property of the specified shape.
            If you want the connector to automatically find the shortest path between the two shapes it connects,
            specify any valid integer for this argument and then use the RerouteConnections method after the connector is attached to shapes at both ends.</param>
      <remarks>If there's already a connection between the beginning of the connector and another shape, that connection is broken.
            If the beginning of the connector isn't already positioned at the specified connecting site,
            this method moves the beginning of the connector to the connecting site and adjusts the size and position of the connector.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IConnectorFormat.BeginDisconnect">
      <summary>
            Detaches the beginning of the specified connector from the shape it's attached to.
            </summary>
      <remarks>This method doesn't alter the size or position of the connector: the beginning of the connector remains positioned at a connection site but is no longer connected.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IConnectorFormat.EndConnect(GrapeCity.Spreadsheet.Drawing.IShape,System.Int32)">
      <summary>
            Attaches the end of the specified connector to a specified shape.
            </summary>
      <param name="connectedShape">The shape to attach the end of the connector to. The specified Shape object must be in the same Shapes collection as the connector.</param>
      <param name="connectionSite">A connection site on the shape specified by ConnectedShape.
            Must be a non-negative integer less the integer returned by the ConnectionSiteCount property of the specified shape.
            If you want the connector to automatically find the shortest path between the two shapes it connects,
            specify any valid integer for this argument and then use the RerouteConnections method after the connector is attached to shapes at both ends.</param>
      <remarks>If there's already a connection between the end of the connector and another shape, that connection is broken.
            If the end of the connector isn't already positioned at the specified connecting site,
            this method moves the end of the connector to the connecting site and adjusts the size and position of the connector.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IConnectorFormat.EndDisconnect">
      <summary>
            Detaches the end of the specified connector from the shape it's attached to.
            </summary>
      <remarks>This method doesn't alter the size or position of the connector: the end of the connector remains positioned at a connection site but is no longer connected.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ICalloutFormat">
      <summary>
            Contains properties and methods that apply to line callouts.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICalloutFormat.Accent">
      <summary>
            Gets or sets a value indicating whether to allows the user to place a vertical accent bar to separate the callout text from the callout line.
            </summary>
      <value>
        <c>true</c> if the user can place a vertical accent bar to separate the callout text from the callout line; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICalloutFormat.Angle">
      <summary>
            Gets or sets the angle of the callout line.
            </summary>
      <value>The angle of the callout line.</value>
      <remarks>If the callout line contains more than one line segment, this property returns or sets the angle of the segment that is farthest from the callout text box.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICalloutFormat.Border">
      <summary>
            Gets or sets a value indicating whether the border of the object is visible.
            </summary>
      <value>
        <c>true</c> if the border of the object is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICalloutFormat.Drop">
      <summary>
            Gets the vertical distance (in pixels) from the edge of the text bounding box to the place where the callout line attaches to the text box.
            </summary>
      <value>The vertical distance (in pixels).</value>
      <remarks>This distance is measured from the top of the text box unless the <see cref="!:AutoAttach" /> property is set to <c>true</c>
            and the text box is to the left of the origin of the callout line (the place that the callout points to),
            in which case the drop distance is measured from the bottom of the text box.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICalloutFormat.DropType">
      <summary>
            Gets the a value that indicates where the callout line attaches to the callout text box.
            </summary>
      <value>Where the callout line attaches to the callout text box.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICalloutFormat.Gap">
      <summary>
            Gets or sets the horizontal distance (in pixels) between the end of the callout line and the text bounding box.
            </summary>
      <value>The horizontal distance (in pixels).</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICalloutFormat.Length">
      <summary>
            Gets the value that represents the length (in pixels) of the first segment of the callout line (the segment attached to the text callout box).
            </summary>
      <value>The length (in pixels) of the first segment.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICalloutFormat.Type">
      <summary>
            Gets or sets the <see cref="T:GrapeCity.Spreadsheet.Drawing.CalloutType" /> value that represents the callout format type.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Drawing.CalloutType" /> value that represents the callout format type.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ICalloutFormat.CustomDrop(System.Int32)">
      <summary>
            Sets the vertical distance (in pixels) from the edge of the text bounding box to the place where the callout line attaches to the text box.
            </summary>
      <param name="drop">The drop distance, in pixels.</param>
      <remarks>This distance is measured from the top of the text box unless the AutoAttach property is set to True and the text box is to the left of the origin of the callout line
            (the place that the callout points to), in which case the drop distance is measured from the bottom of the text box.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ICalloutFormat.CustomLength(System.Int32)">
      <summary>
            Specifies that the first segment of the callout line (the segment attached to the text callout box) retain a fixed length whenever the callout is moved.
            </summary>
      <param name="length">The length of the first segment of the callout, in points.</param>
      <remarks>Use the AutomaticLength method to specify that the first segment of the callout line be scaled automatically whenever the callout is moved.
            Applies only to callouts whose lines consist of more than one segment (types msoCalloutThree and msoCalloutFour).</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ICalloutFormat.PresetDrop(GrapeCity.Spreadsheet.Drawing.CalloutDropType)">
      <summary>
            Specifies whether the callout line attaches to the top, bottom, or center of the callout text box or whether it attaches at a point 
            that is a specified distance from the top or bottom of the text box.
            </summary>
      <param name="dropType">The starting position of the callout line relative to the text bounding box.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.CalloutDropType">
      <summary>
            Specifies the starting position of the callout line relative to the text bounding box. Used with the PresetDrop method of the CalloutFormat object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutDropType.Top">
      <summary>
            Top
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutDropType.Bottom">
      <summary>
            Bottom
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutDropType.Center">
      <summary>
            Center
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutDropType.Custom">
      <summary>
            Custom.
            </summary>
      <remarks>
            If this value is used as the value for the PresetDrop property,
            the Drop and AutoAttach properties of the CalloutFormat object are used to determine where the callout line attaches to the text box.
            </remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.CalloutAngleType">
      <summary>
            Enum CalloutAngleType
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutAngleType.Automatic">
      <summary>
            Default angle. Angle can be changed as you drag the object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutAngleType.Degrees30">
      <summary>
            30° angle
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutAngleType.Degrees45">
      <summary>
            45° angle
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutAngleType.Degrees60">
      <summary>
            60° angle
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CalloutAngleType.Degrees90">
      <summary>
            90° angle
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ShapeStyle">
      <summary>
            Indicates the line and shape style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset1">
      <summary>
            The preset style 1
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset2">
      <summary>
            The preset style 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset3">
      <summary>
            The preset style 3
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset4">
      <summary>
            The preset style 4
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset5">
      <summary>
            The preset style 5
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset6">
      <summary>
            The preset style 6
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset7">
      <summary>
            The preset style 7
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset8">
      <summary>
            The preset style 8
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset9">
      <summary>
            The preset style 9
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset10">
      <summary>
            The preset style 10
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset11">
      <summary>
            The preset style 11
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset12">
      <summary>
            The preset style 12
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset13">
      <summary>
            The preset style 13
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset14">
      <summary>
            The preset style 14
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset15">
      <summary>
            The preset style 15
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset16">
      <summary>
            The preset style 16
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset17">
      <summary>
            The preset style 17
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset18">
      <summary>
            The preset style 18
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset19">
      <summary>
            The preset style 19
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset20">
      <summary>
            The preset style 20
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset21">
      <summary>
            The preset style 21
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset22">
      <summary>
            The preset style 22
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset23">
      <summary>
            The preset style 23
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset24">
      <summary>
            The preset style 24
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset25">
      <summary>
            The preset style 25
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset26">
      <summary>
            The preset style 26
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset27">
      <summary>
            The preset style 27
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset28">
      <summary>
            The preset style 28
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset29">
      <summary>
            The preset style 29
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset30">
      <summary>
            The preset style 30
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset31">
      <summary>
            The preset style 31
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset32">
      <summary>
            The preset style 32
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset33">
      <summary>
            The preset style 33
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset34">
      <summary>
            The preset style 34
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset35">
      <summary>
            The preset style 35
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset36">
      <summary>
            The preset style 36
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset37">
      <summary>
            The preset style 37
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset38">
      <summary>
            The preset style 38
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset39">
      <summary>
            The preset style 39
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset40">
      <summary>
            The preset style 40
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset41">
      <summary>
            The preset style 41
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset42">
      <summary>
            The preset style 42
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset43">
      <summary>
            The preset style 43
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset44">
      <summary>
            The preset style 44
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset45">
      <summary>
            The preset style 45
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset46">
      <summary>
            The preset style 46
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset47">
      <summary>
            The preset style 47
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset48">
      <summary>
            The preset style 48
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset49">
      <summary>
            The preset style 49
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset50">
      <summary>
            The preset style 50
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset51">
      <summary>
            The preset style 51
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset52">
      <summary>
            The preset style 52
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset53">
      <summary>
            The preset style 53
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset54">
      <summary>
            The preset style 54
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset55">
      <summary>
            The preset style 55
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset56">
      <summary>
            The preset style 56
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset57">
      <summary>
            The preset style 57
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset58">
      <summary>
            The preset style 58
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset59">
      <summary>
            The preset style 59
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset60">
      <summary>
            The preset style 60
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset61">
      <summary>
            The preset style 61
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset62">
      <summary>
            The preset style 62
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset63">
      <summary>
            The preset style 63
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset64">
      <summary>
            The preset style 64
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset65">
      <summary>
            The preset style 65
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset66">
      <summary>
            The preset style 66
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset67">
      <summary>
            The preset style 67
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset68">
      <summary>
            The preset style 68
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset69">
      <summary>
            The preset style 69
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset70">
      <summary>
            The preset style 70
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset71">
      <summary>
            The preset style 71
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset72">
      <summary>
            The preset style 72
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset73">
      <summary>
            The preset style 73
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset74">
      <summary>
            The preset style 74
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset75">
      <summary>
            The preset style 75
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset76">
      <summary>
            The preset style 76
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Preset77">
      <summary>
            The preset style 77
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeStyle.Unspecified">
      <summary>
            Not a preset style.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ILineFormat">
      <summary>
            Represents line and arrowhead formatting.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.BackColor">
      <summary>
            Gets the ColorFormat object that represents the specified fill background color.
            </summary>
      <value>The specified fill background color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.BeginArrowheadLength">
      <summary>
            Gets or sets the length of the arrowhead at the beginning of the specified line.
            </summary>
      <value>The length of the arrowhead at the beginning of the specified line.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.BeginArrowheadStyle">
      <summary>
            Gets or sets the style of the arrowhead at the beginning of the specified line.
            </summary>
      <value>The style of the arrowhead at the beginning of the specified line.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.BeginArrowheadWidth">
      <summary>
            Gets or sets the width of the arrowhead at the beginning of the specified line.
            </summary>
      <value>The width of the arrowhead.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.DashStyle">
      <summary>
            Gets or sets the dash style for the specified line.
            </summary>
      <value>The dash style for the specified line.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.EndArrowheadLength">
      <summary>
            Gets or sets the length of the arrowhead at the end of the specified line.
            </summary>
      <value>The length of the arrowhead at the end of the specified line.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.EndArrowheadStyle">
      <summary>
            Gets or sets the style of the arrowhead at the end of the specified line.
            </summary>
      <value>The style of the arrowhead at the end of the specified line.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.EndArrowheadWidth">
      <summary>
            Gets or sets the width of the arrowhead at the end of the specified line.
            </summary>
      <value>The width of the arrowhead.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.ForeColor">
      <summary>
            Gets the ColorFormat object that represents the specified fill foreground color.
            </summary>
      <value>The specified fill foreground color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.InsetPen">
      <summary>
            Gets or sets a value indicating whether lines are drawn inside the specified shape's boundaries.
            </summary>
      <value>
        <c>true</c> if lines are drawn inside the specified shape's boundaries; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.Pattern">
      <summary>
            Gets or sets the <see cref="T:GrapeCity.Spreadsheet.PatternType" /> value that represents the fill pattern.
            </summary>
      <value>The fill pattern.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.Style">
      <summary>
            Gets or sets the <see cref="T:GrapeCity.Drawing.LineStyle" /> value that represents the style of the line.
            </summary>
      <value>The style of the line.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.Transparency">
      <summary>
            Gets or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
      <value>The degree of transparency.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.ILineFormat" /> is visible.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.ILineFormat" /> is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ILineFormat.Weight">
      <summary>
            Gets or sets the <see cref="T:System.Double" /> value that represents the weight of the line.
            </summary>
      <value>The weight of the line.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IGlowFormat">
      <summary>
            Represents a glow effect around an Office graphic.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGlowFormat.Color">
      <summary>
            Gets the ColorFormat object that represents the color of text formatted as glow.
            </summary>
      <value>The color of text formatted as glow.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGlowFormat.Radius">
      <summary>
            Gets or sets the radius value of the glow effect for the GlowFormat object.
            </summary>
      <value>The radius value of the glow effect.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGlowFormat.Transparency">
      <summary>
            Gets or sets the degree of transparency of the specified glow as a value between 0.0 (opaque) and 1.0 (clear).
            </summary>
      <value>The degree of transparency.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IGradientStop">
      <summary>
            Represents one gradient stop.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGradientStop.Color">
      <summary>
            Gets the value representing the color of the gradient stop.
            </summary>
      <value>The value representing the color of the gradient stop.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGradientStop.Position">
      <summary>
            Gets or sets the value representing the position of a stop within the gradient expressed as a percent.
            </summary>
      <value>The position of a stop within the gradient.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGradientStop.Transparency">
      <summary>
            Gets or sets the value representing the opacity of the gradient fill expressed as a percent.
            </summary>
      <value>The opacity of the gradient fill.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IGradientStops">
      <summary>
            Contains a collection of GradientStop objects.
            </summary>
      <remarks>Gradients are a smooth transition from one color state to another. The endpoints of these sections are called stops.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGradientStops.Count">
      <summary>
            Gets an integer value indicating the number of items in the <see cref="T:GrapeCity.Spreadsheet.Drawing.IGradientStops" /> collection.
            </summary>
      <value>The number of items in the <see cref="T:GrapeCity.Spreadsheet.Drawing.IGradientStops" /> collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGradientStops.Item(System.Int32)">
      <summary>
            Gets a GradientStop object from a GradientStops collection.
            </summary>
      <param name="index">The index.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IGradientStop" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IGradientStops.Delete(System.Int32)">
      <summary>
            Removes a gradient stop.
            </summary>
      <param name="index">The index number of the gradient stop.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IGradientStops.Insert(System.Int32,System.Double,System.Double,System.Int32,System.Double)">
      <summary>
            Adds a stop to a gradient, and specifies the brightness, as well as the transparency, of the color.
            </summary>
      <param name="rgb">Specifies the color at the gradient stop.</param>
      <param name="position">Specifies the position of the stop within the gradient expressed as a percent.</param>
      <param name="transparency">Specifies the opacity of color at the gradient stop.</param>
      <param name="index">The index number of the stop.</param>
      <param name="brightness">Specifies the brightness of the color at the gradient stop.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IEffectParameter">
      <summary>
            Describes a single Picture Effect parameter.
            </summary>
      <remarks>Picture Effects are processed as a chain composed of individual items that are applied in sequence to create the final composited image.
            An Effects chain will allow an effect to be added to the chain, reordered, or removed from the chain. Effect parameters specify properties of those effects.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IEffectParameter.Name">
      <summary>
            Gets the string name of the EffectParameter parameter.
            </summary>
      <value>The string name of the EffectParameter parameter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IEffectParameter.Value">
      <summary>
            Gets or sets the value of the <see cref="T:GrapeCity.Spreadsheet.Drawing.IEffectParameter" /> object.
            </summary>
      <value>The value of the <see cref="T:GrapeCity.Spreadsheet.Drawing.IEffectParameter" /> object.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IPictureEffect">
      <summary>
            Represents a picture effect.
            </summary>
      <remarks>Picture effects are processed as a chain composed of individual items that are applied in sequence to create the final composited image.
            An effects chain will allow an effect to be added to the chain, reordered, or removed from the chain.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureEffect.EffectParameters">
      <summary>
            Gets all <see cref="T:GrapeCity.Spreadsheet.Drawing.IEffectParameter" /> objects.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IEffectParameter" /> objects.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureEffect.Position">
      <summary>
            Gets or sets the position of a picture effect in a chain of composite effects.
            </summary>
      <value>The position of a picture effect in a chain of composite effects.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureEffect.Type">
      <summary>
            Gets the type of PictureEffect.
            </summary>
      <value>The type of PictureEffect.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureEffect.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.IPictureEffect" /> is visible.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.IPictureEffect" /> is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPictureEffect.Delete">
      <summary>
            Deletes a PictureEffect object.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IPictureEffects">
      <summary>
            Represents a collection of <see cref="T:GrapeCity.Spreadsheet.Drawing.IPictureEffect" /> objects.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureEffects.Count">
      <summary>
            Gets the count of the number of PictureEffect objects contained within the <see cref="T:GrapeCity.Spreadsheet.Drawing.IPictureEffects" /> collection.
            </summary>
      <value>The count of the number of PictureEffect objects.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureEffects.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IPictureEffect" /> object at the specified index.
            </summary>
      <param name="index">The index.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IPictureEffect" /> object at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPictureEffects.Delete(System.Int32)">
      <summary>
            Deletes a <see cref="T:GrapeCity.Spreadsheet.Drawing.IPictureEffect" /> object from the collection.
            </summary>
      <param name="index">The index number of the <see cref="T:GrapeCity.Spreadsheet.Drawing.IPictureEffect" /> object to delete.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPictureEffects.Insert(GrapeCity.Spreadsheet.Drawing.PictureEffectType,System.Int32)">
      <summary>
            Inserts a picture effect in a chain of composite effects.
            </summary>
      <param name="effectType">An enumeration specifying the type of picture effect.</param>
      <param name="position">The position of the effect in the composite chain of picture effects.</param>
      <returns>The inserted <see cref="T:GrapeCity.Spreadsheet.Drawing.IPictureEffect" /> object.</returns>
      <remarks>Picture effects are processed as a chain composed of individual items that are applied in sequence to create the final composited image.
            An effects chain will allow an effect to be added to the chain, reordered, or removed from the chain.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.PresetTextEffect">
      <summary>
            Specifies what text effect to use.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect1">
      <summary>
            First text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect2">
      <summary>
            Second text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect3">
      <summary>
            Third text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect4">
      <summary>
            Fourth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect5">
      <summary>
            Fifth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect6">
      <summary>
            Sixth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect7">
      <summary>
            Seventh text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect8">
      <summary>
            Eighth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect9">
      <summary>
            Ninth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect10">
      <summary>
            Tenth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect11">
      <summary>
            Eleventh text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect12">
      <summary>
            Twelfth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect13">
      <summary>
            Thirteenth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect14">
      <summary>
            Fourteenth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect15">
      <summary>
            Fifteenth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect16">
      <summary>
            Sixteenth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect17">
      <summary>
            Seventeenth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect18">
      <summary>
            Eighteenth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect19">
      <summary>
            Nineteenth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect20">
      <summary>
            Twentieth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect21">
      <summary>
            Twenty-first text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect22">
      <summary>
            Twenty-second text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect23">
      <summary>
            Twenty-third text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect24">
      <summary>
            Twenty-fourth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect25">
      <summary>
            Twenty-fifth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect26">
      <summary>
            Twenty-sixth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect27">
      <summary>
            Twenty-seventh text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect28">
      <summary>
            Twenty-eighth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect29">
      <summary>
            Twenty-ninth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect30">
      <summary>
            Thirtieth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect31">
      <summary>
            Thirty-first text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect32">
      <summary>
            Thirty-second text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect33">
      <summary>
            Thirty-third text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect34">
      <summary>
            Thirty-fourth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect35">
      <summary>
            Thirty-fifth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect36">
      <summary>
            Thirty-sixth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect37">
      <summary>
            Thirty-seventh text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect38">
      <summary>
            Thirty-eighth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect39">
      <summary>
            Thirty-ninth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect40">
      <summary>
            Fortieth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect41">
      <summary>
            Forty-first text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect42">
      <summary>
            Forty-second text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect43">
      <summary>
            Forty-third text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect44">
      <summary>
            Forty-fourth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect45">
      <summary>
            Forty-fifth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect46">
      <summary>
            Forty-sixth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect47">
      <summary>
            Forty-seventh text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect48">
      <summary>
            Forty-eighth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect49">
      <summary>
            Forty-ninth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.TextEffect50">
      <summary>
            Fiftieth text effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffect.Unspecified">
      <summary>
            Unspecified text effect.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.PictureEffectType">
      <summary>
            Specifies constants that define the types of picture effects.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.None">
      <summary>
            No effect
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.BackgroundRemoval">
      <summary>
            Background removal effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.Blur">
      <summary>
            Blur effect
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.BrightnessContrast">
      <summary>
            Brightness contrast effect
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.Cement">
      <summary>
            Cement effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.ChalkSketch">
      <summary>
            Chalk sketch effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.ColorTemperature">
      <summary>
            Color temperature effect
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.CrisscrossEtching">
      <summary>
            Crisscross etching effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.Cutout">
      <summary>
            Cutout effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.FilmGrain">
      <summary>
            Film grain effect
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.Glass">
      <summary>
            Glass effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.GlowDiffused">
      <summary>
            Diffused glow effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.GlowEdges">
      <summary>
            Glow edges effect
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.LightScreen">
      <summary>
            Light screen effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.LineDrawing">
      <summary>
            Line drawing effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.Marker">
      <summary>
            Marker effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.MosaicBubbles">
      <summary>
            Mosaic bubbles
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.PaintBrush">
      <summary>
            Paintbrush effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.PaintStrokes">
      <summary>
            Paint strokes effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.PastelsSmooth">
      <summary>
            Smooth pastel effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.PencilGrayscale">
      <summary>
            Pencil greyscale effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.PencilSketch">
      <summary>
            Pencil sketch effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.Photocopy">
      <summary>
            Photocopy effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.PlasticWrap">
      <summary>
            Plastic wrap effect
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.Saturation">
      <summary>
            Saturation effect
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.SharpenSoften">
      <summary>
            Sharpen soften effect
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.Texturizer">
      <summary>
            Texturizer effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureEffectType.WatercolorSponge">
      <summary>
            Watercolor sponge effect
            </summary>
      <remarks>Available for XLSX I/O only.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IFillFormat">
      <summary>
            Interface IFillFormat
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.BackColor">
      <summary>
            Gets a ColorFormat object that represents the specified fill background color.
            </summary>
      <value>The ColorFormat object that represents the specified fill background color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.ForeColor">
      <summary>
            Gets a ColorFormat object that represents the specified foreground fill or solid color.
            </summary>
      <value>The ColorFormat object that represents the specified foreground fill or solid color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.GradientAngle">
      <summary>
            Gets or sets the angle of the gradient fill for the specified fill format.
            </summary>
      <value>The angle of the gradient fill for the specified fill format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.GradientColorType">
      <summary>
            Gets the gradient color type for the specified fill.
            </summary>
      <value>The gradient color type for the specified fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.GradientStops">
      <summary>
            Gets the end points for the gradient fill.
            </summary>
      <value>The end points for the gradient fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.GradientStyle">
      <summary>
            Gets or sets the gradient style for the specified fill.
            </summary>
      <value>The gradient style for the specified fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.GradientVariant">
      <summary>
            Gets the shade variant for the specified fill as an integer value from 1 through 4.
            The values for this property correspond to the gradient variants (numbered from left to right and from top to bottom).
            </summary>
      <value>The shade variant for the specified fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.PathShadeType">
      <summary>
            Gets or sets the path type for the specified fill.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.FillRectangle">
      <summary>
            Gets or sets the rectangle for the specified fill.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.Pattern">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.PatternType" /> value that represents the fill pattern.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.PatternType" /> value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.PictureEffects">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IPictureEffects" /> object that represents the picture or texture fill for the specified fill format.
            </summary>
      <value>The picture effects.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.RotateWithObject">
      <summary>
            Gets or sets a value indicating whether the fill style should rotate with the object.
            </summary>
      <value>
        <c>true</c> if the fill style should rotate with the object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.TextureAlignment">
      <summary>
            Gets or sets the texture alignment for the specified <see cref="T:GrapeCity.Spreadsheet.Drawing.IFillFormat" /> object.
            </summary>
      <value>The texture alignment for the specified <see cref="T:GrapeCity.Spreadsheet.Drawing.IFillFormat" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.TextureHorizontalScale">
      <summary>
            Gets or sets the value for horizontally scaling the text for the <see cref="T:GrapeCity.Spreadsheet.Drawing.IFillFormat" /> object.
            </summary>
      <value>The texture horizontal scale.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.TextureOffsetX">
      <summary>
            Gets or sets the offset X value for the specified fill.
            </summary>
      <value>The offset X value for the specified fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.TextureOffsetY">
      <summary>
            Gets or sets the offset Y value for the specified fill.
            </summary>
      <value>The offset Y value for the specified fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.TextureTile">
      <summary>
            Gets or sets a value indicating whether the texture style is tile.
            </summary>
      <value>
        <c>true</c> if the texture style is tile; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.TextureVerticalScale">
      <summary>
            Gets or sets the value for vertically scaling the text for the <see cref="T:GrapeCity.Spreadsheet.Drawing.IFillFormat" /> object.
            </summary>
      <value>The texture vertical scale.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.Transparency">
      <summary>
            Gets or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
      <value>The degree of transparency.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.Type">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.FillType" /> value that represents the fill type.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Drawing.FillType" /> value that represents the fill type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IFillFormat.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.IFillFormat" /> is visible.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.IFillFormat" /> is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.OneColorGradient(GrapeCity.Spreadsheet.Drawing.GradientStyle,System.Int32,System.Double)">
      <summary>
            Fills the shape with a one-color gradient.
            </summary>
      <param name="style">The gradient style.</param>
      <param name="variant">The gradient variant that the value from 1 through 4.</param>
      <param name="degree">The gradient degree. Can be a value from 0.0 (dark) through 1.0 (light).</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.Gradient(GrapeCity.Spreadsheet.Drawing.GradientStyle,System.Int32,GrapeCity.Drawing.SchemeGradientStop[])">
      <summary>
            Fills the shape with the specified gradient.
            </summary>
      <param name="style">The gradient style.</param>
      <param name="variant">The gradient variant that the value from 1 through 4.</param>
      <param name="gradientStops">The <see cref="T:GrapeCity.Drawing.SchemeGradientStop" /> array indicates the gradient stops of the gradient brush.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.Patterned(GrapeCity.Drawing.PatternType)">
      <summary>
            Fills the shape with a pattern fill.
            </summary>
      <param name="pattern">The type of pattern.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.PresetGradient(GrapeCity.Spreadsheet.Drawing.GradientStyle,System.Int32,GrapeCity.Spreadsheet.Drawing.PresetGradientType)">
      <summary>
            Fills the shape with a preset gradient.
            </summary>
      <param name="style">The gradient style.</param>
      <param name="variant">The gradient variant that the value from 1 through 4.</param>
      <param name="presetGradientType">The preset gradient type.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.Group">
      <summary>
            Fills the shape with its parent group shape's fill.
            </summary>
      <remarks>Current fill will be kept if the shape has no parent group shape.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.Solid">
      <summary>
            Fills the shape with a uniform color. Use this method to convert a gradient, textured, or background fill back to a solid fill.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.TwoColorGradient(GrapeCity.Spreadsheet.Drawing.GradientStyle,System.Int32)">
      <summary>
            Fills the shape with a two-color gradient.
            </summary>
      <param name="style">The gradient style.</param>
      <param name="variant">The gradient variant that the value from 1 through 4.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.UserPicture(System.String,System.Boolean)">
      <summary>
            Fills the shape with an image.
            </summary>
      <param name="file">The file path to the picture file, or the name of the picture file if a link to the picture file currently exists.</param>
      <param name="embedded">A boolean value indicates whether the image will be embedded.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.UserPicture(System.IO.Stream)">
      <summary>
            Fills the shape with an image.
            </summary>
      <param name="stream">The binary data of the picture.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.UserTextured(System.String,System.Boolean)">
      <summary>
            Fills the shape with small tiles of an image. If you want to fill the shape with one large image, use the <see cref="!:UserPicture(string)" /> method.
            </summary>
      <param name="file">The name of the picture file.</param>
      <param name="embedded">A boolean value indicates whether the image will be embedded.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.UserTextured(System.IO.Stream)">
      <summary>
            Fills the shape with small tiles of an image. If you want to fill the shape with one large image, use the <see cref="M:GrapeCity.Spreadsheet.Drawing.IFillFormat.UserPicture(System.IO.Stream)" /> method.
            </summary>
      <param name="stream">The binary data of the texture.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.FillType">
      <summary>
            Specifies a shape's fill type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.FillType.Background">
      <summary>
            Fill is the same as the background.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.FillType.Gradient">
      <summary>
            Gradient fill
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.FillType.Patterned">
      <summary>
            Patterned fill
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.FillType.Solid">
      <summary>
            Solid fill
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.FillType.Textured">
      <summary>
            Textured fill
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.FillType.Unspecified">
      <summary>
            Not used
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.TextureType">
      <summary>
            Specifies the texture type for the selected fill.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextureType.Preset">
      <summary>
            Preset texture type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextureType.UserDefined">
      <summary>
            User-defined texture type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextureType.Unspecified">
      <summary>
            Return value only; indicates a combination of the other states.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.GradientStyle">
      <summary>
            Specifies the style for a gradient fill.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GradientStyle.DiagonalDown">
      <summary>
            Diagonal gradient moving from a top corner down to the opposite corner.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GradientStyle.DiagonalUp">
      <summary>
            Diagonal gradient moving from a bottom corner up to the opposite corner.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GradientStyle.FromCenter">
      <summary>
            Gradient running from the center out to the corners.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GradientStyle.FromCorner">
      <summary>
            Gradient running from a corner to the other three corners.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GradientStyle.Horizontal">
      <summary>
            Gradient running horizontally across the shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GradientStyle.Vertical">
      <summary>
            Gradient running vertically down the shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GradientStyle.Unspecified">
      <summary>
            Not used
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.PresetGradientType">
      <summary>
            Enum PresetGradientType
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientEarlySunset">
      <summary>
            Early Sunset gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientLateSunset">
      <summary>
            Late Sunset gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientNightfall">
      <summary>
            Nightfall gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientDaybreak">
      <summary>
            Daybreak gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientHorizon">
      <summary>
            Horizon gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientDesert">
      <summary>
            Desert gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientOcean">
      <summary>
            Ocean gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientCalmWater">
      <summary>
            Calm Water gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientFire">
      <summary>
            Fire gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientFog">
      <summary>
            Fog gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientMoss">
      <summary>
            Moss gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientPeacock">
      <summary>
            Peacock gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientWheat">
      <summary>
            Wheat gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientParchment">
      <summary>
            Parchment gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientMahogany">
      <summary>
            Mahogany gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientRainbow">
      <summary>
            Rainbow gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientRainbowII">
      <summary>
            Rainbow II gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientGold">
      <summary>
            Gold gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientGoldII">
      <summary>
            Gold II gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientBrass">
      <summary>
            Brass gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientChrome">
      <summary>
            Chrome gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientChromeII">
      <summary>
            Chrome II gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientSilver">
      <summary>
            Silver gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.GradientSapphire">
      <summary>
            Sapphire gradient
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "F:GrapeCity.Spreadsheet.Drawing.PresetGradientType.Unspecified" -->
    <member name="T:GrapeCity.Spreadsheet.Drawing.GradientColorType">
      <summary>
            Specifies the type of gradient used in a shape's fill.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GradientColorType.OneColor">
      <summary>
            One-color gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GradientColorType.TwoColors">
      <summary>
            Two-color gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GradientColorType.PresetColors">
      <summary>
            Gradient colors set according to a built-in gradient of the set defined by the <see cref="T:GrapeCity.Spreadsheet.Drawing.PresetGradientType" /> constant.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GradientColorType.MultiColors">
      <summary>
            Multi-color gradient
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "F:GrapeCity.Spreadsheet.Drawing.GradientColorType.Unspecified" -->
    <member name="T:GrapeCity.Spreadsheet.Drawing.ISoftEdgeFormat">
      <summary>
            Represents the soft edge effect in Office graphics.
            </summary>
      <remarks>The soft edge effect creates a mask around the edge of an object and blends the object with the transparent edge. The result is a faded or "feathered" edge.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ISoftEdgeFormat.Radius">
      <summary>
            Gets or sets the size, measured in pixels, of the soft edge effect of the shape.
            </summary>
      <value>The size, measured in pixels, of the soft edge effect of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ISoftEdgeFormat.Type">
      <summary>
            Gets or sets the type of the <see cref="T:GrapeCity.Spreadsheet.Drawing.ISoftEdgeFormat" /> object.
            </summary>
      <value>The type of the <see cref="T:GrapeCity.Spreadsheet.Drawing.ISoftEdgeFormat" /> object.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.SoftEdgeType">
      <summary>
            Represents the soft edge effect in Office graphics.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.SoftEdgeType.None">
      <summary>
            No soft edge
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.SoftEdgeType.Type1">
      <summary>
            Soft Edge Type 1
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.SoftEdgeType.Type2">
      <summary>
            Soft Edge Type 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.SoftEdgeType.Type3">
      <summary>
            Soft Edge Type 3
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.SoftEdgeType.Type4">
      <summary>
            Soft Edge Type 4
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.SoftEdgeType.Type5">
      <summary>
            Soft Edge Type 5
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.SoftEdgeType.Type6">
      <summary>
            Soft Edge Type 6
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IColorFormat">
      <summary>
            Represents the color of a one-color object, the foreground or background color of an object with a gradient or patterned fill, or the pointer color.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IColorFormat.Brightness">
      <summary>
            Gets or sets the luminosity of the specified color.
            </summary>
      <value>The luminosity of the specified color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IColorFormat.ObjectThemeColor">
      <summary>
            Gets or sets a color that is mapped to the theme color scheme.
            </summary>
      <value>The color that is mapped to the theme color scheme.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IColorFormat.ARGB">
      <summary>
            Gets or sets an integer value that represents the red-green-blue value of the specified color.
            </summary>
      <value>The integer value that represents the alpha-red-green-blue value of the specified color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IColorFormat.SchemeColor">
      <summary>
            Gets or sets the scheme color index.
            </summary>
      <value>The index of sheme color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IColorFormat.Color">
      <summary>
            Gets or sets the scheme color.
            </summary>
      <value>The sheme color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IColorFormat.TintAndShade">
      <summary>
            Gets or sets the <see cref="T:System.Double" /> value that lightens or darkens a color.
            </summary>
      <value>The <see cref="T:System.Double" /> value that lightens or darkens a color.</value>
      <remarks>You can enter a number from -1 (darkest) to 1 (lightest) for the TintAndShade property. Zero (0) is neutral.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IColorFormat.Type">
      <summary>
            Returns <see cref="T:GrapeCity.Spreadsheet.ColorType" /> value that represents the color format type.
            </summary>
      <value>The <see cref="T:GrapeCity.Core.ColorType" /> value that represents the color format type.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IShadowFormat">
      <summary>
            Represents shadow formatting for a shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShadowFormat.Blur">
      <summary>
            Gets or sets the degree of blurriness of the specified shadow.
            </summary>
      <value>The degree of blurriness.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShadowFormat.ForeColor">
      <summary>
            Gets or sets a ColorFormat object that represents the specified foreground fill or solid color.
            </summary>
      <value>The ColorFormat object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShadowFormat.OffsetX">
      <summary>
            Gets or sets the horizontal offset of the shadow from the specified shape, in pixels.
            </summary>
      <value>A positive value offsets the shadow to the right of the shape; a negative value offsets it to the left.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShadowFormat.OffsetY">
      <summary>
            Gets or sets the vertical offset of the shadow from the specified shape, in pixels.
            </summary>
      <value>A positive value offsets the shadow to the bottom of the shape; a negative value offsets it to the top.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShadowFormat.RotateWithShape">
      <summary>
            Gets or sets a value indicating whether to rotate the shadow when rotating the shape.
            </summary>
      <value>
        <c>true</c> if rotate the shadow when rotating the shape; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShadowFormat.Size">
      <summary>
            Gets or sets the size of the specified shadow.
            </summary>
      <value>The size of the specified shadow.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShadowFormat.Style">
      <summary>
            Gets or sets the style of the specified shadow.
            </summary>
      <value>The style of the specified shadow.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShadowFormat.Transparency">
      <summary>
            Gets or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
      <value>The degree of transparency.</value>
      <remarks>The value of this property affects the appearance of solid-colored fills and lines only;
            it has no effect on the appearance of patterned lines or patterned, gradient, picture, or textured fills.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShadowFormat.Type">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Drawing.ShadowType" /> value that represents the shadow format type.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Drawing.ShadowType" /> value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShadowFormat.Visible">
      <summary>
            Gets or sets a value indicating whether the shadow is visible.
            </summary>
      <value>
        <c>true</c> if the shadow is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShadowFormat.IncrementOffsetX(System.Double)">
      <summary>
            Changes the horizontal offset of the shadow by the specified number of pixels.
            </summary>
      <param name="increment">Specifies how far the shadow offset is to be moved horizontally, in pixels.
            A positive value moves the shadow to the right; a negative value moves it to the left.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShadowFormat.IncrementOffsetY(System.Double)">
      <summary>
            Changes the vertical offset of the shadow by the specified number of pixels.
            </summary>
      <param name="increment">Specifies how far the shadow offset is to be moved vertically, in pixels.
            A positive value moves the shadow down; a negative value moves it up.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ShadowType">
      <summary>
            Enum ShadowType
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow1">
      <summary>
            First shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow2">
      <summary>
            Second shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow3">
      <summary>
            Third shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow4">
      <summary>
            Fourth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow5">
      <summary>
            Fifth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow6">
      <summary>
            Sixth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow7">
      <summary>
            Seventh shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow8">
      <summary>
            Eighth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow9">
      <summary>
            Ninth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow10">
      <summary>
            Tenth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow11">
      <summary>
            Eleventh shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow12">
      <summary>
            Twelfth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow13">
      <summary>
            Thirteenth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow14">
      <summary>
            Fourteenth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow15">
      <summary>
            Fifteenth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow16">
      <summary>
            Sixteenth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow17">
      <summary>
            Seventeenth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow18">
      <summary>
            Eighteenth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow19">
      <summary>
            Nineteenth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow20">
      <summary>
            Twentieth shadow type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow21">
      <summary>
            Twenty first shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow22">
      <summary>
            Twenty second shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow23">
      <summary>
            Twenty third shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow24">
      <summary>
            Twenty forth shadow type.
             </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow25">
      <summary>
            Twenty fifth shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow26">
      <summary>
            Twenty sixth shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow27">
      <summary>
            Twenty seventh shadow type.
             </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow28">
      <summary>
            Twenty eighth shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow29">
      <summary>
            Twenty ninth shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow30">
      <summary>
            Thirtieth shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow31">
      <summary>
            Thirty first shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow32">
      <summary>
            Thirty second shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow33">
      <summary>
            Thirty third shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow34">
      <summary>
            Thirty forth shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow35">
      <summary>
            Thirty fifth shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow36">
      <summary>
            Thirty sixth shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow37">
      <summary>    
            Thirty seventh shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow38">
      <summary>
            Thirty eighth shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow39">
      <summary>
            Thirty ninth shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow40">
      <summary>
            Fortieth shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow41">
      <summary>
            Forty first shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow42">
      <summary>
            Forty second shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Shadow43">
      <summary>
            Forty third shadow type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowType.Unspecified">
      <summary>
            Not used
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ShadowStyle">
      <summary>
            Specifies the type of shadowing effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowStyle.Inner">
      <summary>
            Specifies the inner shadow effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShadowStyle.Outer">
      <summary>
            Specifies the outer shadow effect.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ReflectionType">
      <summary>
            Specifies the type of the ReflectionFormat object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ReflectionType.None">
      <summary>
            No reflection type
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ReflectionType.Type1">
      <summary>
            The type1
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ReflectionType.Type2">
      <summary>
            The type2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ReflectionType.Type3">
      <summary>
            The type3
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ReflectionType.Type4">
      <summary>
            The type4
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ReflectionType.Type5">
      <summary>
            The type5
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ReflectionType.Type6">
      <summary>
            The type6
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ReflectionType.Type7">
      <summary>
            The type7
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ReflectionType.Type8">
      <summary>
            The type8
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ReflectionType.Type9">
      <summary>
            The type9
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IReflectionFormat">
      <summary>
            Represents the reflection effect in Office graphics.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IReflectionFormat.Blur">
      <summary>
            Gets or sets the amount of blur, measured in pixels, of the shape's reflection image.
            </summary>
      <value>The amount of blur.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IReflectionFormat.Offset">
      <summary>
            Gets or sets the amount of separation, measured in pixels, of the reflected image from the shape.
            </summary>
      <value>The amount of separation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IReflectionFormat.Size">
      <summary>
            Gets or sets the size, measured in percentages, of the shape's reflection image.
            </summary>
      <value>The size in percentage.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IReflectionFormat.Transparency">
      <summary>
            Gets or sets the amount of transparency, measured in percentages, of the shape's reflection image
            </summary>
      <value>The amount of transparency.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IReflectionFormat.Type">
      <summary>
            Gets or sets the type of the ReflectionFormat object.
            </summary>
      <value>The type of the ReflectionFormat object.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ICrop">
      <summary>
            An object used to remove a portion of an image.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICrop.PictureHeight">
      <summary>
            Gets or sets the height of the image that is to be cropped.
            </summary>
      <value>The height of the image.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICrop.PictureOffsetX">
      <summary>
            Gets or sets the x-axis offset of the image that is to be cropped.
            </summary>
      <value>The x-axis offset of the image that is to be cropped.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICrop.PictureOffsetY">
      <summary>
            Gets or sets the y-axis offset of the image that is to be cropped.
            </summary>
      <value>The y-axis offset of the image that is to be cropped.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICrop.PictureWidth">
      <summary>
            Gets or sets the width of the image that is to be cropped.
            </summary>
      <value>The width of the image.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICrop.ShapeHeight">
      <summary>
            Gets or sets the height of a shape that is used to crop an image.
            </summary>
      <value>The height of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICrop.ShapeLeft">
      <summary>
            Gets or sets the location of the left-side of a shape that is used to crop an image.
            </summary>
      <value>The left-side of a shape that is used to crop an image.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICrop.ShapeTop">
      <summary>
            Gets or sets the location of the top-side of a shape that is used to crop an image.
            </summary>
      <value>The top-side of a shape that is used to crop an image.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICrop.ShapeWidth">
      <summary>
            Gets or sets the width of a shape that is used to crop an image.
            </summary>
      <value>The width of the shape.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IPictureFormat">
      <summary>
            Contains properties and methods that apply to pictures and OLE objects.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.Brightness">
      <summary>
            Gets or sets the brightness of the specified picture or OLE object. The value for this property must be a number from 0.0 (dimmest) to 1.0 (brightest).
            </summary>
      <value>The brightness of the specified picture or OLE object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.ColorType">
      <summary>
            Gets or sets the type of color transformation applied to the specified picture or OLE object.
            </summary>
      <value>The type of color transformation applied to the specified picture or OLE object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.Contrast">
      <summary>
            Gets or sets the contrast for the specified picture or OLE object. The value for this property must be a number from 0.0 (the least contrast) to 1.0 (the greatest contrast).
            </summary>
      <value>The contrast for the specified picture or OLE object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.BlackWhiteThreshold">
      <summary>
            Gets or sets the black-white threshold of the specified picture. The value for this property must be a number from 0.0 (all black point) to 1.0 (all white point).
            </summary>
      <value>The black-white threshold of the specified picture.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.Crop">
      <summary>
            Gets an Crop object that represents the cropping settings for the specified PictureFormat object.
            </summary>
      <value>The Crop object that represents the cropping settings.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.CropBottom">
      <summary>
            Gets the number of pixels that are cropped off the bottom of the specified picture or OLE object.
            </summary>
      <value>The number of pixels that are cropped off the bottom of the specified picture or OLE object.</value>
      <remarks>Cropping is calculated relative to the original size of the picture.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.CropLeft">
      <summary>
            Gets the number of pixels that are cropped off the left of the specified picture or OLE object.
            </summary>
      <value>The number of pixels that are cropped off the left of the specified picture or OLE object.</value>
      <remarks>Cropping is calculated relative to the original size of the picture.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.CropRight">
      <summary>
            Gets the number of pixels that are cropped off the right of the specified picture or OLE object.
            </summary>
      <value>The number of pixels that are cropped off the right of the specified picture or OLE object.</value>
      <remarks>Cropping is calculated relative to the original size of the picture.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.CropTop">
      <summary>
            Gets the number of pixels that are cropped off the top of the specified picture or OLE object.
            </summary>
      <value>The number of pixels that are cropped off the top of the specified picture or OLE object.</value>
      <remarks>Cropping is calculated relative to the original size of the picture.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.TransparencyColor">
      <summary>
            Gets or sets the transparent color for the specified picture as a red-green-blue (RGB) value.
            </summary>
      <value>The transparent color for the specified picture as a red-green-blue (RGB) value.</value>
      <remarks>For this property to take effect, the TransparentBackground property must be set to True.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.TransparentBackground">
      <summary>
            Gets or sets a value indicating whether the picture all the way to the objects behind the picture is transparency.
            </summary>
      <value>
        <c>true</c> if the picture all the way to the objects behind the picture is transparency; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPictureFormat.IncrementBrightness(System.Double)">
      <summary>
            Changes the brightness of the picture by the specified amount.
            </summary>
      <param name="increment">Specifies how much to change the value of the Brightness property for the picture.
            A positive value makes the picture brighter; a negative value makes the picture darker.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPictureFormat.IncrementContrast(System.Double)">
      <summary>
            Changes the contrast of the picture by the specified amount.
            </summary>
      <param name="increment">Specifies how much to change the value of the Contrast property for the picture.
            A positive value increases the contrast; a negative value decreases the contrast.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IPictureFormat.Saturation">
      <summary>
            Gets the saturation of the specified picture.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPictureFormat.Recolor(GrapeCity.Core.SchemeColor,System.Boolean)">
      <summary>
            Changes the color of a picture in a publication.
            </summary>
      <param name="color">The color to be used for recoloring.</param>
      <param name="leaveBlackPartsBlack">
        <c>true</c> if all parts of the original picture that were black in color should be left black; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IPictureFormat.RestoreOriginalColors">
      <summary>
            Restores the original colors of a picture that was recolored.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.PictureColorType">
      <summary>
            Specifies the color transformation applied to a picture.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureColorType.Automatic">
      <summary>
            Default color transformation.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureColorType.BlackAndWhite">
      <summary>
            Black-and-white transformation.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureColorType.Grayscale">
      <summary>
            Grayscale transformation.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureColorType.Watermark">
      <summary>
            Watermark transformation.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PictureColorType.Mixed">
      <summary>
            Mixed transformation.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.AlignCommand">
      <summary>
            Defines how to align specified objects relative to one another.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AlignCommand.Bottoms">
      <summary>
            Align bottoms of specified objects.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AlignCommand.Centers">
      <summary>
            Align centers of specified objects.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AlignCommand.Lefts">
      <summary>
            Align left sides of specified objects.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AlignCommand.Middles">
      <summary>
            Align middles of specified objects.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AlignCommand.Rights">
      <summary>
            Align right sides of specified objects.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AlignCommand.Tops">
      <summary>
            Align tops of specified objects.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ShapeType">
      <summary>
            Specifies the type of a shape or range of shapes.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeType.AutoShape">
      <summary>
            The automatic shape
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeType.Callout">
      <summary>
            The callout
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeType.Comment">
      <summary>
            The comment
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeType.Freeform">
      <summary>
            The freeform
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeType.Graphic">
      <summary>
            The graphic
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeType.Group">
      <summary>
            The group
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeType.Line">
      <summary>
            The line
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeType.LinkedPicture">
      <summary>
            The linked picture
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeType.Picture">
      <summary>
            The picture
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeType.Unspecified">
      <summary>
            The shape type mixed
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeType.Slicer">
      <summary>
            The slicer
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.CopyPictureFormat">
      <summary>
            Specifies the format of the picture being copied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CopyPictureFormat.Bitmap">
      <summary>
            Bitmap (.png, .bmp, .jpg, .gif).
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.CopyPictureFormat.Picture">
      <summary>
            Drawn picture (.wmf, .mix).
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ScaleFrom">
      <summary>
            Specifies which part of the shape retains its position when the shape is scaled.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ScaleFrom.BottomRight">
      <summary>
            Shape's lower right corner retains its position.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ScaleFrom.Middle">
      <summary>
            Shape's midpoint retains its position.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ScaleFrom.TopLeft">
      <summary>
            Shape's upper left corner retains its position.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ZOrderCommand">
      <summary>
            Specifies where in the z-order a shape should be moved relative to other shapes.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ZOrderCommand.BringForward">
      <summary>
            Bring shape forward.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ZOrderCommand.BringToFront">
      <summary>
            Bring shape to the front.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ZOrderCommand.SendBackward">
      <summary>
            Send shape backward.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ZOrderCommand.SendToBack">
      <summary>
            Send shape to the back.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.Camera">
      <summary>
            Represents attributes of a camera object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Camera.Image">
      <summary>
            Gets or sets the image brush of the camera object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Camera.OfflineImage">
      <summary>
            Gets the last image brush of the camera object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Camera.OnDirtying">
      <summary>
            Designates this external variable to be recalculated when the next recalculation occurs.
            </summary>
      <returns>
        <c>true</c> if the external variable require executing its own logic after the calculation engine is ready; otherwise, <c>false</c>.</returns>
      <remarks>Accessing calculation engine (like get value of external variable) isn't available inside this function.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Camera.OnDirtied">
      <summary>
            Designates this external variable to be recalculated when the next recalculation occurs.
            </summary>
      <remarks>Accessing calculation engine (like get value of external variable) is available inside this function.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Camera.ChangeExpression(GrapeCity.CalcEngine.Expression)">
      <summary>
            Changes the expression.
            </summary>
      <param name="newExpression">The new expression.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Camera.SetRefersTo(System.Int32,System.Int32,System.String)">
      <summary>
            Sets the formula in A1 format which the defined name refers to.
            </summary>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <param name="refersTo">The formula in A1 format which the defined name refers to.</param>
      <returns>A <see cref="T:System.Boolean" /> value represents whether the formula is changed successfully.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Camera.IsAutoCorrectPreferred">
      <summary>
            Gets a boolean value indicating whether the external variable prefer correct expression automatically.
            </summary>
      <returns>
        <c>true</c> if all expression are corrected automatically; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Camera.GrapeCity#Spreadsheet#Drawing#ICamera#Formula">
      <summary>
            Gets or sets the formula that indicates source cell range of the camera.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ICamera">
      <summary>
            Represents the visual of a cell range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICamera.Formula">
      <summary>
            Gets or sets the formula that indicates source cell range of the camera.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ICamera.Image">
      <summary>
            Gets the image brush of the camera object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ICamera.Delete">
      <summary>
            Deletes the camera.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.CellNote">
      <summary>
            Represents a cell note shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.Formula">
      <summary>
            Gets or sets the shape formula.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.IsHovering">
      <summary>
            Gets or sets a boolean value indicating whether the mouse is in the owner cell of this cell note.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.CellNote" /> and all its child controls are displayed.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.CellNote" /> and all its child controls are displayed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.Comment">
      <summary>
            Gets the associated comment of this cell note.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.ShowSelectionOnProcessing">
      <summary>
            Gets a boolean value indicating whether the selection can be shown while user is working on this <see cref="T:GrapeCity.Spreadsheet.Drawing.CellNote" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.CanMultipleSelect">
      <summary>
            Gets a boolean value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.CellNote" /> can be selected with other shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.Selected">
      <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
      <value>
        <c>true</c> if this instance is selected; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.CellNote.PaintCore(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="drawingContext">The drawing context that paints this drawing object.</param>
      <param name="rect">The painting area that display this drawing object.</param>
      <param name="useableCachedBitmap">Indicates whether to use the cached bitmap of geometry drawing(s).</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.CellNote.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Boolean,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the shape.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.Shadow">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShadowFormat" /> object that contains shadow formatting properties for the specified shape or shapes.
            </summary>
      <value>The shadow format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.GrapeCity#Spreadsheet#Drawing#IShapeBase#Glow">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IGlowFormat" /> object for a specified shape that contains glow formatting properties for the shape.
            </summary>
      <value>The glow effect adds a vibrant colored edge to graphics.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.Nodes">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeNodes" /> collection that represents the geometric description of the specified shape.
            </summary>
      <value>The shape nodes of a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> or <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeBase" /> objects that represent freeform drawings.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.GrapeCity#Spreadsheet#Drawing#IShapeBase#Reflection">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IReflectionFormat" /> object for a specified shape that contains reflection formatting properties for the shape.
            </summary>
      <value>The reflection format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.GrapeCity#Spreadsheet#Drawing#IShapeBase#SoftEdge">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.ISoftEdgeFormat" /> object for a specified shape that contains soft edge formatting properties for the shape
            </summary>
      <value>The soft edge format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.CanRotate">
      <summary>
            Gets or sets whether the user is allowed to rotate the shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.GrapeCity#Spreadsheet#Drawing#IShapeBase#ShapeStyle">
      <summary>
            Gets or sets an <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeStyle" /> that represents the shape style of shape range.
            </summary>
      <value>The shape style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.CellNote.GrapeCity#Spreadsheet#Drawing#IShapeBase#Visible">
      <summary>
            Gets or sets a boolean value that determines whether the shape is visible.
            </summary>
      <value>
        <c>true</c> if the shape is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.CellNote.IsClipboardSupport">
      <summary>
            Gets a boolean value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> supports clipboard action.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> supports clipboard action; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.CellNote.CanDuplicate">
      <summary>
            Gets a boolean value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> can be duplicated.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.CellNote.IsSupportedFormula">
      <summary>
            Gets a boolean value indicates whether the shape support formula.
            </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ConnectionShape">
      <summary>
            Represents a shape connector.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ConnectionShape.IsSupportedText">
      <summary>
            Gets a boolean value indicates whether the shape support text.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ConnectionShape.AutoLayout(GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.Rectangle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Layouts the connection shape automatically.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ConnectionShape.AutoLayout(GrapeCity.Drawing.Point,GrapeCity.Drawing.Point,System.Boolean,System.Boolean)">
      <summary>
            Layouts the connection shape to fit 2 specified points.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ConnectionShape.AutoLayout(System.Boolean,System.Boolean)">
      <summary>
            The connection shape will layout automatically to fit with current connection sites.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ConnectionShape.BeginConnect(GrapeCity.Spreadsheet.Drawing.Shape,System.Int32,System.Boolean)">
      <summary>
            Attaches the beginning of the specified connector to a specified shape.
            </summary>
      <param name="connectedShape">The shape to attach the beginning of the connector to. The specified Shape object must be in the same Shapes collection as the connector.</param>
      <param name="connectionSite">A connection site on the shape specified by ConnectedShape.
            Must be an integer between 1 and the integer returned by the ConnectionSiteCount property of the specified shape.
            If you want the connector to automatically find the shortest path between the two shapes it connects,
            specify any valid integer for this argument and then use the RerouteConnections method after the connector is attached to shapes at both ends.</param>
      <remarks>If there's already a connection between the beginning of the connector and another shape, that connection is broken.
            If the beginning of the connector isn't already positioned at the specified connecting site,
            this method moves the beginning of the connector to the connecting site and adjusts the size and position of the connector.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ConnectionShape.BeginDisconnect">
      <summary>
            Detaches the beginning of the specified connector from the shape it's attached to.
            </summary>
      <remarks>This method doesn't alter the size or position of the connector: the beginning of the connector remains positioned at a connection site but is no longer connected.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ConnectionShape.EndConnect(GrapeCity.Spreadsheet.Drawing.Shape,System.Int32,System.Boolean)">
      <summary>
            Attaches the end of the specified connector to a specified shape.
            </summary>
      <param name="connectedShape">The shape to attach the end of the connector to. The specified Shape object must be in the same Shapes collection as the connector.</param>
      <param name="connectionSite">A connection site on the shape specified by ConnectedShape.
            Must be an integer between 1 and the integer returned by the ConnectionSiteCount property of the specified shape.
            If you want the connector to automatically find the shortest path between the two shapes it connects,
            specify any valid integer for this argument and then use the RerouteConnections method after the connector is attached to shapes at both ends.</param>
      <remarks>If there's already a connection between the end of the connector and another shape, that connection is broken.
            If the end of the connector isn't already positioned at the specified connecting site,
            this method moves the end of the connector to the connecting site and adjusts the size and position of the connector.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ConnectionShape.EndDisconnect">
      <summary>
            Detaches the end of the specified connector from the shape it's attached to.
            </summary>
      <remarks>This method doesn't alter the size or position of the connector: the end of the connector remains positioned at a connection site but is no longer connected.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ConnectionShape.IsBeginConnected">
      <summary>
            Gets a boolean value indicating whether the beginning of the specified connector is connected to a shape.
            </summary>
      <value>
        <c>true</c> if the beginning of the specified connector is connected to a shape; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ConnectionShape.IsEndConnected">
      <summary>
            Gets a boolean value indicating whether the end of the specified connector is connected to a shape.
            </summary>
      <value>
        <c>true</c> if the end of the specified connector is connected to a shape; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ConnectionShape.BeginConnectedShape">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> object that represents the shape that the beginning of the specified connector is attached to.
            </summary>
      <value>The shape that the beginning of the specified connector is attached to.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ConnectionShape.EndConnectedShape">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> object that represents the shape that the end of the specified connector is attached to.
            </summary>
      <value>The shape that the end of the specified connector is attached to.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ConnectionShape.BeginConnectionSite">
      <summary>
            Gets an integer that specifies the connection site that the beginning of a connector is connected to.
            </summary>
      <value>The connection site that the beginning of a connector is connected to.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ConnectionShape.EndConnectionSite">
      <summary>
            Gets an integer that specifies the connection site that the end of a connector is connected to.
            </summary>
      <value>The connection site that the end of a connector is connected to.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ConnectionShape.Connector">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> is a connector.
            </summary>
      <value>
        <c>true</c> if the specified shape is a connector; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ConnectionShape.ShowRotation">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.ConnectionShape" /> is rotatable.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.ConnectionShape" /> is rotatable; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ConnectionShape.IsSupportedFormula">
      <summary>
            Gets a boolean value indicates whether the shape support formula.
            </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.Placement">
      <summary>
            Specifies the way that an object is attached to its underlying cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.Placement.MoveAndSize">
      <summary>
            Object is moved and sized with the cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.Placement.Move">
      <summary>
            Object is moved with the cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.Placement.FreeFloating">
      <summary>
            Object is free floating.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.AnchorPoint">
      <summary>
            Represents an anchor point for the drawing element.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AnchorPoint.Origin">
      <summary>
            Represents the origin point.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.AnchorPoint.#ctor(System.Int32,System.Double,System.Int32,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Drawing.AnchorPoint" /> struct.
            </summary>
      <param name="row">The row index of the anchor cell.</param>
      <param name="rowOffset">The vertical position of the drawing element, relative to the upper-left corner of the anchor cell.</param>
      <param name="column">The column index of the anchor cell.</param>
      <param name="columnOffset">The horizontal position of the drawing element, relative to the upper-left corner of the anchor cell.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.AnchorPoint.Column">
      <summary>
            Gets or sets the column index of the anchor cell.
            </summary>
      <value>The column index of the anchor cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.AnchorPoint.Row">
      <summary>
            Gets or sets the row index of the anchor cell.
            </summary>
      <value>The row index of the anchor cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.AnchorPoint.ColumnOffset">
      <summary>
            Gets or sets the column offset of the drawing element.
            </summary>
      <value>The horizontal position of the drawing element, relative to the upper-left corner of the anchor cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.AnchorPoint.RowOffset">
      <summary>
            Gets or sets the row offset of the drawing element.
            </summary>
      <value>The vertical position of the drawing element, relative to the upper-left corner of the anchor cell.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.GeometryFillMode">
      <summary>
            Represents the manner in which a geometry should be filled.
            The lightening and darkening of a geometry allow for certain parts of the shape to be colored lighter of darker depending on user preference.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GeometryFillMode.Normal">
      <summary>
            The corresponding path should have a normally shaded color applied to its fill.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GeometryFillMode.None">
      <summary>
            The corresponding path should have no fill.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GeometryFillMode.Darken">
      <summary>
            The corresponding path should have a darker shaded color applied to its fill.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GeometryFillMode.DarkenLess">
      <summary>
            The corresponding path should have a slightly darker shaded color applied to its fill.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GeometryFillMode.Lighten">
      <summary>
            The corresponding path should have a lightly shaded color applied to its fill.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GeometryFillMode.LightenLess">
      <summary>
            The corresponding path should have a slightly lighter shaded color applied to its fill.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ResizeAnchor">
      <summary>
            Represents the resize anchor.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ResizeAnchor.None">
      <summary>
            There is no resize anchor.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ResizeAnchor.TopLeft">
      <summary>
            The top left resize anchor.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ResizeAnchor.Top">
      <summary>
            The top resize anchor.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ResizeAnchor.TopRight">
      <summary>
            The top right resize anchor.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ResizeAnchor.Right">
      <summary>
            The right resize anchor.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ResizeAnchor.BottomRight">
      <summary>
            The bottom right resize anchor.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ResizeAnchor.Bottom">
      <summary>
            The bottom resize anchor.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ResizeAnchor.BottomLeft">
      <summary>
            The bottom left resize anchor.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ResizeAnchor.Left">
      <summary>
            The top resize anchor.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ConnectorDirection">
      <summary>
            The connector shape's direction.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ConnectorDirection.BeginConnector">
      <summary>
            The beginning of connector
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ConnectorDirection.EndConnector">
      <summary>
            The ending connector
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.Sizing">
      <summary>
            Specifies the sizing aspects of the object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.Sizing.None">
      <summary>
            Does not allow user sizing
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.Sizing.Height">
      <summary>
            Allows user to size the height of the object
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.Sizing.Width">
      <summary>
            Allows user to size the width of the object
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.Sizing.HeightAndWidth">
      <summary>
            Allows user to size both the height and width of the object
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.Moving">
      <summary>
            Specifies the movement aspects of the object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.Moving.None">
      <summary>
            Does not allow user movement
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.Moving.Horizontal">
      <summary>
            Allows the user to horizontally move the object
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.Moving.Vertical">
      <summary>
            Allows the user to vertically move the object
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.Moving.HorizontalAndVertical">
      <summary>
            Allows the user to move the object both horizontally and vertically
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.DrawingObject">
      <summary>
            Represents the abstraction drawing object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.IsAlive">
      <summary>
            Gets a boolean value indicating whether this drawing object is available to process.
            </summary>
      <value>
        <c>true</c> if this drawing object is available to process; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.DrawingObject.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.DrawingObject.CalculateRect(GrapeCity.Spreadsheet.Drawing.DrawingObject,GrapeCity.Drawing.Rectangle)">
      <summary>
            Calculates the client rectangle of a child shape inside the specified rectangle.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.Parent">
      <summary>
            Gets the parent.
            </summary>
      <value>The parent.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.Root">
      <summary>
            Gets the highest ancestor drawing object which contains this drawing object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.WorksheetDrawing">
      <summary>
            Gets the graphic object contained by this graphic frame.
            </summary>
      <value>The graphic object contained by this graphic frame.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.StartAnchorPoint">
      <summary>
            Gets the top-left anchor point.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.EndAnchorPoint">
      <summary>
            Gets the bottom-right anchor point.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.ShowRotation">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> is show the rotate handler.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.Bounds">
      <summary>
            Gets the boundary of the drawing object in pixels.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.VisibleCore">
      <summary>
            Gets or sets a boolean value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> and all its child controls are displayed.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> and all its child controls are displayed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.Visible">
      <summary>
            Gets or sets a boolean value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> and all its child controls are displayed.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> and all its child controls are displayed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.PrintObject">
      <summary>
            Gets or sets a boolean value indicating whether the object will be printed when the document is printed.
            </summary>
      <value>
        <c>true</c> if the object will be printed when the document is printed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.DrawingObject.PaintCore(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="drawingContext">The drawing context that paints this drawing object.</param>
      <param name="rect">The painting area that display this drawing object.</param>
      <param name="useableCachedBitmap">Indicates whether to use the cached bitmap of geometry drawing(s).</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.DrawingObject.Paint(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="drawingContext">The drawing context that paints this drawing object.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.DrawingObject.Paint(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="drawingContext">The drawing context that paints this drawing object.</param>
      <param name="rect">The painting area that display this drawing object.</param>
      <param name="useableCachedBitmap">Clear the old geometry cache if true, otherwise painting with cache geometry.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.Data">
      <summary>
            Gets or sets the extend data of the <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" />.
            </summary>
      <value>
            The extend data.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.Bindings">
      <summary>
            Gets the binding collection of this drawing object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.Placement">
      <summary>
            Get the placement of the drawing object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.Locked">
      <summary>
            Gets or sets a value indicating whether the specified drawing object can be modified when the sheet that contains it is protected.
            </summary>
      <value>
        <c>true</c> if the specified drawing object cannot be modified; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.DrawingObject.Duplicate">
      <summary>
            Duplicates the object and returns a reference to the new copy.
            </summary>
      <returns>The new duplicated drawing object.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.DrawingObject.ShowSelectionOnProcessing">
      <summary>
            Gets a boolean value indicating whether the selection can be shown while user is working on this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.DrawingObject.IsClipboardSupport">
      <summary>
            Gets a boolean value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> supports clipboard action.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> supports clipboard action; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.DrawingObject.CanDuplicate">
      <summary>
            Gets a boolean value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> can be duplicated.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.HitTestInfo">
      <summary>
            Contains information about an area of a drawing object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.HitTestInfo.Transparent">
      <summary>
            Indicates that the position doesn't belong to the object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.HitTestInfo.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Drawing.HitTestInfo" /> struct.
            </summary>
      <param name="hitTest">The hit test code at the position indicated by a hit test.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.HitTestInfo.#ctor(System.Int32,GrapeCity.Spreadsheet.Drawing.DrawingObject)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Drawing.HitTestInfo" /> struct.
            </summary>
      <param name="hitTest">The hit test code at the position indicated by a hit test.</param>
      <param name="target">The object at the position indicated by a hit test.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.HitTestInfo.#ctor(System.Int32,GrapeCity.Spreadsheet.Drawing.DrawingObject,System.Int32,System.Nullable{GrapeCity.Spreadsheet.API.Drawing.FreeFormNode})">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Drawing.HitTestInfo" /> struct.
            </summary>
      <param name="hitTest">The hit test code at the position indicated by a hit test.</param>
      <param name="target">The object at the position indicated by a hit test.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.HitTestInfo.HitTest">
      <summary>
            Gets the hit test code at the position indicated by a hit test.
            </summary>
      <value>The hit test code at the position indicated by a hit test.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.HitTestInfo.Target">
      <summary>
            Gets the object at the position indicated by a hit test.
            </summary>
      <value>The object at the position indicated by a hit test.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.HitTestInfo.Value">
      <summary>
            Gets the corresponding numeric value of the hit test.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.HitTestInfo.EditingNode">
      <summary>
            The editing node.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.GraphicFrame">
      <summary>
            Represents a single graphical object frame for a spreadsheet which contains a graphical object.
            </summary>
      <seealso cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GraphicFrame.IsSupportedText">
      <summary>
            Gets a boolean value indicates whether the shape support text.
            </summary>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.GraphicFrame.Type">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeType" /> value that represents the shape type.
            </summary>
      <value>The shape type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.GraphicFrame.GraphicObject">
      <summary>
            Gets the graphic object contained by this container.
            </summary>
      <value>The graphic object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.GraphicFrame.CanRotate">
      <summary>
            Gets or sets whether the user is allowed to rotate the shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GraphicFrame.CalculateRect(GrapeCity.Spreadsheet.Drawing.DrawingObject,GrapeCity.Drawing.Rectangle)">
      <summary>
            Calculates the client rectangle of a child shape inside the specified rectangle.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GraphicFrame.PaintCore(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="drawingContext">The drawing context that paints this drawing object.</param>
      <param name="rect">The painting area that display this drawing object.</param>
      <param name="useableCachedBitmap">Indicates whether to use the cached bitmap of geometry drawing(s).</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GraphicFrame.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the shape.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GraphicFrame.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Boolean,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the shape.</param>
      <param name="connecting">
        <c>true</c> if the hittest is for connection action; otherwise, <c>false</c>.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IGraphicObjects">
      <summary>
            Represents a collection of <see cref="T:GrapeCity.Spreadsheet.Drawing.GraphicObject" /> objects.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGraphicObjects.Count">
      <summary>
            Gets the number of graphic objects in the collection.
            </summary>
      <value>The number of graphic objects currently contained in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGraphicObjects.Item(System.Int32)">
      <summary>
            Indicates the <see cref="T:GrapeCity.Spreadsheet.Drawing.GraphicObject" /> at the specified indexed location in the collection.
            </summary>
      <param name="index">The index of the graphic object to retrieve from the graphic object collection.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.GraphicObject" /> located at the specified index location within the graphic object collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IGraphicObjects.Add(GrapeCity.Spreadsheet.Drawing.GraphicObject)">
      <summary>
            Adds a graphic object to the graphic object collection.
            </summary>
      <param name="obj">The <see cref="T:GrapeCity.Spreadsheet.Drawing.GraphicObject" /> to add to the graphic object collection.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GraphicObject.DeleteCore">
      <summary>
            Deletes the <see cref="T:GrapeCity.Spreadsheet.Drawing.GraphicFrame" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.GraphicObject.Name">
      <summary>
            Gets or sets a string value representing the name of the graphic object.
            </summary>
      <value>The name of the graphic object.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.GroupShape">
      <summary>
            Represents a group shape that represents many shapes grouped together.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GroupShape.GetHyperlink">
      <summary>
            Gets the hyperlink of this shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GroupShape.IsSupportedText">
      <summary>
            Gets a boolean value indicates whether the shape support text.
            </summary>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.GroupShape.Type">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeType" /> value that represents the shape type.
            </summary>
      <value>The shape type.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GroupShape.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the shape.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GroupShape.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Boolean,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the shape.</param>
      <param name="connecting">
        <c>true</c> if the hittest is for connection action; otherwise, <c>false</c>.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GroupShape.ContainsSelectedChild">
      <summary>
            Gets a boolean value indicates whether there is a selected child shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GroupShape.GetSelectedChilds">
      <summary>
            Gets all decendent child shapes.
            </summary>
      <returns>All decendent child shapes.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.GroupShape.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> and all its child controls are displayed.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> and all its child controls are displayed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.GroupShape.CanRotate">
      <summary>
            Gets or sets whether the user is allowed to rotate the shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GroupShape.PaintCore(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="context">The drawing context that paints this drawing object.</param>
      <param name="rect">The painting area that display this drawing object.</param>
      <param name="useableCachedBitmap">Indicates whether to use the cached bitmap of geometry drawing(s).</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.GroupShape.CanEditPoints">
      <summary>
            Gets a boolean value indicating whether this shape can be edit.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.GroupShape.CanEditText">
      <summary>
            Gets a boolean value indicating whether the user can edit text of the shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.GroupShape.IsSupportedFormula">
      <summary>
            Gets a boolean value indicates whether the shape support formula.
            </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.BuiltInIcons">
      <summary>
            Represents built-in icons in the spreadsheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.BuiltInIcons.MultiSelect">
      <summary>
            The multi-select icon.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.BuiltInIcons.ClearFilter">
      <summary>
            The clear filter icon.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IShape">
      <summary>
            Represents an object in the drawing layer, such as a shape or picture.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShape.BottomRightCell">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the cell that lies under the lower-right corner of the shape.
            </summary>
      <value>The bottom right cell of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShape.TopLeftCell">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the cell that lies under the upper-left corner of the shape.
            </summary>
      <value>The top left cell of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShape.Locked">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> is locked.
            </summary>
      <value>
        <c>true</c> if if the object is locked; otherwise, <c>false</c> if the object can be modified when the sheet is protected.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShape.Placement">
      <summary>
            Gets or sets an <see cref="P:GrapeCity.Spreadsheet.Drawing.IShape.Placement" /> value that represents the way the shape is attached to the cells below it.
            </summary>
      <value>The way the shape is attached to the cells below it.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShape.Selected">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> is selected.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> is selected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShape.Formula">
      <summary>
            Gets or sets the shape formula.
            </summary>
    </member>
    <member name="E:GrapeCity.Spreadsheet.Drawing.IShape.Action">
      <summary>
            Occurs when the shape is chosen.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShape.Cut">
      <summary>
            Cuts the object to the clipboard.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShape.Copy">
      <summary>
            Copies the object to the clipboard.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShape.Duplicate">
      <summary>
            Duplicates the object and returns a reference to the new copy.
            </summary>
      <returns>The new duplicated shape.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShape.CopyPicture(GrapeCity.Spreadsheet.Drawing.CopyPictureFormat)">
      <summary>
            Copies the selected object to the clipboard as a picture.
            </summary>
      <param name="format">A <see cref="T:GrapeCity.Spreadsheet.Drawing.CopyPictureFormat" /> constant that specifies the format of the picture. The default value is <see cref="F:GrapeCity.Spreadsheet.Drawing.CopyPictureFormat.Picture" />.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShape.IsEditing">
      <summary>
            Gets or sets a boolean value indicating whether the shape is editing.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShape.IsEditingText">
      <summary>
            Gets or sets a boolean value indicating whether the shape is in editing text.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShape.Hyperlink">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IHyperlink" /> object that represents the hyperlink for the shape.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IShapeRange">
      <summary>
            Represents a shape range, which is a set of shapes on a document.
            </summary>
      <seealso cref="T:GrapeCity.Spreadsheet.Drawing.IShapeBase" />
      <remarks>A shape range can contain as few as a single shape or as many as all the shapes on the document.
            You can include whichever shapes you want — chosen from among all the shapes on the document or all the shapes in the selection — to construct a shape range.
            For example, you could construct a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeRange" /> collection that contains the first three shapes on a document, all the selected shapes on a document,
            or all the freeforms on a document.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeRange.Count">
      <summary>
            Gets an integer value that represents the number of shapes in the collection.
            </summary>
      <value>The number of shapes.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeRange.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object at the specified index.
            </summary>
      <param name="index">The index.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeRange.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object with the specified name.
            </summary>
      <param name="name">The name.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object with the specified name.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeRange.Align(GrapeCity.Spreadsheet.Drawing.AlignCommand)">
      <summary>
            Aligns the shapes in the specified range of shapes.
            </summary>
      <param name="alignCmd">The alignment command.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeRange.Distribute(System.Boolean)">
      <summary>
            Horizontally or vertically distributes the shapes in the specified range of shapes.
            </summary>
      <param name="horizontal">if set to <c>true</c> horizontally distributes the shapes.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeRange.Group(System.Boolean)">
      <summary>
            Groups the shapes in the specified range.
            </summary>
      <param name="rtlReposition">A boolean value indicating whether the child shapes reposition from right to left after groupped.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object contains all grouped shapes.</returns>
      <remarks>Because a group of shapes is treated as a single object, grouping and ungrouping shapes changes the number of items in the Shapes collection
            and changes the index numbers of items that come after the affected items in the collection.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeRange.Regroup(System.Boolean)">
      <summary>
            Regroups the group that the specified shape range belonged to previously.
            </summary>
      <param name="rtlReposition">A boolean value indicating whether the child shapes reposition from right to left after regroupped.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object contains all regrouped shapes.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeRange.Duplicate">
      <summary>
            Duplicates the object and returns a reference to the new copy.
            </summary>
      <returns>The new duplicated shape.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IShapeBase">
      <summary>
            Represents common APIs for shape and shape range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Adjustments">
      <summary>
            Gets an <see cref="!:IAdjustments" /> object that contains adjustment values for all the adjustments in the specified shape.
            </summary>
      <value>The <see cref="!:IAdjustments" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.AlternativeText">
      <summary>
            Gets or sets the descriptive (alternative) text string for an <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object.
            </summary>
      <value>The alternative text.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.AutoShapeType">
      <summary>
            Gets or sets the shape type for the specified <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> or <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeBase" /> object, which must represent an shape other than a line, freeform drawing, or connector.
            </summary>
      <value>The type of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Callout">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Drawing.ICalloutFormat" /> object that contains callout formatting properties for the specified shape.
            Applies to a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object that represent line callouts.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Drawing.ICalloutFormat" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Child">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> is child shape or if all shapes in a shape range are child shapes of the same parent.
            </summary>
      <value>
        <c>true</c> if the specified shape is a child shape or if all shapes in a shape range are child shapes of the same parent; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.ConnectionSiteCount">
      <summary>
            Gets the number of connection sites on the specified shape.
            </summary>
      <value>The number of connection sites.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Connector">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> is a connector.
            </summary>
      <value>
        <c>true</c> if the specified shape is a connector; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.ConnectorFormat">
      <summary>
            Gets a ConnectorFormat object that contains connector formatting properties. Applies to a Shape that represent connectors.
            </summary>
      <value>The connector format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Fill">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IFillFormat" /> object for a specified shape that contains fill formatting properties for the shape.
            </summary>
      <value>The fill format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Glow">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IGlowFormat" /> object for a specified shape that contains glow formatting properties for the shape.
            </summary>
      <value>The glow effect adds a vibrant colored edge to graphics.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.GroupItems">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IGroupShapes" /> object that represents the individual shapes in the specified group.
            </summary>
      <value>The individual shapes in the specified group.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Height">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the height, in pixels, of the shape.
            </summary>
      <value>The height of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.HorizontalFlip">
      <summary>
            Gets a value indicating whether the specified shape is flipped around the horizontal axis.
            </summary>
      <value>
        <c>true</c> if the specified shape is flipped around the horizontal axis; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.ID">
      <summary>
            Gets a <see cref="T:System.Int64" /> value that represents the identifier of the specified shape.
            </summary>
      <value>The identifier of this shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Left">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the distance, in pixels, from the left edge of the shape to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).
            </summary>
      <value>The left edge of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Line">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.ILineFormat" /> object that contains line formatting properties for the specified shape.
            </summary>
      <value>The line format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.LockAspectRatio">
      <summary>
            Gets or sets a value indicating whether the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> retains its original proportions when you resize it.
            </summary>
      <value>
        <c>true</c> if the shape retains its original proportions when you resize it;
            otherwise, <c>false</c> if you can change the height and width of the shape independently of one another when you resize it.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Name">
      <summary>
            Gets or sets a string value representing the name of the shape.
            </summary>
      <value>The name of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Nodes">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeNodes" /> collection that represents the geometric description of the specified shape.
            </summary>
      <value>The shape nodes of a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> or <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeBase" /> objects that represent freeform drawings.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Parent">
      <summary>
            Gets the parent shape for the specified shape.
            </summary>
      <value>The parent shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.ParentGroup">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object that represents the common parent shape of a child shape or a range of child shapes.
            </summary>
      <value>The common parent shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.PictureFormat">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IPictureFormat" /> object that contains picture formatting properties for the specified shape.
            </summary>
      <value>The picture format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Reflection">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IReflectionFormat" /> object for a specified shape that contains reflection formatting properties for the shape.
            </summary>
      <value>The reflection format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Rotation">
      <summary>
            Gets or sets the rotation of the shape, in degrees.
            </summary>
      <value>The rotation of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Shadow">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShadowFormat" /> object that contains shadow formatting properties for the specified shape or shapes.
            </summary>
      <value>The shadow format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.ShapeStyle">
      <summary>
            Gets or sets an <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeStyle" /> that represents the shape style of shape range.
            </summary>
      <value>The shape style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.SoftEdge">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.ISoftEdgeFormat" /> object for a specified shape that contains soft edge formatting properties for the shape
            </summary>
      <value>The soft edge format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Title">
      <summary>
            Gets or sets the title of the alternative text associated with the specified shape
            </summary>
      <value>The title of the alternative text.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Top">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the distance, in pixels, from the top edge of the topmost shape in the shape range to the top edge of the worksheet.
            </summary>
      <value>The top edge of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Type">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeType" /> value that represents the shape type.
            </summary>
      <value>The shape type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.VerticalFlip">
      <summary>
            Gets a value indicating whether the specified shape is flipped around the vertical axis.
            </summary>
      <value>
        <c>true</c> if the specified shape is flipped around the vertical axis; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Visible">
      <summary>
            Gets or sets a boolean value that determines whether the shape is visible.
            </summary>
      <value>
        <c>true</c> if the shape is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Width">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the width, in pixels, of the shape.
            </summary>
      <value>The width of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.ZOrderPosition">
      <summary>
            Gets the position of the specified shape in the z-order.
            </summary>
      <value>The position of the specified shape in the z-order.</value>
      <remarks>The value is on base-1.
            <para>To set the shape's position in the z-order, use the ZOrder method.</para><para>A shape's position in the z-order corresponds to the shape's index number in the Shapes collection.
            Whenever you add a new shape to a collection, it's added to the front of the z-order by default.</para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.Apply">
      <summary>
            Applies to the specified shape formatting that's been copied by using the <see cref="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.PickUp" /> method.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.Delete">
      <summary>
            Deletes this shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.Flip(System.Boolean)">
      <summary>
            Flips the specified shape around its horizontal or vertical axis.
            </summary>
      <param name="horizontal">Specifies whether the shape is to be flipped horizontally or vertically.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.IncrementLeft(System.Int32)">
      <summary>
            Moves the specified shape horizontally by the specified number of pixels.
            </summary>
      <param name="increment">Specifies how far the shape is to be moved horizontally, in pixels. A positive value moves the shape to the right; a negative value moves it to the left.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.IncrementRotation(System.Double)">
      <summary>
            Changes the rotation of the specified shape around the z-axis by the specified number of degrees.
            </summary>
      <param name="increment">Specifies how far the shape is to be rotated horizontally, in degrees. A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.</param>
      <remarks>Use the <see cref="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Rotation" /> property to set the absolute rotation of the shape.
            <para>To rotate a three-dimensional shape around the x-axis or the y-axis, use the <see cref="!:IncrementRotationX" /> method or the <see cref="!:IncrementRotationY" /> method.</para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.IncrementTop(System.Int32)">
      <summary>
            Moves the specified shape vertically by the specified number of pixels.
            </summary>
      <param name="increment">Specifies how far the shape object is to be moved vertically, in pixels. A positive value moves the shape down; a negative value moves it up.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.PickUp">
      <summary>
            Copies the formatting of the specified shape.
            </summary>
      <remarks>Use the <see cref="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.Apply" /> method to apply the copied formatting to another shape.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.RerouteConnections">
      <summary>
            Reroutes all connectors attached to the specified shape; if the specified shape is a connector, it's rerouted.
            </summary>
      <remarks>Reroutes connectors so that they take the shortest possible path between the shapes they connect.
            To do this, the <see cref="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.RerouteConnections" /> method may detach the ends of a connector and reattach them to different connecting sites on the connected shapes.
            If this method is applied to a connector, only that connector will be rerouted.
            If this method is applied to a connected shape, all connectors to that shape will be rerouted.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.ScaleHeight(System.Double,System.Boolean,GrapeCity.Spreadsheet.Drawing.ScaleFrom)">
      <summary>
            Scales the height of the shape by a specified factor.
            </summary>
      <param name="factor">Specifies the ratio between the height of the shape after you resize it and the current or original height.</param>
      <param name="relativeToOriginalSize">
        <c>false</c> to scale it relative to its current size.</param>
      <param name="scale">One of the constants of <see cref="T:GrapeCity.Spreadsheet.Drawing.ScaleFrom" /> which specifies which part of the shape retains its position when the shape is scaled.</param>
      <remarks>Shapes other than pictures and OLE objects are always scaled relative to their current height.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.ScaleWidth(System.Double,System.Boolean,GrapeCity.Spreadsheet.Drawing.ScaleFrom)">
      <summary>
            Scales the width of the shape by a specified factor.
            </summary>
      <param name="factor">Specifies the ratio between the width of the shape after you resize it and the current or original width.</param>
      <param name="relativeToOriginalSize">
        <c>false</c> to scale it relative to its current size.</param>
      <param name="scale">One of the constants of <see cref="T:GrapeCity.Spreadsheet.Drawing.ScaleFrom" /> which specifies which part of the shape retains its position when the shape is scaled.</param>
      <remarks>Shapes other than pictures and OLE objects are always scaled relative to their current width.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.Select(System.Boolean)">
      <summary>
            Selects the shape.
            </summary>
      <param name="replace">
        <c>true</c> to replace the current selection with the specified object.
            <c>false</c> to extend the current selection to include any previously selected objects and the specified object.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.Unselect">
      <summary>
            Cancels the current selection.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.SetShapesDefaultProperties">
      <summary>
            Makes the formatting of the specified shape the default formatting for the shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.Ungroup(System.Boolean)">
      <summary>
            Ungroups any grouped shapes in the specified shape or range of shapes. Disassembles pictures and OLE objects within the specified shape or range of shapes.
            </summary>
      <param name="rtlReposition">A boolean value indicating whether the child shapes reposition from right to left after ungroupped.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeRange" /> object that represents the ungrouped shapes.</returns>
      <remarks>Because a group of shapes is treated as a single object, grouping and ungrouping shapes changes the number of items in the Shapes collection
            and changes the index numbers of items that come after the affected items in the collection.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.IShapeBase.ZOrder(GrapeCity.Spreadsheet.Drawing.ZOrderCommand)">
      <summary>
            Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's position in the z-order).
            </summary>
      <param name="zOrderCmd">Specifies where to move the specified shape relative to the other shapes.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.TextEffect">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Drawing.ITextEffectFormat" /> object that contains text-effect formatting properties for the specified shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.TextFrame">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Drawing.ITextFrame" /> object that contains text formatting for the specified shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Bindings">
      <summary>
            Gets the binding collection of this shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.Regroupable">
      <summary>
            Returns whether the shape is able to regroup.
            </summary>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object contains all grouped shapes.</returns>
      <remarks>Because a group of shapes is treated as a single object, grouping and ungrouping shapes changes the number of items in the Shapes collection
            and changes the index numbers of items that come after the affected items in the collection.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.CanMove">
      <summary>
            Gets or sets whether the object can be moved.
            </summary>
      <remarks>This property affects to UI interaction only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.CanSize">
      <summary>
            Gets or sets whether the object can be resized.
            </summary>
      <remarks>This property affects to UI interaction only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.CanRotate">
      <summary>
            Gets or sets whether the user is allowed to rotate the shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeBase.ControlFormat">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Drawing.IControlFormat" /> object that contains control properties.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ITextEffectFormat">
      <summary>
            Contains properties and methods that apply to text effect objects.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextEffectFormat.Alignment">
      <summary>
            Gets or sets an <see cref="T:GrapeCity.Spreadsheet.Drawing.TextEffectAlignment" /> value that represents the alignment for text effect object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextEffectFormat.FontBold">
      <summary>
            True if the font in the specified WordArt is bold.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextEffectFormat.FontItalic">
      <summary>
            Returns msoTrue if the font in the specified WordArt is italic.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextEffectFormat.FontName">
      <summary>
            Returns or sets the name of the font in the specified WordArt.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextEffectFormat.FontSize">
      <summary>
            Returns or sets the font size for the specified WordArt, in points.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextEffectFormat.PresetTextEffect">
      <summary>
            Returns or sets the style of the specified WordArt.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextEffectFormat.Text">
      <summary>
            Returns or sets the text for the specified object.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape">
      <summary>
            Specifies shape of text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.ArchDownCurve">
      <summary>
            Text is an arch that curves down.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.ArchDownPour">
      <summary>
            Text is a 3-D arch that curves down.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.ArchUpCurve">
      <summary>
            Text is an arch that curves up.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.ArchUpPour">
      <summary>
            Text is a 3-D arch that curves up.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.ButtonCurve">
      <summary>
            Text is curved around a center button.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.ButtonPour">
      <summary>
            Text is seen in 3-D, curved around a center button.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.CanDown">
      <summary>
            Text is stretched to fill the height of the shape, with only a slight curve down.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.CanUp">
      <summary>
            Text is stretched to fill the height of the shape, with only a slight curve up.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.CascadeDown">
      <summary>
            Text slants up and to the right as font size decreases.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.CascadeUp">
      <summary>
            Text slants down and to the right as font size increases.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.ChevronDown">
      <summary>
            Text slants up to its center point and then slants down.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.ChevronUp">
      <summary>
            Text slants down to its center point and then slants up.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.CircleCurve">
      <summary>
            Text follows a circle, reading clockwise.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.CirclePour">
      <summary>
            Text has a 3-D effect and follows a circle, reading clockwise.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.CurveDown">
      <summary>
            Text curves down and to the right as font size decreases.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.CurveUp">
      <summary>
            Text curves down and to the right as font size increases.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.Deflate">
      <summary>
            Font size decreases to the text's midpoint, then increases to the starting size.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.DeflateBottom">
      <summary>
            Font size decreases to the text's midpoint, then increases to the starting size, while keeping the top of the text along the same curve.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.DeflateInflate">
      <summary>
            Font size increases to the text's midpoint, then decreases to the starting size.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.DeflateInflateDeflate">
      <summary>
            Font size decreases, increases, and decreases again across the text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.DeflateTop">
      <summary>
            Font size decreases to the text's midpoint, then increases to the starting size, while keeping the bottom of the text along the same curve.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.DoubleWave1">
      <summary>
            Text follows a line that curves up, then down, then up and down again.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.DoubleWave2">
      <summary>
            Text follows a line that curves down, then up, then down and up again.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.FadeDown">
      <summary>
            Top of the text appears to be closer to the viewer than bottom of the text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.FadeLeft">
      <summary>
            Left side of text appears to be closer to the viewer than right side.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.FadeRight">
      <summary>
            Right side of text appears to be closer to the viewer than left side.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.FadeUp">
      <summary>
            Bottom of text appears to be closer to the viewer than top.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.Inflate">
      <summary>
            Font size of text increases to its center point, then decreases. Center point of each letter is on the same straight line.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.InflateBottom">
      <summary>
            Font size of text increases to its center point, then decreases. Center point of each letter follows an arch that curves downward.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.InflateTop">
      <summary>
            Font size of text increases to its center point, then decreases. Center point of each letter follows an arch that curves upward.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.Unspecified">
      <summary>
            Not used.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.PlainText">
      <summary>
            No shape applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.RingInside">
      <summary>
            Text appears to be written on the inside of a 3-D ring.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.RingOutside">
      <summary>
            Text appears to be written on the outside of a 3-D ring.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.SlantDown">
      <summary>
            Text slants down and to the right.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.SlantUp">
      <summary>
            Text slants up and to the right.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.Stop">
      <summary>
            Text follows the shape of a stop sign.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.TriangleDown">
      <summary>
            Text slants up, then down.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.TriangleUp">
      <summary>
            Text slants down, then up.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.Wave1">
      <summary>
            Text follows a wave up, then down and up again.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PresetTextEffectShape.Wave2">
      <summary>
            Text follows a wave down, then up and down again.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.TextEffectAlignment">
      <summary>
            Specifies alignment for text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextEffectAlignment.Left">
      <summary>
            Left-aligned.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextEffectAlignment.Center">
      <summary>
            Centered.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextEffectAlignment.LetterJustify">
      <summary>
            Text is justified. Spacing between letters may be adjusted to justify text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextEffectAlignment.Right">
      <summary>
            Right- aligned.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextEffectAlignment.StretchJustify">
      <summary>
            Text is justified. Letters may be stretched to justify text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextEffectAlignment.WordJustify">
      <summary>
            Text is justified. Spacing between words (but not letters) may be adjusted to justify text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.TextEffectAlignment.Unspecified">
      <summary>
            The alignment is unspecified.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IGroupShape">
      <summary>
            Represents an object in the drawing layer, such as a shape or picture.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IGroupShape.ShapeRange">
      <summary>
            Gets the collection of <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> objects in the group shape.
            </summary>
      <value>The collection of <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> objects.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.Picture">
      <summary>
            Represents a picture.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Picture.#ctor(GrapeCity.Spreadsheet.Drawing.AnchorPoint,GrapeCity.Spreadsheet.Drawing.AnchorPoint,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Drawing.Picture" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Picture.#ctor(System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Drawing.Picture" /> class.
            </summary>
      <param name="imageStream">The image data stream.</param>
      <param name="contentType">The content type of the data stream.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Picture.CanEditPoints">
      <summary>
            Gets a boolean value indicating whether this shape can be edit.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Picture.IsSupportedText">
      <summary>
            Gets a boolean value indicates whether the shape support text.
            </summary>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Picture.AutoSize">
      <summary>
            Gets a boolean values indicates whether the shape is auto size.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Picture.Type">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeType" /> value that represents the shape type.
            </summary>
      <value>The shape type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Picture.PictureBrush">
      <summary>
            Gets the brush which is used to fill.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Picture.Formula">
      <summary>
            Gets or sets the picture formula.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Picture.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Double)">
      <summary>
            Gets the hit test information at the position of a picture.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the shape.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a picture.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Picture.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Boolean,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the shape.</param>
      <param name="connecting">
        <c>true</c> if the hittest is for connection action; otherwise, <c>false</c>.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Picture.GrapeCity#Spreadsheet#Drawing#IPicture#ChangeImage(System.String,GrapeCity.Drawing.AspectRatio)">
      <summary>
            Replaces the current image with a different image.
            </summary>
      <param name="fileName">The path to the new image.</param>
      <param name="aspect">Specifies how to resize the new image. Default value is <see cref="F:GrapeCity.Drawing.AspectRatio.Stretch" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Picture.GrapeCity#Spreadsheet#Drawing#IPicture#ChangeImage(System.IO.Stream,GrapeCity.Drawing.AspectRatio)">
      <summary>
            Replaces the current image with a different image.
            </summary>
      <param name="stream">The image data.</param>
      <param name="aspect">Specifies how to resize the new image. Default value is <see cref="F:GrapeCity.Drawing.AspectRatio.Stretch" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Picture.GrapeCity#Spreadsheet#Drawing#IPicture#ChangeImage(System.Byte[],GrapeCity.Drawing.AspectRatio)">
      <summary>
            Replaces the current image with a different image.
            </summary>
      <param name="data">The image data.</param>
      <param name="aspect">Specifies how to resize the new image. Default value is <see cref="F:GrapeCity.Drawing.AspectRatio.Stretch" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Picture.GrapeCity#Spreadsheet#Drawing#IPicture#Paste(GrapeCity.Drawing.AspectRatio)">
      <summary>
            Replaces the current image with the image from clipboard.
            </summary>
      <param name="aspect">Specifies how to resize the new image. Default value is <see cref="F:GrapeCity.Drawing.AspectRatio.Stretch" />.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.Shape">
      <summary>
            Represents a preset or custom geometry.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Root">
      <summary>
            Gets the highest ancestor shape which contains this shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Selected">
      <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
      <value>
        <c>true</c> if this instance is selected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.CanMultipleSelect">
      <summary>
            Gets a boolean value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> can be selected with other shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.IsEditingText">
      <summary>
            Gets or sets a boolean value indicating whether the shape is in editing text.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.IsEditingFormula">
      <summary>
            Gets or sets a boolean value indicating whether the shape is in editing formula.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.CanEditText">
      <summary>
            Gets a boolean value indicating whether the user can edit text of the shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.AutoLayoutConnectors(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Autolayout if this Shape has connectors.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.AdjustHandles">
      <summary>
            Gets the list of adjust handles.
            </summary>
      <value>The list of adjust handles.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.ConnectionSites">
      <summary>
            Gets the list of connection sites.
            </summary>
      <value>The list of connection sites.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.CalculateRect(GrapeCity.Spreadsheet.Drawing.DrawingObject,GrapeCity.Drawing.Rectangle)">
      <summary>
            Calculates the client rectangle of a child shape inside the specified rectangle.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.CalculateRect(GrapeCity.Spreadsheet.Drawing.DrawingObject,GrapeCity.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>
            Calculates the client rectangle of a child shape inside the specified rectangle.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Pen">
      <summary>
            Gets and internal Sets the painting pen of this shape.
            </summary>
      <value>The pen used to paint.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Brush">
      <summary>
            Gets the brush which is used to fill.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.Paint(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext,GrapeCity.Drawing.GeometryDrawing,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="rect">The painting area that display this drawing object.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.PaintCore(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="drawingContext">The drawing context that paints this drawing object.</param>
      <param name="rect">The painting area that display this drawing object.</param>
      <param name="useableCachedBitmap">Indicates whether to use the cached bitmap of geometry drawing(s).</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.PerformAutoSize(System.Nullable{System.Boolean})">
      <summary>
            Changes the size of this shape to fit text.
            </summary>
      <param name="autoWidth">The width will be auto fit.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.AutoSize">
      <summary>
            Gets a boolean values indicates whether the shape is auto size.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.TextFont">
      <summary>
            Gets the font settings of the shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.WordWrap">
      <summary>
            Get the word wrap property of the inner text block.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the shape.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Boolean,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="connecting">
        <c>true</c> if the hittest is for connection action; otherwise, <c>false</c>.</param>
      <param name="rect">The client rectangle of the shape.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.HorizontalFlip">
      <summary>
            Gets a value indicating whether the specified shape is flipped around the horizontal axis.
            </summary>
      <value>
        <c>true</c> if the specified shape is flipped around the horizontal axis; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.VerticalFlip">
      <summary>
            Gets a value indicating whether the specified shape is flipped around the vertical axis.
            </summary>
      <value>
        <c>true</c> if the specified shape is flipped around the vertical axis; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Rotation">
      <summary>
            Gets or sets the rotation of the shape, in degrees.
            </summary>
      <value>The rotation of the shape.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.SetRotation(System.Double,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Sets the rotation to the shape, in degrees.
            </summary>
      <param name="rotation">The rotation of the shape, in degrees.</param>
      <param name="rounding">
        <c>true</c> if the value is rounding automatically; otherwise, <c>false</c>.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Connector">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> is a connector.
            </summary>
      <value>
        <c>true</c> if the specified shape is a connector; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.BottomRightCell">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the cell that lies under the lower-right corner of the shape.
            </summary>
      <value>The bottom right cell of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.TopLeftCell">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the cell that lies under the upper-left corner of the shape.
            </summary>
      <value>The top left cell of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.AutoShapeType">
      <summary>
            Gets or sets the shape type for the specified <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> or <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeBase" /> object, which must represent an shape other than a line, freeform drawing, or connector.
            </summary>
      <value>The type of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Name">
      <summary>
            Gets or sets a string value representing the name of the shape.
            </summary>
      <value>The name of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.LockAspectRatio">
      <summary>
            Gets or sets a value indicating whether the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> retains its original proportions when you resize it.
            </summary>
      <value>
        <c>true</c> if the shape retains its original proportions when you resize it;
            otherwise, <c>false</c> if you can change the height and width of the shape independently of one another when you resize it.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Left">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the distance, in pixels, from the left edge of the shape to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).
            </summary>
      <value>The left edge of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Height">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the height, in pixels, of the shape.
            </summary>
      <value>The height of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.GroupItems">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IGroupShapes" /> object that represents the individual shapes in the specified group.
            </summary>
      <value>The individual shapes in the specified group.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.ZOrderPosition">
      <summary>
            Gets the position of the specified shape in the z-order.
            </summary>
      <value>The position of the specified shape in the z-order.</value>
      <remarks>The value is on base-1.
            <para>To set the shape's position in the z-order, use the ZOrder method.</para><para>A shape's position in the z-order corresponds to the shape's index number in the Shapes collection.
            Whenever you add a new shape to a collection, it's added to the front of the z-order by default.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Width">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the width, in pixels, of the shape.
            </summary>
      <value>The width of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Type">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeType" /> value that represents the shape type.
            </summary>
      <value>The shape type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Top">
      <summary>
            Gets or sets a <see cref="T:System.Int32" /> value that represents the distance, in pixels, from the top edge of the topmost shape in the shape range to the top edge of the worksheet.
            </summary>
      <value>The top edge of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Shadow">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShadowFormat" /> object that contains shadow formatting properties for the specified shape or shapes.
            </summary>
      <value>The shadow format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> and all its child controls are displayed.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> and all its child controls are displayed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.PermanentVisible">
      <summary>
            A boolean value checking whether <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> is visible or not.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Placement">
      <summary>
            Gets or sets an <see cref="P:GrapeCity.Spreadsheet.Drawing.Shape.Placement" /> value that represents the way the shape is attached to the cells below it.
            </summary>
      <value>The way the shape is attached to the cells below it.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.IsSupportedText">
      <summary>
            Gets a boolean value indicates whether the shape support text.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.IsSupportedFormula">
      <summary>
            Gets a boolean value indicates whether the shape support formula.
            </summary>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.CanMove">
      <summary>
            Gets or sets whether the object can be moved.
            </summary>
      <remarks>This property affects to UI interaction only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.CanSize">
      <summary>
            Gets or sets whether the object can be resized.
            </summary>
      <remarks>This property affects to UI interaction only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.CanRotate">
      <summary>
            Gets or sets whether the user is allowed to rotate the shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.ShowRotation">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> is show the rotate handler.
            </summary>
    </member>
    <member name="E:GrapeCity.Spreadsheet.Drawing.Shape.Action">
      <summary>
            Occurs when the shape is chosen.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.IsAssignedAction">
      <summary>
            Gets a boolean value indicates whether there is an handler attached to the <see cref="E:GrapeCity.Spreadsheet.Drawing.Shape.Action" /> event of this shape.
            </summary>
      <returns>
        <c>true</c> if there is an handler attached to the <see cref="E:GrapeCity.Spreadsheet.Drawing.Shape.Action" /> event; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.GetHyperlink">
      <summary>
            Gets the hyperlink of this shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.GrapeCity#Spreadsheet#Drawing#IShape#Copy">
      <summary>
            Copies the object to the clipboard.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.GrapeCity#Spreadsheet#Drawing#IShape#Cut">
      <summary>
            Cuts the object to the clipboard.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.GrapeCity#Spreadsheet#Drawing#IShapeBase#Delete">
      <summary>
            Deletes the shape and removes it from the associated <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapes" /> collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.IsEditing">
      <summary>
            Gets a boolean value indicating whether the shape is editing.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.Duplicate">
      <summary>
            Duplicates the shape and returns a reference to the new copy.
            </summary>
      <returns>The new duplicated shape.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.Select(System.Boolean)">
      <summary>
            Selects the shape.
            </summary>
      <param name="replace">
        <c>true</c> to replace the current selection with the specified object.
            <c>false</c> to extend the current selection to include any previously selected objects and the specified object.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.Unselect">
      <summary>
            Cancels the current selection.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.EditPoints">
      <summary>
            Starts editing points of this shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.CanEditPoints">
      <summary>
            Gets a boolean value indicating whether this shape can be edit.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Nodes">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeNodes" /> collection that represents the geometric description of the specified shape.
            </summary>
      <value>The shape nodes of a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> or <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeBase" /> objects that represent freeform drawings.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.Shape.Formula">
      <summary>
            Gets or sets the shape formula.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.Shape.IsFormulaSupported">
      <summary>
            Gets a value indicating whether the shape support formula.
            </summary>
      <value>
        <c>true</c> if the shape support formula otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IShapeAdjustHandles">
      <summary>
            Represents a collection of adjustment values.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeAdjustHandles.Count">
      <summary>
            Gets the number of adjustment values in the collection.
            </summary>
      <value>The number of adjustment values in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeAdjustHandles.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle" /> object at the specified index.
            </summary>
      <param name="index">The index of the adjustment value.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle" /> object at the specified index.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle">
      <summary>
            Represents a shape adjust handle.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.Type">
      <summary>
            Gets the type of this shape adjust handle.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.Shape">
      <summary>
            Gets the shape of this adjust handle.
            </summary>
      <value>The shape contains this adjust handle.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.GetFirstRange(System.Double@,System.Double@)">
      <summary>
            Get the limited range of the first argument.
            </summary>
      <param name="minimum">The minimum value.</param>
      <param name="maximum">The maximum value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.GetSecondRange(System.Double@,System.Double@)">
      <summary>
            Get the limited range of the second argument.
            </summary>
      <param name="minimum">The minimum value.</param>
      <param name="maximum">The maximum value.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.Minimum1">
      <summary>
            Gets the 1st minimum value that is allowed for this adjustment handle.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.Maximum1">
      <summary>
            Gets the 1st maximum value that is allowed for this adjustment handle.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.SetFirstValue(System.Double)">
      <summary>
            Sets value for the fist parameter of this adjustment handle.
            </summary>
      <param name="value"></param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.Minimum2">
      <summary>
            Gets the 2nd minimum value that is allowed for this adjustment handle.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.Maximum2">
      <summary>
            Gets the 2nd maximum value that is allowed for this adjustment handle.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.SetSecondValue(System.Double)">
      <summary>
            Sets value for the fist parameter of this adjustment handle.
            </summary>
      <param name="value"></param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.Location">
      <summary>
            Gets the relative location of the shape adjust handle.
            </summary>
      <remarks>[0, 0] is the upper-left corner of the shape.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.GetLocation(System.Single)">
      <summary>
            Gets the relative location of the shape adjust handle.
            </summary>
      <param name="zoomFactor">The zoom scale of spread view.</param>
      <remarks>[0, 0] is the upper-left corner of the shape.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandle.GetValues(System.Double@,System.Double@)">
      <summary>
            Gets the current adjust handle's values.
            </summary>
      <returns>The [radial, angle] of this Adjust handle</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandleType">
      <summary>
            Represents the type of shape adjust handle.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandleType.Polar">
      <summary>
            Specifies a polar adjust handle for a custom shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeAdjustHandleType.XY">
      <summary>
            Specifies an XY-based adjust handle for a custom shape.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ShapeConnectionSite">
      <summary>
            Represents a connection site of a shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeConnectionSite.Location">
      <summary>
            Gets the relative location of the shape's connection site.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeConnectionSite.Index">
      <summary>
            Gets the index of the connection site.
            </summary>
      <value>The index of the connection site.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.IShapeConnectionSites">
      <summary>
            Represents a collection of connection sites.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeConnectionSites.Count">
      <summary>
            Gets the number of connection sites in the collection.
            </summary>
      <value>The number of connection sites in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.IShapeConnectionSites.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeConnectionSite" /> object at the specified index.
            </summary>
      <param name="index">The index of the connection site.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeConnectionSite" /> object at the specified index.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ShapeEventArgs">
      <summary>
            Provides data for the <see cref="!:UIManager.ShapeChanged" /> events.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ShapeEventArgs.#ctor(GrapeCity.Spreadsheet.Drawing.IShape,GrapeCity.Spreadsheet.Drawing.ShapeChangeType)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeEventArgs" /> class.
            </summary>
      <param name="shape">The shape.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEventArgs.Continue">
      <summary>
            Indicates whether to continue the default process.
            </summary>
      <value>
        <c>true</c> if the default process is continuing; otherwise, the default process will be skipped.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEventArgs.Shape">
      <summary>
            Gets the shape to process.
            </summary>
      <value>The shape to process.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEventArgs.Shapes">
      <summary>
            Gets all shapes to process.
            </summary>
      <value>The shapes to process.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEventArgs.Type">
      <summary>
            Gets the reason that trigger the event.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ShapeChangeType">
      <summary>
            Represents the types of change for shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeChangeType.Selection">
      <summary>
            Shape selection is changed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeChangeType.Delete">
      <summary>
            The shape is deleted.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeChangeType.Create">
      <summary>
            The shape is created.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeChangeType.Change">
      <summary>
            The shape's data is changed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeChangeType.Action">
      <summary>
            The shape is choosen which trigger <see cref="E:GrapeCity.Spreadsheet.Drawing.IShape.Action" /> event.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeChangeType.Edit">
      <summary>
            The shape is editing.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeChangeType.EditText">
      <summary>
            The shape is editing text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeChangeType.EditFormula">
      <summary>
            The shape is editing formula.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeChangeType.Move">
      <summary>
            The shape is moved.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeChangeType.Resize">
      <summary>
            The shape is resized.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeChangeType.MoveOrSize">
      <summary>
            The shape boundary is changed.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.GroupShapeLocks">
      <summary>
            Represents all locking properties for a group shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GroupShapeLocks.None">
      <summary>
            Specifies that there is no locking.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GroupShapeLocks.Aspect">
      <summary>
            Specifies that the application should not allow aspect ratio changes for the corresponding connection shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GroupShapeLocks.Group">
      <summary>
            Specifies that the application should not allow shape grouping for the corresponding connection shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GroupShapeLocks.Move">
      <summary>
            Specifies that the application should not allow position changes for the corresponding connection shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GroupShapeLocks.Resize">
      <summary>
            Specifies that the application should not allow size changes for the corresponding connection shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GroupShapeLocks.Rotate">
      <summary>
            Specifies that the application should not allow shape rotation changes for the corresponding connection shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GroupShapeLocks.Select">
      <summary>
            Specifies that the application should not allow selecting of the corresponding connection shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GroupShapeLocks.Ungroup">
      <summary>
            Specifies that the generating application should not show adjust handles for the corresponding connection shape.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.GraphicFrameLocks">
      <summary>
            Represents all locking properties for a graphic frame.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GraphicFrameLocks.None">
      <summary>
            Specifies that there is no locking.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GraphicFrameLocks.Group">
      <summary>
            Specifies that the application should not allow shape grouping for the corresponding connection shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GraphicFrameLocks.SelectChildren">
      <summary>
            Specifies that the generating application should not allow selecting of objects within the corresponding graphic frame but allow selecting of the graphic frame itself. 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GraphicFrameLocks.Select">
      <summary>
            Specifies that the application should not allow selecting of the corresponding connection shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GraphicFrameLocks.Aspect">
      <summary>
            Specifies that the application should not allow aspect ratio changes for the corresponding connection shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GraphicFrameLocks.Move">
      <summary>
            Specifies that the application should not allow position changes for the corresponding connection shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.GraphicFrameLocks.Resize">
      <summary>
            Specifies that the application should not allow size changes for the corresponding connection shape.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.AutoShapeType">
      <summary>
            Specifies the shape type for an <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Unspecified">
      <summary>
            Return value only; indicates a combination of the other states.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Custom">
      <summary>
            The custom shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Line">
      <summary>
            Line
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LineInverse">
      <summary>
            Line inverse
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Triangle">
      <summary>
            Triangle
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.RightTriangle">
      <summary>
            Right triangle
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Rectangle">
      <summary>
            Rectangle
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Diamond">
      <summary>
            Diamond
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Parallelogram">
      <summary>
            Parallelogram
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Trapezoid">
      <summary>
            Trapezoid
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.NonIsoscelesTrapezoid">
      <summary>
            Trapezoid with asymmetrical non-parallel sides
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Pentagon">
      <summary>
            Pentagon
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Hexagon">
      <summary>
            Hexagon
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Heptagon">
      <summary>
            Heptagon
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Octagon">
      <summary>
            Octagon
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Decagon">
      <summary>
            Decagon
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Dodecagon">
      <summary>
            Dodecagon
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.FourPointedStar">
      <summary>
            4-point star
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.FivePointedStar">
      <summary>
            5-point star
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.SixPointedStar">
      <summary>
            6-point star
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.SevenPointedStar">
      <summary>
            7-point star
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.EightPointedStar">
      <summary>
            8-point star
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.TenPointedStar">
      <summary>
            10-point star
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.TwelvePointedStar">
      <summary>
            12-point star
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.SixteenPointedStar">
      <summary>
            16-point star
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.TwentyFourPointedStar">
      <summary>
            24-point star
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.ThirtyTwoPointedStar">
      <summary>
            32-point star
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.RoundCornerRectangle">
      <summary>
            Rounded rectangle
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.OneRoundCornerRectangle">
      <summary>
            Rectangle with one rounded corner
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.TwoSameSideRoundCornerRectangle">
      <summary>
            Rectangle with two-rounded corners that share a side
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.TwoDiagonalRoundCornerRectangle">
      <summary>
            Rectangle with two rounded corners, diagonally-opposed
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.OneSnipOneRoundCornerRectangle">
      <summary>
            Rectangle with one snipped corner and one rounded corner
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.OneSnipCornerRectangle">
      <summary>
            Rectangle with one snipped corner
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.TwoSameSideSnipCornerRectangle">
      <summary>
            Rectangle with two snipped corners that share a side
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.TwoDiagonalSnipCornerRectangle">
      <summary>
            Rectangle with two snipped corners, diagonally-opposed
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Plaque">
      <summary>
            Plaque
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Ellipse">
      <summary>
            Ellipse
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Teardrop">
      <summary>
            Water droplet
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.HomePlate">
      <summary>
            Home place
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Chevron">
      <summary>
            Chevron
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.PieWedge">
      <summary>
            Quarter of a circular shape
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Pie">
      <summary>
            Circle ('pie') with a portion missing
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BlockArc">
      <summary>
            Block arc
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Donut">
      <summary>
            Donut
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.NoSymbol">
      <summary>
            "No" symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.RightArrow">
      <summary>
            Block arrow that points right
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LeftArrow">
      <summary>
            Block arrow that points left
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.UpArrow">
      <summary>
            Block arrow that points up
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.DownArrow">
      <summary>
            Block arrow that points down
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.StripedRightArrow">
      <summary>
            Block arrow that points right with stripes at the tail
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.NotchedRightArrow">
      <summary>
            Notched block arrow that points right
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BentUpArrow">
      <summary>
            Block arrow that follows a sharp 90-degree angle. Points up by default.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LeftRightArrow">
      <summary>
            Block arrow with arrowheads that point both left and right
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.UpDownArrow">
      <summary>
            Block arrow with arrowheads that point both up and down
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LeftUpArrow">
      <summary>
            Block arrow with arrowheads that point left and up
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LeftRightUpArrow">
      <summary>
            Block arrow with arrowheads that point left, right, and up
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.QuadArrow">
      <summary>
            Block arrows that point up, down, left, and right
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LeftArrowCallout">
      <summary>
            Callout with arrow that points left
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.RightArrowCallout">
      <summary>
            Callout with arrow that points right
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.UpArrowCallout">
      <summary>
            Callout with arrow that points up
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.DownArrowCallout">
      <summary>
            Callout with arrow that points down
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LeftRightArrowCallout">
      <summary>
            Callout with arrowheads that point both left and right
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.UpDownArrowCallout">
      <summary>
            Callout with arrowheads that point both up and down
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.QuadArrowCallout">
      <summary>
            Callout with arrows that point up, down, left, and right
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BentArrow">
      <summary>
            Block arrow that follows a curved 90-degree angle.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.UTurnArrow">
      <summary>
            Block arrow forming a U shape
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CircularArrow">
      <summary>
            Block arrow that follows a curved 180-degree angle
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LeftCircularArrow">
      <summary>
            Circular arrow pointing counter-clockwise
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LeftRightCircularArrow">
      <summary>
            Circular arrow pointing clockwise and counter-clockwise; a curved arrow with points at both ends
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CurvedRightArrow">
      <summary>
            Block arrow that curves right
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CurvedLeftArrow">
      <summary>
            Block arrow that curves left
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CurvedUpArrow">
      <summary>
            Block arrow that curves up
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CurvedDownArrow">
      <summary>
            Block arrow that curves down
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.SwooshArrow">
      <summary>
            Curved arrow
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Cube">
      <summary>
            Cube
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Can">
      <summary>
            Can
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LightningBolt">
      <summary>
            Lightning bolt
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Heart">
      <summary>
            Heart
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Sun">
      <summary>
            Sum
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Moon">
      <summary>
            Moon
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.SmileyFace">
      <summary>
            Smiley face
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.IrregularSeal1">
      <summary>
            Irregular seal 1
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.IrregularSeal2">
      <summary>
            Irregular seal 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.FoldedCorner">
      <summary>
            Folded corner
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Bevel">
      <summary>
            Bevel
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Frame">
      <summary>
            Rectangular picture frame
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.HalfFrame">
      <summary>
            Half of a rectangular picture frame
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Corner">
      <summary>
            Rectangle with rectangular-shaped hole.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.DiagonalStripe">
      <summary>
            Rectangle with two triangles-shapes removed; a diagonal stripe
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Chord">
      <summary>
            Circle with a line connecting two points on the perimeter through the interior of the circle; a circle with a chord
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CurvedArc">
      <summary>
            Arc
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LeftBracket">
      <summary>
            Left bracket
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.RightBracket">
      <summary>
            Right bracket
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LeftBrace">
      <summary>
            Left brace
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.RightBrace">
      <summary>
            Right brace
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BracketPair">
      <summary>
            Double bracket
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BracePair">
      <summary>
            Double brace
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.StraightConnector1">
      <summary>
            Straight connector
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BentConnector2">
      <summary>
            Bent connector 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BentConnector3">
      <summary>
            Bent connector 3
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BentConnector4">
      <summary>
            Bent connector 4
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BentConnector5">
      <summary>
            Bent connector 5
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CurvedConnector2">
      <summary>
            Curved connector 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CurvedConnector3">
      <summary>
            Curved connector 3
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CurvedConnector4">
      <summary>
            Curved connector 4
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CurvedConnector5">
      <summary>
            Curved connector 5
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout1">
      <summary>
            Callout with horizontal line
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout2">
      <summary>
            Callout with diagonal callout line
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout3">
      <summary>
            Callout with angled callout line
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout1Accent">
      <summary>
            Callout with horizontal accent bar
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout2Accent">
      <summary>
            Callout with diagonal callout line and accent bar
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout3Accent">
      <summary>
            Callout with angled callout line and accent bar
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout1Border">
      <summary>
            Callout with horizontal line and border
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout2Border">
      <summary>
            Callout with angled callout line and border
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout3Border">
      <summary>
            Callout with angled callout line and border
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout1BorderAccent">
      <summary>
            Callout with border and horizontal accent bar
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout2BorderAccent">
      <summary>
            Callout with border, diagonal straight line, and accent bar
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Callout3BorderAccent">
      <summary>
            Callout with border, angled callout line, and accent bar
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.WedgeRectangleCallout">
      <summary>
            Callout with wedge and rectangle
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.WedgeRoundRectangleCallout">
      <summary>
            Callout with wedge and round rectangle
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.WedgeEllipseCallout">
      <summary>
            Callout with wedge and ellipse
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CalloutCloud">
      <summary>
            Cloud callout
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Cloud">
      <summary>
            Cloud shape
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Ribbon">
      <summary>
            Ribbon
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Ribbon2">
      <summary>
            Ribbon 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.EllipseRibbon">
      <summary>
            Ellipse ribbon
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.EllipseRibbon2">
      <summary>
            Ellipse ribbon 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.LeftRightRibbon">
      <summary>
            Lef ellipse ribbon
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.VerticalScroll">
      <summary>
            Vertical scroll
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.HorizontalScroll">
      <summary>
            Horizontal scroll
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Wave">
      <summary>
            Wave
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.DoubleWave">
      <summary>
            Double wave
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Plus">
      <summary>
            Plus symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.ProcessFlow">
      <summary>
            Process flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.DecisionFlow">
      <summary>
            Decision flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.InputOutputFlow">
      <summary>
            Input output flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.PredefinedProcessFlow">
      <summary>
            Predefined process flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.InternalStorageFlow">
      <summary>
            Internal storage flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.DocumentFlow">
      <summary>
            Document flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MultiDocumentFlow">
      <summary>
            Multi-document flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.TerminatorFlow">
      <summary>
            Terminator flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.PreparationFlow">
      <summary>
            Preparation flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.ManualInputFlow">
      <summary>
            Manual input flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.ManualOperationFlow">
      <summary>
            Manual operation flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.ConnectorFlow">
      <summary>
            Connector flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.PunchedCardFlow">
      <summary>
            Card flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.PunchedTapeFlow">
      <summary>
            Punched tape flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.SummingJunctionFlow">
      <summary>
            Summing junction flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.OrFlow">
      <summary>
            "Or" flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CollateFlow">
      <summary>
            Collate flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.SortFlow">
      <summary>
            Sort flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.ExtractFlow">
      <summary>
            Extract flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MergeFlow">
      <summary>
            Merge flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.OfflineStorageFlow">
      <summary>
            Offline storage flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.OnlineStorageFlow">
      <summary>
            Online storage flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MagneticTapeFlow">
      <summary>
            Magnetic tape flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MagneticDiskFlow">
      <summary>
            Magnetic disk flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MagneticDrumFlow">
      <summary>
            Magnetic drum flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.DisplayFlow">
      <summary>
            Display flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.DelayFlow">
      <summary>
            Delay flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.AlternateProcessFlow">
      <summary>
            Alternate process flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.OffPageConnectorFlow">
      <summary>
            Off-page connector flowchart symbol
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BlankButton">
      <summary>
            Button with no default picture or text. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.HomeButton">
      <summary>
            Home button. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.HelpButton">
      <summary>
            Help button. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.InformationButton">
      <summary>
            Information button. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.ForwardorNextButton">
      <summary>
            Forward or Next button. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BackorPreviousButton">
      <summary>
            Back or Previous button. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.EndButton">
      <summary>
            End button. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.BeginningButton">
      <summary>
            Beginning button. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.ReturnButton">
      <summary>
            Return button. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.DocumentButton">
      <summary>
            Document button. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.SoundButton">
      <summary>
            Sound button. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MovieButton">
      <summary>
            Movie button. Supports mouse-click and mouse-over actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Gear6">
      <summary>
            Gear with six teeth
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Gear9">
      <summary>
            Gear with nine teeth
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.Funnel">
      <summary>
            Funnel
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MathPlus">
      <summary>
            Addition symbol 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MathMinus">
      <summary>
            Subtraction symbol 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MathMultiply">
      <summary>
            Multiplication symbol 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MathDivide">
      <summary>
            Division symbol 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MathEqual">
      <summary>
            Equivalence symbol 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.MathNotEqual">
      <summary>
            Non-equivalence symbol 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.CornerTabs">
      <summary>
            Four right triangles aligning along a rectangular path; four 'snipped' corners.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.SquareTabs">
      <summary>
            Four small squares that define a rectangular shape
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.PlaqueTabs">
      <summary>
            Four quarter-circles defining a rectangular shape
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.ChartX">
      <summary>
            Square divided into four parts along diagonal lines
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.ChartStar">
      <summary>
            Square divided into six parts along vertical and diagonal lines
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.AutoShapeType.ChartPlus">
      <summary>
            Square divided vertically and horizontally into four quarters
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ITextFrame">
      <summary>
            Represents the text frame in an <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.AutoMargins">
      <summary>
            Gets or sets whether Spread automatically calculates text frame margins.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.HorizontalAlignment">
      <summary>
            Gets or sets a <see cref="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.HorizontalAlignment" /> value that represents the horizontal alignment for the specified object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.VerticalAlignment">
      <summary>
            Gets or sets a <see cref="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.VerticalAlignment" /> value that represents the vertical alignment of the specified object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.AutoSize">
      <summary>
            The size of the specified object that changes automatically to fit text within its boundaries.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.HasText">
      <summary>
            Returns whether the specified text frame has text.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.CanEdit">
      <summary>
            Gets or sets a boolean value indicating whether the user can edit text of the shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.HorizontalOverflow">
      <summary>
            Returns or sets the horizontal overflow setting for the specified object. 
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.MarginBottom">
      <summary>
            Returns or sets the distance (in pixels) between the bottom of the text frame and the bottom of the inscribed rectangle of the shape that contains the text.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.MarginLeft">
      <summary>
            Returns or sets the distance (in pixels) between the left edge of the text frame and the left edge of the inscribed rectangle of the shape that contains the text.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.MarginRight">
      <summary>
            Returns or sets the distance (in pixels) between the right edge of the text frame and the right edge of the inscribed rectangle of the shape that contains the text.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.MarginTop">
      <summary>
            Returns or sets the distance (in pixels) between the top of the text frame and the top of the inscribed rectangle of the shape that contains the text.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.Orientation">
      <summary>
            Returns or sets a value that represents the text frame orientation.
            </summary>
      <remarks>
            Not supported types: Vertical, HorizontalRotatedFarEast
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.VerticalAnchor">
      <summary>
            Returns or sets the vertical anchor type for the specified text.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.VerticalOverflow">
      <summary>
            Returns or sets the vertical overflow setting for the specified object. Read/write
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.PresetTextEffect">
      <summary>
            Returns or sets the Word Art type for the specified text frame.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.WordWrap">
      <summary>
            Returns or sets text break lines within or past the boundaries of the shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextFrame.TextRange">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.ITextRange" /> object that represents the text in the object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ITextFrame.DeleteText">
      <summary>
            Deletes the text from a text frame and all the associated text properties.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ITextRange">
      <summary>
            Represents the text frame in an <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> or <see cref="T:GrapeCity.Spreadsheet.Drawing.IShapeRange" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextRange.Text">
      <summary>
            Gets or sets a string value that represents the text in a text range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ITextRange.Font">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Drawing.ITextFont" /> object that represents character formatting for the <see cref="T:GrapeCity.Spreadsheet.Drawing.ITextRange" /> object.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ITextFont">
      <summary>
            Represents the character formatting.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.VerticalAnchor">
      <summary>
            Specifies the vertical alignment of text in a text frame.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.VerticalAnchor.Top">
      <summary>
            Aligns text to top of text frame.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.VerticalAnchor.Bottom">
      <summary>
            Aligns text to bottom of text frame.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.VerticalAnchor.Middle">
      <summary>
            Centers text vertically.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PathFormat.None">
      <summary>
            Represents no format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PathFormat.Type1">
      <summary>
            Represents the Type1 format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PathFormat.Type2">
      <summary>
            Represents the Type2 format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PathFormat.Type3">
      <summary>
            Represents the Type3 format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.PathFormat.Type4">
      <summary>
            Represents the Type4 format.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.HorizontalAnchor">
      <summary>
            Specifies the horizontal alignment of text in a text frame.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.HorizontalAnchor.None">
      <summary>
            No alignment.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.HorizontalAnchor.Center">
      <summary>
            Text is centered horizontally.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.QueryShapeType">
      <summary>
            Determining specified object will be queried.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.QueryShapeType.None">
      <summary>
            Queries nothing.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.QueryShapeType.All">
      <summary>
            Queries all <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /></summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.QueryShapeType.Shape">
      <summary>
            Queries all <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /></summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.QueryShapeType.Comment">
      <summary>
            Queries all <see cref="T:GrapeCity.Spreadsheet.Drawing.CellNote" /></summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.QueryShapeType.Other">
      <summary>
            Queries other drawing objects type.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Drawing.ShapeEditingData">
      <summary>
            Represents the editing data of a shape.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.EditingType">
      <summary>
            The <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.ShapeEditingType" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.SourceImageRect">
      <summary>
            Gets or sets the boundary of source image of the picture.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.IsEditingShapeNodes">
      <summary>
            A boolean value checks whether this data supports editing nodes.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.SelectedPathIndex">
      <summary>
            The index of selected path in the builder.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.SelectedNodeIndex">
      <summary>
            The index of selected node in the selected path.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.CroppingState">
      <summary>
            Gets or sets the state of cropping <see cref="T:GrapeCity.Spreadsheet.Drawing.Picture" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.SourceImage">
      <summary>
            The source image of the cropping picture.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.TargetPicture">
      <summary>
            The target picture which will be changed after UI action.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.Shape">
      <summary>
            Gets the editing shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.ClearCache(System.Boolean)">
      <summary>
            Clear cache dta.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.Builder">
      <summary>
            The builder that presented shape's geometries.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.ShapeEditingType.ShapeNodes">
      <summary>
            Edit the shape's nodes
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Drawing.ShapeEditingData.ShapeEditingType.CroppingPicture">
      <summary>
            Cropping the picture
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFormatCondition">
      <summary>
            Represents a conditional format.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.Delete">
      <summary>
            Deletes this conditional format.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.Modify(GrapeCity.Spreadsheet.FormatConditionType,GrapeCity.Spreadsheet.FormatConditionOperator,System.String,System.String,GrapeCity.Spreadsheet.ContainsOperator,GrapeCity.Spreadsheet.TimePeriods)">
      <summary>
            Modifies an existing conditional format.
            </summary>
      <param name="type">Specifies whether the conditional format is based on a cell value or an expression.</param>
      <param name="operator">The conditional format operator. If <paramref name="type" /> is <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.TextString" /> or <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.Expression" />, it'll be ignored.</param>
      <param name="formula1">The value or expression associated with the conditional format. Can be a constant value, a string value, a cell reference, or a formula.</param>
      <param name="formula2">The value or expression associated with the second part of the conditional format when Operator is xlBetween or xlNotBetween (otherwise, this argument is ignored). Can be a constant value, a string value, a cell reference, or a formula.</param>
      <param name="textOperator">The conditional format text operator. If <paramref name="type" /> isn't <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.TextString" />, it'll be ignored.</param>
      <param name="dateOperator">The date operator used in the format condition.</param>
      <returns>
        <c>true</c> if the conditional format is modified, <c>false</c> otherwise.</returns>
      <remarks>
            If the <paramref name="type" /> is <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.Databar" /> or <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.IconSet" /> or <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.ColorScale" />, the current conditional format will be replaced by a new conditional format.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.Modify(GrapeCity.Spreadsheet.ContainsOperator,System.String)">
      <summary>
             Modifies an existing conditional format.
            </summary>
      <param name="operator">The conditional format text operator.</param>
      <param name="text">The text associated with the conditional format.</param>
      <returns>
        <c>true</c> if the conditional format is modified, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.Modify(GrapeCity.Spreadsheet.TimePeriods)">
      <summary>
             Modifies an existing conditional format.
            </summary>
      <param name="dateOperator">The date operator used in the format condition.</param>
      <returns>
        <c>true</c> if the conditional format is modified, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.ModifyAppliesToRange(GrapeCity.Spreadsheet.Reference)">
      <summary>
            Modifies an existing text conditional format.
            </summary>
      <param name="range">The range to which this formatting rule will be applied.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.ModifyAppliesToRange(System.String)">
      <summary>
            Sets the cell range to which this formatting rule applies.
            </summary>
      <param name="range">The range to which this formatting rule will be applied.</param>
      <remarks>The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the FormatConditions collection.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.SetLastPriority">
      <summary>
            Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatCondition.SetFirstPriority">
      <summary>
            Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.AppliesTo">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object specifying the cell range to which the formatting rule is applied.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IRange" /> object specifying the cell range to which the formatting rule is applied.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Borders">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.IBorders" /> collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IBorders" /> collection that represents the borders.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Font">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the specified object.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Formula1">
      <summary>
            Returns the value or expression associated with the conditional format or data validation. Can be a constant value, a string value, a cell reference, or a formula.
            </summary>
      <value>The value or expression associated with the conditional format.</value>
      <remarks>Because <see cref="P:GrapeCity.Spreadsheet.IFormatCondition.Formula1" /> property is also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Formula2">
      <summary>
            Returns the value or expression associated with the second part of a conditional format or data validation.
            </summary>
      <value>The value or expression associated with the second part of a conditional format.</value>
      <remarks>Because <see cref="P:GrapeCity.Spreadsheet.IFormatCondition.Formula2" /> property is also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Interior">
      <summary>
            Returns an <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior of the specified object.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.NumberFormat">
      <summary>
            Gets or sets the number format applied to a cell if the conditional formatting rule evaluates to <c>true</c>.
            </summary>
      <value>The number format applied to a cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Operator">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.FormatConditionOperator" /> value that represents the operator for the conditional format.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.FormatConditionOperator" /> value that represents the operator.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.TextOperator">
      <summary>
            Gets or sets one of the constants of the <see cref="T:GrapeCity.Spreadsheet.ContainsOperator" /> enumeration, specifying the text search performed by the conditional formatting rule.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ContainsOperator" /> value represents the text search performed by the conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.DateOperator">
      <summary>
            Gets or sets the date operator used in the format condition.
            </summary>
      <value>The date operator used in the format condition.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Priority">
      <summary>
            Gets or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.
            </summary>
      <value>The priority value of the conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.StopIfTrue">
      <summary>
            Gets or sets a <see cref="T:System.Boolean" /> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <c>true</c>.
            </summary>
      <value>
        <c>false</c> if if additional formatting rules on the cell should be evaluated; otherwise, <c>true</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Text">
      <summary>
            Gets or sets a <see cref="T:System.String" /> value specifying the text string used by the conditional formatting rule.
            </summary>
      <value>The text string used by the conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatCondition.Type">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.FormatConditionType" /> value that represents the format condition type.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.FormatConditionType" /> value that represents the format condition type.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFormatConditions">
      <summary>
            Represents the collection of conditional formats for a single range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatConditions.Count">
      <summary>
            Gets the number of format conditions.
            </summary>
      <value>An integer value represents the number of format conditions.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatConditions.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IFormatCondition" /> object at the specified index.
            </summary>
      <param name="index">An integer value that indicates the index number.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IFormatCondition" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.Add(GrapeCity.Spreadsheet.FormatConditionType,GrapeCity.Spreadsheet.FormatConditionOperator,System.String,System.String,GrapeCity.Spreadsheet.ContainsOperator,GrapeCity.Spreadsheet.TimePeriods)">
      <summary>
            Adds a new conditional format.
            </summary>
      <param name="type">Specifies whether the conditional format is based on a cell value or an expression.</param>
      <param name="operator">The conditional format operator. If <paramref name="type" /> is <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.TextString" /> or <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.Expression" />, it'll be ignored.</param>
      <param name="formula1">The value or expression associated with the conditional format. Can be a constant value, a string value, a cell reference, or a formula.</param>
      <param name="formula2">The value or expression associated with the second part of the conditional format when Operator is xlBetween or xlNotBetween (otherwise, this argument is ignored). Can be a constant value, a string value, a cell reference, or a formula.</param>
      <param name="textOperator">The conditional format text operator. If <paramref name="type" /> isn't <see cref="F:GrapeCity.Spreadsheet.FormatConditionType.TextString" />, it'll be ignored.</param>
      <param name="dateOperator">The date operator used in the format condition.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IFormatCondition" /> object that represents the new conditional format.</returns>
      <remarks>Because <paramref name="formula1" /> and <paramref name="formula2" /> are also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.Add(GrapeCity.Spreadsheet.ContainsOperator,System.String)">
      <summary>
            Adds a new conditional format.
            </summary>
      <param name="operator">The conditional format text operator.</param>
      <param name="text">The text associated with the conditional format.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IFormatCondition" /> object that represents the new conditional format.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.Add(GrapeCity.Spreadsheet.TimePeriods)">
      <summary>
            Adds a new conditional format.
            </summary>
      <param name="dateOperator">The date operator used in the format condition.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IFormatCondition" /> object that represents the new conditional format.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddAboveAverage">
      <summary>
            Returns a new <see cref="T:GrapeCity.Spreadsheet.IAboveAverage" /> object representing a conditional formatting rule for the specified range.
            </summary>
      <returns>The AboveAverage object is used to find values above or below an average or standard deviation in a range of cells.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddColorScale(System.Int32)">
      <summary>
            Returns a new <see cref="T:GrapeCity.Spreadsheet.IColorScale" /> object representing a conditional formatting rule that uses gradations in cell colors to indicate relative differences in the values of cells included in a selected range.
            </summary>
      <param name="colorScales">An integer value that indicates the number of color scales.</param>
      <returns>A new <see cref="T:GrapeCity.Spreadsheet.IColorScale" /> object representing a conditional formatting rule that uses gradations in cell colors.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddDatabar">
      <summary>
            Returns a Databar object representing a data bar conditional formatting rule for the specified range.
            </summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IDatabar" /> object that helps you see the value of a cell relative to other cells.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddIconSetCondition">
      <summary>
            Returns a new <see cref="T:GrapeCity.Spreadsheet.IIconSetCondition" /> object which represents an icon set conditional formatting rule for the specified range.
            </summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IIconSetCondition" /> object that annotates and classify data into three to five categories separated by a threshold value..</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddTop10">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.ITop10" /> object representing a conditional formatting rule for the specified range.
            </summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITop10" /> object that represents the highest and lowest values in a range of cells based on a cutoff value that you specify.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.AddUniqueValues">
      <summary>
            Returns a new <see cref="T:GrapeCity.Spreadsheet.IUniqueValues" /> object representing a conditional formatting rule for the specified range.
            </summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IUniqueValues" /> object to quickly visualize cells that contain either unique or duplicate values.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatConditions.Delete">
      <summary>
            Deletes all format conditions.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IAboveAverage">
      <summary>
            Represents an above average visual of a conditional formatting rule.
            </summary>
      <seealso cref="T:GrapeCity.Spreadsheet.IFormatCondition" />
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAboveAverage.AboveBelow">
      <summary>
            Gets or sets one of the constants of the <see cref="P:GrapeCity.Spreadsheet.IAboveAverage.AboveBelow" /> enumeration, specifying if the conditional formatting rule looks for cell values above or below the range average or standard deviation.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.IAboveAverage.AboveBelow" /> value that represents how the format condition works.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAboveAverage.NumStdDev">
      <summary>
            Gets or sets the numeric standard deviation for an <see cref="T:GrapeCity.Spreadsheet.IAboveAverage" /> object.
            </summary>
      <value>An integer value that represents the numeric standard deviation.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AboveBelow">
      <summary>
            Specifies if the values are above or below average.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.AboveAverage">
      <summary>
            Above average.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.AboveStdDev">
      <summary>
            Above standard deviation.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.BelowAverage">
      <summary>
            Below average.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.BelowStdDev">
      <summary>
            Below standard deviation.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.EqualAboveAverage">
      <summary>
            Equal above average.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AboveBelow.EqualBelowAverage">
      <summary>
            Equal below average.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScale.ColorScaleCriteria">
      <summary>
            Returns a ColorScaleCriteria object, which is a collection of individual ColorScaleCriterion objects.
            The ColorScaleCriterion object specifies the type, value, and color of threshold criteria used in the color scale conditional format.
            </summary>
      <value>The color scale criteria.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColorScaleCriteria">
      <summary>
            A collection of ColorScaleCriterion objects that represents all of the criteria for a color scale conditional format.
            Each criterion specifies the minimum, midpoint, or maximum threshold for the color scale.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriteria.Count">
      <summary>
            Gets an integer value that specifies the number of criteria for a color scale conditional format rule.
            </summary>
      <value>The number of criteria is equivalent to the number of threshold values assigned for a color scale. This will be either two or three, depending on whether you use a two-color scale or three-color scale for the conditional format rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriteria.Item(System.Int32)">
      <summary>
            Gets a single ColorScaleCriterion object from the <see cref="T:GrapeCity.Spreadsheet.IColorScaleCriteria" /> collection.
            </summary>
      <param name="index">The index number of the <see cref="T:GrapeCity.Spreadsheet.IColorScaleCriterion" /> object.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColorScaleCriterion">
      <summary>
            Represents the criteria for the minimum, midpoint, or maximum thresholds for a color format conditional format.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriterion.FormatColor">
      <summary>
            Represents the fill color specified for a threshold of a color scale conditional format or the color of the bar in a data bar conditional format.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriterion.Type">
      <summary>
            Gets one of the constants of the <seealso cref="T:GrapeCity.Spreadsheet.CfValueType" /> enumeration, which specifies how the threshold values for a data bar or color scale conditional format are determined. Read-only.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriterion.Value">
      <summary>
            Gets or sets the minimum, midpoint, or maximum threshold value for a color scale conditional format.
            </summary>
      <remarks>
            A string value represents the formula of the color scale criterion.
            <para>
            An <see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> object represents the primitive value of the color scale criterion.
            </para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorScaleCriterion.Index">
      <summary>
            Gets the index of this criterion
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IDatabar">
      <summary>
            Represents a data bar conditional formating rule.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.AxisColor">
      <summary>
            Returns the color of the axis for cells with conditional formatting as data bars. 
            </summary>
      <value>The color of the axis.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.AxisPosition">
      <summary>
            Gets or sets the position of the axis of the data bars specified by a conditional formatting rule.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DatabarAxisPosition" /> value that represents the axis position.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.BarBorder">
      <summary>
            Returns an object that specifies the border of a data bar.
            </summary>
      <value>The bar border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.BarColor">
      <summary>
            Returns a FormatColor object that you can use to modify the color of the bars in a data bar conditional format.
            </summary>
      <value>The color of the bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.BarFillType">
      <summary>
            Gets or sets how a data bar is filled with color.
            </summary>
      <value>The type of the bar fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.Direction">
      <summary>
            Gets or sets the direction the databar is displayed.
            </summary>
      <value>The direction.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.MaxPoint">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.IConditionValue" /> object that specifies how the longest bar is evaluated for a data bar conditional format.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IConditionValue" /> object represents the maximum point value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.MinPoint">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.IConditionValue" /> object that specifies how the shortest bar is evaluated for a data bar conditional format.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IConditionValue" /> object represents the minimum point value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.NegativeBarFormat">
      <summary>
            Returns the <see cref="T:GrapeCity.Spreadsheet.INegativeBarFormat" /> object associated with a data bar conditional formatting rule.
            </summary>
      <value>The negative bar format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.PercentMax">
      <summary>
            Gets or sets an integer value that specifies the length of the longest data bar as a percentage of cell width.
            </summary>
      <value>The value must be a whole number between 0 and 100.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.PercentMin">
      <summary>
            Gets or sets an integer value that specifies the length of the shortest data bar as a percentage of cell width.
            </summary>
      <value>The value must be a whole number between 0 and 100.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabar.ShowValue">
      <summary>
            Gets or sets a Boolean value that specifies if the value in the cell is displayed if the data bar conditional format is applied to the range.
            </summary>
      <value>
        <c>true</c> if the value in the cell is displayed if the data bar conditional format is applied; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IConditionValue">
      <summary>
            Represents how the shortest bar or longest bar is evaluated for a data bar conditional formatting rule.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IConditionValue.Type">
      <summary>
            Gets one of the constants of the XlConditionValueTypes enumeration, which specifies how the threshold values for a data bar, color scale, or icon set conditional format are determined. 
            </summary>
      <value>The type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IConditionValue.Value">
      <summary>
            Gets or sets the shortest bar or longest bar threshold value for a data bar conditional format.
            </summary>
      <value>The value of the condition value.</value>
      <remarks>
            A string value represents the formula of the color scale criterion.
            <para>
            An <see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> object represents the primitive value of the color scale criterion.
            </para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IConditionValue.Modify(GrapeCity.Spreadsheet.CfValueType,System.Double)">
      <summary>
            Modifies the data of this condition value.
            </summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.CfValueType" /> value indicates the type of condition value.</param>
      <param name="value">A double value indicates the numeric value of the condition value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IConditionValue.Modify(GrapeCity.Spreadsheet.CfValueType,System.String)">
      <summary>
            Modifies the data of this condition value.
            </summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.CfValueType" /> value indicates the type of condition value.</param>
      <param name="formula">A string value indicates the formula of the condition value.</param>
      <remarks>Because <paramref name="formula" /> is also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.INegativeBarFormat">
      <summary>
            Represents the color settings of the data bars for negative values that are defined by a data bar conditional formating rule.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.INegativeBarFormat.BorderColor">
      <summary>
            Returns a FormatColor object that you can use to specify the border color for negative data bars.
            </summary>
      <value>The color of the border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.INegativeBarFormat.BorderColorType">
      <summary>
            Specifies whether to use the same border color as positive data bars. 
            </summary>
      <value>The type of the border color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.INegativeBarFormat.Color">
      <summary>
            Returns a FormatColor object that you can use to specify the fill color for negative data bars. 
            </summary>
      <value>The color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.INegativeBarFormat.ColorType">
      <summary>
            Specifies whether to use the same fill color as positive data bars.
            </summary>
      <value>The type of the color.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarNegativeColorType">
      <summary>
            Specifies whether to use the same border and fill color as postive data bars.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarNegativeColorType.Color">
      <summary>
            Use the color specified in the Negative Value and Axis Setting dialog box or by using the ColorType and BorderColorType properties of the NegativeBarFormat object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarNegativeColorType.SameAsPositive">
      <summary>
            Use the same color as positive data bars.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarFillType">
      <summary>
            Specifies how a data bar is filled with color.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarFillType.Gradient">
      <summary>
            The data bar is filled with a color gradient.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarFillType.Solid">
      <summary>
            The data bar is filled with solid color.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IDatabarBorder">
      <summary>
            Represents the border of the data bars specified by a conditional formatting rule.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabarBorder.Color">
      <summary>
            Returns an object that specifies the color of the border of data bars specified by a conditional formatting rule.
            </summary>
      <value>The color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDatabarBorder.Type">
      <summary>
            Gets or sets the type of border for data bars specified by a conditional formatting rule.
            </summary>
      <value>The type.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarBorderType">
      <summary>
            Specifies the border of a data bar.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarBorderType.None">
      <summary>
            The data bar has no border.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarBorderType.Solid">
      <summary>
            The data bar has a solid border.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IIconSetCondition">
      <summary>
            Represents an icon set conditional formatting rule.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconSetCondition.IconCriteria">
      <summary>
            Returns an IconCriteria collection, which represents the set of criteria for an icon set conditional formatting rule.
            </summary>
      <value>The icon criteria.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconSetCondition.IconSet">
      <summary>
            Gets or sets an <seealso cref="T:GrapeCity.Spreadsheet.IconSetType" /> collection, which specifies the icon set used in the conditional format.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconSetCondition.PercentileValues">
      <summary>
            Gets or sets a Boolean value indicating if the thresholds for an icon set conditional format are determined by using percentiles.
            </summary>
      <value>
        <c>true</c> if [percentile values]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconSetCondition.ReverseOrder">
      <summary>
            Gets or sets a Boolean value indicating if the order of icons is reversed for an icon set.
            </summary>
      <value>
        <c>true</c> if [reverse order]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconSetCondition.ShowIconOnly">
      <summary>
            Gets or sets a Boolean value indicating if only the icon is displayed for an icon set conditional format.
            </summary>
      <value>
        <c>true</c> if [show icon only]; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IIconCriteria">
      <summary>
            Represents the collection of IconCriterion objects. Each IconCriterion represents the values and threshold type for each icon in an icon set conditional formatting rule.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriteria.Count">
      <summary>
            Returns a Long value that specifies the number of criteria for an icon set conditional format rule.
            </summary>
      <value>The count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriteria.Item(System.Int32)">
      <summary>
            Returns a single IconCriterion object from the IconCriteria collection.
            </summary>
      <param name="index">The index number of the IconCriterion object.</param>
      <returns>IconCriterion.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IIconCriterion">
      <summary>
            Represents the criterion for an individual icon in an icon set. The criterion specifies the range of values and the threshold type associated with the icon in an icon set conditional formatting rule.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriterion.Icon">
      <summary>
            Returns or specifies the icon for a criterion in an icon set conditional formatting rule.
            </summary>
      <value>The icon.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriterion.Index">
      <summary>
            Returns a Long value indicating which threshold the criteria represents.
            </summary>
      <value>The index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriterion.Type">
      <summary>
            Returns one of the constants of the XlConditionValueTypes enumeration, which specifies how the threshold value for an icon set is determined.
            </summary>
      <value>The type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriterion.Value">
      <summary>
            Gets or sets the threshold value for an icon in a conditional format.
            </summary>
      <value>The threshold value for an icon in a conditional format.</value>
      <remarks>
            A string value represents the formula of the color scale criterion.
            <para>
            An <see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> object represents the primitive value of the color scale criterion.
            </para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IIconCriterion.Operator">
      <summary>
            Gets or sets one of the constants of the XlFormatConditionOperator enumeration, which specifes if the threshold is "greater than" or "greater than or equal to" the threshold value.
            </summary>
      <value>The operator.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITop10">
      <summary>
            Represents a top ten visual of a conditional formatting rule. Applying a color to a range helps you see the value of a cell relative to other cells.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITop10.Percent">
      <summary>
            Gets or sets a Boolean value, specifying if the rank is determined by a percentage value.
            </summary>
      <value>
        <c>true</c> if percent; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITop10.Rank">
      <summary>
            Gets or sets a Long value, specifying either the number or percentage of the rank value for the conditional format rule.
            </summary>
      <value>The rank.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITop10.TopBottom">
      <summary>
            Gets or sets one of the constants of the <see cref="P:GrapeCity.Spreadsheet.ITop10.TopBottom" /> enumeration, determining if the ranking is evaluated from the top or bottom.
            </summary>
      <value>The ranking is evaluated from the top or bottom.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TopBottom">
      <summary>
            Specifies the top 10 values from the top or bottom of a series of values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TopBottom.Top10Bottom">
      <summary>
            Top 10 bottom values
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TopBottom.Top10Top">
      <summary>
            Top 10 values
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IUniqueValues">
      <summary>
            The UniqueValues object uses the DupeUnique property to Gets or sets an enum that determines whether the rule should look for duplicate or unique values in the range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IUniqueValues.DupeUnique">
      <summary>
            Gets or sets one of the constants of the XlDupeUnique enumeration, specifying if the conditional format rule is looking for unique or duplicate values.
            </summary>
      <value>The dupe unique.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DupeUnique">
      <summary>
            Specifies whether duplicate or unique values shoud be displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DupeUnique.Duplicate">
      <summary>
            Display duplicate values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DupeUnique.Unique">
      <summary>
            Display unique values.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ColorStop">
      <summary>
            Represents the color stop point for a gradient fill in a range or selection.
            </summary>
      <remarks>
            The ColorStop object enables you to set properties for the cell fill including the Color , ThemeColor , and TintAndShade properties.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorStop.Position">
      <summary>
            Gets or sets the position of the <see cref="T:GrapeCity.Spreadsheet.ColorStop" />.
            </summary>
      <value>A dobule value represents the position of the <see cref="T:GrapeCity.Spreadsheet.ColorStop" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorStop.Color">
      <summary>
            Gets or sets the color of the represented object.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.ColorStop.Color" /> value represents the color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorStop.ThemeColor">
      <summary>
            Gets or sets the theme color of the represented object.
            </summary>
      <value>A <see cref="T:GrapeCity.Core.ThemeColors" /> value represents the color of the theme.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorStop.TintAndShade">
      <summary>
            Gets or sets a value that lightens or darkens the color of the represented object.
            </summary>
      <value>You can enter a number from -1 (darkest) to 1 (lightest) for the TintAndShade property. Zero (0) is neutral.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorStop.Delete">
      <summary>
            Deletes the represented <see cref="T:GrapeCity.Spreadsheet.ColorStop" /> object.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IGradient">
      <summary>
            Contains the font attributes (font name, font size, color, and so on) for an object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.ColorStops">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IColorStops" /> collection for the <see cref="T:GrapeCity.Spreadsheet.IGradient" /> object. 
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IColorStops" /> object represents the color collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.RectangleLeft">
      <summary>
            Gets or sets the left point or vector that the gradient fill converges to.
            </summary>
      <value>A <see cref="T:System.Double" /> value in range 0..1 that represents the left point or vector.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.RectangleRight">
      <summary>
            Gets or sets the right point or vector that the gradient fill converges to.
            </summary>
      <value>A <see cref="T:System.Double" /> value in range 0..1 that represents the right point or vector.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.RectangleTop">
      <summary>
            Gets or sets the top point or vector that the gradient fill converges to.
            </summary>
      <value>A <see cref="T:System.Double" /> value in range 0..1 that represents the top point or vector.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.RectangleBottom">
      <summary>
            Gets or sets the bottom point or vector that the gradient fill converges to.
            </summary>
      <value>A <see cref="T:System.Double" /> value in range 0..1 that represents the bottom point or vector.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGradient.Degree">
      <summary>
            Gets or sets the angle of the linear gradient fill within a selection.
            </summary>
      <value>A <see cref="T:System.Double" /> value in range 0..360 represents the angle.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColorStops">
      <summary>
            A collection of all the <see cref="T:GrapeCity.Spreadsheet.ColorStop" /> objects for the specified series.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IColorStops.Clear">
      <summary>
            Clears all color stops from this collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IColorStops.Add(System.Double)">
      <summary>
            Adds a <see cref="T:GrapeCity.Spreadsheet.ColorStop" /> object to the specified collection.
            </summary>
      <param name="position">A double value indicates the position in which to apply the <see cref="T:GrapeCity.Spreadsheet.ColorStop" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ColorStop" /> object represents the new object.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorStops.Item(System.Int32)">
      <summary>
            Gets <see cref="T:GrapeCity.Spreadsheet.ColorStop" /> object from the specified collection.
            </summary>
      <param name="index">A <see cref="T:System.Int32" /> value represents the index of the object in collection</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorStops.Count">
      <summary>
            Returns the count of the represented object.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IGraphic">
      <summary>
            Contains properties that apply to header and footer picture objects.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IGraphic.Reset">
      <summary>
            Resets the data of this graphic.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGraphic.Brightness">
      <summary>
            Gets or sets the brightness of the specified picture.
            </summary>
      <value>The value for this property must be a number from 0.0 (dimmest) to 1.0 (brightest).</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGraphic.Contrast">
      <summary>
            Gets or sets the contrast for the specified picture.
            </summary>
      <value>The value for this property must be a number from 0.0 (the least contrast) to 1.0 (the greatest contrast).</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGraphic.Filename">
      <summary>
            Gets or sets the URL (on the intranet or the web) or path (local or network) to the location where the specified source object was saved.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGraphic.Height">
      <summary>
            Gets or sets a <see cref="T:System.Double" /> value that represents the height, in pixels, of the object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGraphic.Width">
      <summary>
            Gets or sets a <see cref="T:System.Double" /> value that represents the width, in pixels, of the object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGraphic.LockAspectRatio">
      <summary>
        <c>true</c> if the specified shape retains its original proportions when you resize it.
            <c>false</c>if you can change the height and width of the shape independently of one another when you resize it.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGraphic.RelativeOriginalSize">
      <summary>
        <c>true</c> if you want to use the original picture size as relative
            <c>false</c> if you want to use the current picture size as relative
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IGraphic.ColorType">
      <summary>
            Gets or sets the type of color transformation applied to the specified picture or OLE object.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IMedia">
      <summary>
            Represents an embedded resource.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IMedia.ContentType">
      <summary>
            Gets the content type of embedded resource.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IMedia.Data">
      <summary>
            Gets the data of embedded resource.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColorPalette">
      <summary>
            Represents the color palette that contains indexed colors.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorPalette.Count">
      <summary>
            Gets the number of indexed colors.
            </summary>
      <value>An integer value represents the number of indexed colors.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColorPalette.Item(System.Int32)">
      <summary>
            Gets or sets the RGB color at the specified index.
            </summary>
      <param name="index">An integer value indicates the position of the specified color.</param>
      <returns>The RGB color of the specified color.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IDataManager">
      <summary>
            Represents the data manager of a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDataManager.DataSource">
      <summary>
            Gets or sets the data source.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDataManager.AutoGenerateColumns">
      <summary>
            Gets or sets whether to generate the columns automatically based on the data source.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IDataManager.SetModelDataColumn(System.Int32,System.String)">
      <summary>
            Binds a model column to a specified data source column.
            </summary>
      <param name="column">Index of column in the model</param>
      <param name="columnName">Name of the data source column</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IDataManager.GetColumnIndex(System.String)">
      <summary>
            Gets the index of the column specified by name. 
            </summary>
      <param name="columnName">The column name.</param>
      <returns>The index of the specified column.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IDataManager.GetDataColumnName(System.Int32)">
      <summary>
            Gets the column name at the specified position.
            </summary>
      <param name="column">Column index for which name is requested</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IDataManager.AddUnboundRows(System.Int32,System.Int32)">
      <summary>
            Adds unbound rows for a sheet.
             </summary>
      <param name="row">Index of row in the model</param>
      <param name="count">Number of rows to add</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IDataManager.AddRowToDataSource(System.Int32,System.Boolean)">
      <summary>
            Adds the unbound row to the data source for a sheet.
             </summary>
      <param name="row"></param>
      <param name="autoFillData">Whether to automatically fill the row with data</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IDataManager.DataAllowAddNew">
      <summary>
            Gets or sets whether to allow the user to add a new row when the worksheet is bound.
            </summary>
      <value>
        <c>true</c> if allowed to add new row; otherwise, <c>false</c></value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IDataManager.IsRowBound(System.Int32)">
      <summary>
            Determines whether the row is bound.
             </summary>
      <param name="row">Index of row in the model</param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.NewRowPosition">
      <summary>
            Represents the position of the new row.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.NewRowPosition.Bottom">
      <summary>
            The new row appears as the last row of the worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.NewRowPosition.Top">
      <summary>
            The new row appears as the first row of the worksheet.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IInterior">
      <summary>
            Represents the interior of an object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.Color">
      <summary>
            Gets or sets the primary color of the object, as shown in the table in the remarks section.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IInterior.Color" /> value represents the primary color of the object.</value>
      <remarks>
            The returned value is the stored value from the internal storage. For indexed color, it'll be different with <see cref="P:GrapeCity.Spreadsheet.IInterior.ColorIndex" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.PatternColor">
      <summary>
            Gets or sets the color of the interior pattern.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IInterior.Color" /> value represents the color of the interior pattern.</value>
      <remarks>
            The returned value is the stored value from the internal storage. For indexed color, it'll be different with <see cref="P:GrapeCity.Spreadsheet.IInterior.ColorIndex" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.ThemeColor">
      <summary>
            Gets or sets the theme color in the applied color scheme that is associated with the specified object.
            </summary>
      <value>A <see cref="T:GrapeCity.Core.ThemeColors" /> value represents the theme color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.PatternThemeColor">
      <summary>
            Gets or sets the pattern theme color in the applied color scheme that is associated with the specified object.
            </summary>
      <value>A <see cref="T:GrapeCity.Core.ThemeColors" /> value represents the pattern theme color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.ColorIndex">
      <summary>
            Gets or sets the color of the interior as an index into the current color palette, or as one of the following constants: <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexAutomatic" /> or <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexNone" />.
            </summary>
      <value>An integer value represents the index of the color.</value>
      <remarks>
            The value returned by <see cref="P:GrapeCity.Spreadsheet.IInterior.ColorIndex" /> is different than the stored value from the internal storage.
            <para>Set this property to <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexAutomatic" /> to specify the automatic color for cells or the automatic fill style for drawing objects.</para><para>Set this property to <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexNone" /> to specify that you don't want a color.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.PatternColorIndex">
      <summary>
            Gets or sets the color of the interior pattern as an index into the current color palette, or as one of the following constants: <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexAutomatic" /> or <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexNone" />.
            </summary>
      <value>An integer value represents the index of the pattern color.</value>
      <remarks>
            The value returned by <see cref="P:GrapeCity.Spreadsheet.IInterior.PatternColorIndex" /> is different than the stored value from the internal storage.
            <para>Set this property to <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexAutomatic" /> to specify the automatic pattern for cells or the automatic fill style for drawing objects.</para><para>Set this property to <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexNone" /> to specify that you don't want a pattern.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.Pattern">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.PatternType" /> value that represents the interior pattern.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.PatternType" /> value represents the interior pattern.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.TintAndShade">
      <summary>
            Gets or sets a value that lightens or darkens a color.
            </summary>
      <value>You can enter a number from -1 (darkest) to 1 (lightest) for the TintAndShade property. Zero (0) is neutral.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.Gradient">
      <summary>
            Gets the IGradient property of an Interior object of a selection.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IGradient" /> object represents the gradient of the interior.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IInterior.PatternTintAndShade">
      <summary>
            Gets or sets a value that lightens or darkens a pattern color.
            </summary>
      <value>You can enter a number from -1 (darkest) to 1 (lightest) for the TintAndShade property. Zero (0) is neutral.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IInterior.ApplyInterior(GrapeCity.Spreadsheet.Fill)">
      <summary>
            Apply fill's setting for whole the fill
            </summary>
      <param name="fill">The fill's setting</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IOutline">
      <summary>
            Represents an outline on a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IOutline.SummaryRow">
      <summary>
            Gets or sets the location of the summary rows in the outline.
            </summary>
      <value>The position of summary row related to the detail rows in the outline.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IOutline.SummaryColumn">
      <summary>
            Gets or sets the location of the summary columns in the outline.
            </summary>
      <value>The position of summary column related to the detail columns in the outline.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IOutline.ShowLevels(System.Int32,System.Int32)">
      <summary>
            Displays the specified number of row and/or column levels of an outline.
            </summary>
      <param name="rowLevels">Specifies the number of row levels of an outline to display. 
            If the outline has fewer levels than the number specified, Spread displays all the levels. 
            If this argument is 0 (zero) or is omitted, no action is taken on rows.</param>
      <param name="columnLevels">Specifies the number of column levels of an outline to display.
            If the outline has fewer levels than the number specified, Spread displays all the levels.
            If this argument is 0 (zero) or is omitted, no action is taken on columns.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SummaryColumn">
      <summary>
            Specifies the location of the summary columns in the outline.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SummaryColumn.Left">
      <summary>
            The summary column will be positioned to the left of the detail columns in the outline.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SummaryColumn.Right">
      <summary>
            The summary column will be positioned to the right of the detail columns in the outline.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SummaryRow">
      <summary>
            Specifies the location of the summary rows in the outline.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SummaryRow.Above">
      <summary>
            The summary row will be positioned above the detail rows in the outline.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SummaryRow.Below">
      <summary>
            The summary row will be positioned below the detail rows in the outline.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IRange">
      <summary>
            Interface that represent a range of a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Summary">
      <summary>
            Gets a value indicating whether the range is an outlining summary row or column.
            </summary>
      <value>
        <c>true</c> if the range is an outlining summary row or column; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Range(System.String,System.String)">
      <summary>
            Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents a cell or a range of cells.
            </summary>
      <param name="cell1">The name of the range. This must be an A1-style reference.</param>
      <param name="cell2">The cell in the lower-right corner of the range.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Offset(System.Int32,System.Int32)">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents a translated range from the specified range.
            </summary>
      <param name="rowOffset">The number of rows (positive, negative, or 0 (zero)) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward. The default value is 0.</param>
      <param name="columnOffset">The number of columns (positive, negative, or 0 (zero)) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left. The default value is 0.</param>
      <returns>IRange.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.MergeArea">
      <summary>
            Returns a Range object that represents the merged range containing the specified cell. If the specified cell isn't in a merged range, this property returns the specified cell.
            </summary>
      <value>A Range object that represents the merged range containing the specified cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.HasFormula">
      <summary>
            Gets a value indicating whether all cells in the range contain formulas.
            </summary>
      <value>
        <c>true</c> if all cells in the range contain formulas, <c>false</c> if none of the cells in the range contains a formula; otherwise, <c>null</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.HasArray">
      <summary>
            Gets a value indicating whether the specified cell is part of an array formula.
            </summary>
      <value>
        <c>true</c> if the specified cell is part of an array formula; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.EntireColumn">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire column (or columns) that contains the specified range.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.EntireRow">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire row (or rows) that contains the specified range.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.DisplayFormat">
      <summary>
            Gets a <see cref="P:GrapeCity.Spreadsheet.IRange.DisplayFormat" /> object that represents the display settings for the specified range.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IRange.DisplayFormat" /> object that represents the display settings for the specified range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.CurrentArray">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire array if the specified cell is part of an array.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the entire array.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.CurrentRegion">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the current region. The current region is a range bounded by any combination of blank rows and blank columns.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the current region.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Count">
      <summary>
            Get an integer value that represents the number of cells in the range.
            </summary>
      <value>An integer value that represents the number of cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Areas">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IAreas" /> collection that represents all the ranges in a multiple-area selection.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IAreas" /> collection that represents all the ranges in a multiple-area selection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Cells">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the cells in the specified range.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the cells in the specified range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.AllowEdit">
      <summary>
            Gets a value indicating whether the range can be edited on a protected worksheet.
            </summary>
      <value>
        <c>true</c> if the range can be edited; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Worksheet">
      <summary>
            Gets a <see cref="P:GrapeCity.Spreadsheet.IRange.Worksheet" /> object that represents the worksheet containing the specified range.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IRange.Worksheet" /> object that represents the worksheet containing the specified range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Column">
      <summary>
            Gets the zero based column number of the first column of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>An integer that specifies the zero based column number of the first column.</value>
      <remarks>If this <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains multiple areas, the first column number of the first area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Row">
      <summary>
            Gets the zero based row number of the first row of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>An integer that specifies the zero based row number of the first row.</value>
      <remarks>If this <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains multiple areas, the first row number of the first area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Column2">
      <summary>
            Gets the zero based column number of the last column of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>An integer that specifies the zero based column number of the last column.</value>
      <remarks>If this <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains multiple areas, the last column number of the last area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Row2">
      <summary>
            Gets the zero based row number of the last row of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>An integer that specifies the zero based row number of the last row.</value>
      <remarks>If this <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains multiple areas, the last row number of the last area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.ColumnCount">
      <summary>
            Gets the number of columns in this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>An integer that specifies the number of columns.</value>
      <remarks>If this <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains multiple areas, the number of columns in the first area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.RowCount">
      <summary>
            Gets the number of rows in this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>An integer that specifies the number of rows.</value>
      <remarks>If this <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains multiple areas, the number of rows in the first area is returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Rows">
      <summary>
            Gets a new instance of <see cref="T:GrapeCity.Spreadsheet.IRange" /> which represents all rows belong to this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that specifies all rows.</value>
      <remarks>If this <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains multiple areas, the new <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains rows of the first area only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Columns">
      <summary>
            Gets a new instance of <see cref="T:GrapeCity.Spreadsheet.IRange" /> which represents all columns belong to this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that specifies all columns.</value>
      <remarks>If this <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains multiple areas, the new <see cref="T:GrapeCity.Spreadsheet.IRange" /> contains columns of the first area only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Hidden">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IRange" /> is hidden.
            </summary>
      <value>
        <c>true</c> if hidden; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.RowHeight">
      <summary>
            Gets or sets the height of the row.
            </summary>
      <value>The height of the row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.ColumnWidth">
      <summary>
            Gets or sets the width of the column.
            </summary>
      <value>The width of the column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.MergePolicy">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.MergePolicy" /> value indicating whether to automatically merge adjacent identical cells.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Resizable">
      <summary>
            Gets or sets whether the range is resizable.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.MergeCells">
      <summary>
            Gets or sets a value indicating whether this range contains merged cells.
            </summary>
      <value>
        <c>true</c> if this range contains merged cells; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Formula">
      <summary>
            Gets or sets the formula, which will implicitly intersect as required when set, for this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>A string value represents the formula of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</value>
      <remarks>Setting <see cref="P:GrapeCity.Spreadsheet.IRange.Formula" /> will always result in a formula that will never spill, because implicit intersection will force it to return just one result.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Formula2">
      <summary>
            Gets or sets the formula for this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>A string value represents the formula of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.FormulaR1C1">
      <summary>
            Gets or sets the formula using R1C1-style notation  which will implicitly intersect as required when set, for this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>A string value represents the formula using R1C1-style notation of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Formula2R1C1">
      <summary>
            Gets or sets the formula using R1C1-style notation for this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>A string value represents the formula using R1C1-style notation of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.FormulaArray">
      <summary>
            Gets or sets the array formula for this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>A string value represents the array formula of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Value">
      <summary>
            Gets or sets the cell value.
            </summary>
      <value>An object represents the cell value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.FormattedValue">
      <summary>
            Gets or sets the cell value(s).
            </summary>
      <value>An object represents the cell value(s).</value>
      <remarks>
            The only difference between this property and the <see cref="P:GrapeCity.Spreadsheet.IRange.Value" /> property is that you can return values formatted with Currency or DateTime data types.
            You also can use this property to work with an array of cell values.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Text">
      <summary>
            Gets or sets the text for the cell.
            </summary>
      <value>A string value represents the text for the cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Style">
      <summary>
            Gets or sets the style for the cell.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object represents the style for the cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.HorizontalAlignment">
      <summary>
            Gets or sets the horizontal alignment.
            </summary>
      <value>The horizontal alignment.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.IndentLevel">
      <summary>
            Gets or sets the indent level.
            </summary>
      <value>The indent level.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Interior">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior of the specified object.
            </summary>
      <value>The interior of the specified object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Borders">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IBorders" /> object that represents the borders of the specified object.
            </summary>
      <value>The borders of the specified object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Font">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the specified object.
            </summary>
      <value>The font of the specified object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Locked">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IRange" /> is locked.
            </summary>
      <value>
        <c>true</c> if locked; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.NumberFormat">
      <summary>
            Gets or sets the number format of current cell.
            </summary>
      <value>The number format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Orientation">
      <summary>
            Gets or sets the text orientation.
            </summary>
      <value>An integer value represents the text orientation.</value>
      <remarks>
            There are special values that can be set to <see cref="P:GrapeCity.Spreadsheet.IRange.Orientation" />. They can be found from <see cref="T:GrapeCity.Spreadsheet.Alignment" />.
            <para>
            Horizontal text: <see cref="F:GrapeCity.Spreadsheet.Alignment.HorizontalText" /></para><para>
            Upward text: <see cref="F:GrapeCity.Spreadsheet.Alignment.UpwardText" /></para><para>
            Downward text: <see cref="F:GrapeCity.Spreadsheet.Alignment.DownwardText" /></para><para>
            Vertical text: <see cref="F:GrapeCity.Spreadsheet.Alignment.VerticalText" /></para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.ShrinkToFit">
      <summary>
            Gets or sets a value indicating whether text automatically shrinks to fit in the available column width.
            </summary>
      <value>
        <c>true</c> if shrink to fit; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.VerticalAlignment">
      <summary>
            Gets or sets the vertical alignment.
            </summary>
      <value>The vertical alignment.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.WrapText">
      <summary>
            Gets or sets a value indicating whether Spread wraps the text in the object.
            </summary>
      <value>
        <c>true</c> if Spread wraps the text in the object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.FormatConditions">
      <summary>
            Gets all format conditions of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>An array of <see cref="!:Condition" /> represents format conditions of this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Validation">
      <summary>
            Gets an instance of IValidation which may be used to get and set validation properties of the cells represented by this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>The instance of IValidation which may be used to get and set validation properties of the cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> with the specified reference.
            </summary>
      <param name="reference">A <see cref="T:System.String" /> value represents the reference of the specified cell range.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> at the specified cell position.
            </summary>
      <param name="index">The indexed position of cell.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Item(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> with the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
      <remarks>For <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Columns" />, arguments indicate the start column and end column.
            <para>For <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Rows" />, arguments indicate the start and end row.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Item(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> with the specified range.
            </summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.CreateTable(System.Boolean,System.String,System.String)">
      <summary>
            Creates the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified cell range.
            </summary>
      <param name="includeHeaders">if set to <c>true</c>, the first row of the specified cell range will be used as table header.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ITable" /> object represents the created table. <c>null</c> if the table cannot be created.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.DataTable(System.String,System.String)">
      <summary>
            Creates a data table based on input values and formulas that you define on a worksheet.
            </summary>
      <param name="rowInput">A single cell to use as the row input for your table.</param>
      <param name="columnInput">A single cell to use as the column input for your table.</param>
      <returns>
        <c>true</c> if the data table is created; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.DataTable(GrapeCity.Spreadsheet.CellReference,GrapeCity.Spreadsheet.CellReference)">
      <summary>
            Creates a data table based on input values and formulas that you define on a worksheet.
            </summary>
      <param name="rowInput">A single cell to use as the row input for your table.</param>
      <param name="columnInput">A single cell to use as the column input for your table.</param>
      <returns>
        <c>true</c> if the data table is created; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.DataTable(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.IRange)">
      <summary>
            Creates a data table based on input values and formulas that you define on a worksheet.
            </summary>
      <param name="rowInput">A single cell to use as the row input for your table.</param>
      <param name="columnInput">A single cell to use as the column input for your table.</param>
      <returns>
        <c>true</c> if the data table is created; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Clear(GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Removes all the data and formulas from the specified range of cells.
            </summary>
      <param name="options">The options indicates which data type will be performed. If this argument is omitted, all data will be clear.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Move(System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Moves the data from a range of cells to the specified location.
            </summary>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <returns>
        <c>true</c> if the cell range is moved, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Move(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Moves the data from a range of cells to the specified location.
            </summary>
      <param name="destination">The specified range will be copied to.</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <returns>
        <c>true</c> if the cell range is moved, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Move(System.String,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Moves the data from a range of cells to the specified location.
            </summary>
      <param name="destination">The specified range will be copied to.</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <returns>
        <c>true</c> if the cell range is moved, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Copy(System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Copies the data from a range of cells to a specified range of cells.
            </summary>
      <param name="toRow">Row index of start of range to which to copy</param>
      <param name="toColumn">Column index of start of range to which to copy</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <returns>
        <c>true</c> if the cell range is copied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Copy(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Copies the data from a range of cells to a specified range of cells.
            </summary>
      <param name="destination">The specified range will be copied.</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <returns>
        <c>true</c> if the cell range is copied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Copy(System.String,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Copies the data from a range of cells to a specified range of cells.
            </summary>
      <param name="destination">The specified range will be copied.</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <returns>
        <c>true</c> if the cell range is copied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Copy(System.Boolean)">
      <summary>
            Copies the data from a range of cells to clipboard.
            </summary>
      <param name="showUI">
        <c>true</c> if the UI shows copying range; otherwise, only data is copied to clipboard.</param>
      <returns>
        <c>true</c> if the cell range is copied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Cut(System.Boolean)">
      <summary>
            Cuts the data from a range of cells to clipboard.
            </summary>
      <param name="showUI">
        <c>true</c> if the UI shows cutting range; otherwise, only data is copied to clipboard.</param>
      <returns>
        <c>true</c> if the cell range is copied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.ApplyStyle(System.String)">
      <summary>
            Applies the named style to the range.
            </summary>
      <param name="styleName">Name of the style.</param>
      <returns>
        <c>true</c> if the style applies to cell successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.ApplyStyle(GrapeCity.Spreadsheet.BuiltInStyle)">
      <summary>
            Applies the builtIn style to the range.
            </summary>
      <param name="style">The built-in style.</param>
      <returns>
        <c>true</c> if the style applies to cell successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.ApplyNumberFormat(GrapeCity.Spreadsheet.NumberFormat)">
      <summary>
            Applies the number format to the range.
            </summary>
      <param name="numFmt">A <see cref="P:GrapeCity.Spreadsheet.IRange.NumberFormat" /> value represents the number format.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.ApplyStyleFormat(GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>
            Applies the style format to the range.
            </summary>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value represents the cell style format.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.ShowDetail">
      <summary>
        <c>true</c> if the outline is expanded for the specified range (so that the detail of the column or row is visible).
            The specified range must be a single summary column or row in an outline.
            </summary>
      <remarks>
            If the specified range isn't in a PivotTable report, the following statements are true:
             - The range must be in a single summary row or column. Otherwise, <c>null</c> will be returned.
             - This property returns <c>false</c> if any of the children of the row or column are hidden.
             - Setting this property to <c>true</c> is equivalent to show all the children of the summary row or column.
             - Setting this property to <c>false</c> is equivalent to hide all the children of the summary row or column.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Group">
      <summary>
            Demotes a range in an outline (that is, increases its outline level). The specified range must be a row or column, or a range of rows or columns.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Ungroup">
      <summary>
            Promotes a range in an outline (that is, decreases its outline level). The specified range must be a row or column, or a range of rows or columns.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.OutlineLevel">
      <summary>
            Gets or sets the current outline level of the specified row or column.
            </summary>
      <value>An integer value represents the current outline level of the specified row or column.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Address(System.Boolean,System.Boolean,GrapeCity.Spreadsheet.ReferenceStyle,System.Boolean,GrapeCity.Spreadsheet.CellReference,System.Boolean)">
      <summary>
            Returns a <see cref="T:System.String" /> value that represents the range reference.
            </summary>
      <param name="rowAbsolute">
        <c>true</c> to return the row part of the reference as an absolute reference.</param>
      <param name="columnAbsolute">
        <c>true</c> to return the column part of the reference as an absolute reference.</param>
      <param name="refStyle">A <see cref="T:GrapeCity.Spreadsheet.ReferenceStyle" /> value indicates the reference style.</param>
      <param name="external">
        <c>true</c> to return the external reference; otherwise, <c>false</c> to return local reference.</param>
      <param name="relativeTo">The starting point for the relative reference if <paramref name="rowAbsolute" /> and <paramref name="columnAbsolute" /> are <c>false</c> and the <paramref name="refStyle" /> is <see cref="F:GrapeCity.Spreadsheet.ReferenceStyle.R1C1" />.</param>
      <param name="skipWorkbook">
        <c>true</c> to exlucde the workbook name; otherwise, <c>false</c> to include the workbook name.</param>
      <returns>A <see cref="T:System.String" /> value represents the range reference.</returns>
      <remarks>If the reference contains more than one cell, RowAbsolute and ColumnAbsolute apply to all rows and columns.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Address(System.Boolean,System.Boolean,GrapeCity.Spreadsheet.ReferenceStyle,System.Boolean,System.String)">
      <summary>
            Returns a <see cref="T:System.String" /> value that represents the range reference.
            </summary>
      <param name="rowAbsolute">
        <c>true</c> to return the row part of the reference as an absolute reference.</param>
      <param name="columnAbsolute">
        <c>true</c> to return the column part of the reference as an absolute reference.</param>
      <param name="refStyle">A <see cref="T:GrapeCity.Spreadsheet.ReferenceStyle" /> value indicates the reference style.</param>
      <param name="external">
        <c>true</c> to return the external reference; otherwise, <c>false</c> to return local reference.</param>
      <param name="relativeTo">The starting point for the relative reference if <paramref name="rowAbsolute" /> and <paramref name="columnAbsolute" /> are <c>false</c> and the <paramref name="refStyle" /> is <see cref="F:GrapeCity.Spreadsheet.ReferenceStyle.R1C1" />.</param>
      <returns>A <see cref="T:System.String" /> value represents the range reference.</returns>
      <remarks>If the reference contains more than one cell, RowAbsolute and ColumnAbsolute apply to all rows and columns.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Address(System.Boolean,System.Boolean,GrapeCity.Spreadsheet.ReferenceStyle,System.Boolean,GrapeCity.Spreadsheet.IRange)">
      <summary>
            Returns a <see cref="T:System.String" /> value that represents the range reference.
            </summary>
      <param name="rowAbsolute">
        <c>true</c> to return the row part of the reference as an absolute reference.</param>
      <param name="columnAbsolute">
        <c>true</c> to return the column part of the reference as an absolute reference.</param>
      <param name="refStyle">A <see cref="T:GrapeCity.Spreadsheet.ReferenceStyle" /> value indicates the reference style.</param>
      <param name="external">
        <c>true</c> to return the external reference; otherwise, <c>false</c> to return local reference.</param>
      <param name="relativeTo">The starting point for the relative reference if <paramref name="rowAbsolute" /> and <paramref name="columnAbsolute" /> are <c>false</c> and the <paramref name="refStyle" /> is <see cref="F:GrapeCity.Spreadsheet.ReferenceStyle.R1C1" />.</param>
      <returns>A <see cref="T:System.String" /> value represents the range reference.</returns>
      <remarks>If the reference contains more than one cell, RowAbsolute and ColumnAbsolute apply to all rows and columns.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFit(System.Boolean,System.Boolean)">
      <summary>
            Changes the width of the columns or the height of the rows in the range to achieve the best fit.
            </summary>
      <param name="includeCustomSize">
        <c>true</c> to include rows (or columns) that contain custom size, <c>false</c> otherwise</param>
      <param name="includeHidden">
        <c>true</c> to include rows (or columns) that is hidden, <c>false</c> otherwise</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Merge(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates a merged cell from the specified <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.
            </summary>
      <param name="across">if set to <c>true</c>, merge cells in each row (or column) of the specified range as separate merged cells.</param>
      <param name="vertical">if set to <c>true</c>, cells are merged by rows; otherwise, cells are merged by columns. It has effect only if <paramref name="across" /> is <c>true</c>.</param>
      <param name="replace">if set to <c>true</c>, intersected merged cells will be removed; otherwise, they'll be merged.</param>
      <returns>
        <c>true</c> if the cell range is merged; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.UnMerge">
      <summary>
            Separates a merged area into individual cells.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Calculate">
      <summary>
            Calculates this range of cells on a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Dependents">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range containing all the dependents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one dependent.
            </summary>
      <value>A Range object that represents the range containing all the dependents of a cell.</value>
      <remarks>The <see cref="P:GrapeCity.Spreadsheet.IRange.Dependents" /> property only works on the active sheet and can not trace remote references.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.DirectDependents">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range containing all the direct dependents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one dependent.
            </summary>
      <value>A Range object that represents the range containing all the direct dependents of a cell.</value>
      <remarks>The <see cref="P:GrapeCity.Spreadsheet.IRange.DirectDependents" /> property only works on the active sheet and can not trace remote references.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.GetFullDependents">
      <summary>
            Returns an array of <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the ranges containing all the dependents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one dependent.
            </summary>
      <value>Array of Range object that represents the range containing all the dependents of a cell.</value>
      <remarks>The method can trace remote references.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Precedents">
      <summary>
            Returns an  <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the precedents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one precedent.
            </summary>
      <value>The precedents.</value>
      <remarks>The <see cref="P:GrapeCity.Spreadsheet.IRange.Precedents" /> property only works on the active sheet and can not trace remote references.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.GetFullPrecedents(System.Boolean)">
      <summary>
            Returns an array of <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the precedents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one precedent.
            </summary>
      <param name="excludeUnlinkedWorksheet">
        <c>true</c> if the precedents of unlinked worksheet will be excluded; otherwise, <c>false</c>. The default value is <c>true</c>.</param>
      <value>The precedents.</value>
      <remarks>The method can trace remote references</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.DirectPrecedents">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range containing all the direct precedents of a cell. This can be a multiple selection (a union of Range objects) if there's more than one dependent.
            </summary>
      <value>A Range object that represents the range containing all the direct precedents of a cell.</value>
      <remarks>The <see cref="P:GrapeCity.Spreadsheet.IRange.DirectDependents" /> property only works on the active sheet and can not trace remote references.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.PageBreak">
      <summary>
            Gets or sets the location of a page break.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.PageBreak" /> value that represents the location of a page break..</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Activate">
      <summary>
            Activates a single cell, which must be inside the current selection.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Select">
      <summary>
            Select a cell or a range of cells.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.GoalSeek(System.Double,GrapeCity.Spreadsheet.IRange,System.Boolean)">
      <summary>
            Calculates the values necessary to achieve a specific goal.
            </summary>
      <param name="goal">The value you want returned in this cell.</param>
      <param name="changingCell">Specifies which cell should be changed to achieve the target value.</param>
      <param name="changeIfFound">if set to <c>true</c>, the <paramref name="changingCell" />'s value is changed only if the goal seek is successful.</param>
      <returns>
        <c>true</c> if the goal seek is successful, <c>false</c> otherwise.</returns>
      <remarks>If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.GoalSeek(System.Double,System.String,System.Boolean)">
      <summary>
            Calculates the values necessary to achieve a specific goal.
            </summary>
      <param name="goal">The value you want returned in this cell.</param>
      <param name="changingCell">Specifies which cell should be changed to achieve the target value.</param>
      <param name="changeIfFound">if set to <c>true</c>, the <paramref name="changingCell" />'s value is changed only if the goal seek is successful.</param>
      <returns>
        <c>true</c> if the goal seek is successful, <c>false</c> otherwise.</returns>
      <remarks>If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.GoalSeek(System.Double,GrapeCity.Spreadsheet.CellReference,System.Boolean)">
      <summary>
            Calculates the values necessary to achieve a specific goal.
            </summary>
      <param name="goal">The value you want returned in this cell.</param>
      <param name="changingCell">Specifies which cell should be changed to achieve the target value.</param>
      <param name="changeIfFound">if set to <c>true</c>, the <paramref name="changingCell" />'s value is changed only if the goal seek is successful.</param>
      <returns>
        <c>true</c> if the goal seek is successful, <c>false</c> otherwise.</returns>
      <remarks>If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Table">
      <summary>
            Returns an <see cref="T:GrapeCity.Spreadsheet.ITable" /> object for the <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.
            </summary>
      <value>The table object.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Find(System.Object,System.Object,GrapeCity.Spreadsheet.FindLookIn,GrapeCity.Spreadsheet.LookAt,GrapeCity.Spreadsheet.SearchOrder,GrapeCity.Spreadsheet.SearchDirection,System.Boolean)">
      <summary>
            Finds specific information in a range.
            </summary>
      <param name="what">The data to search for.</param>
      <param name="after">The cell after which you want the search to begin. The search begins after this cell; the specified cell isn't searched until the method wraps back around to this cell. If you do not specify this argument, the search starts after the cell in the upper-left corner of the range.</param>
      <param name="lookIn">The type of data to search.</param>
      <param name="lookAt">A <see cref="T:GrapeCity.Spreadsheet.LookAt" /> value indicates whether a match is made against the whole of the search text or any part of the search text.</param>
      <param name="searchOrder">The order in which to search the range.</param>
      <param name="searchDirection">A <see cref="T:GrapeCity.Spreadsheet.SearchDirection" /> value indicates whether a match is made against the whole of the search text or any part of the search text.</param>
      <param name="matchCase">
        <c>true</c> to make the search case-sensitive.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the first cell where that information is found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.FindNext(System.Object)">
      <summary>
            Continues a search that was begun with the <see cref="M:GrapeCity.Spreadsheet.IRange.Find(System.Object,System.Object,GrapeCity.Spreadsheet.FindLookIn,GrapeCity.Spreadsheet.LookAt,GrapeCity.Spreadsheet.SearchOrder,GrapeCity.Spreadsheet.SearchDirection,System.Boolean)" /> method.
            Finds the next cell that matches those same conditions and returns a Range object that represents that cell.
            </summary>
      <param name="after">The cell after which you want to search. The search begins after this cell; the specified cell is not searched until the method wraps back around to this cell. If this argument is not specified, the search starts after the cell in the upper-left corner of the range.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the first cell where that information is found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.FindPrevious(System.Object)">
      <summary>
            Continues a search that was begun with the <see cref="M:GrapeCity.Spreadsheet.IRange.Find(System.Object,System.Object,GrapeCity.Spreadsheet.FindLookIn,GrapeCity.Spreadsheet.LookAt,GrapeCity.Spreadsheet.SearchOrder,GrapeCity.Spreadsheet.SearchDirection,System.Boolean)" /> method.
            Finds the previous cell that matches those same conditions and returns an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents that cell.
            </summary>
      <param name="before">The cell before which you want to search. The search begins before this cell; the specified cell isn't searched until the method wraps back around to this cell. If this argument isn't specified, the search starts before the upper-left cell in the range.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the first cell where that information is found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Insert(GrapeCity.Spreadsheet.InsertShiftDirection,GrapeCity.Spreadsheet.InsertFormatOrigin)">
      <summary>
            Inserts a cell or a range of cells into the worksheet and shifts other cells away to make space.
            </summary>
      <param name="shift">A <see cref="T:GrapeCity.Spreadsheet.InsertShiftDirection" /> value indicates which way to shift the cells. If this argument is omitted, Spread decides based on the shape of the range.</param>
      <param name="origin">A <see cref="T:GrapeCity.Spreadsheet.InsertFormatOrigin" /> value indicates where to copy the format for inserted cells.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.HasRichDataType">
      <summary>
        <c>true</c> if all cells in the range contain a Rich data type. <c>false</c> if none of the cells in the range contains a Rich data type; otherwise, null.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Resize(System.Int32,System.Int32)">
      <summary>
            Resizes the specified range.
            </summary>
      <param name="rowSize">The number of rows in the new range. If this argument is omitted, the number of rows in the range remains the same.</param>
      <param name="columnSize">The number of columns in the new range. If this argument is omitted, the number of columns in the range remains the same.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the resized range.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Height">
      <summary>
            Gets a <see cref="T:System.Int64" /> value that represents the height, in pixels, of the range.
            </summary>
      <value>The height.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Left">
      <summary>
            Returns a <see cref="T:System.Int64" /> value that represents the distance, in pixels, from the left edge of column A to the left edge of the range.
            </summary>
      <value>The height.</value>
      <remarks>If the range is discontinuous, the first area is used. If the range is more than one column wide, the leftmost column in the range is used.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Top">
      <summary>
            Gets a <see cref="T:System.Int64" /> value that represents the distance, in pixels, from the top edge of row 1 to the top edge of the range.
            </summary>
      <value>The height.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Width">
      <summary>
            Gets a <see cref="T:System.Int64" /> value that represents the width, in pixels, of the range.
            </summary>
      <value>The width.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.UseStandardHeight">
      <summary>
            Gets or sets a boolean value indicating whether the row height of the <see cref="T:GrapeCity.Spreadsheet.IRange" /> object equals the standard height of the sheet.
            Returns <c>null</c> if the range contains more than one row and the rows aren't all the same height.
            </summary>
      <value>
        <c>true</c> if the row height of the <see cref="T:GrapeCity.Spreadsheet.IRange" /> object equals the standard height of the sheet; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.UseStandardWidth">
      <summary>
            Gets or sets a boolean value indicating whether the column width of the <see cref="T:GrapeCity.Spreadsheet.IRange" />  object equals the standard width of the sheet.
            Returns <c>null</c> if the range contains more than one column and the columns aren't all the same width.
            </summary>
      <value>
        <c>true</c> if the column width of the <see cref="T:GrapeCity.Spreadsheet.IRange" />  object equals the standard width of the sheet; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.ShowCard">
      <summary>
            For a cell containing a rich data type, implement <see cref="T:GrapeCity.CalcEngine.IRichValue" />, this method causes a card to appear that shows details about the cell (that is, the same card that the user can view by choosing the cell icon).
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Show">
      <summary>
            Scrolls through the contents of the active window to move the range into view. The range must consist of a single cell in the active document.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Next">
      <summary>
            Returns an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the next cell.
            </summary>
      <value>The next.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Previous">
      <summary>
            Returns an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the previous cell.
            </summary>
      <value>The previous.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.FillDown">
      <summary>
            Fills down from the top cell or cells in the specified range to the bottom of the range.
            The contents and formatting of the cell or cells in the top row of a range are copied into the rest of the rows in the range.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.FillLeft">
      <summary>
            Fills left from the rightmost cell or cells in the specified range.
            The contents and formatting of the cell or cells in the rightmost column of a range are copied into the rest of the columns in the range.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.FillUp">
      <summary>
            Fills up from the bottom cell or cells in the specified range to the top of the range.
            The contents and formatting of the cell or cells in the bottom row of a range are copied into the rest of the rows in the range.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.FillRight">
      <summary>
            Fills right from the leftmost cell or cells in the specified range.
            The contents and formatting of the cell or cells in the leftmost column of a range are copied into the rest of the columns in the range.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Dirty">
      <summary>
            Designates a range to be recalculated when the next recalculation occurs.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.BorderAround(GrapeCity.Spreadsheet.BorderLineStyle)">
      <summary>
            Adds a border to a range and sets the <see cref="P:GrapeCity.Spreadsheet.IBorder.Color" /> and <see cref="P:GrapeCity.Spreadsheet.IBorder.LineStyle" /> properties of the <see cref="T:GrapeCity.Spreadsheet.IBorder" /> object for the new border.
            </summary>
      <param name="borderLine"></param>
      <param name="color"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.BorderAround(GrapeCity.Spreadsheet.BorderLineStyle,GrapeCity.Spreadsheet.Color)">
      <summary>
            Adds a border to a range and sets the <see cref="P:GrapeCity.Spreadsheet.IBorder.Color" /> and <see cref="P:GrapeCity.Spreadsheet.IBorder.LineStyle" /> properties of the <see cref="T:GrapeCity.Spreadsheet.IBorder" /> object for the new border.
            </summary>
      <param name="lineStyle">The line style for the border.</param>
      <param name="color">The border color.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.Characters(System.Int32,System.Int32)">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ICharacters" /> object that represents a range of characters within the object text.
            You can use the <see cref="T:GrapeCity.Spreadsheet.ICharacters" /> object to format characters within a text string.
            </summary>
      <param name="start">The first character to be returned. If this argument is either 0 or omitted, this property returns a range of characters starting with the first character.</param>
      <param name="length">The number of characters to be returned. If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="start" /> character).</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.SpecialCells(GrapeCity.Spreadsheet.SpecialCellType,GrapeCity.Spreadsheet.SpecialCellsValue)">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the cells that match the specified type and value.
            </summary>
      <param name="type">The cells to include.</param>
      <param name="value">If <paramref name="type" /> is either <see cref="F:GrapeCity.Spreadsheet.SpecialCellType.Constants" /> or <see cref="F:GrapeCity.Spreadsheet.SpecialCellType.Formulas" />,
            this argument is used to determine which types of cells to include in the result.
            These values can be added together to return more than one type. The default is to select all constants or formulas, no matter what the type.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the cells that match the specified type and value</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.CreateCamera">
      <summary>
            Creates an <see cref="T:GrapeCity.Spreadsheet.Drawing.ICamera" /> object that represents the visual of a cell range.
            </summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.Drawing.ICamera" /> object that represents the visual of a cell range.</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.IRange.TextToColumns(System.Int32,System.Int32,GrapeCity.Spreadsheet.TextParsingType,GrapeCity.Spreadsheet.TextQualifier,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Char,System.Tuple{System.Int32,GrapeCity.Spreadsheet.ColumnDataType}[],System.Char,System.Char,System.Boolean)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.IRange.TextToColumns(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.TextParsingType,GrapeCity.Spreadsheet.TextQualifier,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Char,System.Tuple{System.Int32,GrapeCity.Spreadsheet.ColumnDataType}[],System.Char,System.Char,System.Boolean)" -->
    <member name="M:GrapeCity.Spreadsheet.IRange.TextToColumns(System.String,GrapeCity.Spreadsheet.TextParsingType,GrapeCity.Spreadsheet.TextQualifier,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Char,System.Tuple{System.Int32,GrapeCity.Spreadsheet.ColumnDataType}[],System.Char,System.Char,System.Boolean)">
      <summary>
            Parses a column of cells that contain text into several columns.
            </summary>
      <param name="destination">A string value that specifies where Spread will place the results. If the range is larger than a single cell, the top left cell is used.</param>
      <param name="dataType">The format of the text to be split into columns.</param>
      <param name="textQualifier">Specifies whether to use single, double, or no quotes as the text qualifier.</param>
      <param name="consecutiveDelimiter">
        <c>true</c> to have Excel consider consecutive delimiters as one delimiter.</param>
      <param name="tab">
        <c>true</c> to have <paramref name="dataType" /> be <see cref="F:GrapeCity.Spreadsheet.TextParsingType.Delimited" /> and to have the tab character be a delimiter.</param>
      <param name="semicolon">
        <c>true</c> to have <paramref name="dataType" /> be <see cref="F:GrapeCity.Spreadsheet.TextParsingType.Delimited" /> and to have the semicolon character be a delimiter.</param>
      <param name="comma">
        <c>true</c> to have <paramref name="dataType" /> be <see cref="F:GrapeCity.Spreadsheet.TextParsingType.Delimited" /> and to have the comma character be a delimiter.</param>
      <param name="space">
        <c>true</c> to have <paramref name="dataType" /> be <see cref="F:GrapeCity.Spreadsheet.TextParsingType.Delimited" /> and to have the space character be a delimiter.</param>
      <param name="other">
        <c>true</c> to have <paramref name="dataType" /> be <see cref="F:GrapeCity.Spreadsheet.TextParsingType.Delimited" /> and to have the <paramref name="otherChar" /> character be a delimiter.</param>
      <param name="otherChar">Required if <paramref name="other" /> is <c>true</c>; the delimiter character when <paramref name="other" /> is <c>true</c>.
            If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</param>
      <param name="fieldInfo">An array containing parse information for the individual columns of data. The interpretation depends on the value of <paramref name="dataType" />.
            When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.
            The first element is the column number, and the second element is one of the <see cref="T:GrapeCity.Spreadsheet.ColumnDataType" /> constants specifying how the column is parsed.</param>
      <param name="decimalSeparator">The decimal separator that Spread uses when recognizing numbers. The default setting is the system setting.</param>
      <param name="thousandsSeparator">The thousands separator that Excel uses when recognizing numbers. The default setting is the system setting.</param>
      <param name="trailingMinusNumbers">Numbers that begin with a minus character.</param>
      <returns>
        <c>true</c> if the columns are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.RemoveDuplicates(System.Int32[],GrapeCity.Spreadsheet.YesNoGuess)">
      <summary>
            Removes duplicate values from a range of values.
            </summary>
      <param name="columns">Array of indexes of the columns that contain the duplicate information. Specify <c>null</c> if you want to remove duplicates in all columns.</param>
      <param name="header">Specifies whether the first row contains header information. Specify <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.Guess" /> if you want Spread to attempt to determine the header.</param>
      <returns>The total numbers of removed rows.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Boolean)">
      <summary>
            Creates the automatic filter for current selection if the filter doesn't exist; otherwise, remove the filter.
            </summary>
      <param name="columnFilter">A boolean value indicating whether the <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> is column filter. The default value is <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Int32,GrapeCity.Spreadsheet.Fill)">
      <summary>
            Add the cell fill color filter.
            </summary>
      <param name="columnIndex">Index of the column.</param>
      <param name="fillColor">Color of the fill.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Int32,GrapeCity.Spreadsheet.Color)">
      <summary>
            Add the font color filter.
            </summary>
      <param name="columnIndex">Index of the column.</param>
      <param name="color">Color of the font.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Int32,GrapeCity.Spreadsheet.DynamicFilterType)">
      <summary>
            Add the dynamic filter.
            </summary>
      <param name="columnIndex">Index of the column.</param>
      <param name="dynamicType">A <see cref="T:GrapeCity.Spreadsheet.DynamicFilterType" /> value indicates the dynamic filter type.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Int32,GrapeCity.Spreadsheet.CfIcon)">
      <summary>
            Add the icon filter.
            </summary>
      <param name="columnIndex">Index of the column.</param>
      <param name="icon">A <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value represents the icon which is used to filter.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Int32,System.Object,GrapeCity.Spreadsheet.AutoFilterOperator,System.Object)">
      <summary>
            Filters a list using the AutoFilter.
            </summary>
      <param name="columnIndex">Index of the column.</param>
      <param name="criteria1">The first criteria is corresponding the first filter criteria.</param>
      <param name="filterOperator">The value specifying the type of filter.</param>
      <param name="criteria2">The second criteria is corresponding the second filter criteria.</param>
      <remarks>
            If <paramref name="filterOperator" /> is <see cref="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterValues" />, <paramref name="criteria1" /> can be <see cref="!:string[]" /> or <see cref="!:DateGroupItem[]" /> array.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.SparklineGroups">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ISparklineGroups" /> object that represents an existing group of sparklines from the specified range.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFill(System.String,GrapeCity.Spreadsheet.AutoFillType)">
      <summary>
            Performs an autofill on the cells in the specified range.
            </summary>
      <param name="destination">The cells to be filled. The destination must include the source range.</param>
      <param name="type">Specifies the fill type.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AutoFill(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.AutoFillType)">
      <summary>
            Performs an autofill on the cells in the specified range.
            </summary>
      <param name="destination">The cells to be filled. The destination must include the source range.</param>
      <param name="type">Specifies the fill type.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Comment">
      <summary>
            Gets a <see cref="P:GrapeCity.Spreadsheet.IRange.Comment" /> object that represents the comment associated with the cell in the upper-left corner of the range.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.IRange.Comment" /> object that represents the comment associated with the cell.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AddComment(System.String)">
      <summary>
            Adds a comment to the cell.
            </summary>
      <param name="text">The comment text.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IComment" /> object represents the comment of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AddComment(GrapeCity.Spreadsheet.RichText)">
      <summary>
            Adds a comment to the cell.
            </summary>
      <param name="text">The comment text.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IComment" /> object represents the comment of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.AddCommentThreaded(System.String)">
      <summary>
            Adds a new modern threaded comment to the range if no comment already exists.
            </summary>
      <param name="text">The comment text.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.CommentThreaded">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object that represents the threaded comment associated with the cell in the upper-left corner of the range.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IRange.ClearHyperlinks">
      <summary>
            Removes all hyperlinks from the specified range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.Hyperlinks">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IHyperlinks" /> collection that represents the hyperlinks for the range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRange.CellType">
      <summary>
            Gets or sets the cell type for cells in this <see cref="T:GrapeCity.Spreadsheet.IRange" />.
            </summary>
      <value>The cell type of for cells in this <see cref="T:GrapeCity.Spreadsheet.IRange" />.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IStyles">
      <summary>
            Represents a collection of all styles in the workbook.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyles.Count">
      <summary>
            Gets an integer value that represents the number of styles in the <see cref="T:GrapeCity.Spreadsheet.IStyles" /> collection.
            </summary>
      <value>An integer value that represents the number of styles.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyles.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object at the specified index.
            </summary>
      <param name="index">The index number of the style.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyles.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object with the specified name.
            </summary>
      <param name="name">The name of the style.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object with the specified name.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyles.Item(GrapeCity.Spreadsheet.BuiltInStyle)">
      <summary>
            Gets the built-in <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object.
            </summary>
      <param name="builtInStyle">A <see cref="!:builtInStyle" /> value indicates the built-in style.</param>
      <returns>The built-in <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IStyles.Add(System.String,System.String)">
      <summary>
            Creates a new style and adds it to the list of styles that are available for the current workbook.
            </summary>
      <param name="name">The new style name.</param>
      <param name="duplicatedStyle">The duplicated style name.</param>
      <remarks>Returns null if the name already exist.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IStyles.Merge(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Spreadsheet.YesNoCancel)">
      <summary>
            Merges the styles from another workbook into the <see cref="T:GrapeCity.Spreadsheet.IStyles" /> collection.
            </summary>
      <param name="workbook">An <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> object that represents the workbook containing styles to be merged.</param>
      <param name="duplicate">A <see cref="T:GrapeCity.Spreadsheet.YesNoCancel" /> value that represents the action for duplicated styles.
            <para><see cref="F:GrapeCity.Spreadsheet.YesNoCancel.Yes" /> to overwrite all duplicated styles.</para><para><see cref="F:GrapeCity.Spreadsheet.YesNoCancel.No" /> to mege only non-duplicated styles.</para><para><see cref="F:GrapeCity.Spreadsheet.YesNoCancel.Cancel" /> to merge nothing if there is a duplicated styles.</para></param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorkbook">
      <summary>
            Represents a workbook.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.ApplyTheme(GrapeCity.Core.Theme)">
      <summary>
            Applies the specified theme to the current workbook.
            </summary>
      <param name="theme">A <see cref="P:GrapeCity.Spreadsheet.IWorkbook.Theme" /> object indicates the theme to apply.</param>
      <returns>
        <c>true</c> if the theme is applied successfully; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.ApplyTheme(System.String)">
      <summary>
            Applies the specified theme to the current workbook.
            </summary>
      <param name="filename">A string value indicates the theme file to apply.</param>
      <returns>
        <c>true</c> if the theme is loaded and applied successfully; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.ApplyTheme(System.IO.Stream)">
      <summary>
            Applies the specified theme to the current workbook.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object indicates the theme data to apply.</param>
      <returns>
        <c>true</c> if the theme is loaded and applied successfully; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.Calculate">
      <summary>
            Calculates this workbook.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.BreakLink(System.String)">
      <summary>
            Converts formulas linked to other workbook to values.
            </summary>
      <param name="name">The name of the link.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.Close(System.Boolean,System.String)">
      <summary>
            Closes this workbook.
            </summary>
      <param name="saveChanges">If there are no changes to the workbook, this argument is ignored.
            If set to True , changes are saved to the workbook. If there is not yet a file name associated with the workbook, then <paramref name="filename" /> is used. 
            If <paramref name="filename" /> is omitted and there is no file name associated with the workbook, <paramref name="saveChanges" /> is ignored.</param>
      <param name="filename">Save changes under this file name.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.Protect(GrapeCity.Spreadsheet.WorkbookLocks,System.String)">
      <summary>
            Protects a workbook so that it cannot be modified.
            </summary>
      <param name="locks">A <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> value indicates which data will be protected.</param>
      <param name="password">A string value that specifies a case-sensitive password for the worksheet or workbook.</param>
      <returns>
        <c>true</c> if the workbook is protected successful, <c>false</c> otherwise.</returns>
      <remarks>
            Note that support for <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> and <paramref name="password" /> is limited to reading and writing the OpenXML file. All options of <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> have same effect in runtime.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.UpdateLink(System.String,System.Func{GrapeCity.Spreadsheet.Workbook,System.String,GrapeCity.Spreadsheet.Worksheet})">
      <summary>
            Updates the specified link of this workbook.
            </summary>
      <param name="name">The name of the link to be updated, as returned from the <see cref="P:GrapeCity.Spreadsheet.IWorkbook.LinkSources" />.</param>
      <param name="missingWorksheetResolver">The resolver which will be invoked if the reference worksheet is missing.</param>
      <returns>
        <c>true</c> if the link is updated successfully; otherwise <c>false</c>.</returns>
      <remarks>When the <see cref="!:UpdateLink(string)" /> method is called without any parameters (or <paramref name="name" /> is null/empty),
            Spread defaults to updating all worksheet links.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.UpdateLink(System.String[],System.Func{GrapeCity.Spreadsheet.Workbook,System.String,GrapeCity.Spreadsheet.Worksheet})">
      <summary>
            Updates one or all links of this workbook.
            </summary>
      <param name="names">The name of the links to be updated, as returned from the <see cref="P:GrapeCity.Spreadsheet.IWorkbook.LinkSources" />. <c>null</c> is to update all links.</param>
      <param name="missingWorksheetResolver">The resolver which will be invoked if the reference worksheet is missing.</param>
      <returns>
        <c>true</c> if all links are updated successfully; otherwise <c>false</c> if there is at least one link is failed to update.</returns>
      <remarks>
            When the <see cref="!:UpdateLink(string)" /> method is called without any parameters (or <paramref name="name" /> is null/empty), 
            Spread defaults to updating all worksheet links.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.Unprotect(System.String)">
      <summary>
            Unprotects the workbook which is protected by password.
            </summary>
      <param name="password">A string value that denotes the case-sensitive password to use to unprotect workbook.</param>
      <returns>
        <c>true</c> if the workbook is unprotected successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.SaveAs(System.IO.Stream,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>
            Saves this <see cref="T:GrapeCity.Spreadsheet.Workbook" /> to the specified <see cref="T:System.IO.Stream" />.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object indicates the stream to save to.</param>
      <param name="fileFormat">A <see cref="T:GrapeCity.Spreadsheet.IO.FileFormat" /> value indicates the file format when saving the workbook.</param>
      <param name="password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
      <returns>
        <c>true</c> if this workbook is saved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.SaveAs(System.String,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>
            Saves this <see cref="T:GrapeCity.Spreadsheet.Workbook" /> to the specified file location.
            </summary>
      <param name="filename">A string value indicates the file name to save to.</param>
      <param name="fileFormat">A <see cref="T:GrapeCity.Spreadsheet.IO.FileFormat" /> value indicates the file format when saving the workbook.</param>
      <param name="password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
      <returns>
        <c>true</c> if this workbook is saved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.Save">
      <summary>
            Saves changes to the specified workbook.
            </summary>
      <returns>
        <c>true</c> if changes are saved successful, <c>false</c> otherwise.</returns>
      <remarks>
            To open a workbook file, use the <see cref="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.IO.Stream,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Boolean)" /> method or <see cref="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.String,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)" /> method.
            <para>To mark a workbook as saved without writing it to a disk, set its Saved property to True.</para><para>The first time you save a workbook, use the <see cref="M:GrapeCity.Spreadsheet.IWorkbook.SaveAs(System.IO.Stream,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)" /> method or <see cref="M:GrapeCity.Spreadsheet.IWorkbook.SaveAs(System.String,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)" /> method to specify a name for the file.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.ActiveSheet">
      <summary>
            Gets the active sheet (the sheet on top).
            </summary>
      <value>The active sheet (the sheet on top); null if no sheet is active.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.BuiltinDocumentProperties">
      <summary>
            Gets or sets the <see cref="T:GrapeCity.Spreadsheet.DocumentProperties" /> object that represents all built-in properties of the workbook.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DocumentProperties" /> object represents all built-in properties of the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Colors">
      <summary>
            Gets or sets colors in the palette for the workbook. The palette has 56 entries, each represented by an ARGB value.
            </summary>
      <value>All colors in the palette for the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Date1904">
      <summary>
            Gets or sets whether the date system used to convert a date to a serial value starts since 1/1/1904.
            </summary>
      <value>
        <c>true</c>, if the date system starts in 1904; otherwise, <c>false</c>. Default is <c>false</c>.</value>
      <remarks>All workbooks in the same workbook set share same value of <see cref="P:GrapeCity.Spreadsheet.IWorkbook.Date1904" />.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.DefaultTableStyle">
      <summary>
            Gets or sets the table style from the <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> collection that is used as the default table style.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> object represents the default table style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.DefaultSlicerStyle">
      <summary>
            Gets or sets the table style from the <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> collection that is used as the default slicer style.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> object represents the default slicer style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.FullName">
      <summary>
            Gets the name of this workbook, including its path, as a string. 
            </summary>
      <value>The full name of this workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Name">
      <summary>
            Gets or sets the name of this <see cref="T:GrapeCity.Spreadsheet.Workbook" />.
            </summary>
      <value>A string value represents the name of this <see cref="T:GrapeCity.Spreadsheet.Workbook" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Names">
      <summary>
            Gets a <see cref="P:GrapeCity.Spreadsheet.IWorkbook.Names" /> collection that represents all the names in the specified workbook (including all worksheet-specific names).
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.IWorkbook.Names" /> collection that represents all the names in the specified workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Path">
      <summary>
            Gets a string that represents the complete path to the workbook/file that this workbook object respresents.
            </summary>
      <value>The complete path to the workbook/file that this workbook object respresents.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.SaveLinkValues">
      <summary>
            Gets or sets a boolean value indicating whether externally referenced values will be saved with the workbook,
            enabling cells which refer to those values to be calculated without returning a #REF! error.
            </summary>
      <value>
        <c>true</c> if externally referenced values will be saved with the workbook; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Worksheets">
      <summary>
            Gets the worksheet collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Styles">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Styles" /> collection that represents all the styles in the workbook.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Styles" /> collection that represents all the styles in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.TableStyles">
      <summary>
            Gets the collection of table styles that are used in the workbook.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyles" /> collection that contains the table styles that are used in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Theme">
      <summary>
            Gets or sets the theme applied to the current workbook.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.UpdateLinks">
      <summary>
            Gets or sets an <see cref="T:GrapeCity.Spreadsheet.UpdateLinks" /> constant indicating a workbook's setting for updating links.
            </summary>
      <value>The workbook's setting for updating links.</value>
      <remarks>Updating links is for physical files. If the external workbook is already opened, the workbook will always be linked.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.LinkSources">
      <summary>
            Gets an array of links in the workbook. The names in the array are the names of the linked documents. Returns empty array if there are no links.
            </summary>
      <value>The link sources.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.ProtectStructure">
      <summary>
            Gets a value indicating whether the order of the sheets in the workbook is protected.
            </summary>
      <value>
        <c>true</c> if the order of the sheets in the workbook is protected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.ProtectWindows">
      <summary>
            Gets a value indicating whether the windows of the workbook are protected.
            </summary>
      <value>
        <c>true</c> if the windows of the workbook are protected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.WorkbookSet">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.IWorkbook.WorkbookSet" /> object contains current <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.SlicerCaches">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCaches" /> object associated with the workbook.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCaches" /> object associated with the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.ShowHorizontalScroll">
      <summary>
            Specifies a boolean value that indicates whether to display the horizontal scroll bar in the user interface.
            </summary>
      <value>A value of <c>true</c> or <c>false</c> indicates that the horizontal scrollbar shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.ShowSheetTabs">
      <summary>
            Specifies a boolean value that indicates whether to display the sheet tabs in the user interface.
            </summary>
      <value>A value of <c>true</c> or <c>false</c> indicates that sheet tabs shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.ShowVerticalScroll">
      <summary>
            Specifies a boolean value that indicates whether to display the vertical scroll bar in the user interface.
            </summary>
      <value>A value of <c>true</c> or <c>false</c> indicates the vertical scrollbar shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.Features">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Features" /> object to manipulate settings of features.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbook.SelectedSheets">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.IWorksheets" /> collection that represents all the selected sheets in the specified window.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbook.ConvertComments">
      <summary>
            Converts all legacy comments and notes to modern comments.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorkbookSet">
      <summary>
            Represents a set of workbooks which may refer to each other by external cell references or external defined name references. 
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.DefaultBehaviors">
      <summary>
            Gets or sets the default behaviors of operations.
            </summary>
      <value>The default behaviors of operations.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.CalculationEngine">
      <summary>
            Gets the calculation engine.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.Workbooks">
      <summary>
            Gets all of the workbooks in this workbook set.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IWorkbooks" /> instance represents all of the workbooks in this workbook set.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.CutCopyMode">
      <summary>
            Gets or sets the status of Cut or Copy mode.
            </summary>
      <value>
            Sets the status to <see cref="F:GrapeCity.Spreadsheet.CutCopyMode.None" /> to cancels Cut or Copy mode and removes the moving border;
            otherwise, starts Cut or Copy mode and shows the moving border.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.UserName">
      <summary>
            Gets or sets the name of the current user. 
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbookSet.BeginUpdate">
      <summary>
            Suspends painting and events until <see cref="M:GrapeCity.Spreadsheet.IWorkbookSet.EndUpdate" /> is called. Calling this function is exclusively.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbookSet.EndUpdate">
      <summary>
            Restores painting and events to the state before the last call to <see cref="M:GrapeCity.Spreadsheet.IWorkbookSet.BeginUpdate" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.Culture">
      <summary>
            Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> of this workbook set.
            </summary>
      <value>The <see cref="T:System.Globalization.CultureInfo" /> of this workbook set.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.ColorManager">
      <summary>
            Gets the color manager of the <see cref="T:GrapeCity.Spreadsheet.IWorkbookSet" />.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IWorkbookSet.ColorManager" /> object represents the color manager.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.UIManager">
      <summary>
            Gets the UI manager of the <see cref="T:GrapeCity.Spreadsheet.IWorkbookSet" />.
            </summary>
      <value>The UI manager.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.CommandManager">
      <summary>
            Gets the command manager of the <see cref="T:GrapeCity.Spreadsheet.IWorkbookSet" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Commands.CommandManager" /> object represents the command manager.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbookSet.LanguagePackage">
      <summary>
            Gets or sets the language package for the workbook set.
            </summary>
      <remarks>Sets <c>null</c> to use the default language package.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbookSet.Calculate">
      <summary>
            Calculates all workbooks on this workbook set.
            </summary>
    </member>
    <member name="E:GrapeCity.Spreadsheet.IWorkbookSet.CellValueChanged">
      <summary>
            Occurs after the cell value(s) is changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbookSet.InitializeBatching">
      <summary>
            Initializes batching for changing cell values and formulas.
            </summary>
      <remarks>
            All changes, which happen after this function, will be notified at once by <see cref="E:GrapeCity.Spreadsheet.IWorkbookSet.CellValueChanged" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbookSet.TerminateBatching">
      <summary>
            Ends batching for changing cell values and formulas.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CutCopyMode">
      <summary>
            Specifies whether status is Copy mode or Cut mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CutCopyMode.None">
      <summary>
            Not in Cut or Copy mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CutCopyMode.Copy">
      <summary>
            In Copy mode
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CutCopyMode.Cut">
      <summary>
            In Cut mode
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorksheet">
      <summary>
            Represents a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Name">
      <summary>
            Gets or sets the name of worksheet.
            </summary>
      <value>A string value indicates the name of worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Type">
      <summary>
            Gets the worksheet type.
            </summary>
      <value>Returns a <see cref="T:GrapeCity.Spreadsheet.WorksheetType" /> value represents the worksheet type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.SubType">
      <summary>
            Gets the worksheet sub-type.
            </summary>
      <value>Returns a <see cref="T:GrapeCity.Spreadsheet.WorksheetSubType" /> value represents the worksheet sub-type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Owner">
      <summary>
            Gets the owner worksheet.
            </summary>
      <value>
            An <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object represents the owner worksheet of worksheet headers and footers.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Behaviors">
      <summary>
            Gets or sets the behaviors of operations.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Behaviors" /> value represents the behaviors of operations.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Cells">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which represents the entire worksheet cells (not just the cells that are currently in use).
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
      <remarks>
            Using this property without an object qualifier returns an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the cells on the active worksheet.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Columns">
      <summary>
            Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the columns on the worksheet. 
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to columns' data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Rows">
      <summary>
            Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the rows on the worksheet. 
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to rows' data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Workbook">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Workbook" /> object contains current <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Visible">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.SheetVisibility" /> value that determines whether the worksheet is visible.
            </summary>
      <value>Returns a <see cref="T:GrapeCity.Spreadsheet.SheetVisibility" /> value that indicates the worksheet visibility.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.CircularReference">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range containing the first circular reference on the worksheet, 
            or returns <c>null</c> if there's no circular reference on the worksheet.
            </summary>
      <value>The first circular reference on the worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Tables">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITables" /> object which manages all tables in this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ITables" /> object represents the tables of this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Shapes">
      <summary>
            Gets a collection of all the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> objects on this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> objects on this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Pictures">
      <summary>
            Gets a collection of all the <see cref="T:GrapeCity.Spreadsheet.Drawing.IPicture" /> objects on this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IPicture" /> objects on this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Slicers">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicers" /> collection that contains the collection of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> objects in the specified <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicers" /> collection that contains the collection of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> objects.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Sort">
      <summary>
            Gets the sort object.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ISort" /> object belong to the worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.AutoFilter">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object if filtering is on.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object represents the filter of this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object.</value>
      <remarks>The property returns Nothing if filtering is off.
            <para>To create an <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object for a worksheet, you must turn auto-filtering on for a range on the worksheet either manually or using the <see cref="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Boolean)" /> method of the <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.AutoFilterMode">
      <summary>
            Gets a value that indicates whether the AutoFilter drop-down arrows are currently displayed on the sheet.
            </summary>
      <value>
        <c>true</c> if the AutoFilter drop-down arrows are currently displayed on the sheet; otherwise, <c>false</c>.</value>
      <remarks>
            This property returns <c>true</c> if the drop-down arrows are currently displayed.
            You can set this property to <c>false</c> to remove the arrows, but you cannot set it to <c>true</c>.
            Use the <see cref="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Boolean)" /> method to filter a list and display the drop-down arrows.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.RowCount">
      <summary>
            Gets or sets the number of rows in this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
      <value>An integer value represents the number of rows in this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.ColumnCount">
      <summary>
            Gets or sets the number of columns in this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
      <value>An integer value represents the number of columns in this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Index">
      <summary>
            Gets the index number of the worksheet within the collection of worksheets.
            </summary>
      <value>The index number of the worksheet within the collection of worksheets.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Outline">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IOutline" /> object that represents the outline for the specified worksheet.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IOutline" /> object of the specified worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Styles">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.IWorksheetStyles" /> collection that represents all the styles in the worksheet.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IWorksheetStyles" /> collection that represents all the styles in the worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Names">
      <summary>
            Gets a <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!" prefix).
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Names" /> collection that represents all the worksheet-specific names.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Range(System.String,System.String)">
      <summary>
            Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents a cell or a range of cells.
            </summary>
      <param name="cell1">The name of the range. This must be an A1-style reference.</param>
      <param name="cell2">The cell in the lower-right corner of the range.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Range(GrapeCity.Spreadsheet.Reference[])">
      <summary>
            Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents ranges of reference.
            </summary>
      <param name="references">The name of the reference ranges. This must be an A1-style reference.</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.UsedRange">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the used range on the specified worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.ProtectionMode">
      <summary>
            Gets a value indicates whether user-interface-only protection is turned on. To turn on user interface protection, use the <see cref="M:GrapeCity.Spreadsheet.IWorksheet.Protect(GrapeCity.Spreadsheet.WorksheetLocks,System.String)" /> method.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ProtectionMode" /> value represents the protection mode.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Protection">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IProtection" /> object that represents the protection options of the worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Next">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object that represents the next sheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Previous">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object that represents the previous sheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.StandardWidth">
      <summary>
            Gets or sets the standard (default) width of all the columns on the worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.StandardHeight">
      <summary>
            Gets or sets the standard (default) height of all the rows on the worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.EnableSelection">
      <summary>
            Gets or sets what can be selected on the sheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Protect(GrapeCity.Spreadsheet.WorksheetLocks,System.String)">
      <summary>
            Protects a worksheet so that it cannot be modified.
            </summary>
      <param name="locks">A <see cref="T:GrapeCity.Spreadsheet.WorksheetLocks" /> value indicates which data will be protected.</param>
      <param name="password">A string that specifies a case-sensitive password for the worksheet.</param>
      <returns>
        <c>true</c> if the worksheet is protected successful, <c>false</c> otherwise.</returns>
      <remarks>
            Note that support for <see cref="T:GrapeCity.Spreadsheet.WorksheetLocks" /> is limited to reading and writing the OpenXML file. All options of <see cref="T:GrapeCity.Spreadsheet.WorksheetLocks" /> have same effect in runtime.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Unprotect(System.String)">
      <summary>
            Unprotects the worksheet which is protected by password.
            </summary>
      <param name="password">A string value that denotes the case-sensitive password to use to unprotect worksheet.</param>
      <returns>
        <c>true</c> if the worksheet is unprotected successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Delete">
      <summary>
            Deletes this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> from its owner <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Workbook" />.
            </summary>
      <returns>
        <c>true</c> if the worksheet is deleted, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Copy(System.Int32)">
      <summary>
            Copies this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> to the specified position in the <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> collection of the <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Workbook" />.
            </summary>
      <param name="position">An integer value indicates the specified position.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Move(System.Int32)">
      <summary>
            Moves this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> to the specified position in the <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> collection of the <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Workbook" />.
            </summary>
      <param name="position">An integer value indicates the specified position.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.RemoveColumns(System.Int32,System.Int32)">
      <summary>
            Removes one or more columns starting with the column at the specified position.
            </summary>
      <param name="column">An integer value indicates the index of first column to remove.</param>
      <param name="count">An integer value indicates the number of column(s) to remove.</param>
      <returns>
        <c>true</c> if the columns are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.RemoveRows(System.Int32,System.Int32)">
      <summary>
            Removes one or more rows starting with the row at the specified position.
            </summary>
      <param name="row">An integer value indicates the index of first row to remove.</param>
      <param name="count">An integer value indicates the number of row(s) to remove.</param>
      <returns>
        <c>true</c> if the rows are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.InsertColumns(System.Int32,System.Int32)">
      <summary>
            Inserts column(s) to the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified position.
            </summary>
      <param name="column">An integer value indicates the column index at which to insert new columns.</param>
      <param name="count">An integer value indicates the number of rows to insert.</param>
      <returns>
        <c>true</c> if the columns are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.InsertRows(System.Int32,System.Int32)">
      <summary>
            Inserts row(s) to the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified position.
            </summary>
      <param name="row">An integer value indicates the row index at which to insert new row(s).</param>
      <param name="count">An integer value indicates the number of row(s) to insert.</param>
      <returns>
        <c>true</c> if the rows are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Activate">
      <summary>
            Makes the current sheet the active sheet.
            </summary>
      <remarks>This method is equivalent to clicking the tab at the bottom of the sheet.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets raw data from the specified cell on this sheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:System.Object" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Sets the <see cref="T:System.Boolean" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Boolean" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Byte)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Byte" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,GrapeCity.CalcEngine.CalcError)">
      <summary>
            Sets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.DateTime)">
      <summary>
            Sets the <see cref="T:System.DateTime" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.DateTime" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Decimal)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Decimal" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Double)">
      <summary>
            Sets the <see cref="T:System.Double" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Double" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Single)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Single" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int32" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int64)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int64" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>
            Sets the <see cref="T:System.Object" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Object[0:,0:])">
      <summary>
            Sets an object array into a specified range of cells.
            </summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Object[0:,0:],System.Boolean)">
      <summary>
            Sets an object array into a specified range of cells.
            </summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
      <param name="vertical">if True, array will be set follow column index, other, it will be set follow row index. </param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,GrapeCity.CalcEngine.CellValue@)">
      <summary>
            Sets the <see cref="T:GrapeCity.CalcEngine.CellValue" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="cellValue">An <see cref="T:GrapeCity.CalcEngine.CellValue" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int16)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int16" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.String)">
      <summary>
            Sets the <see cref="T:System.String" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.String" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue``1(System.Int32,System.Int32,``0[0:,0:])">
      <summary>
            Sets an object array into a specified range of cells.
            </summary>
      <typeparam name="T"></typeparam>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue``1(System.Int32,System.Int32,``0[0:,0:],System.Boolean)">
      <summary>
            Sets an object array into a specified range of cells.
            </summary>
      <typeparam name="T"></typeparam>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
      <param name="vertical">if True, array will be set follow column index, other, it will be set follow row index. </param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Sets the <see cref="T:System.Boolean" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Boolean" /> value to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.CalcError)">
      <summary>
            Sets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)">
      <summary>
            Sets the <see cref="T:System.DateTime" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.DateTime" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>
            Sets the <see cref="T:System.Double" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Double" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Int32" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>
            Sets the value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Sets the <see cref="T:System.String" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.String" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Calculate">
      <summary>
            Calculates this worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.CircleInvalid">
      <summary>
            Circles invalid entries on the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.CircleInvalid(System.Int32)">
      <summary>
            Get a <see cref="!:GrapeCity.Spreadsheet.CellReference[]" /> array of invalid entries on the worksheet.
            </summary>
      <param name="maximumCells">An integer value indicates the maximum returned invalid entries. Default value will be used if <paramref name="maximumCells" /> is less than 1.</param>
      <returns>A <see cref="!:GrapeCity.Spreadsheet.CellReference[]" /> array represents the position of invalid cells.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.ClearCircles">
      <summary>
            Clears circles from invalid entries on the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Paste(GrapeCity.Spreadsheet.IRange)">
      <summary>
            Pastes the contents of the Clipboard onto the sheet.
            </summary>
      <param name="destination">An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that specifies where the Clipboard contents should be pasted. If this argument is omitted, the current selection is used.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.Paste(System.String)">
      <summary>
            Pastes the contents of the Clipboard onto the sheet.
            </summary>
      <param name="destination">A <see cref="T:System.String" /> value that specifies where the Clipboard contents should be pasted. If this argument is omitted, the current selection is used.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetBackgroundPicture(System.String,System.String)">
      <summary>
            Sets the background graphic for a worksheet.
            </summary>
      <param name="filename">The name of the graphic file.</param>
      <param name="contentType">The file content type.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheet.SetBackgroundPicture(System.IO.Stream,System.String)">
      <summary>
            Sets the background graphic for a worksheet.
            </summary>
      <param name="imageStream">The graphic binary data.</param>
      <param name="contentType">The data content type.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.RowHeader">
      <summary>
            Gets the row header of a worksheet.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRowHeader" /> object represents the row header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.ColumnHeader">
      <summary>
            Gets the column header of a worksheet.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IColumnHeader" /> object represents the column header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.ColumnFooter">
      <summary>
            Gets the column footer of a worksheet.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IColumnFooter" /> object represents the column header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.DataManager">
      <summary>
            Gets the data manager of this worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.View">
      <summary>
            Gets the worksheet view of this <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IWorksheetView" /> object represents the sheet view.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Selection">
      <summary>
            Gets the current selected cell(s).
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.ActiveCell">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the active cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.TabColor">
      <summary>
            Gets or sets the color of the tab.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the color of the tab.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Options">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.WorksheetOptions" /> object that represents all options of the <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Comments">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IComments" /> collection that represents all the comments for the specified worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.CommentsThreaded">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ICommentsThreaded" /> collection that represents all the top-level/root comments (no replies) for the specified worksheet.
            Includes legacy and modern comments.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheet.Hyperlinks">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IHyperlinks" /> collection that represents the hyperlinks for the worksheet.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorksheets">
      <summary>
            Represents a set of worksheets in a workbook.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheets.Count">
      <summary>
            Gets the number of worksheets in the workbook.
            </summary>
      <value>An integer value represents the number of worksheets in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheets.Item(System.Int32)">
      <summary>
            Gets the specified <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> by the zero based index.
            </summary>
      <param name="index">An integer value indicates the worksheet index.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheets.Item(System.String)">
      <summary>
            Gets the specified <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> by the worksheet name.
            </summary>
      <param name="name">A string value indicates the worksheet name.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> which has the specified name.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheets.Item(System.Int32[])">
      <summary>
            Gets the specified <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> objects by the zero based indexes.
            </summary>
      <param name="indexes">An array of integer values indicates the worksheet indexes.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> objects at the specified indexes.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheets.Item(System.String[])">
      <summary>
            Gets the specified <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> objects by the worksheet names.
            </summary>
      <param name="names">An array of string values indicates the worksheet names.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> objects which has the specified names.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheets.WorkbookSet">
      <summary>
            Gets the parent workbook set of this IWorksheets.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IWorksheets.WorkbookSet" /> object represents the parent workbook set of this IWorksheets.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheets.Add(System.String,System.Int32)">
      <summary>
            Creates a new <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
      <param name="worksheetName">A string value indicates the name of the <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</param>
      <param name="insertAt">An integer value indicates the position of the new created <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheets.Select(System.Boolean)">
      <summary>
            Selects all worksheets.
            </summary>
      <param name="replace">
        <c>true</c> to replace the current selection with the specified worksheets.
            <c>false</c> to extend the current selection to include any previously selected worksheets and the specified worksheets.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorksheets.Delete">
      <summary>
            Delete all worksheets.
            </summary>
      <returns>
        <c>true</c> if worksheets are deleted; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FindLookIn">
      <summary>
            Specifies the type of data to search.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FindLookIn.Values">
      <summary>
            Search for cell values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FindLookIn.Formulas">
      <summary>
            Search for cell formulas.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.LookAt">
      <summary>
            Specifies whether a match is made against the whole of the search text or any part of the search text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.LookAt.Part">
      <summary>
            Match against any part of the search text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.LookAt.Whole">
      <summary>
            Match against the whole of the search text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.LookAt.Begin">
      <summary>
            Match against the begin of the search text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.LookAt.End">
      <summary>
            Match against the end of the search text.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SearchOrder">
      <summary>
            Specifies the order in which to search the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SearchOrder.Rows">
      <summary>
            Searches across a row, then moves to the next row.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SearchOrder.Columns">
      <summary>
            Searches down through a column, then moves to the next column.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SearchDirection">
      <summary>
            Specifies the search direction when searching a range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SearchDirection.Next">
      <summary>
            Search for next matching value in range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SearchDirection.Previous">
      <summary>
            Search for previous matching value in range.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISparklineGroup">
      <summary>
            Represents a group of sparklines.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.PlotBy">
      <summary>
            Gets or sets how to plot the sparkline when the data on which it is based is in a square-shaped range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.DateRange">
      <summary>
            Gets or sets the date range for the sparkline group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.Count">
      <summary>
            Gets the number of sparklines in the sparkline group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ISparkline" /> object at the specified index.
            </summary>
      <param name="index">Index value of the sparkline.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.Location">
      <summary>
            Gets or sets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the location of the sparkline group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.SourceData">
      <summary>
            Gets or sets the range that contains the source data for the sparkline group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.Type">
      <summary>
            Gets or sets the type of sparkline for the group.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroup.ModifyLocation(System.Int32,System.Int32)">
      <summary>
            Modify the location of the sparkline group.
            </summary>
      <param name="row">An integer value indicates the anchor row of target location.</param>
      <param name="column">An integer value indicates the anchor column of target location.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroup.ModifyLocation(System.String)">
      <summary>
            Modify the location of the sparkline group.
            </summary>
      <param name="location">The range that represents the location of the sparkline group.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroup.ModifySourceData(System.String)">
      <summary>
            Modifies the source data for a sparkline group.
            </summary>
      <param name="sourceData">The range that contains the source data.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroup.Delete">
      <summary>
            Deletes the sparkline group.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroup.Modify(System.String,System.String)">
      <summary>
            Modifies the location and the source data for the sparkline group.
            </summary>
      <param name="location">The string value that represents the location of the sparkline group.</param>
      <param name="sourceData">The range that represents the source data for the sparkline group.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroup.ModifyDateRange(System.String)">
      <summary>
            Modifies the date range for the sparkline group.
            </summary>
      <param name="dateRange">The date range for the sparkline group.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.Axes">
      <summary>
            Gets the associated <see cref="T:GrapeCity.Spreadsheet.ISparkAxes" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.DisplayBlanksAs">
      <summary>
            Gets or sets the way that blank cells are plotted.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.DisplayHidden">
      <summary>
            Gets or sets a value indicating whether hidden cells are plotted in the sparkline group.
            </summary>
      <value>
        <c>true</c> if hidden cells are shown in the sparkline group; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.LineWeight">
      <summary>
            Gets or sets the thickness of the sparklines in the sparkline group, where the line weight is measured in points.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.Points">
      <summary>
            Gets the associated <see cref="T:GrapeCity.Spreadsheet.ISparkPoints" /> object for the sparkline group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroup.SeriesColor">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Color" /> object that represents the main series color for the sparkline group.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISparklineGroups">
      <summary>
            Represents a collection of sparkline groups.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroups.Count">
      <summary>
            Gets the count of sparkline groups in the associated <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparklineGroups.Item(System.Int32)">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ISparklineGroup" /> object from an <see cref="T:GrapeCity.Spreadsheet.ISparklineGroups" /> collection.
            </summary>
      <param name="index">Specifies the position of an element in the collection.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.ISparklineGroup" /> object from an <see cref="T:GrapeCity.Spreadsheet.ISparklineGroups" /> collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroups.Add(GrapeCity.Spreadsheet.SparkType,System.String)">
      <summary>
            Creates a new sparkline group and returns a <see cref="T:GrapeCity.Spreadsheet.ISparklineGroup" /> object.
            </summary>
      <param name="type">The type of sparkline.</param>
      <param name="sourceData">Represents the range to use to create the sparkline.</param>
      <returns>The sparkline group are bound to the data in the range <paramref name="sourceData" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroups.Clear">
      <summary>
            Clears the selected sparklines.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroups.ClearGroups">
      <summary>
            Clears the selected sparkline groups.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroups.Group(System.String)">
      <summary>
            Groups the selected sparklines.
            </summary>
      <param name="location">The location of the first cell in the group.</param>
      <returns>
        <c>true</c> if sparklines are groupped successful; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroups.Group(System.Int32,System.Int32)">
      <summary>
            Groups the selected sparklines.
            </summary>
      <param name="row">The row of the first cell in the group.</param>
      <param name="column">The column of the first cell in the group.</param>
      <returns>
        <c>true</c> if sparklines are groupped successful; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparklineGroups.Ungroup">
      <summary>
            Ungroups the sparklines in the selected sparkline group.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISparkAxes">
      <summary>
            Represents the settings for the horizontal and vertical axes of a group of sparklines.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkAxes.Vertical">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ISparkVerticalAxis" /> object for the specified SparkAxes object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkAxes.Horizontal">
      <summary>
            Gets the SparkHorizontalAxis object for the specified SparkAxes object.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISparkVerticalAxis">
      <summary>
            Represents the settings for the vertical axes of a group of sparklines.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkVerticalAxis.MinScaleType">
      <summary>
            Gets or sets how the minimum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkVerticalAxis.MaxScaleType">
      <summary>
            Gets or sets how the maximum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkVerticalAxis.CustomMinScaleValue">
      <summary>
            Gets or sets the custom minimum value for the vertical axis of a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkVerticalAxis.CustomMaxScaleValue">
      <summary>
            Gets or sets the custom maximum value for the vertical axis of a sparkline.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SparkScale">
      <summary>
            Specifies how the minimum or maximum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SparkScale.Single">
      <summary>
            The minimum or maximum value for the vertical axis of each sparkline in the group is automatically set to its own calculated value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SparkScale.Group">
      <summary>
            The minimum or maximum value for the vertical axes of all of the sparklines in the group have the same value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SparkScale.Custom">
      <summary>
            The minimum or maximum value for the vertical axis of the sparkline has a user-defined value.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISparkHorizontalAxis">
      <summary>
            Represents the settings for the horizontal axes of a group of sparklines.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkHorizontalAxis.RightToLeftPlotOrder">
      <summary>
            Gets or sets a value indicating whether the points on the horizontal axis are plotted in right-to-left order.
            </summary>
      <value>
        <c>true</c> if the points on the horizontal axis are plotted in right-to-left order; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkHorizontalAxis.IsDateAxis">
      <summary>
            Gets or sets a value indicating whether the horizontal axis of the sparkline is based on date values.
            </summary>
      <value>
        <c>true</c> if the horizontal axis of the sparkline is based on date values; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkHorizontalAxis.Axis">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ISparkColor" /> object that specifies the color of the horizontal axis of the sparkline.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISparkPoints">
      <summary>
            Represents the settings of the markers for points of data on a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkPoints.Negative">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ISparkColor" /> object that represents the color and visibility of markers for negative points of data on a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkPoints.Markers">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ISparkColor" /> object that represents the color and visibility of markers for positive points of data on a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkPoints.Lowpoint">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ISparkColor" /> object that represents the color and visibility of the marker for the lowest point of data on a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkPoints.Lastpoint">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ISparkColor" /> object that represents the color and visibility of the marker for the last point of data on a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkPoints.Highpoint">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ISparkColor" /> object that represents the color and visibility of the marker for the highest point of data on a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkPoints.Firstpoint">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ISparkColor" /> object that represents the color and visibility of the marker for the first point of data on a sparkline.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISparkColor">
      <summary>
            Represents the color of the horizontal axis and the markers for points in a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkColor.Color">
      <summary>
            Gets or sets a FormatColor object that you can use to set the color of the horizontal axis or the markers for points in a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkColor.Visible">
      <summary>
            Gets or sets whether the point is visible.
            </summary>
      <value>
        <c>true</c> if the point visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SparkType">
      <summary>
            Specifies the type of sparkline.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SparkType.Line">
      <summary>
            A line chart sparkline.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SparkType.Column">
      <summary>
            A column chart sparkline.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SparkType.ColumnStacked100">
      <summary>
            A win/loss chart sparkline.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SparklineRowCol">
      <summary>
            Specifies how to plot the sparkline when the data on which it is based is in a square-shaped range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SparklineRowCol.None">
      <summary>
            The sparkline is not bound to data in a square-shaped range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SparklineRowCol.Rows">
      <summary>
            Plot the data by rows.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SparklineRowCol.Columns">
      <summary>
            Plot the data by columns.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISparkline">
      <summary>
            Represents a single sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkline.Location">
      <summary>
            Gets or sets the location of a single sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISparkline.SourceData">
      <summary>
            Gets or sets the range that contains the source data for a single sparkline.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparkline.ModifyLocation(System.String)">
      <summary>
            Modifies the location of a single sparkline.
            </summary>
      <param name="location">The cell that contains the sparkline.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparkline.ModifyLocation(System.Int32,System.Int32)">
      <summary>
            Modifies the location of a single sparkline.
            </summary>
      <param name="row">An integer value indicates the row of new location.</param>
      <param name="column">An integer value indicates the column of new location.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISparkline.ModifySourceData(System.String)">
      <summary>
            Modifies the source data for a single sparkline.
            </summary>
      <param name="sourceData">The range that contains the source data.</param>
      <remarks>The data source range for a single sparkline must be continuous.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Workbook">
      <summary>
            Represents a workbook.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#ShowVerticalScroll">
      <summary>
            Specifies a boolean value that indicates whether to display the vertical scroll bar.
            </summary>
      <value>A value of 0 or false indicates the vertical scrollbar shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#ShowHorizontalScroll">
      <summary>
            Specifies a boolean value that indicates whether to display the horizontal scroll bar in the user interface.
            </summary>
      <value>A value of 0 or false indicates that the horizontal scrollbar shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#ShowSheetTabs">
      <summary>
            Specifies a boolean value that indicates whether to display the sheet tabs in the user interface.
            </summary>
      <value>A value of 0 or false indicates that sheet tabs shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.SelectedSheets">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.IWorksheets" /> collection that represents all the selected sheets in the specified window.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.ShowCard">
      <summary>
            For a cell containing a rich data type, implement <see cref="T:GrapeCity.CalcEngine.IRichValue" />, this method causes a card to appear that shows details about the cell (that is, the same card that the user can view by choosing the cell icon).
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Show(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Scrolls through the contents of the active window to move the range into view. The range must consist of a single cell in the active document.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Features">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Features" /> object to manipulate settings of features.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.IsLegacyBorder">
      <summary>
            Gets a boolean value indicating whether the border behaves like Excel.
            </summary>
      <returns>
        <c>true</c> if the border does not behaves like Excel; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.FormatOptions">
      <summary>
            Gets the general <see cref="P:GrapeCity.Spreadsheet.Workbook.FormatOptions" /> value.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.BuiltinDocumentProperties">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Workbook.BuiltinDocumentProperties" /> object that represents all properties of the spreadsheet document.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Workbook.BuiltinDocumentProperties" /> object represents all properties of the spreadsheet document.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Authors">
      <summary>
            Gets the list of authors.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.IsValidSheetName(System.String)">
      <summary>
            Determines whether the is valid to use in the workbook/&gt;.
            </summary>
      <param name="name">The checking name.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#BuiltinDocumentProperties">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Workbook.BuiltinDocumentProperties" /> object that represents all properties of the spreadsheet document.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Workbook.BuiltinDocumentProperties" /> object represents all properties of the spreadsheet document.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Worksheets">
      <summary>
            Gets the worksheet collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Styles">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Styles" /> collection that represents all the styles in the workbook.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Styles" /> collection that represents all the styles in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#Styles">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Styles" /> collection that represents all the styles in the workbook.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Styles" /> collection that represents all the styles in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#SlicerCaches">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCaches" /> object associated with the workbook.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCaches" /> object associated with the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.TableStyles">
      <summary>
            Gets the collection of table styles that are used in the workbook.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyles" /> collection that contains the table styles that are used in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.DefaultTableStyle">
      <summary>
            Gets or sets the table style from the TableStyles collection that is used as the default table style.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> object represents the default table style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.DefaultSlicerStyle">
      <summary>
            Gets or sets the table style from the <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> collection that is used as the default slicer style.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> object represents the default slicer style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#Colors">
      <summary>
            Gets colors in the palette for the workbook. The palette has 56 entries, each represented by an RGB value.
            </summary>
      <value>All colors in the palette for the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Date1904">
      <summary>
            Gets or sets whether the date system used to convert a date from/to a serial value starts since 1/1/1904.
            </summary>
      <value>
        <c>true</c>, if the date system starts in 1904; otherwise, <c>false</c>. Default is <c>false</c>.</value>
      <remarks>All workbooks in the same workbook set share same value of <see cref="P:GrapeCity.Spreadsheet.Workbook.Date1904" />.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#Date1904">
      <summary>
            Gets or sets whether the date system used to convert a date from/to a serial value starts since 1/1/1904.
            </summary>
      <value>
        <c>true</c>, if the date system starts in 1904; otherwise, <c>false</c>. Default is <c>false</c>.</value>
      <remarks>All workbooks in the same workbook set share same value of <see cref="P:GrapeCity.Spreadsheet.Workbook.Date1904" />.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.ActiveSheet">
      <summary>
            Gets the active sheet (the sheet on top).
            </summary>
      <value>The active sheet (the sheet on top); null if no sheet is active.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#ActiveSheet">
      <summary>
            Gets the active sheet (the sheet on top).
            </summary>
      <value>The active sheet (the sheet on top); null if no sheet is active.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.ActiveSheetIndex">
      <summary>
            Gets the active sheet index (the sheet on top).
            </summary>
      <value>The active sheet index (the sheet on top); -1 if no sheet is active.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.FirstSheet">
      <summary>
            Specifies the index to the first sheet in this book view.
            </summary>
      <value>The default value for this attribute is 0.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.ShowHorizontalScroll">
      <summary>
            Specifies a boolean value that indicates whether to display the horizontal scroll bar in the user interface.
            </summary>
      <value>A value of 0 or false indicates that the horizontal scrollbar shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.ShowSheetTabs">
      <summary>
            Specifies a boolean value that indicates whether to display the sheet tabs in the user interface.
            </summary>
      <value>A value of 0 or false indicates that sheet tabs shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.ShowVerticalScroll">
      <summary>
            Specifies a boolean value that indicates whether to display the vertical scroll bar.
            </summary>
      <value>A value of 0 or false indicates the vertical scrollbar shall not be shown.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.SheetTabRatio">
      <summary>
            Specifies ratio between the workbook tabs bar and the horizontal scroll bar.
            </summary>
      <value>The default value for this attribute is 0.6.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.#ctor(GrapeCity.Spreadsheet.WorkbookSet,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Workbook" /> class.
            </summary>
      <param name="legacyMode">
        <c>true</c> to use the composite style mode. This parameter is for Spread.Win only.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.CreateFormulaEngine(System.Boolean,System.Boolean)">
      <summary>
            Creates the formula engine.
            </summary>
      <param name="enableDynamicArray">
        <c>true</c> if the dynamic array feature is enabled; otherwise, <c>false</c>.</param>
      <param name="reverseFormulaWhiteSpaces">
        <c>true</c> if whitespace characters will be kept in the formula; otherwise, whitespace character will be removed from the formula.</param>
      <returns>The formula engine.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#NamedObjectCollection{GrapeCity#Spreadsheet#Worksheet,GrapeCity#Spreadsheet#Workbook}#IContainer#Items">
      <summary>
            Gets the items.
            </summary>
      <value>The items.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#NamedObjectCollection{GrapeCity#Spreadsheet#Workbook,GrapeCity#Spreadsheet#WorkbookSet}#IItem#Container">
      <summary>
            Gets the container of this item.
            </summary>
      <value>An object indicates the container.</value>
      <remarks>Although the caller can assign new value to the container, it's not recommended. The setter is intended to be used internal only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#WorkbookSet">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Workbook.WorkbookSet" /> object contains current <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.WorkbookSet">
      <summary>
            Gets the container of this item.
            </summary>
      <value>An object indicates the container.</value>
      <remarks>Although the caller can assign new value to the container, it's not recommended. The setter is intended to be used internal only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Name">
      <summary>
            Gets or sets the name of this <see cref="T:GrapeCity.Spreadsheet.Workbook" />.
            </summary>
      <value>A string value represents the name of this <see cref="T:GrapeCity.Spreadsheet.Workbook" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Path">
      <summary>
            Gets a string that represents the complete path to the workbook/file that this workbook object respresents.
            </summary>
      <value>The complete path to the workbook/file that this workbook object respresents.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.FullName">
      <summary>
            Gets the name of this workbook, including its path, as a string. 
            </summary>
      <value>The full name of this workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#NamedObjectCollection{GrapeCity#Spreadsheet#Workbook,GrapeCity#Spreadsheet#WorkbookSet}#IItem#Name">
      <summary>
            Gets the name of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.
            </summary>
      <value>A string value represents the name of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#Name">
      <summary>
            Gets the name of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.
            </summary>
      <value>A string value represents the name of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#Supports3DReference">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object supports 3D-Reference.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object supports 3D-Reference; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#RowCount">
      <summary>
            Gets the number of rows in this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.
            </summary>
      <value>An integer value represents the number of rows in this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#ColumnCount">
      <summary>
            Gets the number of columns in this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.
            </summary>
      <value>An integer value represents the number of columns in this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#IsUndefined">
      <summary>
            Determines whether this reference source is undefined.
            </summary>
      <returns>
        <c>true</c> if this reference source is undefined; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Calculate">
      <summary>
            Calculates this workbook.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#Calculate">
      <summary>
            Calculates this workbook.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Calculate(System.Boolean)">
      <summary>
            Calculates this workbook.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Close(System.Boolean,System.String)">
      <summary>
            Closes this workbook.
            </summary>
      <param name="saveChanges">If there are no changes to the workbook, this argument is ignored.
            If set to True , changes are saved to the workbook. If there is not yet a file name associated with the workbook, then <paramref name="filename" /> is used. 
            If <paramref name="filename" /> is omitted and there is no file name associated with the workbook, <paramref name="saveChanges" /> is ignored.</param>
      <param name="filename">Save changes under this file name.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Reset">
      <summary>
            Resets this workbook by removing all data.
            </summary>
      <remarks>
            This function should not be invoked directly from user-code.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.SaveLinkValues">
      <summary>
            Gets or sets a boolean value indicating whether externally referenced values will be saved with the workbook,
            enabling cells which refer to those values to be calculated without returning a #REF! error.
            </summary>
      <value>
        <c>true</c> if externally referenced values will be saved with the workbook; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.SaveAs(System.IO.Stream,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>
            Saves this <see cref="T:GrapeCity.Spreadsheet.Workbook" /> to the specified <see cref="T:System.IO.Stream" />.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object indicates the stream to save to.</param>
      <param name="fileFormat">A <see cref="T:GrapeCity.Spreadsheet.IO.FileFormat" /> value indicates the file format when saving the workbook.</param>
      <param name="password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
      <returns>
        <c>true</c> if this workbook is saved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Save">
      <summary>
            Saves changes to the specified workbook.
            </summary>
      <returns>
        <c>true</c> if changes are saved successful, <c>false</c> otherwise.</returns>
      <remarks>To open a workbook file, use the <see cref="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.IO.Stream,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Boolean)" /> method or <see cref="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.String,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)" /> method.
            <para>To mark a workbook as saved without writing it to a disk, set its Saved property to True.</para><para>The first time you save a workbook, use the <see cref="M:GrapeCity.Spreadsheet.Workbook.SaveAs(System.IO.Stream,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)" /> method or <see cref="M:GrapeCity.Spreadsheet.Workbook.SaveAs(System.String,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)" /> method to specify a name for the file.</para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.SaveAs(System.String,GrapeCity.Spreadsheet.IO.FileFormat,System.String,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>
            Saves this <see cref="T:GrapeCity.Spreadsheet.Workbook" /> to the specified file location.
            </summary>
      <param name="filename">A string value indicates the file name to save to.</param>
      <param name="fileFormat">A <see cref="T:GrapeCity.Spreadsheet.IO.FileFormat" /> value indicates the file format when saving the workbook.</param>
      <param name="password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
      <returns>
        <c>true</c> if this workbook is saved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GetTable(System.String)">
      <summary>
            Gets the table using the specified name.
            </summary>
      <param name="tableName">A string value indicates the name of the table.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> object represents the table. <c>null</c> if the table cannot be found.</returns>
      <remarks>Safely for SpreadWin to use</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#Get3DReferenceIndex">
      <summary>
            Get the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.
            </summary>
      <returns>An integer value indicates the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#GetValue(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32,GrapeCity.CalcEngine.IPrimitiveValue)">
      <summary>
            Gets the value at the specified location of the 2-dimensions matrix.
            </summary>
      <param name="row">An integer value indicates the row index of the 2-dimensions matrix.</param>
      <param name="column">An integer value indicates the column index of the 2-dimensions matrix.</param>
      <param name="result">An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object represents the value at the specified location.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#GetValue(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32,GrapeCity.CalcEngine.CellValue@)">
      <summary>
            Gets the value at the specified location of the 2-dimensions matrix.
            </summary>
      <param name="context">An <see cref="P:GrapeCity.Spreadsheet.Workbook.EvaluationContext" /> object indicates the evaluation context.</param>
      <param name="row">An integer value indicates the row index of the 2-dimensions matrix.</param>
      <param name="column">An integer value indicates the column index of the 2-dimensions matrix.</param>
      <param name="result">An <see cref="T:GrapeCity.CalcEngine.CellValue" /> object represents the value at the specified location.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#GetText(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32)">
      <summary>
            Gets the text at the specified location of the 2-dimensions matrix.
            </summary>
      <param name="context">An <see cref="P:GrapeCity.Spreadsheet.Workbook.EvaluationContext" /> object indicates the evaluation context.</param>
      <param name="row">An integer value indicates the row index of the 2-dimensions matrix.</param>
      <param name="column">An integer value indicates the column index of the 2-dimensions matrix.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#GetReferenceExpression(GrapeCity.CalcEngine.FormulaEngine)">
      <summary>
            Gets the reference expression to evaluate this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.
            </summary>
      <param name="formulaEngine">A <see cref="T:GrapeCity.CalcEngine.FormulaEngine" /> object indicates the formula engine.</param>
      <returns>An <see cref="T:GrapeCity.CalcEngine.Expression" /> value represents the reference expression to evaluate this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#GetReferenceExpression(GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.IStructuredObject,GrapeCity.CalcEngine.StructuredItemSpecifiers,System.Int32,System.Int32)">
      <summary>
            Gets the reference expression to evaluate the specified <see cref="T:GrapeCity.CalcEngine.IStructuredObject" />.
            </summary>
      <param name="formulaEngine">A <see cref="T:GrapeCity.CalcEngine.FormulaEngine" /> object indicates the formula engine.</param>
      <param name="structuredObject">An <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object indicates the structured object.</param>
      <param name="itemSpecifiers">A <see cref="T:GrapeCity.CalcEngine.StructuredItemSpecifiers" /> value indicates the item specifiers.</param>
      <param name="columnId">An integer value indicates the first column.</param>
      <param name="columnId2">An integer value indicates the second column.</param>
      <returns>An <see cref="T:GrapeCity.CalcEngine.Expression" /> value represents the reference expression to evaluate this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#CalcEngine#IReferenceSource#GetReferenceExpression(GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.IStructuredObject,GrapeCity.CalcEngine.Expression)">
      <summary>
            Gets the reference expression to evaluate the specified <see cref="T:GrapeCity.CalcEngine.IStructuredObject" />.
            </summary>
      <param name="formulaEngine">A <see cref="T:GrapeCity.CalcEngine.FormulaEngine" /> object indicates the formula engine.</param>
      <param name="structuredObject">An <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object indicates the structured object.</param>
      <param name="expression">The expression refers to the <see cref="T:GrapeCity.CalcEngine.IStructuredObject" />.</param>
      <returns>An <see cref="T:GrapeCity.CalcEngine.Expression" /> value represents the reference expression to evaluate this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Locks">
      <summary>
            Gets the protected data of this workbook.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> value represents the protected data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#ProtectStructure">
      <summary>
            Gets a value indicating whether the order of the sheets in the workbook is protected.
            </summary>
      <value>
        <c>true</c> if the order of the sheets in the workbook is protected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#ProtectWindows">
      <summary>
            Gets a value indicating whether the windows of the workbook are protected.
            </summary>
      <value>
        <c>true</c> if the windows of the workbook are protected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Protection">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.ProtectionMode" /> value indicating whether this workbook is protected.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ProtectionMode" /> value represents the protection state of this workbook.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Protect(GrapeCity.Spreadsheet.WorkbookLocks,System.String)">
      <summary>
            Protects a workbook so that it cannot be modified.
            </summary>
      <param name="locks">A <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> value indicates which data will be protected.</param>
      <param name="password">A string value that specifies a case-sensitive password for the worksheet or workbook.</param>
      <returns>
        <c>true</c> if the workbook is protected successful, <c>false</c> otherwise.</returns>
      <remarks>
            Note that support for <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> is limited to reading and writing the OpenXML file. All options of <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> have same effect in runtime.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#Protect(GrapeCity.Spreadsheet.WorkbookLocks,System.String)">
      <summary>
            Protects a workbook so that it cannot be modified.
            </summary>
      <param name="locks">A <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> value indicates which data will be protected.</param>
      <param name="password">A string value that specifies a case-sensitive password for the worksheet or workbook.</param>
      <returns>
        <c>true</c> if the workbook is protected successful, <c>false</c> otherwise.</returns>
      <remarks>
            Note that support for <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> is limited to reading and writing the OpenXML file. All options of <see cref="T:GrapeCity.Spreadsheet.WorkbookLocks" /> have same effect in runtime.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.OnWorksheetMoved(GrapeCity.Spreadsheet.Worksheet,System.Int32)">
      <summary>
            Notifies worksheet has been moved
            </summary>
      <param name="movedWorksheet">The moved worksheet</param>
      <param name="newPosition">New position of worksheet</param>
      <remarks>Safe for SpreadWin to use</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.OnWorksheetCreated(GrapeCity.Spreadsheet.Worksheet,System.Boolean)">
      <summary>
            Notifies the worksheet created.
            </summary>
      <param name="createdWorksheet">The created worksheet.</param>
      <remarks>Safe for SpreadWin to use</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Unprotect(System.String)">
      <summary>
            Unprotects the workbook which is protected by password.
            </summary>
      <param name="password">A string value that denotes the case-sensitive password to use to unprotect workbook.</param>
      <returns>
        <c>true</c> if the workbook is unprotected successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#Unprotect(System.String)">
      <summary>
            Unprotects the workbook which is protected by password.
            </summary>
      <param name="password">A string value that denotes the case-sensitive password to use to unprotect workbook.</param>
      <returns>
        <c>true</c> if the workbook is unprotected successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Dispose(System.Boolean)">
      <summary>
            Disposes the specified disposing.
            </summary>
      <param name="disposing">The disposing.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.Finalize">
      <summary>
            Finalizes an instance of the <see cref="T:GrapeCity.Spreadsheet.Workbook" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IO#Exchangeable#IExtensibleObject{GrapeCity#Spreadsheet#Workbook}#Extensions">
      <summary>
            Gets the list of extensions in this extensible object.
            </summary>
      <value>The list of extensions stored in this extensible object.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IO#Exchangeable#IExtensibleObject{GrapeCity#Spreadsheet#Workbook}#CreateExtension(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Guid)">
      <summary>
            Create an <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object from the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context data.</param>
      <param name="key">A <see cref="T:System.Guid" /> value indicates the GUID identifier of the extension.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object that indicates by the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IO#Exchangeable#IExtension{GrapeCity#Spreadsheet#Workbook}#Attach(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Enables an extension object to find out when it has been aggregated. Called when the extension is added to the <see cref="!:IExtensionObject&lt;T&gt;.Extensions" /> property.
            </summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IO#Exchangeable#IExtension{GrapeCity#Spreadsheet#Workbook}#Detach(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Enables an object to find out when it is no longer aggregated. Called when an extension is removed from the <see cref="!:IExtensionObject&lt;T&gt;.Extensions" /> property.
            </summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IO#Exchangeable#IExtension{GrapeCity#Spreadsheet#Workbook}#ImportExtensionData(System.Xml.XmlReader,GrapeCity.IO.Packaging.PackagePart,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{GrapeCity.Spreadsheet.Workbook},System.Guid)">
      <summary>
            Imports the extension data.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="packagePart">The package part stored in a package.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="extensibleObject">An <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1" /> object indicates the extension provider.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.ImportExtensionData(System.Xml.XmlReader,GrapeCity.IO.Packaging.PackagePart,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{GrapeCity.Spreadsheet.Workbook},System.Guid)">
      <summary>
            Imports the extension data.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="packagePart">The package part stored in a package.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="extensibleObject">An <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1" /> object indicates the extension provider.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IO#Exchangeable#IExtension{GrapeCity#Spreadsheet#Workbook}#IsRequiredExport(GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,System.Guid)">
      <summary>
            Gets a value indicating whether the extension requires to export its data.
            </summary>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
      <value>
        <c>true</c> if the extension requires to export its data; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IO#Exchangeable#IExtension{GrapeCity#Spreadsheet#Workbook}#ExportExtensionData(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{GrapeCity.Spreadsheet.Workbook},System.Guid)">
      <summary>
            Enables an object to extend another object through aggregation.
            </summary>
      <typeparam name="T">The object that participates in the custom behavior.</typeparam>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.ExportExtensionData(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{GrapeCity.Spreadsheet.Workbook},System.Guid)">
      <summary>
            Enables an object to extend another object through aggregation.
            </summary>
      <typeparam name="T">The object that participates in the custom behavior.</typeparam>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.CompatibleFeatures">
      <summary>
            Internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.ShowCopyingUI(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.CutCopyMode)">
      <summary>
            Show the UI for copying action.
            </summary>
      <param name="worksheet">The source worksheet to copy.</param>
      <param name="cutCopyMode">A <see cref="T:GrapeCity.Spreadsheet.CutCopyMode" /> value indicates the status of Copy mode or Cut mode..</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.CopyingRanges">
      <summary>
            Gets the multiple cell range which is processing copy action.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.IsClipboardCutting">
      <summary>
            Gets or sets a boolean value indicating whether the current clipboard action is Cut.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.ContainsMultipleSelectedWorksheets">
      <summary>
            Gets a boolean value indicating whether there are more than one worksheet selected.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.ResolveTabColor(GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Gets the tab color of the specified worksheet.
            </summary>
      <param name="worksheet">The worksheet to retreive tab color.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the tab color of the worksheet.</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Workbook.Select(System.Boolean,GrapeCity.Spreadsheet.Worksheet[])" -->
    <member name="M:GrapeCity.Spreadsheet.Workbook.ConvertComments">
      <summary>
            Converts all legacy comments and notes to modern comments.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.HoverComment">
      <summary>
            Gets or sets the comment which is under mouse cursor.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.EditingCommentThreaded">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object that represents the threaded comment which is editing.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.BreakLink(System.String)">
      <summary>
            Converts formulas linked to other workbook to values.
            </summary>
      <param name="name">The name of the link.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.UpdateLinks">
      <summary>
            Gets or sets an <see cref="T:GrapeCity.Spreadsheet.UpdateLinks" /> constant indicating a workbook's setting for updating links.
            </summary>
      <value>The workbook's setting for updating links.</value>
      <remarks>Updating links is for physical files. If the external workbook is already opened, the workbook will always be linked.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.UpdateLink(System.String,System.Func{GrapeCity.Spreadsheet.Workbook,System.String,GrapeCity.Spreadsheet.Worksheet})">
      <summary>
            Updates the specified link of this workbook.
            </summary>
      <param name="name">The name of the link to be updated, as returned from the <see cref="P:GrapeCity.Spreadsheet.Workbook.LinkSources" />.</param>
      <param name="missingWorksheetResolver">The resolver which will be invoked if the reference worksheet is missing.</param>
      <returns>
        <c>true</c> if the link is updated successfully; otherwise <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.UpdateLink(System.String[],System.Func{GrapeCity.Spreadsheet.Workbook,System.String,GrapeCity.Spreadsheet.Worksheet})">
      <summary>
            Updates one or all links of this workbook.
            </summary>
      <param name="names">The name of the links to be updated, as returned from the <see cref="P:GrapeCity.Spreadsheet.Workbook.LinkSources" />. <c>null</c> is to update all links.</param>
      <param name="missingWorksheetResolver">The resolver which will be invoked if the reference worksheet is missing.</param>
      <returns>
        <c>true</c> if all links are updated successfully; otherwise <c>false</c> if there is at least one link is failed to update.</returns>
      <remarks>
            When the <see cref="!:UpdateLink(string)" /> method is called without any parameters (or <paramref name="name" /> is null/empty), 
            Spread defaults to updating all worksheet links.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.LinkSources">
      <summary>
            Gets an array of links in the workbook. The names in the array are the names of the linked documents. Returns empty array if there are no links.
            </summary>
      <value>The link sources.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.IsValidName(System.String,GrapeCity.Spreadsheet.IWorksheet,System.Nullable{GrapeCity.Spreadsheet.ReferenceStyle})">
      <summary>
            Gets a boolean value indicating whether the specified name is valid.
            </summary>
      <param name="name">The name of defined name.</param>
      <param name="worksheet">The scope worksheet.</param>
      <param name="style">A <see cref="T:GrapeCity.Spreadsheet.ReferenceStyle" /> value indicates the used reference style.</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Workbook.Theme">
      <summary>
            Gets or sets the theme applied to the current workbook.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#ApplyTheme(System.String)">
      <summary>
            Applies the specified theme to the current workbook.
            </summary>
      <param name="filename">A string value indicates the theme file to apply.</param>
      <returns>
        <c>true</c> if the theme is loaded and applied successfully; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#ApplyTheme(System.IO.Stream)">
      <summary>
            Applies the specified theme to the current workbook.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object indicates the theme data to apply.</param>
      <returns>
        <c>true</c> if the theme is loaded and applied successfully; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Workbook.GrapeCity#Spreadsheet#IWorkbook#ApplyTheme(GrapeCity.Core.Theme)">
      <summary>
            Applies the specified theme to the current workbook.
            </summary>
      <param name="theme">A <see cref="P:GrapeCity.Spreadsheet.Workbook.Theme" /> object indicates the theme to apply.</param>
      <returns>
        <c>true</c> if the theme is applied successfully; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Worksheet">
      <summary>
            Represents a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Cells">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> instance which represents the entire worksheet cells.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> instance which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Columns">
      <summary>
            Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the columns on the worksheet.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to columns' data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Rows">
      <summary>
            Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents all the rows on the worksheet.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to rows' data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#Outline">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IOutline" /> object that represents the outline for the specified worksheet.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IOutline" /> object of the specified worksheet.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Range(System.String,System.String)">
      <summary>
            Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents a cell or a range of cells.
            </summary>
      <param name="cell1">The name of the range. This must be an A1-style reference.</param>
      <param name="cell2">The cell in the lower-right corner of the range.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Range(GrapeCity.Spreadsheet.Reference[])">
      <summary>
            Get an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents ranges of reference.
            </summary>
      <param name="references">The name of the reference ranges. This must be an A1-style reference.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Index">
      <summary>
            Gets the index number of the worksheet within the collection of worksheets.
            </summary>
      <value>The index number of the worksheet within the collection of worksheets.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.AutoFilter">
      <summary>
            Gets the filter of this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.Worksheet.AutoFilter" /> object represents the filter of this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.AutoFilterMode">
      <summary>
            Gets a value that indicates whether the AutoFilter drop-down arrows are currently displayed on the sheet.
            </summary>
      <value>
        <c>true</c> if the AutoFilter drop-down arrows are currently displayed on the sheet; otherwise, <c>false</c>.</value>
      <remarks>
            This property returns <c>true</c> if the drop-down arrows are currently displayed.
            You can set this property to <c>false</c> to remove the arrows, but you cannot set it to <c>true</c>.
            Use the <see cref="M:GrapeCity.Spreadsheet.IRange.AutoFilter(System.Boolean)" /> method to filter a list and display the drop-down arrows.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.CircularReference">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that that represents the range containing the first circular reference on the sheet.
            </summary>
      <value>
            An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that that represents the range containing the first circular reference on the sheet.
            <c>null</c> if there's no circular reference on the sheet.
            </value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#Calculate">
      <summary>
            Calculates this worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#CircleInvalid">
      <summary>
            Circles invalid entries on the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#CircleInvalid(System.Int32)">
      <summary>
            Get a <see cref="!:GrapeCity.Spreadsheet.CellReference[]" /> array of invalid entries on the worksheet.
            </summary>
      <param name="maximumCells">An integer value indicates the maximum returned invalid entries. Default value will be used if <paramref name="maximumCells" /> is less than 1.</param>
      <returns>A <see cref="!:GrapeCity.Spreadsheet.CellReference[]" /> array represents the position of invalid cells.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#ClearCircles">
      <summary>
            Clears circles from invalid entries on the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Activate">
      <summary>
            Makes the current sheet the active sheet.
            </summary>
      <remarks>This method is equivalent to clicking the tab at the bottom of the sheet.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#Activate">
      <summary>
            Makes the current sheet the active sheet.
            </summary>
      <remarks>This method is equivalent to clicking the tab at the bottom of the sheet.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.PasteCore(GrapeCity.Spreadsheet.IRange)">
      <summary>
            Pastes the contents of the Clipboard onto the sheet.
            </summary>
      <param name="destination">An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that specifies where the Clipboard contents should be pasted. If this argument is omitted, the current selection is used.</param>
      <param name="cutting">
        <c>true</c> if the pasting is from cut action.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IOutline#SummaryColumn">
      <summary>
            Gets or sets the location of the summary columns in the outline.
            </summary>
      <value>The position of summary column related to the detail columns in the outline.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IOutline#SummaryRow">
      <summary>
            Gets or sets the location of the summary rows in the outline.
            </summary>
      <value>The position of summary row related to the detail rows in the outline.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IOutline#ShowLevels(System.Int32,System.Int32)">
      <summary>
            Displays the specified number of row and/or column levels of an outline.
            </summary>
      <param name="rowLevels">Specifies the number of row levels of an outline to display.
            If the outline has fewer levels than the number specified, Spread displays all the levels.
            If this argument is 0 (zero) or is omitted, no action is taken on rows.</param>
      <param name="columnLevels">Specifies the number of column levels of an outline to display.
            If the outline has fewer levels than the number specified, Spread displays all the levels.
            If this argument is 0 (zero) or is omitted, no action is taken on columns.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#InsertColumns(System.Int32,System.Int32)">
      <summary>
            Inserts column(s) to the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified position.
            </summary>
      <param name="column">An integer value indicates the column index at which to insert new columns.</param>
      <param name="count">An integer value indicates the number of rows to insert.</param>
      <returns>
        <c>true</c> if the columns are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#InsertRows(System.Int32,System.Int32)">
      <summary>
            Inserts row(s) to the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified position.
            </summary>
      <param name="row">An integer value indicates the row index at which to insert new row(s).</param>
      <param name="count">An integer value indicates the number of row(s) to insert.</param>
      <returns>
        <c>true</c> if the rows are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.IsContain(GrapeCity.Spreadsheet.IWorksheet)">
      <summary>
            Check if the worksheet contains a specify worksheet.
            </summary>
      <param name="worksheet"></param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#TabColor">
      <summary>
            Gets or sets the color of the tab.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the color of the tab.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Options">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.WorksheetOptions" /> object that represents all options of the <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IStructuredObject#IsUndefined">
      <summary>
            Determines whether this <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object is undefined.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object is undefined; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IStructuredObject#SetColumnName(System.Int32,System.String)">
      <summary>
            Gets the table column name of the specified column.
            </summary>
      <param name="index">An integer value indicates the table column index.</param>
      <param name="columnName">A string value indicates the specified column.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IStructuredObject#Range">
      <summary>
            Gets the range reference of the structured object.
            </summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value represents the range of structured object.</value>
      <exception cref="T:System.NotImplementedException"></exception>
      <remarks>The <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value must be absolute reference.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IStructuredObject#HeaderRowCount">
      <summary>
            Gets the header row count.
            </summary>
      <value>An integer values represents the header row count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IStructuredObject#TotalsRowCount">
      <summary>
            Gets the totals row count.
            </summary>
      <value>An integer value represents the totals row count.</value>
      <exception cref="T:System.NotImplementedException"></exception>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IStructuredObject#ReferenceSource">
      <summary>
            Gets the <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object which contains the <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object.
            </summary>
      <value>The <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object which contains the <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IStructuredObject#GetReplacedStructuredObj">
      <summary>
            Get the replacement of this <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> in case it is removed.
            </summary>
      <returns>The replacement of this <see cref="T:GrapeCity.CalcEngine.IStructuredObject" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IStructuredObject#GetColumnId(System.String)">
      <summary>
            Gets the relative column index of the specified column.
            </summary>
      <param name="columnName">A string value indicates the specified column.</param>
      <returns>An integer value indicates the relative column index.</returns>
      <exception cref="T:System.InvalidOperationException"></exception>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IStructuredObject#GetColumnIndex(System.Int32)">
      <summary>
            Get the table column index of the specified column.
            </summary>
      <param name="id">An integer value indicates the column unique ID inside the structure object.</param>
      <returns>An <see cref="T:System.Int32" /> value represents the table column index of the specified column.</returns>
      <exception cref="T:System.InvalidOperationException"></exception>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IStructuredObject#GetColumnName(System.Int32)">
      <summary>
            Gets the table column name of the specified column.
            </summary>
      <param name="id">An integer value indicates the column unique ID inside the structure object.</param>
      <returns>A string indicates the column name.</returns>
      <exception cref="T:System.InvalidOperationException"></exception>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IReferenceSource#GetText(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32)">
      <summary>
            Gets the text at the specified location of the 2-dimensions matrix.
            </summary>
      <param name="context">An <see cref="T:GrapeCity.CalcEngine.EvaluationContext" /> object indicates the evaluation context.</param>
      <param name="row">An integer value indicates the row index of the 2-dimensions matrix.</param>
      <param name="column">An integer value indicates the column index of the 2-dimensions matrix.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#CalcEngine#IReferenceSource#Date1904">
      <summary>
            Gets whether the date system used to convert a date to a serial value starts in 1904.
            </summary>
      <value>
        <c>true</c>, if the date system starts in 1904; otherwise, <c>false</c>. Default is <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Drawing">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.WorksheetDrawing" /> object contains all drawing objects within the worksheet.
            </summary>
      <value>The worksheet drawing contains all drawing objects within the worksheet.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.IsDrawingObjectAvailable">
      <summary>
            Indicates whether there is drawing object in this worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#Shapes">
      <summary>
            Gets a collection of all the <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> objects on this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> objects on this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#Pictures">
      <summary>
            Gets a collection of all the <see cref="T:GrapeCity.Spreadsheet.Drawing.IPicture" /> objects on this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IPicture" /> objects on this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Behaviors">
      <summary>
            Gets or sets the behaviors of operations.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Worksheet.Behaviors" /> value represents the behaviors of operations.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.PageSetup">
      <summary>
            Gets the page setup of the worksheet.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Printing.PageSetup" /> object represents the page setup of the worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.FrozenTrailingRowCount">
      <summary>
            Gets  the number of non-scrolling rows on the trailing edge of this sheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.View">
      <summary>
            Gets the worksheet view of this <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.WorksheetView" /> object represents the sheet view.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.TabColor">
      <summary>
            Gets or sets the color of the tab.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the color of the tab.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Names">
      <summary>
            Gets a <see cref="P:GrapeCity.Spreadsheet.Worksheet.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!" prefix).
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Worksheet.Names" /> collection that represents all the worksheet-specific names.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Calculate">
      <summary>
            Calculates this worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Calculate(System.Boolean,System.Boolean)">
      <summary>
            Calculates this worksheet.
            </summary>
      <param name="fullCalculation">
        <c>true</c> if all cells are re-calculated; otherwise, only non-calculated cells are re-calculated.</param>
      <param name="notifyUI">
        <c>true</c> if the control must be notified; otherwise, <c>false</c>.</param>
      <returns>
        <c>true</c> if there is atleast one changed cell, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.RetargetStructuredReferenceExpressionInRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,GrapeCity.Spreadsheet.Table})">
      <summary>
            Retarget all StructuredReferenceExpression in range
            </summary>
      <param name="targetRow">row</param>
      <param name="targetColumn">column</param>
      <param name="rowCount">number of rows</param>
      <param name="columnCount">number of columns</param>
      <param name="originalStructures">structures from original source</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Type">
      <summary>
            Gets the worksheet type.
            </summary>
      <value>Returns a <see cref="T:GrapeCity.Spreadsheet.WorksheetType" /> value represents the worksheet type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.SubType">
      <summary>
            Gets the worksheet sub-type.
            </summary>
      <value>Returns a <see cref="T:GrapeCity.Spreadsheet.WorksheetSubType" /> value represents the worksheet sub-type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Owner">
      <summary>
            Gets the owner worksheet.
            </summary>
      <value>
            An <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object represents the owner worksheet of worksheet headers and footers.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Name">
      <summary>
            Gets or sets the name of worksheet.
            </summary>
      <value>A string value indicates the name of worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#Name">
      <summary>
            Gets or sets the name of worksheet.
            </summary>
      <value>A string value indicates the name of worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#NamedObjectCollection{GrapeCity#Spreadsheet#Worksheet,GrapeCity#Spreadsheet#Workbook}#IItem#Name">
      <summary>
            Gets or sets the name of worksheet.
            </summary>
      <value>A string value indicates the name of worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.FormatConditions">
      <summary>
            Gets the conditional formatting manager.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Worksheet.FormatConditions" /> object represents the conditional formatting manager.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.LayoutManager">
      <summary>
            Gets the layout manager of this worksheet.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Worksheet.LayoutManager" /> object represents the layout manager of this worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Next">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> that represents the next sheet.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> that represents the next sheet; null if the current worksheet is the last sheet in the workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Previous">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> that represents the previous sheet.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> that represents the previous sheet; null if the current worksheet is the first sheet in the workbook.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.CreateAutoFilter(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates the automatic filter.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>An <see cref="P:GrapeCity.Spreadsheet.Worksheet.AutoFilter" /> object represents the created filter. <c>null</c> if the data is invalid.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Workbook">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Worksheet.Workbook" /> object contains current <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#Workbook">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Worksheet.Workbook" /> object contains current <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.WorkbookSet">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Worksheet.WorkbookSet" /> object contains current <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.ColumnCount">
      <summary>
            Gets or sets the number of columns in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <value>An integer value represents the number of columns in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetColumnCount(System.Int32,System.Boolean)">
      <summary>
            Sets the number of columns in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.RowCount">
      <summary>
            Gets or sets the number of rows in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <value>An integer value represents the number of rows in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetRowCount(System.Int32,System.Boolean)">
      <summary>
            Sets the number of rows in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#NamedObjectCollection{GrapeCity#Spreadsheet#Worksheet,GrapeCity#Spreadsheet#Workbook}#IItem#Container">
      <summary>
            Gets the container of this item.
            </summary>
      <value>An object indicates the container.</value>
      <remarks>Although the caller can assign new value to the container, it's not recommended. The setter is intended to be used internal only.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.CreateExpressionView(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            Creates the expression view which binds the specified formula to a cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="formulaText">An string value indicates the formula text.</param>
      <param name="visual">A boolean value indicates that the expression view cause Spread repaint.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ExpressionView" /> object represents the expression view.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.IsValid(GrapeCity.Spreadsheet.Reference)">
      <summary>
            Determines whether the specified range is valid.
            </summary>
      <param name="reference">The range to validate.</param>
      <returns>
        <c>true</c> if the specified range is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Get3DReferenceIndex">
      <summary>
            Get the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.
            </summary>
      <returns>An integer value indicates the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.IsEmpty(System.Int32,System.Int32)">
      <summary>
            Gets a boolean value indicating whether the cell contains empty data.
            </summary>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell.</param>
      <returns>
        <c>true</c> if the cell data is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.IsEmpty(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets a boolean value indicating whether the cell contains empty data.
            </summary>
      <param name="row">The first row index of the cell.</param>
      <param name="column">The first column index of the cell.</param>
      <param name="row2">The last row index of the cell.</param>
      <param name="column2">The last column index of the cell.</param>
      <returns>
        <c>true</c> if the cell data is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.PreviousNonEmptyColumnInRow(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Find the previous non-empty data column in a row
            </summary>
      <param name="row"> the start row index</param>
      <param name="column">the start column index</param>
      <param name="skipInsideItems">Return the last block index if the found cell is in block with the specified cell.</param>
      <returns>the column index that contains data</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.NextNonEmptyColumnInRow(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Find the next non-empty data column in a row.
            </summary>
      <param name="row">The anchor row index.</param>
      <param name="column">The anchor column Index</param>
      <param name="skipInsideItems">Return the last block index if the found cell is in block with the specified cell.</param>
      <returns>The column index that contains data.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.NotifyUIManager(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.UI.ActionCategory,System.Boolean,System.Boolean)">
      <summary>
            Notifies the data changed to UIManager.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="invalidateCategory">The type of notification.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.NotifyDataChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Notifies the data change.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.OnColumnFilterCreated(GrapeCity.Spreadsheet.AutoFilter)">
      <summary>
            Occurs when the <see cref="P:GrapeCity.Spreadsheet.Worksheet.AutoFilter" /> is created.
            </summary>
      <param name="autoFiter">The new created <see cref="T:GrapeCity.Spreadsheet.AutoFilter" /> object.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.OnAutoFilterCreated(GrapeCity.Spreadsheet.AutoFilter)">
      <summary>
            Invoked after the auto filter is created.
            </summary>
      <param name="autoFilter"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Object[0:,0:])">
      <summary>
            Sets an object array into a specified range of cells.
            </summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Object[0:,0:],System.Boolean)">
      <summary>
            Sets an object array into a specified range of cells.
            </summary>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
      <param name="vertical">if True, array will be set follow column index, other, it will be set follow row index. </param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue``1(System.Int32,System.Int32,``0[0:,0:])">
      <summary>
            Sets an object array into a specified range of cells.
            </summary>
      <typeparam name="T"></typeparam>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue``1(System.Int32,System.Int32,``0[0:,0:],System.Boolean)">
      <summary>
            Sets an object array into a specified range of cells.
            </summary>
      <typeparam name="T"></typeparam>
      <param name="row">Row index of the start of the range of cells</param>
      <param name="column">Column index of the start of the range of cells</param>
      <param name="values">Two-dimensional object array[row,column] that contains the values</param>
      <param name="vertical">if True, array will be set follow column index, other, it will be set follow row index. </param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>
            Sets the value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,GrapeCity.CalcEngine.CellValue@)">
      <summary>
            Sets the <see cref="T:GrapeCity.CalcEngine.CellValue" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="cellValue">An <see cref="T:GrapeCity.CalcEngine.CellValue" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>
            Sets the <see cref="T:System.Object" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
      <param name="notify">
        <c>true</c> to notify UI layer; otherwise, <c>false</c>.</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Object,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Sets the <see cref="T:System.Object" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
      <param name="commitChanged">the datasource will invoke the EndEdit to commit the changes</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>
            Sets the <see cref="T:System.Double" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Double" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Double)">
      <summary>
            Sets the <see cref="T:System.Double" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Double" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Int32" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int32" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Byte)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Byte" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int16)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int16" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Single)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Single" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int64)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Int64" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Decimal)">
      <summary>
            Sets the <see cref="T:System.Int32" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Decimal" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Sets the <see cref="T:System.String" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.String" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.RichText)">
      <summary>
            Sets the <see cref="T:System.String" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:GrapeCity.Spreadsheet.RichText" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.String)">
      <summary>
            Sets the <see cref="T:System.String" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.String" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,GrapeCity.Spreadsheet.RichText)">
      <summary>
            Sets the <see cref="T:System.String" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:GrapeCity.Spreadsheet.RichText" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.CalcError)">
      <summary>
            Sets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,GrapeCity.CalcEngine.CalcError)">
      <summary>
            Sets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Sets the <see cref="T:System.Boolean" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Boolean" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)">
      <summary>
            Sets the <see cref="T:System.DateTime" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.DateTime" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.DateTime)">
      <summary>
            Sets the <see cref="T:System.DateTime" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.DateTime" /> value to set</param>
      <returns>
        <c>true</c> if success, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ApplyStyleExtend(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.API.StyleExtendDataModifier)">
      <summary>
            Allow other products use modifier to modify the extended data of style in worksheet's range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="modifier">The style modifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ApplyStyleFormatter(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.API.NumberFormatExtendDataModifier)">
      <summary>
            Allow other products use modifier to modify the extended data of style in worksheet's range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="modifier">The style modifier.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IO#Exchangeable#IExtensibleObject{GrapeCity#Spreadsheet#Worksheet}#Extensions">
      <summary>
            Gets the list of extensions in this extensible object.
            </summary>
      <value>The list of extensions stored in this extensible object.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IO#Exchangeable#IExtensibleObject{GrapeCity#Spreadsheet#Worksheet}#CreateExtension(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Guid)">
      <summary>
            Create an <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object from the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context data.</param>
      <param name="key">A <see cref="T:System.Guid" /> value indicates the GUID identifier of the extension.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object that indicates by the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Tables">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Worksheet.Tables" /> object which manages all tables in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Tables" /> object represents the tables of this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#Tables">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITables" /> object which manages all tables in this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ITables" /> object represents the tables of this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#AutoFilter">
      <summary>
            Gets the filter of this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object represents the filter of this <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#Sort">
      <summary>
            Gets or sets the sort object.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Worksheet.Sort" /> object belong to the sort owner.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.DataValidations">
      <summary>
            Gets the <see cref="!:GrapeCity.SpreadsheetValidations" /> object which manages all data validations in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <value>A <see cref="!:GrapeCity.SpreadsheetValidations" /> object represents the data validations of this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Visible">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.SheetVisibility" /> value that determines whether the worksheet is visible.
            </summary>
      <value>Returns a <see cref="T:GrapeCity.Spreadsheet.SheetVisibility" /> value that indicates the worksheet visibility.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ChangeVisible(GrapeCity.Spreadsheet.SheetVisibility,System.Boolean,System.Boolean)">
      <summary>
            Change Visibility of worksheet.
            </summary>
      <param name="value">value that determines whether the worksheet is visible</param>
      <param name="allowHiddenAllSheet">allow hidden all sheet</param>
      <param name="notifyUI">notify UI</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#Visible">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.SheetVisibility" /> value that determines whether the worksheet is visible.
            </summary>
      <value>Returns a <see cref="T:GrapeCity.Spreadsheet.SheetVisibility" /> value that indicates the worksheet visibility.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.OnVisibleChanged(GrapeCity.Spreadsheet.SheetVisibility)">
      <summary>
            Occurs when visible setting is changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.OnZoomScaleChanged(System.Single)">
      <summary>
            Called when the zoomScale changed.
            </summary>
      <param name="zoomFactor">A float value to scale.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetFormula(System.Int32,System.Int32,GrapeCity.CalcEngine.Expression,System.Boolean)">
      <summary>
            Gets the formula for the cell of the specified row and column of this sheet.
            </summary>
      <param name="r">An integer value indicates the row index of cell.</param>
      <param name="c">An integer value indicates the column index of cell.</param>
      <param name="expression">The expression to unparse.</param>
      <param name="isA1">
        <c>true</c> to get A1 reference style formula; otherwise, <c>false</c>.</param>
      <returns>The formula value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetExpression2(System.Int32,System.Int32,System.Boolean@)">
      <summary>
            Gets the formula, as an expression value, for the cell of the specified row and column of this sheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="isSpilledCell">A boolean value indicates whether the cell is spilled from a dynamic array.</param>
      <returns>The <see cref="T:GrapeCity.CalcEngine.Expression" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetExpression(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.Expression,System.Boolean,System.Boolean)">
      <summary>
            Sets the <see cref="T:GrapeCity.CalcEngine.Expression" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="expression">An <see cref="T:GrapeCity.CalcEngine.Expression" /> value to set</param>
      <param name="autoFormatting">A boolean value indicates that the cell may be auto formatted by some special functions.</param>
      <param name="notify">if set to <c>true</c>, the change will be notified.</param>
      <returns>The details data of the action result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetFormulaArray(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            Sets the formula text for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="formula">A string value indicates the formula text to set</param>
      <param name="autoFormatting">A boolean value indicates that the cell may be auto formatted by some special functions.</param>
      <returns>The details data of the action result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetFormula(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean)">
      <summary>
            Sets the formula text for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="formula">A string value indicates the formula text to set</param>
      <param name="autoFormatting">A boolean value indicates that the cell may be auto formatted by some special functions.</param>
      <param name="notify">if set to <c>true</c>, the change will be notified.</param>
      <returns>The details data of the action result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ParseFormula(System.String,System.Int32,System.Int32,System.Nullable{System.Boolean})">
      <summary>
            Parses the specified formula to expression.
            </summary>
      <param name="formula">A string value indicates the formula text.</param>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <returns>A <see cref="T:GrapeCity.CalcEngine.Expression" /> value represents the parsed expression.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.UnparseFormula(GrapeCity.CalcEngine.Expression,System.Int32,System.Int32,System.Nullable{System.Boolean})">
      <summary>
            Parses the specified formula to expression.
            </summary>
      <param name="expression">The expression to unparse as string.</param>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <returns>A <see cref="T:GrapeCity.CalcEngine.Expression" /> value represents the parsed expression.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetStyleFormat(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Gets the style format of the specified cell on this worksheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value represents the style format of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetStyleFormat(System.Int32,System.Int32,GrapeCity.Spreadsheet.StyleFormat)">
      <summary>
            Sets the style format for a specific cell on this worksheet.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style format to set.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetStyleFormat(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.StyleFormat)">
      <summary>
            Sets the style format for the specified cell range on this worksheet.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style format to set.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetText(System.Int32,System.Int32,System.Object)">
      <summary>
            Gets the displayed text of the specified value base on the target cell in this sheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">The value to format.</param>
      <returns>The <see cref="T:System.String" /> value represents the displayed text of the cell.</returns>
      <remarks>Conditional format(s) is excluded.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetText(System.Int32,System.Int32)">
      <summary>
            Gets the displayed text from the specified cell on this sheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:System.String" /> value represents the displayed text of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetFormattedValue(System.Int32,System.Int32)">
      <summary>
            Gets the formatted value from the specified cell on this sheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:System.Object" /> value represents the displayed value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Sets the <see cref="T:System.Boolean" /> value for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">An <see cref="T:System.Boolean" /> value to set</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.RemoveRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Removes one or more rows starting with the row at the specified position.
            </summary>
      <param name="row">An integer value indicates the index of first row to remove.</param>
      <param name="count">An integer value indicates the number of row(s) to remove.</param>
      <param name="notifyUI">if set to <c>true</c>, <see cref="T:GrapeCity.Spreadsheet.UI.UIManager" /> need to be notified.</param>
      <returns>
        <c>true</c> if the rows are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.RemoveColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Removes one or more columns starting with the column at the specified position.
            </summary>
      <param name="column">An integer value indicates the index of first column to remove.</param>
      <param name="count">An integer value indicates the number of column(s) to remove.</param>
      <param name="notifyUI">if set to <c>true</c>, <see cref="T:GrapeCity.Spreadsheet.UI.UIManager" /> need to be notified.</param>
      <returns>
        <c>true</c> if the columns are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.InsertRows(System.Int32,System.Int32)">
      <summary>
            Inserts row(s) to the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified position.
            </summary>
      <param name="row">An integer value indicates the row index at which to insert new row(s).</param>
      <param name="count">An integer value indicates the number of row(s) to insert.</param>
      <returns>
        <c>true</c> if the rows are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.InsertColumns(System.Int32,System.Int32)">
      <summary>
            Inserts column(s) to the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified position.
            </summary>
      <param name="column">An integer value indicates the column index at which to insert new columns.</param>
      <param name="count">An integer value indicates the number of rows to insert.</param>
      <returns>
        <c>true</c> if the columns are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ClearShapes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Removes all shapes from the specified range of cells.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="rowCount">An integer value indicates the total number of rows.</param>
      <param name="columnCount">An integer value indicates the total number of columns.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Clear(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Removes all the data and formulas from the specified range of cells.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="rowCount">An integer value indicates the total number of rows.</param>
      <param name="columnCount">An integer value indicates the total number of columns.</param>
      <returns>
        <c>true</c> if the data is clear, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Swaps the specified ranges of cells.
            </summary>
      <param name="row">Row index of starting position of range to move</param>
      <param name="column">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <returns>
        <c>true</c> if the cell range is swapped successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Moves the data from a range of cells to the specified location.
            </summary>
      <param name="row">Row index of starting position of range to move</param>
      <param name="column">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <param name="targetWorksheet">The target worksheet where data will be copied to. <c>null</c> means the data is copied to the same worksheet.</param>
      <returns>
        <c>true</c> if the cell range is moved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Copies the data from a range of cells to a specified range of cells.
            </summary>
      <param name="row">Row index of start of range from which to copy</param>
      <param name="column">Column index of start of range from which to copy</param>
      <param name="toRow">Row index of start of range to which to copy</param>
      <param name="toColumn">Column index of start of range to which to copy</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <param name="targetWorksheet">The target worksheet where data will be copied to. <c>null</c> means the data is copied to the same worksheet.</param>
      <returns>
        <c>true</c> if the cell range is copied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Delete(System.Boolean)">
      <summary>
            Deletes this <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> from its owner <see cref="P:GrapeCity.Spreadsheet.Worksheet.Workbook" />.
            </summary>
      <param name="notifyUI">
        <c>true</c> if UI need to be notified.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Move(System.Int32)">
      <summary>
            Moves this <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> to the specified position in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> collection of the <see cref="P:GrapeCity.Spreadsheet.Worksheet.Workbook" />.
            </summary>
      <param name="position">An integer value indicates the specified position.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.DuplicateName">
      <summary>
            Genereates a new worksheet name from the naem of this worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Copy(System.Int32)">
      <summary>
            Copies this <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> to the specified position in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> collection of the <see cref="P:GrapeCity.Spreadsheet.Worksheet.Workbook" />.
            </summary>
      <param name="position">An integer value indicates the specified position.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Sort">
      <summary>
            Gets the sort object.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Worksheet.Sort" /> object belong to the worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IAutoFilterOwner#Worksheet">
      <summary>
            Gets the worksheet which contains this <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object which contains this <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IAutoFilterOwner#RemoveFilter">
      <summary>
            Removes the filter from the current object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.OnAfterMerged(GrapeCity.Spreadsheet.Reference@,GrapeCity.Spreadsheet.Border@)">
      <summary>
            Occurs after the specified cell range is merged.
            </summary>
      <param name="mergedCell">The merged cell.</param>
      <param name="outlineBorder">The outline border of merged cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.OnUnMerged(GrapeCity.Spreadsheet.Reference@)">
      <summary>
            Notifies a range has been unmerged.
            </summary>
      <param name="unionCells">union range has been unmerged.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IAutoFilterOwner#NotifyFilterButtonHiddenChanged(System.Boolean)">
      <summary>
            Notifies the filter button hidden has been changed.
            </summary>
      <param name="hidden">if set to <c>true</c> the filter button is hidden.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IAutoFilterOwner#ShowDropDownButton">
      <summary>
            Return true all times.
            </summary>
      <value>
        <c>true</c> if [show drop down button]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Locks">
      <summary>
            Gets the protected data of this worksheet.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.WorksheetLocks" /> value represents the protected data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.ProtectionMode">
      <summary>
            Gets a <see cref="P:GrapeCity.Spreadsheet.Worksheet.ProtectionMode" /> value indicating whether this worksheet is protected.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Worksheet.ProtectionMode" /> value represents the protection state of this worksheet.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Protect(GrapeCity.Spreadsheet.WorksheetLocks,System.String)">
      <summary>
            Protects a worksheet so that it cannot be modified.
            </summary>
      <param name="locks">A <see cref="T:GrapeCity.Spreadsheet.WorksheetLocks" /> value indicates which data will be protected.</param>
      <param name="password">A string that specifies a case-sensitive password for the worksheet.</param>
      <returns>
        <c>true</c> if the worksheet is protected successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.EnableSelection">
      <summary>
            Gets or sets what can be selected on the sheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Protection">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IProtection" /> object that represents the protection options of the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Unprotect(System.String)">
      <summary>
            Unprotects the worksheet which is protected by password.
            </summary>
      <param name="password">A string value that denotes the case-sensitive password to use to unprotect worksheet.</param>
      <returns>
        <c>true</c> if the worksheet is unprotected successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Aggregate(GrapeCity.CalcEngine.AggregateFunction,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.AggregateOption)">
      <summary>
            Get the aggregate value of the specified cell range.
            </summary>
      <param name="func">An <see cref="T:GrapeCity.CalcEngine.AggregateFunction" /> value indicates the aggregate function.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="option">An <see cref="T:GrapeCity.CalcEngine.AggregateOption" /> value indicates which values to ignore in the evaluation range for the function.</param>
      <returns>An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object represents the aggregate value of the specified cell range.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.AutoFitColumn(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Auto adjust width of columns to fit the content of cells.
            </summary>
      <param name="column">An integer value indicates the start column.</param>
      <param name="column2">An integer value indicates the end column.</param>
      <returns>A boolean value to indicate whether row height was changed</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.AutoFitRow(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Auto adjust height of rows to fit the content of all cells in rows
            </summary>
      <param name="row"></param>
      <param name="row2"></param>
      <returns>A boolean value to indicate whether row height was changed</returns>
      <remarks>This method will clear custom size flag of row</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ProcessAutoRowHeightExtra(System.Int32,System.Int32@)">
      <summary>
            Support some extra logic for process auto row height.
            </summary>
      <param name="rowIndex">An integer value indicates the index of process auto row  height</param>
      <param name="autoHeight">An integer value indicates the current auto height of row</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetPreferredCellSize(System.Int32,System.Int32,GrapeCity.Spreadsheet.CfExecutedResult@,System.Object,System.Double,System.Boolean)">
      <summary>
            Get the preferred size of cell.
            </summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="cfResult">The <see cref="T:GrapeCity.Spreadsheet.CfExecutedResult" /> value indicates the cell settings.</param>
      <param name="cellValue">An object indicates the cell value.</param>
      <param name="fixedSize">If <paramref name="preferHeight" /> is <c>true</c>, it is the fixed cell width; otherwise, it is the fixed cell height.</param>
      <param name="preferHeight">
        <c>true</c> if the preferred cell height is expected; otherwise, the preferred cell width should return.</param>
      <returns>An integer value represents the preferred cell size.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetNumberFormat(System.Int32,System.Int32)">
      <summary>
            Gets the number format from the specified cell on this sheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:System.Object" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetNumberFormat(System.Int32,System.Int32,System.Boolean@)">
      <summary>
            Gets the number format from the specified cell on this sheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="isQuoted">A boolean value indicating whether the cell value started with a quote symbol character.</param>
      <returns>The <see cref="T:System.Object" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.HasHeaders(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Determines whether the specified row has headers.
            </summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <returns>
        <c>true</c> if the table has headers; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ContainsArrayFormula(GrapeCity.Spreadsheet.Reference)">
      <summary>
            Gets a bool indicate if the reference contains ArrayFormulaExpression.
            </summary>
      <param name="reference"></param>
      <returns>Return <see cref="!:true" /> if the reference contains an ArrayFormulaExpression.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetTextToColumnsCount(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.TextParsingType,System.Tuple{System.Int32,GrapeCity.Spreadsheet.ColumnDataType}[],System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Char,GrapeCity.Spreadsheet.TextQualifier)">
      <summary>
            Determines the how many columns can be extracted from source range data.
            </summary>
      <param name="row">The top-left row of source range.</param>
      <param name="column">The top-left column of source range.</param>
      <param name="rowCount">The row count of source range.</param>
      <param name="columnCount">The column count of source range.</param>
      <param name="dataType">The format of the text to be split into columns.</param>
      <param name="consecutiveDelimiter">True to have Excel consider consecutive delimiters as one delimiter. The default value is False.</param>
      <param name="fieldInfo">An array containing parse information for the individual columns of data. The interpretation depends on the value of <paramref name="dataType" />.
            When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.
            The first element is the column number, and the second element is one of the <see cref="T:GrapeCity.Spreadsheet.ColumnDataType" /> constants specifying how the column is parsed.</param>
      <param name="tab">
        <value>true</value> to have <paramref name="dataType" /> be <see cref="F:GrapeCity.Spreadsheet.TextParsingType.Delimited" /> and to have the tab character be a delimiter.
            The default value is <value>true</value>.</param>
      <param name="semicolon">
        <value>true</value> to have <paramref name="dataType" /> be <see cref="F:GrapeCity.Spreadsheet.TextParsingType.Delimited" /> and to have the semicolon character be a delimiter.
            The default value is <value>true</value>.</param>
      <param name="comma">
        <value>true</value> to have <paramref name="dataType" /> be <see cref="F:GrapeCity.Spreadsheet.TextParsingType.Delimited" /> and to have the comma character be a delimiter.
            The default value is <value>true</value>.</param>
      <param name="space">
        <value>true</value> to have <paramref name="dataType" /> be <see cref="F:GrapeCity.Spreadsheet.TextParsingType.Delimited" /> and to have the space character be a delimiter.
            The default value is <value>true</value>.</param>
      <param name="other">
        <value>true</value> to have <paramref name="dataType" /> be <see cref="F:GrapeCity.Spreadsheet.TextParsingType.Delimited" /> and to have the <paramref name="otherChar" /> character be a delimiter.
            The default value is <value>true</value>.</param>
      <param name="otherChar">Required if <paramref name="other" /> is <value>True</value>; the delimiter character when <paramref name="other" /> is <value>True</value>.
            If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</param>
      <param name="textQualifier">Specifies whether to use single, double, or no quotes as the text qualifier.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.BackgroundImage">
      <summary>
            Gets the backgroudn image of this worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Tag">
      <summary>
            Gets or sets the object that contains data about the worksheet.
            </summary>
      <value>An <see cref="T:System.Object" /> that contains data about the control. The default is <c>null</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#IWorksheet#Slicers">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicers" /> collection that contains the collection of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> objects in the specified <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicers" /> collection that contains the collection of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> objects.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetBackgroundPicture(GrapeCity.Core.IConvertible{System.IO.Stream},System.String)">
      <summary>
            Sets the background graphic for a worksheet.
            </summary>
      <param name="imageConvertible">The graphic binary data.</param>
      <param name="contentType">The file content type.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetBackgroundPicture(System.IO.Stream,System.String)">
      <summary>
            Sets the background graphic for a worksheet.
            </summary>
      <param name="imageStream">The graphic binary data.</param>
      <param name="contentType">The file content type.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetBackgroundPicture(System.String,System.String)">
      <summary>
            Sets the background graphic for a worksheet.
            </summary>
      <param name="filename">The name of the graphic file.</param>
      <param name="contentType">The file content type.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.DataManager">
      <summary>
            Gets or sets the data source of this worksheet.
            </summary>
      <value>An <see cref="!:IDataSource" /> object represents the data source of this worksheet.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetDynamicArrayRange(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Gets the dynamic array cell range.
            </summary>
      <param name="row">The row index of the cell which belong to the dynamic array.</param>
      <param name="column">The column index of the cell which belong to the dynamic array.</param>
      <param name="direct">
        <c>true</c> if the cell must be the dynamic array anchor cell.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the cell range of the dynamic array. Negative column represents the dynamic array has #SPILL error.
            <see cref="F:GrapeCity.Spreadsheet.Reference.Empty" /> if the cell doesn't belong to the dynamic array.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.FindBackupRange(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Boolean)">
      <summary>
            Finds the suitable range to backup that the original worksheet can be restored correctly later (used by Clipboard Cut for example)
            </summary>
      <param name="backupRow"></param>
      <param name="backupColumn"></param>
      <param name="backupRowCount"></param>
      <param name="backupColumnCount"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.PreviousNonEmptyCell(System.Int32,System.Int32)">
      <summary>
            Gets the nearest previous column which contains data in the specified row.
            </summary>
      <param name="row">The row index to find.</param>
      <param name="excludeColumn">The start column index. If the cell in this column is not empty, it'll be returned too.</param>
      <returns>The nearest previous column which contains data in the specified row.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.NextNonEmptyCell(System.Int32,System.Int32)">
      <summary>
            Gets the nearest next column which contains data in the specified row.
            </summary>
      <param name="row">The row index to find.</param>
      <param name="excludeColumn">The start column index. If the cell in this column is not empty, it'll be returned too.</param>
      <returns>The nearest next column which contains data in the specified row.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.Evaluate(System.Int32,System.Int32,GrapeCity.CalcEngine.Expression,GrapeCity.CalcEngine.IValue@,System.Boolean)">
      <summary>
            Evaluates the specified expression again a context cell.
            </summary>
      <param name="row">An integer value indicates the row index of the context cell.</param>
      <param name="column">An integer value indicates the column index of the context cell.</param>
      <param name="expression">The expression to evaluate.</param>
      <param name="evaluatedResult">The evaluated value.</param>
      <param name="preferRawValue">
        <c>true</c> if the first evaluated result should be returned; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ContainsLockedCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Determines whether the specified range contains at least one locked cell.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>
        <c>true</c> if the specified range contains at least one locked cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ContainsLockedCell">
      <summary>
            Determines whether the selected ranges contains at least one locked cell.
            </summary>
      <returns>
        <c>true</c> if the specified range contains at least one locked cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SelectNeighborNonEmptyCells(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Get the cell range around the specified cell which contains data.
            </summary>
      <param name="row">An integer value indicates the context row.</param>
      <param name="column">An integer value indicates the context column.</param>
      <returns>The cell range around the specified cell which contains data.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetPreferredPrintArea">
      <summary>
            Gets the preferred print area.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetNonEmptyArea">
      <summary>
            Gets the minimum cell range which contains all non-empty data of the worksheet.
            </summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the minimum non-empty cell range of the worksheet.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.ProcessAutoMergedCells(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32@)">
      <summary>
            Finds the auto-merged cells.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.OnSplitChanged(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Occurs after the split setting is changed.
            </summary>
      <param name="splitVert">The vertical split value.</param>
      <param name="splitHorz">The horizontal split value.</param>
      <param name="freeze">
        <c>true</c> if the split setting is <see cref="P:GrapeCity.Spreadsheet.WorksheetView.SplitRow" />/<see cref="P:GrapeCity.Spreadsheet.WorksheetView.SplitColumn" />; 
            otherwise, the split setting is <see cref="P:GrapeCity.Spreadsheet.WorksheetView.SplitVertical" />/<see cref="P:GrapeCity.Spreadsheet.WorksheetView.SplitHorizontal" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetRichValue(GrapeCity.Spreadsheet.Table@,System.Int32@)">
      <summary>
            Gets the richvalue in the table data range
            </summary>
      <param name="table">The table contains the <see cref="T:GrapeCity.CalcEngine.IRichValue" /> object.</param>
      <param name="column">The table column contains the <see cref="T:GrapeCity.CalcEngine.IRichValue" /> object.</param>
      <returns>The contextual <see cref="T:GrapeCity.CalcEngine.IRichValue" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetRichValue(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets the richvalue in the  data range.
            </summary>
      <param name="row1">An integer value indicates the top row index of cell range.</param>
      <param name="column1">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>The contextual <see cref="T:GrapeCity.CalcEngine.IRichValue" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.SetAutoRowHeight(System.Int32,System.Int32)">
      <summary>
            Sets the automatic size to a specific row.
            </summary>
      <param name="row">An integer value indicates the row index.</param>
      <returns>An integer value indicates the auto height.</returns>
      <remarks>This method will clear custom size flag of row.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.RowHeader">
      <summary>
            Gets the row header of a worksheet.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRowHeader" /> object represents the row header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.ColumnHeader">
      <summary>
            Gets the column header of a worksheet.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IColumnHeader" /> object represents the column header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.ColumnFooter">
      <summary>
            Gets the column footer of a worksheet.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IColumnFooter" /> object represents the column header.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.IsCommentStorageAvailable">
      <summary>
            Gets a boolean value indicating whether there is a cell comment in this worksheet.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetCommentStorage">
      <summary>
            Get Comment Storage
            </summary>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#ICommentsThreaded#Item(System.Int32)">
      <summary>
            Gets a single threaded comment from the collection.
            </summary>
      <param name="index">The index number for the comment.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object contained by the collection.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.GrapeCity#Spreadsheet#ICommentsThreaded#Count">
      <summary>
            Gets an integer value that represents the number of comments in the collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.CommentsThreaded">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ICommentsThreaded" /> collection that represents all the top-level/root comments (no replies) for the specified worksheet.
            Includes legacy and modern comments.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetHyperlink(System.Int32,System.Int32)">
      <summary>
            Gets the hyperlink of the specified cell.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The hyperlink of the specified cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.GetHyperlink(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets the hyperlink of the specified range.
            </summary>
      <param name="row">An integer value indicates the top row index of range.</param>
      <param name="column">An integer value indicates the left column index of range.</param>
      <param name="row2">An integer value indicates the bottom row index of range.</param>
      <param name="column2">An integer value indicates the right column index of range.</param>
      <returns>The hyperlink that has range intersected with the specified range.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Worksheet.VisitHyperlink(System.Int32,System.Int32)">
      <summary>
            Marks that the hyperlink is visited.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Selection">
      <summary>
            Gets the current selected cell(s).
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.ActiveCell">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the active cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Worksheet.Sparklines">
      <summary>
            Gets the sparkline storage of this worksheet.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IProtection">
      <summary>
            Represents the various types of protection options available for a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IProtection.AllowDeletingColumns">
      <summary>
            Gets a boolean value indicating whether the deletion of columns is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IProtection.AllowDeletingRows">
      <summary>
            Gets a boolean value indicating whether the deletion of rows is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IProtection.AllowFiltering">
      <summary>
            Gets a boolean value indicating whether the user is allowed to make use of an <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> that was created before the sheet was protected.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IProtection.AllowFormattingCells">
      <summary>
            Gets a boolean value indicating whether the formatting of cells is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IProtection.AllowFormattingColumns">
      <summary>
            Gets a boolean value indicating whether the formatting of columns is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IProtection.AllowFormattingRows">
      <summary>
            Gets a boolean value indicating whether the formatting of rows is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IProtection.AllowInsertingColumns">
      <summary>
            Gets a boolean value indicating whether the insertion of columns is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IProtection.AllowInsertingRows">
      <summary>
            Gets a boolean value indicating whether the insertion of rows is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IProtection.AllowInsertingHyperlinks">
      <summary>
            Gets a boolean value indicating whether the insertion of hyperlinks is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IProtection.AllowSorting">
      <summary>
            Gets a boolean value indicating whether the sorting option is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorksheetFunction">
      <summary>
            Represents the container for worksheet functions that can be called from application.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetFunction.Trend(System.Object,System.Object,System.Object,System.Object,GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32)">
      <summary>
            Gets values along a linear trend. Fits a straight line (using the method of least squares) to the arrays known_y's and known_x's.
            Gets the y-values along that line for the array of new_x's that you specify.
            </summary>
      <param name="knowY">Known_y's - the set of y-values that you already know in the relationship y = mx + b.</param>
      <param name="knowX">Known_x's - an optional set of x-values that you may already know in the relationship y = mx + b.</param>
      <param name="newX">New_x's - new x-values for which you want Trend to return corresponding y-values.</param>
      <param name="constant">Const - a logical value specifying whether to force the constant b to equal 0.</param>
      <param name="worksheet">The context worksheet to calculate.</param>
      <param name="contextRow">The context row to calculate.</param>
      <param name="contextColumn">The context column to calculate.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object,GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32)">
      <summary>
            Calculates predicted exponential growth by using existing data. 
            GROWTH returns the y-values for a series of new x-values that you specify by using existing x-values and y-values. 
            You can also use the GROWTH worksheet function to fit an exponential curve to existing x-values and y-values.
            </summary>
      <param name="knowY">The set of y-values you already know in the relationship y = b*m^x.</param>
      <param name="knowX">An optional set of x-values that you may already know in the relationship y = b*m^x.</param>
      <param name="newX">New x-values for which you want GROWTH to return corresponding y-values.</param>
      <param name="constant">A logical value specifying whether to force the constant b to equal 1.</param>
      <param name="worksheet">The context worksheet to calculate.</param>
      <param name="contextRow">The context row to calculate.</param>
      <param name="contextColumn">The context column to calculate.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetFunction.Index(System.Object,System.Object,System.Object,System.Object,GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32)">
      <summary>
            Gets a value or the reference to a value from within a table or range.
            </summary>
      <param name="arg1">Array or Reference - a range of cells or an array constant. For references, it is the reference to one or more cell ranges.</param>
      <param name="row">Selects the row in array from which to return a value. If <paramref name="row" /> is omitted, <paramref name="column" /> is required. 
            For references, the number of the row in reference from which to return a reference.</param>
      <param name="column">Selects the column in array from which to return a value. If <paramref name="column" /> is omitted, <paramref name="row" /> is required. 
            For reference, the number of the column in reference from which to return a reference.</param>
      <param name="area">Used when returning references. Selects a range in reference from which to return the intersection of <paramref name="row" /> and <paramref name="column" />. 
            The first area selected or entered is numbered 1, the second is 2, and so on. If <paramref name="area" /> is omitted, Index uses area 1.</param>
      <param name="worksheet">The context worksheet to calculate.</param>
      <param name="contextRow">The context row to calculate.</param>
      <param name="contextColumn">The context column to calculate.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetFunction.CreateExpression(System.Object)">
      <summary>
            Creates an expression from the specified primitive value.
            </summary>
      <param name="value">The primitive value.</param>
      <returns>The <see cref="T:GrapeCity.CalcEngine.Expression" /> object.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CalculationEngine">
      <summary>
            Represents a class which store, evaluate or adjust expressions.
            </summary>
      <seealso cref="T:System.IDisposable" />
      <summary>
            Represents util functions for calculation.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.NotifyVisualChanged(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Notifies the calculation engine the visual of the specified cell range is repainted.
            </summary>
      <param name="worksheet">The worksheet contains the cell range.</param>
      <param name="row">The top row of the cell range.</param>
      <param name="column">The left column of the cell range.</param>
      <param name="row2">The bottom row of the cell range.</param>
      <param name="column2">The right column of the cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.NotifyVisualChanged(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.Reference[])">
      <summary>
            Notifies the calculation engine the visual of the specified cell range is repainted.
            </summary>
      <param name="worksheet">The worksheet contains the cell range.</param>
      <param name="ranges">The collection of changed cell ranges.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.NotifyVisualChanged(GrapeCity.Spreadsheet.IWorkbook)">
      <summary>
            Notifies the calculation engine the visual of all worksheet in the specified workbook are repainted.
            </summary>
      <param name="workbook">The workbook to repaint.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.FinalizePendingQueue(System.Boolean,System.Boolean)">
      <summary>
            Make sure that all pending queue will be processed.
            </summary>
      <param name="allowSpilling">
        <c>false</c> to forbid dynamic array to spill values. The actual formula cell will have evaluated value but keep Uncalculated state.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.GrapeCity#CalcEngine#IAsyncFunctionManager#OnDataChanged(GrapeCity.CalcEngine.AsyncApplication)">
      <summary>
            Called when asynchronous function(s) finished.
            </summary>
      <param name="asyncApplication">An <see cref="T:GrapeCity.CalcEngine.AsyncApplication" /> object indicates the asynchronous function application.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.EvaluationContext">
      <summary>
            Gets the global shared evaluation context.
            </summary>
      <returns>An <see cref="T:GrapeCity.CalcEngine.IEvaluationContext" /> object represents the evaluation context.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.CalcFeatures">
      <summary>
            Gets or sets a <see cref="P:GrapeCity.Spreadsheet.CalculationEngine.CalcFeatures" /> value indicates which calculation feature(s) is enabled.
            </summary>
      <remarks>This property must set before any calculating process; otherwise, some evaluated result may be compromised.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.CacheOptions">
      <summary>
            Gets or sets the <see cref="P:GrapeCity.Spreadsheet.CalculationEngine.CacheOptions" /> value describing the caching option.
            </summary>
      <value>
            The <see cref="P:GrapeCity.Spreadsheet.CalculationEngine.CacheOptions" /> value describing the caching option.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.Calculation">
      <summary>
            Specifies when the control should recalculate the data in the workbook.
            </summary>
      <value>A <see cref="!:CalcEngine.CalculationMode" /> enumeration member. Default is Automatic.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.CalculateBeforeSave">
      <summary>
            Gets or sets the property which specifies whether workbooks should be calculated as needed before saving.
            </summary>
      <value>
        <c>true</c> if if workbooks are calculated before they're saved; otherwise, <c>false</c>.</value>
      <remarks>This property is preserved even if you change the <see cref="P:GrapeCity.Spreadsheet.CalculationEngine.Calculation" /> property.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.MaximumIterations">
      <summary>
            Gets or sets the maximum number of iterations for calculations with circular references.
            </summary>
      <value>The maximum iterations. Default value is 100.</value>
      <exception cref="T:System.ArgumentOutOfRangeException">Specified number of iterations is out of range; must be an integer between 1 and 32767</exception>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.MaximumChange">
      <summary>
            Gets or sets the maximum amount of change below which to stop iterating for caclulations with circular references.
            </summary>
      <value>The maximum change. Default value is 0.001.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.Iterative">
      <summary>
            Gets or sets whether the workbook should perform iterative calculations for formulas that contain circular references.
            </summary>
      <value>
        <c>true</c>, to perform iterative calculations; otherwise, <c>false</c>. Default is <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.CalculationOnDemand">
      <summary>
            Gets or sets the property which determines whether individual cells are calculated on demand.
            </summary>
      <value>
        <c>true</c> if individual cells are calculated on demand; otherwise, cells are calculated at once.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.CalculationOnDemandMode">
      <summary>
            Gets or sets the <see cref="P:GrapeCity.Spreadsheet.CalculationEngine.CalculationOnDemandMode" /> value which determines how individual cells are calculated on demand.
            </summary>
      <value>
            The <see cref="P:GrapeCity.Spreadsheet.CalculationEngine.CalculationOnDemandMode" /> value represents how individual cells are calculated.
            </value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.IsTrackingVisualChange">
      <summary>
            Gets a boolean value indicating whether the visual change should notify the calculation engine.
            </summary>
      <returns>
        <c>true</c> if the visual change should notify the calculation engine; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CalculationEngine.ReferenceStyle">
      <summary>
            Gets or sets <see cref="P:GrapeCity.Spreadsheet.CalculationEngine.ReferenceStyle" /> value which specifies whether to use A1 style or R1C1 style in cell and range references.
            </summary>
      <value>The default value is <see cref="F:GrapeCity.Spreadsheet.ReferenceStyle.A1" />.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.IsCircularCell(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32)">
      <summary>
            Determines whether the specified cell is a circular cell.
            </summary>
      <param name="worksheet">The worksheet contains the cell.</param>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <returns>
        <c>true</c> if the specified cell is a circular cell; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.Calculate">
      <summary>
            Calculates all dirty cells in the whole workbook set.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.Calculate(GrapeCity.Spreadsheet.IWorkbook,System.Boolean,System.Boolean)">
      <summary>
            Calculates cells in the specified workbook.
            </summary>
      <param name="workbook">A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object indicates the workbook to operate.</param>
      <param name="fullCalculate">if set to <c>true</c>, calculates all formulas; otherwise, calculates all formula as needed. Volatile formulas and formulas involved in circular references are always calculated.</param>
      <param name="rebuild">if set to <c>true</c> the internal data in this <see cref="T:GrapeCity.Spreadsheet.CalculationEngine" /> will be re-build.</param>
      <remarks>Rebuild internal data of the <see cref="T:GrapeCity.Spreadsheet.CalculationEngine" /> is a very expensive operation.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.Calculate(GrapeCity.Spreadsheet.IWorksheet)">
      <summary>
            Calculates cells in the specified worksheet.
            </summary>
      <param name="worksheet">The worksheet to calculate.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.Rebuild">
      <summary>
            Rebuilds all internal data of the calculation engine.
            </summary>
      <remarks>Cells are not calculated. In order to calculate immediately, use <see cref="M:GrapeCity.Spreadsheet.CalculationEngine.Calculate(GrapeCity.Spreadsheet.IWorkbook,System.Boolean,System.Boolean)" /> instead.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.Evaluate(System.String,GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.CellReference)">
      <summary>
            Evaluates the specified expression using the specified evaluation context.
            </summary>
      <param name="formula">An string value indicates the formula to evaluate.</param>
      <param name="worksheet">An <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object indicates the context worksheet.</param>
      <param name="contextCell">A <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value indicates the context cell.</param>
      <returns>GrapeCity.CalcEngine.IValue.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.TriggerVolatileCells">
      <summary>
            This function will notify all cells, which contains volatile functions or belong to a circuit, to recalculate.
            </summary>
      <returns>TRUE if there is any volatile cells.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.Sum(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IReferenceSource,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets SUM of the specified range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>The total summary of the specified cell range.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.Min(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IReferenceSource,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets MIN of the specified range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>The total summary of the specified cell range.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CalculationEngine.Max(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IReferenceSource,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets MAX of the specified range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>The total summary of the specified cell range.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CalcFeatures">
      <summary>
            Represents all available features of the calculation engine.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalcFeatures.None">
      <summary>
            Use the legacy calculation engine.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalcFeatures.DynamicArray">
      <summary>
            Enables the dynamic array feature.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalcFeatures.FieldValue">
      <summary>
            FIELDVALUE functions were present in the calculation engine.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalcFeatures.ReserveFormulaWhiteSpaces">
      <summary>
            Keep whitespace characters inside the formula.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalcFeatures.UIBlocking">
      <summary>
            All processes are done in UI thread.
            </summary>
      <remarks>This enum should not be used unless there is exception with asynchronous functions like IMAGE.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalcFeatures.All">
      <summary>
            Enables all features.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ReferenceStyle">
      <summary>
            Specifies the reference style in formulas and custom names in the sheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ReferenceStyle.A1">
      <summary>
            Uses letters and numbers for column and row coordinates;
            uses dollar sign ($) for absolute coordinates
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ReferenceStyle.R1C1">
      <summary>
            Uses "R" and number for row, "C" and number for column coordinates;
            uses brackets [ ] for relative coordinates
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CalculationOnDemandMode">
      <summary>
            Specifies whether invidiual cells are re-calculated.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalculationOnDemandMode.On">
      <summary>
            Individual cells are calculated on demand; otherwise, cells are calculated at once
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalculationOnDemandMode.Semi">
      <summary>
            Cells are calculated at once when there is user's first access to one of them.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalculationOnDemandMode.Off">
      <summary>
            Cells are calculated at once automatically.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellValueChangedEventArgs">
      <summary>
            Represents a class which stores cell calculated information.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellValueChangedEventArgs.Count">
      <summary>
            Gets the total number of cell references which are changed recently.
            </summary>
      <value>
            The total number of cell calculated references.
            </value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellValueChangedEventArgs.GetReference(System.Int32,GrapeCity.Spreadsheet.IWorksheet@)">
      <summary>
            Gets an array of cell ranges which are changed recently.
            </summary>
      <param name="index">The index of changed cell reference.</param>
      <param name="worksheet">The worksheet contains changed cell reference.</param>
      <returns>The cell changed reference at the specified index.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Calculation">
      <summary>
            Represents when calculation engine should calculate formulas in the spreadsheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Calculation.Manual">
      <summary>
            Indicates that calculations in the spreadsheet will be triggered manually by the user. 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Calculation.Automatic">
      <summary>
            Indicates that calculations in the spreadsheet will be performed automatically when cell values change. 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Calculation.Semiautomatic">
      <summary>
            Indicates that calculations in the spreadsheet will be performed automatically when cell values change except for tables. 
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ExpressionView">
      <summary>
            Represents a view of cell range in worksheet which all cell values are calculated by a specified formula.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.PreferEvaluatedReference">
      <summary>
            Gets or sets a value indicating whether the evaluated range reference will be kept as it is.
            </summary>
      <value>
        <c>true</c> if the evaluated range reference will be kept as it is; otherwise, <c>false</c>.</value>
      <remarks>Default behavior is to assign corresponding primitive value.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.Row">
      <summary>
            Gets the top row index of this <see cref="T:GrapeCity.Spreadsheet.ExpressionView" /> in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <value>An integer value indicates the top row index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.Column">
      <summary>
            Gets the left column index of this <see cref="T:GrapeCity.Spreadsheet.ExpressionView" /> in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <value>An integer value indicates the left column index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.Row2">
      <summary>
            Gets the bottom row index of this <see cref="T:GrapeCity.Spreadsheet.ExpressionView" /> in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <value>An integer value indicates the bottom row index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.Column2">
      <summary>
            Gets the right column index of this <see cref="T:GrapeCity.Spreadsheet.ExpressionView" /> in the <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <value>An integer value indicates the right column index.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionView.Delete">
      <summary>
            Removes the expression view from the owner <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionView.GetLightweightCell(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> represents the specified cell. This function is no thread-safe.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> instance represents the cell.</returns>
      <remarks>The returned <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> cell is available until the next cell accessing.
            The caller should read value from <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> cell immediately and refer it no more.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionView.Item(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> represents the specified cell.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> instance represents the cell.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ExpressionViewCell">
      <summary>
            Represents a cell in the <see cref="T:GrapeCity.Spreadsheet.ExpressionView" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExpressionViewCell.DataType">
      <summary>
            Gets the data type of this cell.
            </summary>
      <value>The type of the data of the cell.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionViewCell.GetNumber">
      <summary>
            Gets the <see cref="T:System.Double" /> value.
            </summary>
      <param name="context">The evaluation context to get value.</param>
      <returns>An <see cref="T:System.Double" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionViewCell.GetLogical">
      <summary>
            Gets the <see cref="T:System.Boolean" /> value.
            </summary>
      <param name="context">The evaluation context to get value.</param>
      <returns>An <see cref="T:System.Boolean" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionViewCell.GetError">
      <summary>
            Gets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.
            </summary>
      <param name="context">The evaluation context to get value.</param>
      <returns>An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExpressionViewCell.GetText">
      <summary>
            Gets the <see cref="T:System.String" /> value.
            </summary>
      <param name="context">The evaluation context to get value.</param>
      <returns>An <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellDataType">
      <summary>
            Represents the data type of a cell in the <see cref="T:GrapeCity.Spreadsheet.ExpressionView" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellDataType.Error">
      <summary>
            Indicates the value type is calculation error.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellDataType.Logical">
      <summary>
            Indicates the value type is boolean.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellDataType.Text">
      <summary>
            Indicates the value type is string.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellDataType.Number">
      <summary>
            Indicates the value type is numeric.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ExternalVariable">
      <summary>
            Represents a external variable.
            </summary>
      <seealso cref="T:GrapeCity.Spreadsheet.DefinedName" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.ExternalVariable" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.ExternalVariable" /> class.
            </summary>
      <param name="fixedVariable">
        <c>true</c> if the external variable provide fixed value; otherwise, the external variable has precedent(s).</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExternalVariable.Name">
      <summary>
            Gets or sets the name of the defined name.
            </summary>
      <value>The string value represents name of the defined name.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.IsUndefined">
      <summary>
            Determines whether this external variable is undefined.
            </summary>
      <returns>
        <c>true</c> if this external variable is undefined; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.IsRequiredNumberFormat">
      <summary>
            Determines whether the external variable depends on the format of cells.
            </summary>
      <returns>
        <c>true</c> if the external variable depends on the format of cells; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.OnDirtying">
      <summary>
            Designates this external variable to be recalculated when the next recalculation occurs.
            </summary>
      <returns>
        <c>true</c> if the external variable require executing its own logic after the calculation engine is ready; otherwise, <c>false</c>.</returns>
      <remarks>Accessing calculation engine (like get value of external variable) isn't available inside this function.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.OnDirtied">
      <summary>
            Designates this external variable to be recalculated when the next recalculation occurs.
            </summary>
      <remarks>Accessing calculation engine (like get value of external variable) is available inside this function.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.DeleteCore">
      <summary>
            Designates this external variable to be deleted.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExternalVariable.EvaluationContext">
      <summary>
            Gets the global shared evaluation context.
            </summary>
      <returns>An <see cref="T:GrapeCity.CalcEngine.IEvaluationContext" /> object represents the evaluation context.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExternalVariable.Value">
      <summary>
            Gets the value of this external variable.
            </summary>
      <param name="context">The evaluation context to evaluate.</param>
      <returns>A <see cref="T:GrapeCity.CalcEngine.IValue" /> object represents the value of this external variable.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExternalVariable.IsVolatile">
      <summary>
            Gets or sets a boolean value indicating whether this external variable is volatile.
            </summary>
      <returns>
        <c>true</c> if this external variable is volatile; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.Volatile(System.Boolean)">
      <summary>
            Marks this external variable as volatile. A volatile external variable must be recalculated whenever calculation occurs in any cells on the worksheet.
            A nonvolatile external variable is recalculated only when the input variables change.
            </summary>
      <param name="volatile">if set to <c>true</c> this external variable is marked as volatile; otherwise, <c>false</c>.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExternalVariable.ContextWorksheet">
      <summary>
            Gets the context worksheet to evaluate.
            </summary>
      <value>
            An <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object represents the context worksheet.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExternalVariable.Row">
      <summary>
            Gets the context row for evaluating.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ExternalVariable.Column">
      <summary>
            Gets the context column for evaluating.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.EvaluateCore(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IValue)">
      <summary>
            Evaluates the result of this external variable.
            </summary>
      <param name="context">The evaluation context.</param>
      <param name="result">An <see cref="T:GrapeCity.CalcEngine.IValue" /> object which stores the evaluated result.</param>
      <remarks>
            This function is invoked only if the external variable isn't attached with a formula.
            If it has formula, the calculation engine will take care everything.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.Dirty">
      <summary>
            Notifies the calculation engine that the value of this external variable is changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.IsAbsoluteReferencePreferred">
      <summary>
            Gets a boolean value indicating whether the external variable prefers all absolute references.
            </summary>
      <returns>
        <c>true</c> if all references are converted to absolute; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ExternalVariable.IsAutoCorrectPreferred">
      <summary>
            Gets a boolean value indicating whether the external variable prefer correct expression automatically.
            </summary>
      <returns>
        <c>true</c> if all expression are corrected automatically; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Localization.LanguagePackage">
      <summary>
            Represents a language package which contains aliases of the spreadsheet engine.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Localization.LanguagePackage.NameValueType">
      <summary>
            The value is used to define a name.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Localization.LanguagePackage.UnspecifiedValueType">
      <summary>
            The value accepts any type.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetOverloads(GrapeCity.CalcEngine.Function)">
      <summary>
            Gets the total number of function overloads.
            </summary>
      <param name="function">The function to extract information.</param>
      <returns>The total number of function overloads.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetDescription(GrapeCity.CalcEngine.Function)">
      <summary>
            Gets description of the function.
            </summary>
      <param name="function">The function to extract description.</param>
      <returns>A string value represents description of the function.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetDescription2(GrapeCity.CalcEngine.Function)">
      <summary>
            Gets the function description which is displayed from Function Arguments dialog.
            </summary>
      <param name="function">The function to extract description.</param>
      <returns>A string value represents description of the function.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetArgumentOptions(GrapeCity.CalcEngine.Function,System.Int32)">
      <summary>
            Gets an array of option values for the specified argument.
            </summary>
      <param name="function">The function to extract information.</param>
      <param name="index">An integer value indicates position of the argument.</param>
      <returns>An array of argument's option values; <c>null</c> if there is no option value.</returns>
      <remarks>
        <para>If the option values are strings, the returned data type is <see cref="!:string[]" /></para>
        <para>If the option values are numeric values, the returned data is <see cref="!:Tuple&lt;object, string, string&gt;[]" /></para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetMinimumArgumentCount(GrapeCity.CalcEngine.Function,System.Int32)">
      <summary>
            Gets the minimum number of arguments must be passed to the function.
            </summary>
      <param name="function">The function to extract information.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetArgumentCount(GrapeCity.CalcEngine.Function,System.Int32,System.Int32,System.Boolean@)">
      <summary>
            Gets the total number of parameters that display in the intelli-sense tooltip.
            </summary>
      <param name="function">The function to extract information.</param>
      <param name="argCount">The total number of current passed arguments.</param>
      <param name="overload">The order of function overload.</param>
      <param name="limited">
        <c>true</c> if the parameter count is maximum; otherwise, more parameter can be passed.</param>
      <returns>The total number of parameters that display in the intelli-sense tooltip.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetArgumentName(GrapeCity.CalcEngine.Function,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets the parameter name of the specified function.
            </summary>
      <param name="function">The function to extract parameter name.</param>
      <param name="index">An integer value indicates the parameter's position.</param>
      <param name="argCount">The total number of current passed arguments.</param>
      <param name="overload">An integer value indicates the order of function overload.</param>
      <returns>A string value represents the parameter name.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.IsArrayArgument(GrapeCity.Spreadsheet.Workbook,GrapeCity.CalcEngine.Function,GrapeCity.CalcEngine.Expression,GrapeCity.CalcEngine.IValue,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Idicates if the argument of a function is accept array.
            </summary>
      <returns>True if accept array. Otherwise, return false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetArgumentType(GrapeCity.CalcEngine.Function,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets the parameter name of the specified function.
            </summary>
      <param name="function">The function to extract parameter name.</param>
      <param name="index">An integer value indicates the parameter's position.</param>
      <param name="argCount">The total number of current passed arguments.</param>
      <param name="overload">An integer value indicates the order of function overload.</param>
      <returns>A string value represents the parameter name.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetArgumentName(System.String,System.Int32)">
      <summary>
            Gets name of the parameter.
            </summary>
      <param name="name">Name of the parameter in English.</param>
      <param name="index">An integer value indicates the parameter's position.</param>
      <returns>The localized name of the parameter.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetArgumentTypeName(GrapeCity.CalcEngine.ValueType)">
      <summary>
            Gets the parameter name for the specified value type.
            </summary>
      <param name="type">A <see cref="T:GrapeCity.CalcEngine.ValueType" /> value indicates the type of the parameter value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetArgumentName(GrapeCity.CalcEngine.ValueType,System.Int32)">
      <summary>
            Gets the parameter name for the specified value type.
            </summary>
      <param name="type">A <see cref="T:GrapeCity.CalcEngine.ValueType" /> value indicates the type of the parameter value.</param>
      <param name="index">An integer value indicates the parameter's position.</param>
      <returns>The parameter name for the specified value type.</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.CzechLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.DanishLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.DutchLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.FinnishLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.FrenchLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GermanLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.HungarianLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.ItalianLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Mutable">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Localization.LanguagePackage" /> is mutable.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Localization.LanguagePackage" /> is mutable; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.EditingBehaviors">
      <summary>
            Gets or sets the editing behaviors of this language package.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Localization.LanguagePackageEditingBehaviors" /> value represents the editing behaviors of this language package.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.#ctor(System.String,System.String,GrapeCity.Spreadsheet.Localization.LanguagePackage)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Localization.LanguagePackage" /> class.
            </summary>
      <param name="name">The name of the package in English.</param>
      <param name="nativeName">The name of the package in native language.</param>
      <param name="basePackage">The base language package.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Name">
      <summary>
            Gets the name of the language package.
            </summary>
      <value>A string value represents the name of the language package.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.FromCulture(System.Globalization.CultureInfo)">
      <summary>
            Get the built-in language package from the specified culture.
            </summary>
      <param name="cultureInfo">The culture information.</param>
      <returns>The corresponding language package of the specified culture.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.NativeName">
      <summary>
            Gets the name of the language package in the native language.
            </summary>
      <value>The native name of the language package.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetBuiltInStyleNames">
      <summary>
            Returns names of built-in styles.
            </summary>
      <value>A string array represents names of built-in styles.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.BuiltInStyleNames">
      <summary>
            Gets names of built-in styles.
            </summary>
      <value>A string array represents names of built-in styles.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.CreateAlias(GrapeCity.CalcEngine.BuiltinFunction,System.String)">
      <summary>
            Creates a new function alias.
            </summary>
      <param name="function">A <see cref="T:GrapeCity.CalcEngine.BuiltinFunction" /> value indicates the built-in function.</param>
      <param name="name">A string value indicates the function alias.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetName(GrapeCity.CalcEngine.Function)">
      <summary>
            Gets the localized name of the function.
            </summary>
      <param name="function">A <see cref="T:GrapeCity.CalcEngine.BuiltinFunction" /> value indicates the built-in function.</param>
      <returns>A string value represents the localized name of the function.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.MapAlias(GrapeCity.CalcEngine.StructuredItemSpecifiers,System.String)">
      <summary>
            Maps a string value to the specified structured item specifier.
            </summary>
      <param name="itemSpecifier">A <see cref="T:GrapeCity.CalcEngine.StructuredItemSpecifiers" /> value indicates the structured item specifier.</param>
      <param name="keyword">A string value indicates the keyword.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.MapAlias(GrapeCity.CalcEngine.CalcError,System.String)">
      <summary>
            Maps a string value to the specified <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.
            </summary>
      <param name="value">The <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.</param>
      <param name="keyword">A string value indicates the keyword.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.MapAlias(System.Boolean,System.String)">
      <summary>
            Maps a string value to the specified <see cref="T:System.Boolean" /> value.
            </summary>
      <param name="value">The <see cref="T:System.Boolean" /> value.</param>
      <param name="keyword">A string value indicates the keyword.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GrapeCity#CalcEngine#ICalcEngineLanguagePackage#GetArgument(GrapeCity.CalcEngine.Function,System.String)">
      <summary>
            Get the English argument value of the specified localized argument.
            </summary>
      <param name="function">The function that is processing</param>
      <param name="localizedArg">The localized argument.</param>
      <returns>The English argument value of the specified localized argument.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)">
      <summary>
            Get the English argument value of the specified localized argument.
            </summary>
      <param name="function">The function that is processing</param>
      <param name="localizedArg">The localized argument.</param>
      <returns>The English argument value of the specified localized argument.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.English">
      <summary>								
            Gets the function language package in English.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Japanese">
      <summary>								
            Gets the function language package in Japanese.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Korean">
      <summary>								
            Gets the function language package in Korean.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Chinese">
      <summary>								
            Gets the function language package in Chinese.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.French">
      <summary>								
            Gets the function language package in French.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Dutch">
      <summary>								
            Gets the function language package in Dutch.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.German">
      <summary>								
            Gets the function language package in German.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Spanish">
      <summary>								
            Gets the function language package in Spanish.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Portuguese">
      <summary>								
            Gets the function language package in Portuguese.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Russian">
      <summary>								
            Gets the function language package in Russian.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Swedish">
      <summary>								
            Gets the function language package in Swedish.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Italian">
      <summary>								
            Gets the function language package in Italian.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Danish">
      <summary>								
            Gets the function language package in Danish.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Polish">
      <summary>								
            Gets the function language package in Polish.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Finnish">
      <summary>								
            Gets the function language package in Finnish.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Norwegian">
      <summary>								
            Gets the function language package in Norwegian.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Czech">
      <summary>								
            Gets the function language package in Czech.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Hungarian">
      <summary>								
            Gets the function language package in Hungarian.								
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.LanguagePackage.Turkish">
      <summary>
            Gets the function language package in Turkish.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetErrorText(GrapeCity.CalcEngine.CalcError)">
      <summary>
            Gets the text of the specified error value..
            </summary>
      <param name="error">The error value.</param>
      <returns>The text represents the specified error value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetBooleanText(System.Boolean)">
      <summary>
            Gets the text of the specified error value..
            </summary>
      <param name="value">The error value.</param>
      <returns>The text represents the specified error value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.IsIntelliSenseAvailable(GrapeCity.CalcEngine.Function)">
      <summary>
            Gets a boolean value indicating whether the function is available in intelli-sense data.
            </summary>
      <param name="function">The function to verify.</param>
      <returns>
        <c>true</c> if the function is available in intelli-sense data; otherwise <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.ParseHeaderFooterCode(System.String)">
      <summary>
            Parses the printing header/footer code.
            </summary>
      <param name="text">A string value indicates the printing header/footer code.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes" /> value represents the printing header/footer code.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetDisplayText(GrapeCity.Spreadsheet.Localization.LanguagePackage.ObjectType)">
      <summary>
            Gets the display text of the specified object type.
            </summary>
      <param name="type">The type of object.</param>
      <returns>A string value represents the type of object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetDescription(GrapeCity.CalcEngine.BuiltinFunction)">
      <summary>
            Gets the function description which is displayed from auto-completed window.
            </summary>
      <param name="builtinFunction">The function to display.</param>
      <returns>A string value represents the function's description.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetDescription2(GrapeCity.CalcEngine.BuiltinFunction)">
      <summary>
            Gets the function description which is displayed from Function Arguments dialog.
            </summary>
      <param name="builtinFunction">The function to display.</param>
      <returns>A string value represents the function's description.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetArgumentDescription(GrapeCity.CalcEngine.Function,System.Int32,System.Int32)">
      <summary>
            Gets the description of function's argument which is displayed from Function Arguments dialog.
            </summary>
      <param name="builtinFunction">The function to display.</param>
      <param name="index">The order of argument.</param>
      <param name="overload">The index of overload.</param>
      <returns>A string value represents the description of function's argument.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.LanguagePackage.GetDescription(GrapeCity.CalcEngine.StructuredItemSpecifiers)">
      <summary>
            Gets description of the item specifier.
            </summary>
      <param name="value">The item specifier of the structured object.</param>
      <returns>A string value represents description of the item specifier.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Localization.LanguagePackage.ObjectType">
      <summary>
            Represents the type of object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Localization.LanguagePackage.ObjectType.WebImage">
      <summary>
            The web image object.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.NorwegianLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.PolishLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.PortugueseLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.RussianLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.SpanishLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Localization.LanguagePackage.SwedishLanguagePackage.GetArgument(GrapeCity.CalcEngine.Function,System.String)" -->
    <member name="T:GrapeCity.Spreadsheet.Localization.LanguagePackageEditingBehaviors">
      <summary>
            Represent the editing behaviors for a language package.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Localization.LanguagePackageEditingBehaviors.Default">
      <summary>
            The default behaviors.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Localization.LanguagePackageEditingBehaviors.UseCellPercentageFormat">
      <summary>
            Indicating whether the input value is affected by current percentage number format.
            </summary>
      <remarks>
            If the value is true and current number format is "0%", after input "1" the value will be 0.01 (1%).
            If the value is false and current number format is "0%", after input "1" the value will be 1 (100%).
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Localization.Localizer.FunctionDescriptions">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Localization.Localizer" /> object for function descriptions.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Localization.Localizer" /> object which contains function descriptions.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.Localizer.GetLocalizedText(System.String)">
      <summary>
            Gets the localized text from the specified key.
            </summary>
      <param name="key">A string value indicates the specified key.</param>
      <returns>A <see cref="T:System.String" /> value represents the localized text. Returns <c>null</c> to use default value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Localization.Localizer.GetLocalizedText(System.String,System.String)">
      <summary>
            Gets the localized text from the specified key.
            </summary>
      <param name="key">A string value indicates the specified key.</param>
      <param name="defaultText">A string value indicates the default localized text.</param>
      <returns>A <see cref="T:System.String" /> value represents the localized text.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.AutoFillCommand">
      <summary>
            Represents a command that autofill on the cells in the specified range.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.AutoFillCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.AutoFillType)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.AutoFillCommand" /> class.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="range">the start range is filled</param>
      <param name="row">The top row of cells to be filled.</param>
      <param name="column">The left column of cells to be filled.</param>
      <param name="row2">The bottom row of cells to be filled.</param>
      <param name="column2">The right column of cells to be filled.</param>
      <param name="type">Specifies the fill type.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.AutoSumCommand">
      <summary>
            Represents a command that detects ranges of cells to auto fills SUM or SUBTOTAL function at appropriate location
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.AutoSumCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.AutoSumCommand" /> class.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">Row index of starting position of selected range.</param>
      <param name="column">Column index of starting position of selected range.</param>
      <param name="row2">Row index of ending position of selected range.</param>
      <param name="column2">Column index of ending position of selected range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.AutoSumCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[])">
      <summary>
             Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.AutoSumCommand" /> class.
             </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="references">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> objects to represent the ranges of cells to be processed</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.AutoSumCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.AutoSumCommand.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.AutoSumCommand.SaveUndoStateCore">
      <summary>
            Saves the state of the undo.
            </summary>
      <remarks>This function is for internal function that the command wrap a public function of Spread.Common.
            When the action implement its own logic, it should use BeforeExecute to save undo state data.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.AutoSumCommand.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.CellEditCommand">
      <summary>
            Represents a command that modifies value of a cell or a range of cells.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CellEditCommand.Forced">
      <summary>
            Indicates that the command should be executed to keep internal data.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CellEditCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Object,System.Boolean,System.Int32,System.Nullable{System.Boolean},System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CellEditCommand" /> class.
            </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="value">The new cell value.</param>
      <param name="numFmt">The new number format of cell.</param>
      <param name="setWrapText">
        <c>true</c> to set the WrapText as <c>true</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CellEditCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.CellValue,System.Boolean,System.Boolean,System.Int32,System.Nullable{System.Boolean},System.String,GrapeCity.Spreadsheet.Direction)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CellEditCommand" /> class.
            </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="cellValue">The new cell value.</param>
      <param name="numFmt">The new number format of cell.</param>
      <param name="setWrapText">
        <c>true</c> to set the WrapText as <c>true</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CellEditCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CellEditCommand" /> class.
            </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="formula">The new cell formula.</param>
      <param name="numFmt">The new number format of cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CellEditCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CellEditCommand" /> class.
            </summary>
      <param name="worksheet"></param>
      <param name="formula"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CellEditCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,System.String,GrapeCity.Spreadsheet.Reference[])">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CellEditCommand" /> class.
            </summary>
      <param name="worksheet"></param>
      <param name="formula"></param>
      <param name="references"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CellEditCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,System.String[],GrapeCity.Spreadsheet.Reference[])">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CellEditCommand" /> class.
            </summary>
      <param name="worksheet"></param>
      <param name="formula"></param>
      <param name="references"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CellEditCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CellEditCommand.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CellEditCommand.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CellEditCommand.SaveUndoStateCore">
      <summary>
            Saves the data for undoing.
            </summary>
      <returns>The saved data for undoing.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.CellStyleCommand">
      <summary>
            Represents a command that modifies style of a cell or a range of cells.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CellStyleCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.Reference[],System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CellStyleCommand" /> class with the specified worksheet.
            </summary>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="ranges">The <see cref="T:GrapeCity.Spreadsheet.Reference" /> array represents the ranges of cells will be applied.</param>
      <param name="styleName">The name of style will be applied to the specifed ranges.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Commands.CellStyleCommand.#ctor(GrapeCity.Spreadsheet.IWorkbook,System.String,GrapeCity.Spreadsheet.StyleFormat,System.String,GrapeCity.Spreadsheet.Commands.CellStyleCommand.IncludeStyle)" -->
    <member name="M:GrapeCity.Spreadsheet.Commands.CellStyleCommand.#ctor(GrapeCity.Spreadsheet.IWorkbook,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CellStyleCommand" /> class with the specified workbook.
            </summary>
      <param name="workbook">The workbook which this command attached to.</param>
      <param name="styleName">The name of style which will deleted.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.CellStyleCommand.IncludeStyle">
      <summary>
            Indicates whether the style includes the format property.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CellStyleCommand.IncludeStyle.None">
      <summary>
            The style includes no property.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CellStyleCommand.IncludeStyle.Number">
      <summary>
            The style includes the <see cref="T:GrapeCity.Spreadsheet.NumberFormat" /> property.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CellStyleCommand.IncludeStyle.Alignment">
      <summary>
            The style includes the alignment property.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CellStyleCommand.IncludeStyle.Font">
      <summary>
            The style includes the font property.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CellStyleCommand.IncludeStyle.Border">
      <summary>
            The style includes the <see cref="P:GrapeCity.Spreadsheet.IBorder.Color" /> property.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CellStyleCommand.IncludeStyle.Patterns">
      <summary>
            The style includes the interior property.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CellStyleCommand.IncludeStyle.Protection">
      <summary>
            The style includes the protection property.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CellStyleCommand.IncludeStyle.All">
      <summary>
            The style includes all properties.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand">
      <summary>
            Represents a command that copies ranges of cells.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand" /> class.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">Row index of starting position of selected range.</param>
      <param name="column">Column index of starting position of selected range.</param>
      <param name="row2">Row index of ending position of selected range.</param>
      <param name="column2">Column index of ending position of selected range.</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.ManipulationOptions,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.LegacyClipboardCopyCommand" /> class.
            </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="references">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> objects to represent the ranges of cells to be processed</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.UndoSupport">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.UndoSupport" /> value indicates whether this command is undoable.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyCommand.SaveUndoStateCore">
      <summary>
            Saves state for undo
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ClipboardCopyShapeCommand">
      <summary>
            Represents a command that copy data from a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.ClipboardCopyShapeCommand.UndoSupport">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardCopyShapeCommand.UndoSupport" /> value indicates whether this command is undoable.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardCopyShapeCommand.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyShapeCommand.#ctor(GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardCopyShapeCommand" /> class with the specified worksheet.
            </summary>
      <param name="worksheet">The worksheet which this command copy shapes from.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyShapeCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardCopyShapeCommand" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyShapeCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCopyShapeCommand.SaveUndoStateCore">
      <summary>
            Saves the data for undoing.
            </summary>
      <returns>The saved data for undoing.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ClipboardCutShapeCommand">
      <summary>
            Represents the Cut shape command.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCutShapeCommand.#ctor(GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardCutShapeCommand" /> class with the specified worksheet.
            </summary>
      <param name="worksheet">The worksheet which this command cut shapes from.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardCutShapeCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardInsertCommand.CreateClipboardInsertCommand(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,System.Boolean,GrapeCity.Spreadsheet.InsertShiftDirection,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand" /> class.
            </summary>
      <param name="sourceWorksheet">The source worksheet.</param>
      <param name="row">An integer value indicates the top row index of source cell range.</param>
      <param name="column">An integer value indicates the left column index of source cell range.</param>
      <param name="rowCount">An integer value indicates the row count of source cell range.</param>
      <param name="columnCount">An integer value indicates the column count of source cell range.</param>
      <param name="targetWorksheet">The target worksheet.</param>
      <param name="targetRow">An integer value indicates the top row index of target cell range.</param>
      <param name="targetColumn">An integer value indicates the left column index of target cell range.</param>
      <param name="manipulationOptions">A <see cref="T:GrapeCity.Spreadsheet.ManipulationOptions" /> value indicates the processing data options.</param>
      <param name="clearSource">A boolean value indicates whether the source cell range will be clear.</param>
      <param name="insertOptions">An <see cref="T:GrapeCity.Spreadsheet.InsertShiftDirection" /> value indicates how cells are shifted.</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ClipboardInsertCommand.QueryData">
      <summary>
            Occurs before the command is executed.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand">
      <summary>
            Represents a command that paste data to the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.ManipulationOptions,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand" /> class for paste from single source range to multi-target ranges.
            </summary>
      <param name="sourceWorksheet">The source worksheet.</param>
      <param name="sourceReferences">The selections of the source worksheet.</param>
      <param name="targetWorksheet">The target worksheet.</param>
      <param name="targetReferences">The destination ranges of the target worksheet.</param>
      <param name="manipulationOptions">A <see cref="T:GrapeCity.Spreadsheet.ManipulationOptions" /> value indicates the processing data options.</param>
      <param name="clearSource">A boolean value indicates whether the source cell range will be clear.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand" /> class.
            </summary>
      <param name="sourceWorksheet">The source worksheet.</param>
      <param name="row">An integer value indicates the top row index of source cell range.</param>
      <param name="column">An integer value indicates the left column index of source cell range.</param>
      <param name="rowCount">An integer value indicates the row count of source cell range.</param>
      <param name="columnCount">An integer value indicates the column count of source cell range.</param>
      <param name="targetWorksheet">The target worksheet.</param>
      <param name="targetRow">An integer value indicates the top row index of target cell range.</param>
      <param name="targetColumn">An integer value indicates the left column index of target cell range.</param>
      <param name="manipulationOptions">A <see cref="T:GrapeCity.Spreadsheet.ManipulationOptions" /> value indicates the processing data options.</param>
      <param name="clearSource">A boolean value indicates whether the source cell range will be clear.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.From">
      <summary>
            Gets the source range reference which data is copied from.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.To">
      <summary>
            Gets the target range reference which data is copied top.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.CanExcuteClipboardFormat(GrapeCity.Spreadsheet.IWorksheet,System.UInt32)">
      <summary>
            Gets a boolean value indicating whether Spread can handle this format data on clipboard.
            </summary>
      <param name="formatId"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.CanExecute(GrapeCity.Spreadsheet.IWorksheet)">
      <summary>
            Gets a boolean value indicating whether Spread can paste data to the specified worksheet.
            </summary>
      <param name="worksheet">The worksheet to paste data.</param>
      <returns>
        <c>true</c> if Spread can paste data to the specified worksheet; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.LoadWorksheetFromClipboard(GrapeCity.Spreadsheet.Workbook,System.Int32@,System.Int32@,System.Boolean,System.Boolean)">
      <summary>
            Load clipboard content as a worksheet.
            </summary>
      <param name="workbook">The current workbook.</param>
      <param name="truncate">
        <c>true</c> if the worksheet will be truncated empty rows and columns; otherwise, <c>false</c>.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteCommand.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ClipboardPasteShapeCommand">
      <summary>
            Represents a command that pastes a shape from clipboard to the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteShapeCommand.#ctor(GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ClipboardPasteShapeCommand" /> class with the specified worksheet.
            </summary>
      <param name="worksheet">The worksheet which this command paste shapes to.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteShapeCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.ClipboardPasteShapeCommand.UndoSupport">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardPasteShapeCommand.UndoSupport" /> value indicates whether this command is undoable.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.ClipboardPasteShapeCommand.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteShapeCommand.SaveUndoStateCore">
      <summary>
            Saves the data for undoing.
            </summary>
      <returns>The saved data for undoing.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ClipboardPasteShapeCommand.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.Command">
      <summary>
            Represents an abstract command.
            </summary>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.Command" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.#ctor(GrapeCity.Spreadsheet.IWorkbook)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.Command" /> class with the specified workbook.
            </summary>
      <param name="workbook">The workbook which this command attached to.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.#ctor(GrapeCity.Spreadsheet.IWorksheet)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.Command" /> class with the specified workbook.
            </summary>
      <param name="worksheet">The worksheet which this command attached to.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.Command.Worksheet">
      <summary>
            Gets or sets the worksheet.
            </summary>
      <value>The worksheet object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.Command.Workbook">
      <summary>
            Gets the workbook.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.Command.UndoSupport">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.Command.UndoSupport" /> value indicates whether this command is undoable.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.Command.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.OnException(System.Exception)">
      <summary>
            Called when the exception occurs.
            </summary>
      <param name="exception">The exception is thrown by executing this command.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.OnException(System.String)">
      <summary>
            Called when the exception occurs.
            </summary>
      <param name="exception">The exception is thrown by executing this command.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.ExecuteCore(GrapeCity.Spreadsheet.Commands.CommandResult@)">
      <summary>
            Executes this command.
            </summary>
      <param name="commandResult">A <see cref="T:GrapeCity.Spreadsheet.Commands.CommandResult" /> value represents the executing result.</param>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.CanChangeActiveCell(GrapeCity.Spreadsheet.Commands.CommandResult@)">
      <summary>
            Gets a boolean value indicating whether the Spread can change active cell base on the command result.
            </summary>
      <param name="commandResult"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.Execute(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Executes this command.
            </summary>
      <param name="workbook">A prefer workbook that might be used for excecuting command.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Commands.CommandResult" /> value represents the executing result.</returns>
      <remarks>The state data is not saved.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.Redo(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Redo this command.
            </summary>
      <param name="workbook"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.BeforeExecute">
      <summary>
            Invoked before execute the command.
            </summary>
      <param name="redo">if set to <c>true</c>, the command is executed for redoing.</param>
      <returns>
        <c>true</c> if the command continue executing; otherwise the command should be stopped.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.IsStopUIAction(GrapeCity.Spreadsheet.Commands.UIActions)">
      <summary>
            Gets a boolean value indicates whether the corresponding UI actions should be stopped.
            </summary>
      <param name="uiAction">An <see cref="T:GrapeCity.Spreadsheet.Commands.UIActions" /> value indicates the UI action.</param>
      <returns>
        <c>true</c> if the corresponding UI actions should be stopped, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.Command.IsDisposed">
      <summary>
            Gets or sets a boolean value indicates whether this object is disposed.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.Finalize">
      <summary>
            Finalizes an instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.Command" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.SaveUndoState">
      <summary>
            Saves the data for undoing.
            </summary>
      <returns>The saved data for undoing.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.Command.SaveUndoStateCore">
      <summary>
            Saves the data for undoing.
            </summary>
      <returns>The saved data for undoing.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.Command.IsUIAction">
      <summary>
            Gets or sets a boolean value indicates whether the command is executed from an UI action.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.UIActions">
      <summary>
            Represents the type of UI actions. 
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.UndoSupport">
      <summary>
            Represents the type of undo support for a command. 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.UndoSupport.None">
      <summary>
            Undo is not supported. Undo and redo queue are cleared after the command is executed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.UndoSupport.Supported">
      <summary>
            Undo is supported. Redo queue are cleared after the command is executed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.UndoSupport.Ignore">
      <summary>
            Undo is not supported. Undo and redo queue are remained intact.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.RangeCommand">
      <summary>
            Represents a command that executes against a range of cells.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RangeCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RangeCommand" /> class.
            </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RangeCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.Row">
      <summary>
            Gets the top row index of cell range.
            </summary>
      <value>An integer value indicates the top row index of cell range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.Column">
      <summary>
            Gets the left column index of cell range.
            </summary>
      <value>An integer value indicates the left column index of cell range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.Row2">
      <summary>
            Gets the bottom row index of cell range.
            </summary>
      <value>An integer value indicates the bottom row index of cell range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.Column2">
      <summary>
            Gets the right column index of cell range.
            </summary>
      <value>An integer value indicates the right column index of cell range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.RowCount">
      <summary>
            Gets the total row count of cell range.
            </summary>
      <value>An integer value indicates the total row count of cell range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeCommand.ColumnCount">
      <summary>
            Gets the total column count of cell range.
            </summary>
      <value>An integer value indicates the total column count of cell range.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.MultiRangeCommand">
      <summary>
            Represents a command that executes against multiple ranges of cells.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.MultiRangeCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.MultiRangeCommand" /> class.
            </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.MultiRangeCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[])">
      <summary>
             Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.MultiRangeCommand" /> class.
             </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="references">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> objects to represent the ranges of cells to be processed</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.MultiRangeCommand.SelectionCount">
      <summary>
            Gets the total count of selected ranges
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.MultiRangeCommand.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Reference" /> object at specified index
            </summary>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.CommandActions">
      <summary>
            Represents the action that should be peformed after the execution of a command
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandActions.None">
      <summary>
            Do nothing.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandActions.Edit">
      <summary>
            Start editing mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandActions.Select">
      <summary>
            Selects a range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandActions.Scroll">
      <summary>
            Scrolls to show the active cell.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandActions.SelectScroll">
      <summary>
            Selects then scrolls to show the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandActions.ScrollCenter">
      <summary>
            Scrolls to show the active cell at the center.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandActions.MarkCopyRange">
      <summary>
            Set the copying range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandActions.MarkCutRange">
      <summary>
            Set the cuting range.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.CommandResult">
      <summary>
            Represents the executing result of an command.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandResult.Failed">
      <summary>
            Indicates the command failed to execute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.CommandResult.Succeed">
      <summary>
            Indicates the command executed successful.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandResult.#ctor(System.Boolean,GrapeCity.Spreadsheet.Commands.CommandActions,GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[])">
      <summary>
            Initializes static members of the <see cref="T:GrapeCity.Spreadsheet.Commands.CommandResult" /> struct.
            </summary>
      <param name="success">The command is executed successful</param>
      <param name="commandAction">The action that should be handled after the command is executed</param>
      <param name="worksheet">The worksheet processed by the command</param>
      <param name="selections">The selections that were modified by the command</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandResult.#ctor(System.Boolean,GrapeCity.Spreadsheet.Commands.CommandActions,GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.CellReference)">
      <summary>
            Initializes static members of the <see cref="T:GrapeCity.Spreadsheet.Commands.CommandResult" /> struct.
            </summary>
      <param name="success">The command is executed successful</param>
      <param name="commandAction">The action that should be handled after the command is executed</param>
      <param name="worksheet">The worksheet processed by the command</param>
      <param name="selections">The selections that were modified by the command</param>
      <param name="activeCell">The modified active cell.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.CopyingRanges">
      <summary>
            Gets the copying range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.IsCutting">
      <summary>
            Gets a boolean value indicating whether the clipboard action is Cut.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.Value">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.CommandResult.Value" /> object that is returned by an action
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.CustomData">
      <summary>
            Gets the custom <see cref="T:System.Object" /> that is returned by an action
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.Success">
      <summary>
            Gets a value indicating whether the command is executed successful.
            </summary>
      <value>
        <c>true</c> if the command is executed successful; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.ActionCategory">
      <summary>
            Gets or sets the action category that indicates data causes invalidating UI.
            </summary>
      <value>The action category that indicates data causes invalidating UI.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.CommandAction">
      <summary>
            Gets a value indicating the action that should be handled after the command is executed, doesn't matter successsful or not.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.Worksheet">
      <summary>
            Gets the worksheet processed by the command.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.ActiveCell">
      <summary>
            Gets the active cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.SelectionLength">
      <summary>
            Gets the length of selections that were modified by the command.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandResult.TriggerVolatileCells">
      <summary>
            Gets a boolean value indicating whether the volatile cells should be repainted.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandResult.GetSelection(System.Int32)">
      <summary>
            Gets modified selection at specified index
            </summary>
      <param name="index">An int value indicates the index of selection</param>
      <returns>
        <see cref="F:GrapeCity.Spreadsheet.Reference.Empty" /> if index is invalid, otherwise, an <see cref="T:GrapeCity.Spreadsheet.Reference" /> object that represents the selection</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.CommandManager">
      <summary>
            Represents the command manager.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandManager.CanUndo">
      <summary>
            Determines whether there is an available command for undoing.
            </summary>
      <returns>
        <c>true</c> if there is an available command for undoing; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandManager.CanRedo">
      <summary>
            Determines whether there is an available command for redoing.
            </summary>
      <returns>
        <c>true</c> if there is an available command for redoing; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandManager.IsUndoSupported">
      <summary>
            Gets a value indicating whether the executing a command can be undoable.
            </summary>
      <value>
        <c>true</c> if the executing a command can be undoable; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CommandManager.Limit">
      <summary>
            Gets or sets the maximum number of undoable commands which are retained by the <see cref="T:GrapeCity.Spreadsheet.Commands.CommandManager" />.
            </summary>
      <value>The limit.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandManager.Clear">
      <summary>
            Clears all undo/redo command in queue.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandManager.Execute(GrapeCity.Spreadsheet.Commands.Command,GrapeCity.Spreadsheet.IWorkbook,System.Boolean)">
      <summary>
            Executes the specified command.
            </summary>
      <param name="command">The command to be executed.</param>
      <param name="workbook">The workbook that the command executes.</param>
      <param name="notifyUI">
        <c>true</c> if change(s) is notified to control; otherwise, <c>false</c>.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.Commands.CommandResult" /> struct which contains information about the execution of action.</returns>
      <remarks>If the command is no longer belong to the undo or redo list, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandManager.Undo">
      <summary>
            Undo the last executed command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CommandManager.Redo">
      <summary>
            Redo the last undone command.
            </summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.Commands.CommandResult" /> struct which contains information about the execution of action.</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "T:GrapeCity.Spreadsheet.Commands.CreateForecastSheetCommand" -->
    <member name="M:GrapeCity.Spreadsheet.Commands.CreateForecastSheetCommand.#ctor(GrapeCity.Spreadsheet.IWorkbook,System.DateTime,System.DateTime,GrapeCity.Spreadsheet.WorksheetReference,GrapeCity.Spreadsheet.WorksheetReference,System.Int32,System.Boolean,GrapeCity.CalcEngine.AggregateFunction,System.Double,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CreateForecastSheetCommand" /> class.
            </summary>
      <param name="workbook">The workbook where the forecast sheet is placed to.</param>
      <param name="forecastStart">The start point to create forecast sheet.</param>
      <param name="forecastEnd">The end point to create forecast sheet.</param>
      <param name="values">The historical values used to calculate the forecast sheet.</param>
      <param name="timelimes">The historical timeline used to calculate the forecast sheet.</param>
      <param name="seasonality">Indicates the number of points in a recurring seasonal pattern.</param>
      <param name="applyInterpolation">
        <c>true</c> to indicate interpolation will be applied to fill missing point, <c>false</c> for otherwise.</param>
      <param name="aggregateDuplicateOption">
        <see cref="T:GrapeCity.CalcEngine.AggregateFunction" /> will be used while historical have duplicate data, valid value AVERAGE, COUNT, COUNTA, MAX, MEDIAN, MIN and SUM.</param>
      <param name="confidenceInterval">Percentages used for calculating the confidence interval.</param>
      <param name="includeStatistic">
        <c>true</c> to include a table of forecast accuracy metric and smoothing factor; otherwise, <c>false</c>.</param>
      <param name="isLineChart">
        <c>true</c> to create the line chart; otherwise, create the column chart.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.CreateForecastSheetCommand.UndoSupport">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.CreateForecastSheetCommand.UndoSupport" /> value indicates whether this command is undoable.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.CreateForecastSheetCommand.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CreateForecastSheetCommand.FillForecast(GrapeCity.CalcEngine.Forecast.IEtsModel,System.Int32,System.Double,System.Double,GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Double,System.Boolean,GrapeCity.Spreadsheet.NumberFormat,GrapeCity.Spreadsheet.NumberFormat,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Fill forecast data to specified sheet. Internal use purpose.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand">
      <summary>
            Represents the command that create hyperlink automatically from input text.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Commands.HyperLinkAction)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Drawing.Shape)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Drawing.Shape,System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
      <summary>
            Adds a hyperlink to the specified range.
            </summary>
      <param name="worksheet"></param>
      <param name="row"></param>
      <param name="column"></param>
      <param name="address"></param>
      <param name="subAddress"></param>
      <param name="screenTip"></param>
      <param name="display"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand.CanCreateHyperlink(System.String)">
      <summary>
            Gets a boolean value indicting whether Spread can create hyperlink from the specified text.
            </summary>
      <param name="text">The text value.</param>
      <returns>
        <c>true</c> if Spread can create hyperlink from the specified text; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand.SaveUndoStateCore">
      <summary>
            Saves the data for undoing.
            </summary>
      <returns>The saved data for undoing.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.CreateHyperlinkCommand.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.HyperLinkAction">
      <summary>
            Represents the actions of the hyper link creation command.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.HyperLinkAction.Add">
      <summary>
            Add a new hyperlink.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.HyperLinkAction.Delete">
      <summary>
            Delete a hyperlink.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.DataValidationCommand">
      <summary>
            Represents a command that modifies data validation of a cell or a range of cells.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.FilterCommand">
      <summary>
            Represents a command for filtering operation.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.FilterCommand.#ctor(GrapeCity.Spreadsheet.IAutoFilter,System.Int32,GrapeCity.Spreadsheet.Commands.AutoFilterActions,System.Object,GrapeCity.Spreadsheet.AutoFilterOperator,System.Object,GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.Reference)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.FilterCommand" /> class.
            </summary>
      <param name="autoFilter">The effected filter.</param>
      <param name="columnIndex">Relative filter column index</param>
      <param name="action">Filter action</param>
      <param name="criteria1">The first condition</param>
      <param name="filterOperator">Filter operator</param>
      <param name="criteria2">The second condition</param>
      <param name="worksheet">Worksheet</param>
      <param name="range">Filter range</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AutoFilterActions.ChangeCriteria">
      <summary>
            Change filter criteria.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AutoFilterActions.ReApply">
      <summary>
            Applying filter condition again on all filter column.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AutoFilterActions.Clear">
      <summary>
            Clear filter criteria on a filter column or all auto filter columns
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AutoFilterActions.Toggle">
      <summary>
            Turn auto filter on or off.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AutoFilterActions.Replace">
      <summary>
            Clear current auto filter and apply with new conditions.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.FormatConditionalCommand">
      <summary>
            Represents a command for FormatConditional Command.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.FormatConditionalManagerCommand">
      <summary>
            Represents a command that modifies conditional formats of a cell or a range of cells.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.GoalSeekCommand">
      <summary>
            Represents a command for GoalSeek.
            </summary>
            [EditorBrowsable(EditorBrowsableState.Never)]
        </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.GoalSeekCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Double,GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.GoalSeekCommand" /> class.
            </summary>
      <param name="setWorksheet"></param>
      <param name="setRow"></param>
      <param name="setColumn"></param>
      <param name="goal"></param>
      <param name="changingWorksheet"></param>
      <param name="changingRow"></param>
      <param name="changingColumn"></param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.LegacyClipboardCopyCommand">
      <summary>
            Represents a command that copies ranges of cells
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.LegacyClipboardCopyCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,System.Boolean,System.Boolean,GrapeCity.Spreadsheet.Commands.LegacyClipboardCopyCommand.FinalyClipboardCopy)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.LegacyClipboardCopyCommand" /> class.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">Row index of starting position of selected range.</param>
      <param name="column">Column index of starting position of selected range.</param>
      <param name="row2">Row index of ending position of selected range.</param>
      <param name="column2">Column index of ending position of selected range.</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.LegacyClipboardCopyCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.ManipulationOptions,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.LegacyClipboardCopyCommand" /> class.
            </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="references">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> objects to represent the ranges of cells to be processed</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.LegacyClipboardCopyCommand.UndoSupport">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.LegacyClipboardCopyCommand.UndoSupport" /> value indicates whether this command is undoable.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.LegacyClipboardCopyCommand.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.LegacyClipboardCopyCommand.SaveUndoStateCore">
      <summary>
            Saves state for undo
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.LegacyClipboardCutCommand">
      <summary>
            Represents a command that cut ranges of cells
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.LegacyClipboardCutCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.LegacyClipboardCutCommand" /> class.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">Row index of starting position of selected range.</param>
      <param name="column">Column index of starting position of selected range.</param>
      <param name="row2">Row index of ending position of selected range.</param>
      <param name="column2">Column index of ending position of selected range.</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.LegacyClipboardCutCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.LegacyClipboardCutCommand" /> class.
            </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="references">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> objects to represent the ranges of cells to be processed</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.LegacyClipboardCutCommand.UndoSupport">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.LegacyClipboardCutCommand.UndoSupport" /> value indicates whether this command is undoable.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.LegacyClipboardCutCommand.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.LegacyClipboardCutCommand.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.LegacyClipboardPasteCommand">
      <summary>
            Represents a command that paste to ranges of cells
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.LegacyClipboardPasteCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.ManipulationOptions,System.IO.MemoryStream)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.LegacyClipboardPasteCommand" /> class.
            </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="references">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> objects to represent the ranges of cells to be processed</param>
      <param name="manipulationOptions">Indicates which type of data to handle.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.LegacyClipboardPasteCommand.ManipulationOptions">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.ManipulationOptions" /> value indicating which data type will be performed.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.LegacyClipboardPasteCommand.UndoSupport">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.LegacyClipboardPasteCommand.UndoSupport" /> value indicates whether this command is undoable.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.LegacyClipboardPasteCommand.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.LegacyClipboardPasteCommand.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.LegacyClipboardPasteCommand.SaveUndoStateCore">
      <summary>
            Saves state for undo
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.PrintAreaCommand">
      <summary>
            Represents a command for print area.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.PasteDefinedNameListCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary></summary>
      <param name="worksheet"></param>
      <param name="row"></param>
      <param name="col"></param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.RangeActionsCommand">
      <summary>
            Represents a command for the specified cell range.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.Commands.RangeActionsCommand.MergeOption)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RangeActionsCommand" /> class.
            </summary>
      <param name="worksheet"></param>
      <param name="references"></param>
      <param name="mergeOptions"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference,System.Int32[],GrapeCity.Spreadsheet.YesNoGuess)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RangeActionsCommand" /> class.
            </summary>
      <param name="worksheet"></param>
      <param name="columns"></param>
      <param name="header"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RangeActionsCommand" /> class.
            </summary>
      <param name="worksheet"></param>
      <param name="references"></param>
      <param name="manipulationOptions"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RangeActionsCommand" /> class.
            </summary>
      <param name="sourceWorksheet">The source worksheet.</param>
      <param name="row">An integer value indicates the top row index of source cell range.</param>
      <param name="column">An integer value indicates the left column index of source cell range.</param>
      <param name="rowCount">An integer value indicates the row count of source cell range.</param>
      <param name="columnCount">An integer value indicates the column count of source cell range.</param>
      <param name="targetWorksheet">The target worksheet.</param>
      <param name="targetRow">An integer value indicates the top row index of target cell range.</param>
      <param name="targetColumn">An integer value indicates the left column index of target cell range.</param>
      <param name="manipulationOptions">A <see cref="T:GrapeCity.Spreadsheet.ManipulationOptions" /> value indicates the processing data options.</param>
      <param name="action">An <see cref="T:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions" /> value indicates the action again the specified cell range(s).</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.ClearSource">
      <summary>
            Gets a boolean value indicates whether the source range will be clear.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.SaveUndoStateCore">
      <summary>
            Saves the data for undoing.
            </summary>
      <returns>The saved data for undoing.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.MergeOption">
      <summary>
            Indicates which merge type will be performed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.MergeOption.MergeCenter">
      <summary>
            Combine and center the contens of the selectd cells in a new large cell
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.MergeOption.MergeAcross">
      <summary>
            Merge selected cells in the same row into one large cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.MergeOption.Merge">
      <summary>
            Merge selected cells into one cell.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.MergeOption.UnMerge">
      <summary>
            Split current cell into multilple cells.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions">
      <summary>
            Represents the cell range actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions.Copy">
      <summary>
            Copyies the cell range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions.Move">
      <summary>
            Moves the cell range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions.DragCopy">
      <summary>
            Copies the cell range by dragging.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions.DragMove">
      <summary>
            Moves the cell range by dragging.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions.Clear">
      <summary>
            Clears the cell range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions.MoveRow">
      <summary>
            Moves row(s) to new position.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions.MoveColumn">
      <summary>
            Moves column(s) to new position.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions.PasteText">
      <summary>
            Pastes from the plain text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions.Merge">
      <summary>
            Merge/unmerge cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions.RemoveDuplicates">
      <summary>
            Removes duplicate values from a range of values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions.TextToColumns">
      <summary>
            Split cells data to multi cells.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand">
      <summary>
            Represents a command for row or column operation.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.#ctor(System.Boolean,GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.PageBreak)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand" /> class with the specified workbook.
            </summary>
      <param name="isColumn">A boolean value indicates whether the command process on rows or columns.</param>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="ranges">The processing ranges.</param>
      <param name="pageBreak">The page break of worksheet.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.#ctor(System.Boolean,GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Collections.Generic.List{System.Tuple{GrapeCity.Spreadsheet.Reference[],System.Int32}})">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand" /> class with the specified workbook.
            </summary>
      <param name="isColumn">A boolean value indicates whether the command process on rows or columns.</param>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="data">The processing data.</param>
      <param name="paneIndex"> The processing pane Index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.#ctor(GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.Actions,System.Boolean,GrapeCity.Spreadsheet.Worksheet,System.Int32,GrapeCity.Spreadsheet.Reference[])">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand" /> class with the specified workbook.
            </summary>
      <param name="isColumn">A boolean value indicates whether the command process on rows or columns.</param>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="ranges">The processing ranges.</param>
      <param name="paneIndex"> The processing pane Index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.#ctor(GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.Actions,System.Boolean,GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference[])">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand" /> class with the specified workbook.
            </summary>
      <param name="isColumn">A boolean value indicates whether the command process on rows or columns.</param>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="ranges">The processing ranges.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.#ctor(System.Boolean,GrapeCity.Spreadsheet.Worksheet,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand" /> class with the specified workbook.
            </summary>
      <param name="isColumn">A boolean value indicates whether the command process on rows or columns.</param>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="level">An integer value indicates the group outline level.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.#ctor(System.Boolean,GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand" /> class with the specified workbook.
            </summary>
      <param name="isColumn">A boolean value indicates whether the command process on rows or columns.</param>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="startIndex">An integer value indicates the start index.</param>
      <param name="endIndex">An integer value indicates the end index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand" /> class with the specified workbook.
            </summary>
      <param name="worksheet">The worksheet which this command attached to.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.SaveUndoStateCore">
      <summary>
            Saves the data for undoing.
            </summary>
      <returns>The saved data for undoing.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.GroupActions">
      <summary>
            Represents the action for group.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.GroupActions.Group">
      <summary>
            Group the specified range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.GroupActions.UnGroup">
      <summary>
            Ungroups the specified range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.GroupActions.ShowLevel">
      <summary>
            Shows all outline groups up to the specified outline level.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.GroupActions.ShowDetail">
      <summary>
             Expands a group of cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.GroupActions.HideDetail">
      <summary>
            Collapses a group of cells.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.Actions">
      <summary>
            Represents the action for rows and columns.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.Actions.Resize">
      <summary>
            Resize row heights or columns widths.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.Actions.Hide">
      <summary>
            Hide rows or columns.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.Actions.Unhide">
      <summary>
            Unhide rows or columns.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.Actions.AutoFit">
      <summary>
            AutoFit rows or columns.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.Actions.Group">
      <summary>
            Group rows or columns.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.RowColumnActionsCommand.Actions.PageBreak">
      <summary>
            Set page break row or column.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.RowColumnCommand">
      <summary>
            Represents a command for row or column operation.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand">
      <summary>
            Represents a transform command for the drawing object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape,System.String,GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class.
            </summary>
      <param name="shape">The shape to set new text.</param>
      <param name="text">The new text of shape.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape,GrapeCity.Spreadsheet.RichText,GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class.
            </summary>
      <param name="shape">The shape to set new text.</param>
      <param name="text">The new text of shape.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.Drawing.AutoShapeType,GrapeCity.Drawing.ArrowheadStyle,GrapeCity.Drawing.ArrowheadStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class for creatation shape action.    
            </summary>
      <param name="worksheet"></param>
      <param name="x">The initial horizontal position of the shape, in pixels, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <param name="y">The initial vertical position of the shape, in pixels, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <param name="width">The initial width, in pixels, of the shape.
            Or the horizontal position (in pixels) of the connector's end point relative to the upper-left corner of the document.</param>
      <param name="height">The initial height, in pixels, of the shape.
            Or the vertical position (in pixels) of the connector's end point relative to the upper-left corner of the document.</param>
      <param name="type">The <see cref="T:GrapeCity.Spreadsheet.Drawing.AutoShapeType" /> of shape</param>
      <param name="beginArrowheadStyle">The <see cref="T:GrapeCity.Drawing.ArrowheadStyle" /> at the beginning of the specified connector.</param>
      <param name="endArrowheadStyle">The <see cref="T:GrapeCity.Drawing.ArrowheadStyle" /> at the ending of the specified connector.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.String,System.Double,System.Double)">
      <summary>
            Creates a picture from an existing file.
            </summary>
      <param name="fileName">The file from which the picture is to be created.</param>
      <param name="linkToFile">The file to link to.</param>
      <param name="saveWithDocument">To save the picture with the document.</param>
      <param name="row">The row index of the upper-left corner of the shape's bounding box.</param>
      <param name="column">The column index of the upper-left corner of the shape's bounding box.</param>
      <param name="width">The width of the picture, in pixels.</param>
      <param name="height">The height of the picture, in pixels.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape[],System.Boolean,System.Double)" -->
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape[],GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class.
            </summary>
      <param name="drawingObjects">The drawing objects to process.</param>
      <param name="action">The action agains the drawing object.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape[],GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions,System.Boolean,GrapeCity.Drawing.Size)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class.
            </summary>
      <param name="drawingObjects">The drawing objects to process.</param>
      <param name="action">The action agains the drawing object.</param>
      <param name="parentLocationChange">The location change of parent shape. </param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape[],GrapeCity.Spreadsheet.Drawing.ZOrderCommand)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class.
            </summary>
      <param name="drawingObjects">The drawing objects to process.</param>
      <param name="zOrderCommand">The action agains the drawing object.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape[],GrapeCity.Spreadsheet.Drawing.TextOrientation)">
      <summary>
            Changes the shapes' text orientation
            </summary>
      <param name="drawingObjects">The drawing objects to process.</param>
      <param name="textOrientation">The text orientation for the drawing objects.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape[],GrapeCity.Spreadsheet.Drawing.AlignCommand)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class.
            </summary>
      <param name="drawingObjects">The drawing objects to process.</param>
      <param name="alignCommand">The action agains the drawing object.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Crop(GrapeCity.Spreadsheet.Drawing.Picture,GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Creates a <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> instance for the cropping picture.
            </summary>
      <param name="croppingPicture">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Picture" /> that will be cropped. </param>
      <param name="shapeRect">The picture's boundary.</param>
      <param name="sourceImageRect">The boundary of source image of the picture.</param>
      <param name="newShapeRect">The picture's boundary after adjusted.</param>
      <param name="newSourceImageRect">The boundary of source image of the picture after adjusted.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape[],System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class.
            </summary>
      <param name="drawingObjects">The drawing objects to process.</param>
      <param name="rotationOffset">The angle that drawing object's rotation will be added.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape,GrapeCity.Spreadsheet.Drawing.Shape[],GrapeCity.Spreadsheet.Drawing.ResizeAnchor,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class for resizing action.
            </summary>
      <param name="activeDrawingObject">The drawing object which resize action starts with.</param>
      <param name="drawingObjects">The drawing objects to process.</param>
      <param name="resizeAnchor">A <see cref="T:GrapeCity.Spreadsheet.Drawing.ResizeAnchor" /> value indicates the resize direction.</param>
      <param name="horizontal">The horizontal resizing distance.</param>
      <param name="vertical">The vertical resizing distance.</param>
      <param name="inflate">A <c>bool</c> value indicates whether the resizing is from the center of drawing objects.</param>
      <param name="autolayout">A <c>bool</c> value indicates whether the connection shape will be auto layout.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.ConnectionShape,GrapeCity.Spreadsheet.Drawing.Shape,System.Int32,GrapeCity.Spreadsheet.Drawing.ConnectorDirection)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class for connecting to shape action.
            </summary>
      <param name="connector">The connector will be performed the action.</param>
      <param name="targetShapeConnection">The shape will be connected by the connector.</param>
      <param name="connectionSiteIndex">The connection site index</param>
      <param name="connectAnchor">The resize anchor of connector</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape,System.Int32,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class for adjust handles action.
            </summary>
      <param name="activeDrawingObject">The drawing object which resize action starts with.</param>
      <param name="shapeAdjustHandleIndex"></param>
      <param name="shapeAdjustHandleFirstValue">The first value</param>
      <param name="shapeAdjustHandleSecondValue">The second value</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape[],System.Double,System.Double,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class for moving action.
            </summary>
      <param name="drawingObjects">The drawing objects to process.</param>
      <param name="horizontal">The horizontal moving distance.</param>
      <param name="vertical">The vertical moving distance.</param>
      <param name="duplicate">
        <c>true</c> if all drawing objects will be duplicated.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape,GrapeCity.Spreadsheet.API.Drawing.FreeFormNode,System.Int32,System.Int32,System.Int32,GrapeCity.Drawing.Size)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class for creating node of the editing shape.
            </summary>
      <param name="activeDrawingObject">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> that will be modified.</param>
      <param name="addingNode">The <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode" /> that will be added to shape's segments.</param>
      <param name="beforeNodeIndex">The <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode" /> before the <paramref name="beforeNodeIndex" /></param>
      <param name="afterNodeIndex">The <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode" /> after the <paramref name="beforeNodeIndex" /></param>
      <param name="shapeChange">The shape moving distance.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape,System.Int32,System.Int32,GrapeCity.Drawing.Size)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class for delete node of the editing shape.
            </summary>
      <param name="activeDrawingObject">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> that will be modified.</param>
      <param name="adjustedNode">The <see cref="T:GrapeCity.Spreadsheet.API.Drawing.FreeFormNode" /> that will be added to shape's segments.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape,System.Int32,System.Int32,GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes,GrapeCity.Spreadsheet.Drawing.EditingType,GrapeCity.Drawing.Size)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class for change the editing type of the node
            </summary>
      <param name="activeDrawingObject">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> that will be modified.</param>
      <param name="adjustPointType">The <see cref="T:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes" /></param>
      <param name="editingType">The <see cref="T:GrapeCity.Spreadsheet.Drawing.EditingType" /> of node will be changed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape,System.Int32,System.Int32,GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes,GrapeCity.Drawing.Size)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class for open or close path
            </summary>
      <param name="activeDrawingObject">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> that will be modified.</param>
      <param name="adjustPointType">The <see cref="T:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes" /></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes,GrapeCity.Spreadsheet.Drawing.SegmentType,GrapeCity.Drawing.Size)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class for change the segment type of a segment in the shape's path
            </summary>
      <param name="activeDrawingObject">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> that will be modified.</param>
      <param name="adjustPointType">The <see cref="T:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes" /></param>
      <param name="segmentType">The <see cref="T:GrapeCity.Spreadsheet.Drawing.SegmentType" /> of node will be changed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.#ctor(GrapeCity.Spreadsheet.Drawing.Shape,System.Int32,System.Int32,GrapeCity.Drawing.Size,GrapeCity.Drawing.Size,GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class for creating node of the editing shape.
            </summary>
      <param name="activeDrawingObject">The <see cref="T:GrapeCity.Spreadsheet.Drawing.Shape" /> that will be modified.</param>
      <param name="nodeChange">The node moving distance.</param>
      <param name="shapeChange">The shape moving distance.</param>
      <param name="adjustNodeType">0: Adjust the node, 1: Adjust the first control point, 2: Adjust the second control point.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.SaveUndoStateCore">
      <summary>
            Saves the data for undoing.
            </summary>
      <returns>The saved data for undoing.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions">
      <summary>
            Represents the tranform actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.Resize">
      <summary>
            Resize the drawing object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.Move">
      <summary>
            Move the drawing object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.MoveCopy">
      <summary>
            Copy the drawing object and move new duplicated drawing object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.MoveUp">
      <summary>
            Moves the drawing object upward by 1 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.MoveDown">
      <summary>
            Moves the drawing object downward by 1 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.MoveLeft">
      <summary>
            Moves the drawing object to the left by 1 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.MoveRight">
      <summary>
            Moves the drawing object to the right by 1 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.InflateHorizontal">
      <summary>
            Inflates the drawing object in horizontal by 8 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.InflateVertical">
      <summary>
            Inflates the drawing object in vertical by 8 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.ShrinkHorizontal">
      <summary>
            Shrinks the drawing object in horizontal by 8 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.ShrinkVertical">
      <summary>
            Shrinks the drawing object in vertical by 8 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.InflateHorizontalPrecise">
      <summary>
            Inflates the drawing object in horizontal by 1 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.InflateVerticalPrecise">
      <summary>
            Inflates the drawing object in vertical by 1 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.ShrinkHorizontalPrecise">
      <summary>
            Shrinks the drawing object in horizontal by 1 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.ShrinkVerticalPrecise">
      <summary>
            Shrinks the drawing object in vertical by 1 pixels.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.RotateClockwise">
      <summary>
            Rotates the drawing object clockwise by 15 degrees.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.RotateCounterclockwise">
      <summary>
            Rotates the drawing object counterclockwise by 15 degrees.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.RotateClockwisePrecise">
      <summary>
            Rotates the drawing object clockwise by 1 degrees.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.RotateCounterclockwisePrecise">
      <summary>
            Rotates the drawing object counterclockwise by 1 degrees.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.RotateClockwise90Degrees">
      <summary>
            Rotates the drawing object clockwise by 90 degrees.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.RotateCounterclockwise90Degrees">
      <summary>
            Rotates the drawing object counterclockwise by 90 degrees.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.HorizontalFlip">
      <summary>
            Flip the drawing object by horizontal.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.VerticalFlip">
      <summary>
            Flip the drawing object by vertical.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.Delete">
      <summary>
            Deletes the drawing object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.Rotate">
      <summary>
            Rotate the drawing object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.AdjustHandles">
      <summary>
            Adjust handles object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.Connector">
      <summary>
            Connect or disconnect shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.EditText">
      <summary>
            Modify the text of shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.EditFormula">
      <summary>
            Modify the formula of shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.Group">
      <summary>
            Group the selected drawing object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.Ungroup">
      <summary>
            Un-group the selected drawing object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.ReGroup">
      <summary>
            Re-group the drawing objects.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.ZOrder">
      <summary>
            Changing the shape's position in the z-order.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.SetAsDefaultShape">
      <summary>
            Makes the formatting of the specified shape the default formatting for the shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.EditName">
      <summary>
            Modify the name of shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.SetSize">
      <summary>
            Set all of shape has same size.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.AdjustEditingNode">
      <summary>
            Adjust the node of the editing shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.DeleteEditingNode">
      <summary>
            Delete the node of the editing shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.AddNode">
      <summary>
            Add a node to the editing shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.Add">
      <summary>
            Creates a new shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.Align">
      <summary>
            Changing the shapes' alignment.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.AddPicture">
      <summary>
            Creates a new picture.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.CropPicture">
      <summary>
            Crop picture
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand.Actions.TextOrientation">
      <summary>
            Changing the shape's text orientation
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes">
      <summary>
            The type of adjust editing point on editing shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.Adjust1stControl">
      <summary>
            Adjust the 1st control point of the node
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.Adjust2ndControl">
      <summary>
            Adjust the 2nd control point of the node
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.OpenPath">
      <summary>
            Open the specifed path
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.ClosePath">
      <summary>
            Close specified path
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.ChangeEditingType">
      <summary>
            Change editing type of the specifed node
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.DeleteSegment">
      <summary>
            Delete segment 
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.ChangeSegmentType">
      <summary>
            Change segment type of the specified node
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.SmoothAdjust">
      <summary>
            Adjust the 1st or 2nd control points as smooth
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.StraightAdjust">
      <summary>
            Adjust the 1st or 2nd control points as straight
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.CornerAdjust">
      <summary>
            Adjust the 1st or 2nd control points as corner
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.AdjustNode">
      <summary>
            Adjust the node
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.AdjustEditingShapeTypes.CreatingNode">
      <summary>
            Creating a new node.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.SheetActionsCommand">
      <summary>
            Represents a command for sheet operation.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SheetActionsCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.SheetActionsCommand" /> class.
            </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object</param>
      <param name="newName">New name of the worksheet</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SheetActionsCommand.#ctor(GrapeCity.Spreadsheet.IWorksheets,GrapeCity.Spreadsheet.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.SheetActionsCommand" /> class.
            </summary>
      <param name="worksheets">The processing <see cref="T:GrapeCity.Spreadsheet.IWorksheets" /> object</param>
      <param name="tabColor">The new color will be applied to the tab of worksheets.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SheetActionsCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SheetActionsCommand.Undo(System.Boolean)">
      <summary>
            Undoes this command.
            </summary>
      <returns>
        <c>true</c> if the command is successfully executed, <c>false</c> otherwise.</returns>
      <remarks>If the command is no longer belong to the undo or redo queue, it'll be disposed.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.SlicerActionsCommand">
      <summary>
            Represents a command for the <see cref="T:GrapeCity.Spreadsheet.Slicers.Slicer" /> object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SlicerActionsCommand.#ctor(GrapeCity.Spreadsheet.Slicers.ISlicer[],System.String,System.String,GrapeCity.Spreadsheet.Slicers.SlicerCrossFilterType,System.Boolean,GrapeCity.Spreadsheet.Slicers.SlicerSort)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ShapeActionsCommand" /> class.
            </summary>
      <param name="slicers">The processing slicers array.</param>
      <param name="name"></param>
      <param name="caption"></param>
      <param name="crossFilterType"></param>
      <param name="displayHeader"></param>
      <param name="sortItems"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SlicerActionsCommand.#ctor(GrapeCity.Spreadsheet.Slicers.Slicer,System.Int32[])">
      <summary>
            Create a select items command for the slicer.
            </summary>
      <param name="slicer">The processing slicer.</param>
      <param name="start">The start selected item index.</param>
      <param name="end">The end selected item index.</param>
      <param name="reverse">A boolean value indicates the selecting behavior.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SlicerActionsCommand.#ctor(GrapeCity.Spreadsheet.Slicers.Slicer,GrapeCity.Spreadsheet.Commands.SlicerActionsCommand.Actions)">
      <summary>
            Create a select items command for the slicer.
            </summary>
      <param name="slicer">The processing slicer.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SlicerActionsCommand.Clone">
      <summary>
            Clones this command object.
            </summary>
      <returns>The cloned command object.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.SlicerActionsCommand.Actions">
      <summary>
            Represents the actions.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.SortCommand">
      <summary>
            Represents a command for sorting operation.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SortCommand.#ctor(GrapeCity.Spreadsheet.ISort)">
      <summary>
            A command that clear all sort settings.
            </summary>
      <param name="sort"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SortCommand.#ctor(GrapeCity.Spreadsheet.ISort,System.Int32,GrapeCity.Spreadsheet.SortOn,System.Object,GrapeCity.Spreadsheet.SortOrder,System.Boolean)">
      <summary>
            A command that adds or replaces sort settings.
            </summary>
      <param name="sort"></param>
      <param name="columnIndex"></param>
      <param name="sortOn"></param>
      <param name="sortValue"></param>
      <param name="sortOrder"></param>
      <param name="replace"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SortCommand.#ctor(GrapeCity.Spreadsheet.ISort,System.Boolean,GrapeCity.Spreadsheet.SortOrientation,System.Boolean)">
      <summary>
            A command that adds sort settings.
            </summary>
      <param name="sort"></param>
      <param name="matchCase"></param>
      <param name="sortOrientation"></param>
      <param name="hasHeader"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SortCommand.#ctor(GrapeCity.Spreadsheet.IRange,System.Int32,GrapeCity.Spreadsheet.SortOn,System.Object,GrapeCity.Spreadsheet.SortOrder)">
      <summary>
            A command that create sort settings on a range.
            </summary>
      <param name="range"></param>
      <param name="columnIndex"></param>
      <param name="sortOn"></param>
      <param name="sortValue"></param>
      <param name="sortOrder"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SortCommand.#ctor(GrapeCity.Spreadsheet.IRange,System.Int32[],GrapeCity.Spreadsheet.SortOn[],System.Object[],GrapeCity.Spreadsheet.SortOrder[],System.Boolean,System.Boolean,GrapeCity.Spreadsheet.SortOrientation,System.Boolean)">
      <summary>
            Sort by multi-conditions
            </summary>
      <param name="range"></param>
      <param name="columnIndex"></param>
      <param name="sortOn"></param>
      <param name="sortValue"></param>
      <param name="sortOrder"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.SortCommand.#ctor(GrapeCity.Spreadsheet.ISort,System.Int32[],GrapeCity.Spreadsheet.SortOn[],System.Object[],GrapeCity.Spreadsheet.SortOrder[],System.Boolean,System.Boolean,GrapeCity.Spreadsheet.SortOrientation,System.Boolean)">
      <summary>
            Sort by multi-conditions
            </summary>
      <param name="range"></param>
      <param name="columnIndex"></param>
      <param name="sortOn"></param>
      <param name="sortValue"></param>
      <param name="sortOrder"></param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.StyleActionsCommand">
      <summary>
            Represents a command for style operation.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.StyleActionsCommand.#ctor(System.Object,GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.Commands.FormatOption)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.StyleActionsCommand" /> class.
            </summary>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="reference">The range which this command working to.</param>
      <param name="isMergedCell"></param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.FormatCellsActionCommand">
      <summary>
            Represents a command for format cell operation.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.FormatCellsActionCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.StyleFormat,GrapeCity.Spreadsheet.Reference,System.Nullable{System.Boolean})">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.FormatCellsActionCommand" /> class.
            </summary>
      <param name="newStyleFormat"></param>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="reference">The range which this command working to.</param>
      <param name="isMergedCell"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.FormatCellsActionCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.StyleFormat,GrapeCity.Spreadsheet.Reference[],System.Nullable{System.Boolean},System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.FormatCellsActionCommand" /> class.
            </summary>
      <param name="newStyleFormat"></param>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="references">The range which this command working to.</param>
      <param name="isMergedCell"></param>
      <param name="center">if set to <c>true</c>, the horizontal alignment of the specified range will be set to center.</param>
      <param name="across">if set to <c>true</c>, merge cells in each row (or column) of the specified range as separate merged cells.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.FormatCellsActionCommand.#ctor(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.StyleFormat,GrapeCity.Spreadsheet.Reference,System.Nullable{System.Boolean},System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.FormatCellsActionCommand" /> class.
            </summary>
      <param name="newStyleFormat"></param>
      <param name="reference">The range which this command working to.</param>
      <param name="isMergedCell"></param>
      <param name="extendObject">The extend object.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.FormatCellsActionCommand.#ctor(GrapeCity.Spreadsheet.StyleFormat,GrapeCity.Spreadsheet.IWorksheet,System.Nullable{System.Boolean})">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.FormatCellsActionCommand" /> class.
            </summary>
      <param name="newStyleFormat"></param>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="isMergedCell"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.FormatCellsActionCommand.#ctor(GrapeCity.Spreadsheet.StyleFormat,GrapeCity.Spreadsheet.IWorksheet,System.Nullable{System.Boolean},System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.FormatCellsActionCommand" /> class.
            </summary>
      <param name="newStyleFormat"></param>
      <param name="worksheet">The worksheet which this command attached to.</param>
      <param name="isMergedCell"></param>
      <param name="extendObject">The extend object.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.FormatOption">
      <summary>
            Indicates which style type will be performed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.FormatOption.Font">
      <summary>
            Changing the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.FormatOption.WrapText">
      <summary>
            Changing the wraptext.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.FormatOption.Alignment">
      <summary>
            Changing the alignment.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.FormatOption.Fill">
      <summary>
            Changing the fill.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.FormatOption.Border">
      <summary>
            Changing the border.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.FormatOption.Indent">
      <summary>
            Changing the indent.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.FormatOption.NumberFormat">
      <summary>
            Changing the number format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.FormatOption.BuiltInStyle">
      <summary>
            Changing the BuiltIn Style.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.TableActionsCommand">
      <summary>
            Represents a command for the specified table range.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.TableActionsCommand.#ctor(GrapeCity.Spreadsheet.Table,GrapeCity.Spreadsheet.Commands.TableActions,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.TableActionsCommand" /> class.
            </summary>
      <param name="table"></param>
      <param name="action"></param>
      <param name="parameter"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.TableActionsCommand.#ctor(GrapeCity.Spreadsheet.Table,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.TableActionsCommand" /> class.
            </summary>
      <param name="table"></param>
      <param name="newName"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.TableActionsCommand.#ctor(GrapeCity.Spreadsheet.Table)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.TableActionsCommand" /> class to convert a table to range.
            </summary>
      <param name="table"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.TableActionsCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.YesNoGuess)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.TableActionsCommand" /> class.
            </summary>
      <param name="worksheet"></param>
      <param name="range"></param>
      <param name="hasHeader"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.TableActionsCommand.#ctor(GrapeCity.Spreadsheet.Table,System.Int32,System.Int32,System.Int32,System.Boolean,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.Commands.RangeActionsCommand.Actions)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.TableActionsCommand" /> class.
            </summary>
      <param name="table">The source table.</param>
      <param name="fromIndex">An integer value indicates the start index of source table range.</param>
      <param name="toIndex">An integer value indicates the end index of source table range.</param>
      <param name="count">An integer value indicates the count of source table range.</param>
      <param name="isRow">A boolean value indicates range action for row or column table.</param>
      <param name="manipulationOptions">A <see cref="T:GrapeCity.Spreadsheet.ManipulationOptions" /> value indicates the processing data options.</param>
      <param name="action">An <see cref="T:GrapeCity.Spreadsheet.Actions" /> value indicates the action again the specified cell range(s).</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.TableActionsCommand.#ctor(GrapeCity.Spreadsheet.Table,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.TableActionsCommand" /> class.
            </summary>
      <param name="table">The source table</param>
      <param name="column">An integer value indicates the start column index that the table will be resized to.</param>
      <param name="column2">An integer value indicates the end column index that the table will be resized to.</param>
      <param name="rowCount">An integer value indicates the row count of table after resizing</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.TableActionsCommand.CreateAutoExtendRow(GrapeCity.Spreadsheet.Table,System.Int32)">
      <summary>
            Creates a command which extend the table row count by 1.
            </summary>
      <param name="table">The source table.</param>
      <param name="rowCount">The total number of extra rows.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.TableActionsCommand.#ctor(GrapeCity.Spreadsheet.Table,GrapeCity.Spreadsheet.Reference)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.TableActionsCommand" /> class.
            </summary>
      <param name="table">The source table</param>
      <param name="newRange">The range of the table after resizing</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Commands.TableActionsCommand.UndoSupport">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Commands.TableActionsCommand.UndoSupport" /> value indicates whether this command is undoable.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.Commands.TableActionsCommand.UndoSupport" /> value of this command.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.TableActionsCommand.CanChangeActiveCell(GrapeCity.Spreadsheet.Commands.CommandResult@)">
      <summary>
            Gets a boolean value indicating whether the Spread can change active cell base on the command result.
            </summary>
      <param name="commandResult"></param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.TableActions">
      <summary>
            Represents the table range actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.Copy">
      <summary>
            Copies the table range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.Move">
      <summary>
            Moves the table range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.Clear">
      <summary>
            Clears the table range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.Resize">
      <summary>
            Resize the table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.Create">
      <summary>
            Create the table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.ConvertToRange">
      <summary>
            Convert table to range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.Rename">
      <summary>
            Rename the table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.ShowHideHeader">
      <summary>
            Show or hide header row.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.ShowHideTotal">
      <summary>
            Show or hide total row.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.ShowHideFilterButtons">
      <summary>
            Show or hide filter buttons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.StyleBandedRow">
      <summary>
            Apply or unapply banded row style on the table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.StyleBandedColumn">
      <summary>
            Apply or unapply banded column style on the table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.StyleFirstColumn">
      <summary>
            Apply or unapply first column style on the table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.StyleLastColumn">
      <summary>
            Apply or unapply last column style on the table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.InsertRow">
      <summary>
            Insert a row to the table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.InsertColumn">
      <summary>
            Insert a column to the table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.ExtendTable">
      <summary>
            Extend table in downward direction
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.AutoShowTotal">
      <summary>
            Auto show total without shift range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.SetCalculatedColumn">
      <summary>
            Set a column to calculated com.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.ResizeAndResetFormula">
      <summary>
            Resize table and reset formula in new extended range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.ExtendRow">
      <summary>
            Increases the row count of table by 1.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.MoveColumn">
      <summary>
            Move table column
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.TableActions.MoveRow">
      <summary>
            MoveRow
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.TableStyleCommand">
      <summary>
            Represents a command for the specified table style.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.TableStyleCommand.#ctor(GrapeCity.Spreadsheet.Table[],System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.TableStyleCommand" /> class.
            </summary>
      <param name="tables">A list of tables whose style will be applied</param>
      <param name="tableStyleName">A string value indicates the name of table style.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Commands.TableStyleCommand.#ctor(GrapeCity.Spreadsheet.Workbook,System.String,System.Collections.Generic.Dictionary{GrapeCity.Spreadsheet.TableStyleElementType,System.Tuple{GrapeCity.Spreadsheet.StyleFormat,System.Int32}},System.Boolean,System.Boolean,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Commands.TableStyleCommand.#ctor(GrapeCity.Spreadsheet.Workbook,System.String)" -->
    <member name="T:GrapeCity.Spreadsheet.Commands.TableSubTotalCommand">
      <summary>
            Represents a command for table subotal operation.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ThreadedCommentCommand">
      <summary>
            Represents a command that adding a new comment or reply on a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ThreadedCommentCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ThreadedCommentCommand" /> class.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="text">The comment's text.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ThreadedCommentCommand.#ctor(GrapeCity.Spreadsheet.ICommentThreaded,System.String,GrapeCity.Spreadsheet.Commands.ThreadedCommandAction)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Commands.ThreadedCommentCommand" /> class.
            </summary>
      <param name="threadedComment"></param>
      <param name="text">the text of comment</param>
      <param name="action"></param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ThreadedCommandAction.Add">
      <summary>
            Add a new threaded comment or reply
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ThreadedCommandAction.Edit">
      <summary>
            Edit a reply or comment
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ThreadedCommandAction.Delete">
      <summary>
            Delete a threaded comment or reply
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Commands.ThreadedCommandAction.Resolved">
      <summary>
            Threaded comment is resolved or re-opened
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Commands.ZoomScaleCommand">
      <summary>
            Represents a command for zoom scale action.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Commands.ZoomScaleCommand.#ctor(GrapeCity.Spreadsheet.Worksheet,System.Int32)">
      <summary>
            Initializes a new instance of the<see cref="T:GrapeCity.Spreadsheet.Commands.ZoomScaleCommand" /> class.
             </summary>
      <param name="worksheet">The processing <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object.</param>
      <param name="zoomScale">zoom scale value</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Behaviors">
      <summary>
            Represents the behaviors of operations.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Behaviors.None">
      <summary>
            Indicating all behaviors are excluded.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Behaviors.FilterFrozenRows">
      <summary>
            Indicating whether frozen rows should be included in the filter operation.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Behaviors.KeepFormulaOnSetValue">
      <summary>
            Indicating whether set value to cell cause the formula to be clear.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Behaviors.ContainsAtLeastOneWorksheet">
      <summary>
            Indicating whether the workbook must contains at least one worksheet.
            </summary>
      <remarks>This option is not available on <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Behaviors" /></remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Behaviors.SortFrozenRows">
      <summary>
            Indicating whether frozen rows should be included in the sort operation.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Behaviors.ReportAllCellValueChanges">
      <summary>
            Indicating whether all cell value changes will be notified via <see cref="E:GrapeCity.Spreadsheet.IWorkbookSet.CellValueChanged" /> event but not only cell formula value changes.
            </summary>
      <remarks>This option is not available on <see cref="P:GrapeCity.Spreadsheet.IWorksheet.Behaviors" /></remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Behaviors.Default">
      <summary>
            Indicating the default behaviors.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorkbookBase">
      <summary>
            Represents a workbook base.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookBase.WorkbookSet">
      <summary>
            Gets the container of this item.
            </summary>
      <value>An object indicates the container.</value>
      <remarks>Although the caller can assign new value to the container, it's not recommended. The setter is intended to be used internal only.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookBase.GetHashCode">
      <summary>
            Gets the hash code for this workbook.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookBase.FormulaEngine">
      <summary>
            Gets the formula engine of this workbook.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookBase.Names">
      <summary>
            Gets a <see cref="P:GrapeCity.Spreadsheet.WorkbookBase.Names" /> collection that represents all the names in the specified workbook (including all worksheet-specific names).
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.WorkbookBase.Names" /> collection that represents all the names in the specified workbook.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookBase.ContainsDefinedName">
      <summary>
            Determines whether there is at least one defined name in this workbook.
            </summary>
      <returns>
        <c>true</c> if there is at least one defined name in this workbook; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorkbookSet">
      <summary>
            Represents a set of workbooks which may refer to each other by external cell references or external defined name references. 
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.Compatibility">
      <summary>
            Gets or sets the <see cref="P:GrapeCity.Spreadsheet.WorkbookSet.Compatibility" /> value that indicating the compatibility of the spreadsheet.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.WorkbookSet.Compatibility" /> value to apply behaviors.</value>
      <remarks>Changing this property won't affect to existed data. You should change this value one time only, when the application start.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.DefaultBehaviors">
      <summary>
            Gets or sets the default behaviors of operations.
            </summary>
      <value>The default behaviors of operations.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.CreateBase1Object(GrapeCity.Spreadsheet.IWorkbook)">
      <summary>
            Creates the <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> object which uses base-1 indexes.
            </summary>
      <param name="workbook">The original <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> object which uses base-1 indexes.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.Culture">
      <summary>
            Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> of this workbook set.
            </summary>
      <value>The <see cref="T:System.Globalization.CultureInfo" /> of this workbook set.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.OnWorkbookRemoved(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Notifies the workbook removed.
            </summary>
      <param name="removedWorkbook">The removed workbook.</param>
      <remarks>Safe for SpreadWin to use</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.LanguagePackage">
      <summary>
            Gets or sets the aliases of built-in functions.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.ColorManager">
      <summary>
            Gets the color manager of the <see cref="T:GrapeCity.Spreadsheet.WorkbookSet" />.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.WorkbookSet.ColorManager" /> object represents the color manager.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.CommandManager">
      <summary>
            Gets the command manager of the <see cref="T:GrapeCity.Spreadsheet.WorkbookSet" />.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.WorkbookSet.CommandManager" /> object represents the command manager.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.Localizer">
      <summary>
            Gets or sets the localizer which returns contanst texts.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Localization.Localizer" /> value represents the localizer.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.#ctor(GrapeCity.Spreadsheet.Factory,System.Globalization.CultureInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.WorkbookSet" /> class.
            </summary>
      <param name="factory">The spreadsheet factory.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.CustomListCount">
      <summary>
            Gets the number of defined custom lists (including built-in lists).
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.GetCustomListNum(System.String[])">
      <summary>
            Gets the custom list number for an array of strings. You can use this method to match both built-in lists and custom-defined lists.
            </summary>
      <param name="listArray">An array of strings.</param>
      <returns>An integer value represents the custom list number.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.GetCustomListContents(System.Int32)">
      <summary>
            Gets a custom list (an array of strings).
            </summary>
      <param name="listNum">The list number.</param>
      <returns>An array of strings represents the custom list.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.DeleteCustomList(System.Int32)">
      <summary>
            Deletes a custom list.
            </summary>
      <param name="listNum">The custom list number. Built-in custom list cannot be deleted.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.AddCustomList(System.String[])">
      <summary>
            the list that you are trying to add already exists
            </summary>
      <param name="listArray">Specifies the source data</param>
      <returns>
        <c>true</c> if the custom list is added; otherwise, <c>false</c> if the list that you are trying to add already exists.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.AddCustomList(GrapeCity.Spreadsheet.IRange,System.Nullable{System.Boolean})">
      <summary>
            the list that you are trying to add already exists
            </summary>
      <param name="listArray">Specifies the source data</param>
      <param name="byRow">
        <c>true</c> to create a custom list from each row in the range. <c>false</c> to create a custom list from each column in the range.
            <para>If this argument is omitted and there are more rows than columns (or an equal number of rows and columns) in the range, the custom list is created from each column in the range.</para><para>If this argument is omitted and there are more columns than rows in the range, the custom list is created from each row in the range.</para></param>
      <returns>
        <c>true</c> if the custom list is added; otherwise, <c>false</c> if the list that you are trying to add already exists.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.UserName">
      <summary>
            Gets or sets the name of the current user. 
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.CalculationEngine">
      <summary>
            Gets the calculation engine.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.Workbooks">
      <summary>
            Gets all of the workbooks in this workbook set.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IWorkbooks" /> instance represents all of the workbooks in this workbook set.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.CopyingWorkbook">
      <summary>
            Gets the workbook which is processing copy action.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.StartClipboardUI(GrapeCity.Spreadsheet.WorksheetReference[],System.Boolean)">
      <summary>
            Starts copying or cutting a cell range.
            </summary>
      <param name="reference">The cell range to copy or cut.</param>
      <param name="cutting">
        <c>true</c> if user start cutting a cell range; otherwise, false.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.StopClipboardUI">
      <summary>
            Stops copying or cutting a cell range.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.GrapeCity#Spreadsheet#IWorkbookSet#Calculate">
      <summary>
            Calculates all workbooks on this workbook set.
            </summary>
    </member>
    <member name="E:GrapeCity.Spreadsheet.WorkbookSet.GrapeCity#Spreadsheet#IWorkbookSet#CellValueChanged">
      <summary>
            Occurs after the cell value(s) is changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.InitializeBatching">
      <summary>
            Initializes batching for changing cell values and formulas.
            </summary>
      <remarks>
            All changes, which happen after this function, will be notified at once by <see cref="E:GrapeCity.Spreadsheet.IWorkbookSet.CellValueChanged" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.TerminateBatching">
      <summary>
            Ends batching for changing cell values and formulas.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.RegisterUIManager(GrapeCity.Spreadsheet.UI.UIManager)">
      <summary>
            Registers the UI manager.
            </summary>
      <param name="uiManager">The UI manager.</param>
      <remarks>
        <c>null</c> means the current <see cref="P:GrapeCity.Spreadsheet.WorkbookSet.UIManager" /> will be unregistered.</remarks>
      <exception cref="T:System.ArgumentException">Only single UIManager can be attached to WorkbookSet</exception>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.UIManager">
      <summary>
            Gets the UI manager of the <see cref="T:GrapeCity.Spreadsheet.IWorkbookSet" />.
            </summary>
      <value>The UI manager.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.BeginUpdate">
      <summary>
            Suspends painting and events until <see cref="M:GrapeCity.Spreadsheet.WorkbookSet.EndUpdate" /> is called. Calling this function is exclusively.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.EndUpdate">
      <summary>
            Restores painting and events to the state before the last call to <see cref="M:GrapeCity.Spreadsheet.WorkbookSet.BeginUpdate" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="E:GrapeCity.Spreadsheet.WorkbookSet.UpdateLinks">
      <summary>
            Occurs when update links according to the user's settings for the specified workbook.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.IsDetectCircularCellsSupported">
      <summary>
            Gets a boolean value indicating whether detecting circular cell(s) is supported.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.CutCopyMode">
      <summary>
            Gets or sets the status of Cut or Copy mode.
            </summary>
      <value>
            Sets the status to <see cref="F:GrapeCity.Spreadsheet.CutCopyMode.None" /> to cancels Cut or Copy mode and removes the moving border;
            otherwise, starts Cut or Copy mode and shows the moving border.
            </value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorkbookSet.GetActiveWorkbook">
      <summary>
            Gets the active workbook.
            </summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object represents the active workbook.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorkbookSet.WorksheetFunction">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.WorkbookSet.WorksheetFunction" /> object.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ConfirmationEventArgs">
      <summary>
            Represents the event argument for confirming user's option.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ConfirmationEventArgs.Accepted">
      <summary>
            Gets a value indicating the user's option.
            </summary>
      <value>
        <c>null</c> if user want to use default option, <c>true</c> if user accepted; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorkbooks">
      <summary>
            Represents a set of workbooks in a workbook set.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbooks.Count">
      <summary>
            Gets the number of workbooks in the workbook set.
            </summary>
      <value>An integer value represents the number of workbooks in the workbook set.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbooks.Item(System.Int32)">
      <summary>
            Gets the specified <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> by the zero based index.
            </summary>
      <param name="index">An integer value indicates the <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> index.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbooks.Item(System.String)">
      <summary>
            Gets the specified <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> by the <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> name.
            </summary>
      <param name="index">A string value indicates the <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> name.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> which has the specified name.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorkbooks.WorkbookSet">
      <summary>
            Gets the parent workbook set of this IWorksheets.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IWorkbooks.WorkbookSet" /> object represents the parent workbook set of this IWorksheets.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbooks.Add(System.String)">
      <summary>
            Creates a new workbook.
            </summary>
      <param name="name">The name of workbook.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> value represents a new created <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> instance.</returns>
      <remarks>The workbook name must be unique in the workbook set.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbooks.Add(GrapeCity.Spreadsheet.IWorkbook)">
      <summary>
            Adds an existed workbook into the workbook set.
            </summary>
      <returns>
        <c>true</c> if the <paramref name="workbook" /> is added into current workbook set; otherwise, <c>false</c>.</returns>
      <remarks>
            The <paramref name="workbook" /> must not belong to any other workbook set and its name must be unique.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.String,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)">
      <summary>
            Open an existing workbook in a newly created instance of <see cref="T:GrapeCity.Spreadsheet.Workbook" />. 
            </summary>
      <param name="filename">The filename of the workbook to open.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object represents the opened workbook.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IWorkbooks.Open(System.IO.Stream,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Boolean)">
      <summary>
            Open an existing workbook in a newly created instance of <see cref="T:GrapeCity.Spreadsheet.Workbook" />. 
            </summary>
      <param name="stream">The stream containing the workbook to open.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="closing">
        <c>true</c> if the <paramref name="stream" /> will be closed after finish opening. <c>false</c> to leave it as opened.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object represents the opened workbook.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorksheetType">
      <summary>
            Specifies the worksheet type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetType.Worksheet">
      <summary>
            Worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetType.Chart">
      <summary>
            Chart.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetType.DialogSheet">
      <summary>
            Dialog sheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetType.Headers">
      <summary>
            Column header or Row header.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SheetVisibility">
      <summary>
            Specifies whether the worksheet is visible.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetVisibility.Visible">
      <summary>
            Displays the sheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetVisibility.Hidden">
      <summary>
            Hides the worksheet which the user can unhide via menu.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetVisibility.VeryHidden">
      <summary>
            Hides the object so that the only way for you to make it visible again is by setting this property to <see cref="F:GrapeCity.Spreadsheet.SheetVisibility.Visible" /> 
            (the user cannot make the object visible).
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorksheetSubType">
      <summary>
            Specifies the type of worksheet headers and footers.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetSubType.Normal">
      <summary>
            The normal worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetSubType.ColumnHeader">
      <summary>
            The column header.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetSubType.RowHeader">
      <summary>
            The row header
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetSubType.ColumnFooter">
      <summary>
            The column footer.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetSubType.Corner">
      <summary>
            The worksheet corner.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SubWorksheet.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.WorksheetSubType,GrapeCity.Spreadsheet.Factory)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.SubWorksheet" /> class.
            </summary>
      <param name="ownerWorksheet">The worksheet which contains the creating sub-worksheet.</param>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.WorksheetSubType" /> value indicates the sub-worksheet type.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SubWorksheet.GrapeCity#Spreadsheet#ISpreadsheet#Clear(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Removes all the data and formulas from the specified range of cells.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="rowCount">An integer value indicates the total number of rows.</param>
      <param name="columnCount">An integer value indicates the total number of columns.</param>
      <returns>
        <c>true</c> if the data is clear, <c>false</c> otherwise.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SubWorksheet.Owner">
      <summary>
            Gets the owner worksheet.
            </summary>
      <value>
            An <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object represents the owner worksheet of worksheet headers and footers.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SubWorksheet.SubType">
      <summary>
            Gets the worksheet sub-type.
            </summary>
      <value>
            Returns a <see cref="T:GrapeCity.Spreadsheet.WorksheetSubType" /> value represents the worksheet sub-type.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SubWorksheet.Visible">
      <summary>
            Gets or sets whether the worksheet is visible. 
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SubWorksheet.GrapeCity#Spreadsheet#ISpreadsheet#GetFormula(System.Int32,System.Int32)">
      <summary>
            Gets the formula text from the specified cell on this spreadsheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:GrapeCity.CalcEngine.Expression" /> of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SubWorksheet.GrapeCity#Spreadsheet#ISpreadsheet#Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.IWorksheet)">
      <summary>
            Copies the data from a range of cells to a specified range of cells.
            </summary>
      <param name="row">Row index of start of range from which to copy</param>
      <param name="column">Column index of start of range from which to copy</param>
      <param name="toRow">Row index of start of range to which to copy</param>
      <param name="toColumn">Column index of start of range to which to copy</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
      <param name="options">The options indicates which data type will be performed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SubWorksheet.GrapeCity#Spreadsheet#ISpreadsheet#Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.IWorksheet)">
      <summary>
            Moves the data from a range of cells to the specified location.
            </summary>
      <param name="row">Row index of starting position of range to move</param>
      <param name="column">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="options">The options indicates which data type will be performed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SubWorksheet.GrapeCity#Spreadsheet#ISpreadsheet#Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Swaps the specified ranges of cells.
            </summary>
      <param name="row">Row index of starting position of range to move</param>
      <param name="column">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="options">The options indicates which data type will be performed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SubWorksheet.ImportExtensionData(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{GrapeCity.Spreadsheet.Worksheet},System.Guid)">
      <summary>
            Imports the extension data.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="extensibleObject">An <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1" /> object indicates the extension provider.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SubWorksheet.ExportExtensionData(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{GrapeCity.Spreadsheet.Worksheet},System.Guid)">
      <summary>
            Enables an object to extend another object through aggregation.
            </summary>
      <typeparam name="T">The object that participates in the custom behavior.</typeparam>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISpreadsheet">
      <summary>
            Represent an absract spreadsheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISpreadsheet.RowCount">
      <summary>
            Gets the row count of the header.
            </summary>
      <value>An integer value represents the row count of the header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISpreadsheet.ColumnCount">
      <summary>
            Gets the column count of the header.
            </summary>
      <value>An integer value represents the column count of the header.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets raw data from the specified cell on this spreadsheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:System.Object" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.GetFormula(System.Int32,System.Int32)">
      <summary>
            Gets the formula text from the specified cell on this spreadsheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The formula text of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.SetValue(System.Int32,System.Int32,System.Object)">
      <summary>
            Sets the <see cref="T:System.Object" /> value for the cell of the specified row and column.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
      <returns>
        <c>true</c> if the value is set successful; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.SetValue(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>
            Sets the <see cref="T:System.Object" /> value for all cells of the specified range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell.</param>
      <param name="column">An integer value indicates the left column index of cell.</param>
      <param name="row2">An integer value indicates the bottom row index of cell.</param>
      <param name="column2">An integer value indicates the right column index of cell.</param>
      <param name="value">An <see cref="T:System.Object" /> value to set</param>
      <returns>
        <c>true</c> if the value is set successful; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.SetFormula(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            Sets the formula text for the cell of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="formula">A string value indicates the formula text to set</param>
      <param name="autoFormatting">A boolean value indicates that the cell may be auto formatted by some special functions.</param>
      <returns>The details data of the action result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.GetStyleFormat(System.Int32,System.Int32)">
      <summary>
            Gets the direct <seealso cref="T:GrapeCity.Spreadsheet.StyleFormat" /> of a cell
            </summary>
      <param name="row">An integer value indicates the index of row</param>
      <param name="column">An integer value indicates the index of column</param>
      <returns>The <seealso cref="T:GrapeCity.Spreadsheet.StyleFormat" /> of a cell</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.SetStyleFormat(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.StyleFormat)">
      <summary>
            Sets the <seealso cref="T:GrapeCity.Spreadsheet.StyleFormat" /> for a range
            </summary>
      <param name="row">An integer value indicates the index of start row</param>
      <param name="column">An integer value indicates the index of start column</param>
      <param name="row2">An integer value indicates the index of end row</param>
      <param name="column2">An integer value indicates the index of end column</param>
      <param name="styleFormat">The <seealso cref="T:GrapeCity.Spreadsheet.StyleFormat" /> to set to the range</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.Copy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.IWorksheet)">
      <summary>
            Copies the data from a range of cells to a specified range of cells.
            </summary>
      <param name="row">Row index of start of range from which to copy</param>
      <param name="column">Column index of start of range from which to copy</param>
      <param name="toRow">Row index of start of range to which to copy</param>
      <param name="toColumn">Column index of start of range to which to copy</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <param name="targetWorksheet">The target worksheet where data will be copied to. <c>null</c> means the data is copied to the same worksheet.</param>
      <returns>
        <c>true</c> if the cell range is copied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.Move(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions,GrapeCity.Spreadsheet.IWorksheet)">
      <summary>
            Moves the data from a range of cells to the specified location.
            </summary>
      <param name="row">Row index of starting position of range to move</param>
      <param name="column">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="options">The options indicates which data type will be performed.</param>
      <param name="targetWorksheet">The target worksheet where data will be moved to. <c>null</c> means the data is moved to the same worksheet.</param>
      <returns>
        <c>true</c> if the cell range is moved successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Swaps the specified ranges of cells.
            </summary>
      <param name="row">Row index of starting position of range to move</param>
      <param name="column">Column index of starting position of range to move</param>
      <param name="toRow">Row index of starting position of destination</param>
      <param name="toColumn">Column index of starting position of destination</param>
      <param name="rowCount">Number of rows in range</param>
      <param name="columnCount">Number of columns in range</param>
      <param name="options">The options indicates which data type will be performed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.Clear(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.ManipulationOptions)">
      <summary>
            Removes all the data from the specified range of cells.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="rowCount">An integer value indicates the count of rows.</param>
      <param name="columnCount">An integer value indicates the count of columns.</param>
      <param name="options">The options indicates which data type will be performed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.InsertColumns(System.Int32,System.Int32)">
      <summary>
            Inserts column(s) at the specified position.
            </summary>
      <param name="column">An integer value indicates the column index at which to insert new columns.</param>
      <param name="count">An integer value indicates the number of rows to insert.</param>
      <returns>
        <c>true</c> if the columns are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.RemoveColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Removes one or more columns starting with the column at the specified position.
            </summary>
      <param name="column">An integer value indicates the index of first column to remove.</param>
      <param name="count">An integer value indicates the number of column(s) to remove.</param>
      <param name="notifyUI">if set to <c>true</c>, <see cref="T:GrapeCity.Spreadsheet.UI.UIManager" /> need to be notified.</param>
      <returns>
        <c>true</c> if the columns are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.InsertRows(System.Int32,System.Int32)">
      <summary>
            Inserts row(s) at the specified position.
            </summary>
      <param name="row">An integer value indicates the row index at which to insert new row(s).</param>
      <param name="count">An integer value indicates the number of row(s) to insert.</param>
      <returns>
        <c>true</c> if the rows are inserted successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISpreadsheet.RemoveRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Removes one or more rows starting with the row at the specified position.
            </summary>
      <param name="row">An integer value indicates the index of first row to remove.</param>
      <param name="count">An integer value indicates the number of row(s) to remove.</param>
      <param name="notifyUI">if set to <c>true</c>, <see cref="T:GrapeCity.Spreadsheet.UI.UIManager" /> need to be notified.</param>
      <returns>
        <c>true</c> if the rows are removed successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IRowHeader">
      <summary>
            Represents the row header of a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRowHeader.ColumnCount">
      <summary>
            Gets or sets the column count of the row header.
            </summary>
      <value>An integer value represents the column count of the row header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRowHeader.RowCount">
      <summary>
            Gets the row count of the row header.
            </summary>
      <value>An integer value represents the row count of the row header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRowHeader.Cells">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which represents the entire row header cells (not just the cells that are currently in use).
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IRowHeader.Visible">
      <summary>
            Gets or sets whether the row header is visible. 
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColumnHeader">
      <summary>
            Represents the column header of a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnHeader.RowCount">
      <summary>
            Gets or sets the row count of the column header.
            </summary>
      <value>An integer value represents the row count of the column header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnHeader.ColumnCount">
      <summary>
            Gets the column count of the column header.
            </summary>
      <value>An integer value represents the column count of the column header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnHeader.Cells">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which represents the entire column header cells (not just the cells that are currently in use).
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnHeader.Visible">
      <summary>
            Gets or sets whether the column header is visible. 
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IColumnFooter">
      <summary>
            Represents the column footer of a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnFooter.RowCount">
      <summary>
            Gets or sets the row count of the column footer.
            </summary>
      <value>An integer value represents the row count of the column footer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnFooter.ColumnCount">
      <summary>
            Gets the column count of the column footer.
            </summary>
      <value>An integer value represents the column count of the column footer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnFooter.Cells">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which represents the entire column footer cells (not just the cells that are currently in use).
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object which provide access to cell values, formulas, formatting...</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IColumnFooter.Visible">
      <summary>
            Gets or sets whether the column footer is visible. 
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorksheetBase">
      <summary>
            Represents a worksheet base.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetBase.RowCount">
      <summary>
            Gets or sets the number of rows in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <value>An integer value represents the number of rows in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetBase.ColumnCount">
      <summary>
            Gets or sets the number of columns in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <value>An integer value represents the number of columns in this <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetBase.EnableCalculation">
      <summary>
            Gets or sets a value indicating whether calculation engine automatically recalculates the worksheet when necessary.
            </summary>
      <value>
        <c>true</c> if calculation engine automatically recalculates the worksheet when necessary; otherwise, calculation engine doesn't recalculate the sheet.</value>
      <remarks>
            When the value of this property is <c>false</c>, you cannot request a recalculation.
            When you change the value from <c>false</c> to <c>true</c>, calculation engine recalculates the worksheet.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetBase.Name">
      <summary>
            Gets or sets the name of worksheet.
            </summary>
      <value>A string value indicates the name of worksheet.</value>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> cannot be null or empty.</exception>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetBase.GrapeCity#CalcEngine#IReferenceSource#Supports3DReference">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object supports 3D-Reference.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object supports 3D-Reference; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GrapeCity#CalcEngine#IReferenceSource#IsUndefined">
      <summary>
            Determines whether this reference source is undefined.
            </summary>
      <returns>
        <c>true</c> if this reference source is undefined; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.Get3DReferenceIndex">
      <summary>
            Get the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.
            </summary>
      <returns>An integer value indicates the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GrapeCity#CalcEngine#IReferenceSource#Get3DReferenceIndex">
      <summary>
            Get the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.
            </summary>
      <returns>An integer value indicates the 3D-Reference index of this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetBase.GrapeCity#CalcEngine#IReferenceSource#Date1904">
      <summary>
            Gets whether the date system used to convert a date to a serial value starts in 1904.
            </summary>
      <value>
        <c>true</c>, if the date system starts in 1904; otherwise, <c>false</c>. Default is <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GrapeCity#CalcEngine#IReferenceSource#GetReferenceExpression(GrapeCity.CalcEngine.FormulaEngine)">
      <summary>
            Gets the reference expression to evaluate this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.
            </summary>
      <param name="formulaEngine">A <see cref="T:GrapeCity.CalcEngine.FormulaEngine" /> object indicates the formula engine.</param>
      <returns>An <see cref="T:GrapeCity.CalcEngine.Expression" /> value represents the reference expression to evaluate this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GrapeCity#CalcEngine#IReferenceSource#GetReferenceExpression(GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.IStructuredObject,GrapeCity.CalcEngine.StructuredItemSpecifiers,System.Int32,System.Int32)">
      <summary>
            Gets the reference expression to evaluate the specified <see cref="T:GrapeCity.CalcEngine.IStructuredObject" />.
            </summary>
      <param name="formulaEngine">A <see cref="T:GrapeCity.CalcEngine.FormulaEngine" /> object indicates the formula engine.</param>
      <param name="structuredObject">An <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object indicates the structured object.</param>
      <param name="itemSpecifiers">A <see cref="T:GrapeCity.CalcEngine.StructuredItemSpecifiers" /> value indicates the item specifiers.</param>
      <param name="columnId">An integer value indicates the first column.</param>
      <param name="columnId2">An integer value indicates the second column.</param>
      <returns>An <see cref="T:GrapeCity.CalcEngine.Expression" /> value represents the reference expression to evaluate this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GrapeCity#CalcEngine#IReferenceSource#GetReferenceExpression(GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.IStructuredObject,GrapeCity.CalcEngine.Expression)">
      <summary>
            Gets the reference expression to evaluate the specified <see cref="T:GrapeCity.CalcEngine.IStructuredObject" />.
            </summary>
      <param name="formulaEngine">A <see cref="T:GrapeCity.CalcEngine.FormulaEngine" /> object indicates the formula engine.</param>
      <param name="structuredObject">An <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object indicates the structured object.</param>
      <param name="expression">The expression refers to the <see cref="T:GrapeCity.CalcEngine.IStructuredObject" />.</param>
      <returns>An <see cref="T:GrapeCity.CalcEngine.Expression" /> value represents the reference expression to evaluate this <see cref="T:GrapeCity.CalcEngine.IReferenceSource" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GrapeCity#CalcEngine#IReferenceSource#GetValue(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32,GrapeCity.CalcEngine.IPrimitiveValue)">
      <summary>
            Gets the value at the specified location of the 2-dimensions matrix.
            </summary>
      <param name="row">An integer value indicates the row index of the 2-dimensions matrix.</param>
      <param name="column">An integer value indicates the column index of the 2-dimensions matrix.</param>
      <param name="result">An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object represents the value at the specified location.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GetValue(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32,GrapeCity.CalcEngine.CellValue@)">
      <summary>
            Gets the value at the specified location of the 2-dimensions matrix.
            </summary>
      <param name="row">An integer value indicates the row index of the 2-dimensions matrix.</param>
      <param name="column">An integer value indicates the column index of the 2-dimensions matrix.</param>
      <param name="result">An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object represents the value at the specified location.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GrapeCity#CalcEngine#IReferenceSource#GetText(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32)">
      <summary>
            Gets the text at the specified location of the 2-dimensions matrix.
            </summary>
      <param name="context">An <see cref="T:GrapeCity.CalcEngine.EvaluationContext" /> object indicates the evaluation context.</param>
      <param name="row">An integer value indicates the row index of the 2-dimensions matrix.</param>
      <param name="column">An integer value indicates the column index of the 2-dimensions matrix.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GetExpression(System.Int32,System.Int32)">
      <summary>
            Gets the formula, as an expression value, for the cell of the specified row and column of this sheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:GrapeCity.CalcEngine.Expression" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.EnsureCalculated(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Ensure that all data in specify range is calculated
            </summary>
      <param name="row">the start row index</param>
      <param name="column">the start column index</param>
      <param name="row2">the end row index</param>
      <param name="column2">the end column index</param>
      <param name="notifyUI">
        <c>true</c> if the UIManager should be notified; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.RefineAccessibleRangeReference(GrapeCity.Spreadsheet.Reference@)">
      <summary>
            Refines the range references to remove whole row / column. All references are assumed as absolute.
            </summary>
      <param name="rangeRefs">An array of references.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets raw data from the specified cell on this sheet.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:System.Object" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.GetUnspilledValue(System.Int32,System.Int32)">
      <summary>
            Gets raw data from the specified cell on this sheet. The spilled value will be skipped.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>The <see cref="T:System.Object" /> value of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.IsBindingData">
      <summary>
            Gets a boolean value indicating whether the worksheet is bind to a data source.
            </summary>
      <returns>
        <c>true</c> if the worksheet is bind to a data source; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.PreviousNonEmptyRowInColumn(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Find the previous non-empty data row in a column
            </summary>
      <param name="column"> start column index</param>
      <param name="excludeRow">start row index </param>
      <param name="skipInsideItems">Return the first block index if the found cell is in block with the specified cell.</param>
      <returns>An integer value represents the previous non-empty row in the specified column.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetBase.NextNonEmptyRowInColumn(System.Int32,System.Int32,System.Boolean)">
      <summary>
             Find the next non- empty row data in a column
            </summary>
      <param name="column"> start column index</param>
      <param name="row">start row index </param>
      <param name="skipInsideItems">Return the last block index if the found cell is in block with the specified cell.</param>
      <returns>An integer value represents the next non-empty row in the specified column.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Compatibility">
      <summary>
            Represents compatibility options for spreadsheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Compatibility.WorksheetName">
      <summary>
            Worksheet's name is restricted to match with Excel policy.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Compatibility.Default">
      <summary>
            Default compatibility options.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DocumentProperties">
      <summary>
            Represents all properties of the spreadsheet document.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Title">
      <summary>
            Gets or sets the title associated with the document.
            </summary>
      <value>A string value represents the title.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Subject">
      <summary>
            Gets or sets the subject associated with the document.
            </summary>
      <value>A string value represents the subject.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Creator">
      <summary>
            Gets or sets the creator name associated with the document.
            </summary>
      <value>A string value represents the creator name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Creators">
      <summary>
            Gets the list of creator names associated with the document.
            </summary>
      <value>A <see cref="!:List&lt;string&gt;" /> object represents the list of creator names.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Keywords">
      <summary>
            Gets the list of keywords associated with the document.
            </summary>
      <value>A string value represents the list of keywords.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DocumentProperties.SetKeywords(System.String)">
      <summary>
            Sets the keywords.
            </summary>
      <param name="keywords">The keywords.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DocumentProperties.GetKeywords">
      <summary>
            Gets the keywords.
            </summary>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Description">
      <summary>
            Gets or sets the description associated with the document.
            </summary>
      <value>A string value represents the description.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.LastModifiedBy">
      <summary>
            Gets or sets the last modified person's name.
            </summary>
      <value>A string value represents the last modified person's name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Revision">
      <summary>
            Gets or sets the revision of the documentation which produced this document.
            </summary>
      <value>A string value represents the revision of the documentation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Created">
      <summary>
            Gets or sets the created date of the document.
            </summary>
      <value>A string value represents the created date.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.LastModified">
      <summary>
            Gets or sets the last modified date of the document.
            </summary>
      <value>A string value represents the last modified date.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Category">
      <summary>
            Gets the category associated with the document.
            </summary>
      <value>A string value represents the category.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Categories">
      <summary>
            Gets the list of categories associated with the document.
            </summary>
      <value>A string value represents the list of categories.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.ContentStatus">
      <summary>
            Gets or sets the content status associated with the document.
            </summary>
      <value>A string value represents the content status.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Language">
      <summary>
            Gets or sets the language associated with the document.
            </summary>
      <value>A string value represents the language.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Version">
      <summary>
            Gets or sets the version of the documentation which produced this document.
            </summary>
      <value>A string value represents the version of the documentation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Application">
      <summary>
            Gets or sets the name of the application that created this document.
            </summary>
      <value>A string value represents the name of the application.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.ApplicationVersion">
      <summary>
            Gets or sets the version of the application which produced this document.
            </summary>
      <value>A string value represents the version of the application.</value>
      <remarks>The content of this element shall be of the form XX.YYYY where X and Y represent numerical values,
            or the document shall be considered non-conformant.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Company">
      <summary>
            Gets or sets the name of a company associated with the document.
            </summary>
      <value>A string value represents the name of a company.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.Manager">
      <summary>
            Gets or sets the name of a supervisor associated with the document.
            </summary>
      <value>A string value represents the name of a supervisor.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DocumentProperties.HyperlinkBase">
      <summary>
            Get or Set the hyperlink base address for relative hyperlinks in a document.
            </summary>
      <value>A string value represents the name of a supervisor.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.YesNoCancel">
      <summary>
            Represents the choice to perform an action.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoCancel.Yes">
      <summary>
            The action will be performed regardless of any condition.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoCancel.No">
      <summary>
            The action is performed partly that don't violate any condition.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoCancel.Cancel">
      <summary>
            The action is performed if all conditions are satisfied.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.InsertShiftDirection">
      <summary>
            Represents the choise to insert cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InsertShiftDirection.ShiftDown">
      <summary>
            Shift cells down.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InsertShiftDirection.ShiftToRight">
      <summary>
            Shift cells to the right.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InsertShiftDirection.EntireRow">
      <summary>
            Move entire row down.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InsertShiftDirection.EntireColumn">
      <summary>
            Moves entire column to the right.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.InsertFormatOrigin">
      <summary>
            Specifies from where to copy the format for inserted cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InsertFormatOrigin.LeftOrAbove">
      <summary>
            Copy the format from cells above and/or to the left.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.InsertFormatOrigin.RightOrBelow">
      <summary>
            Copy the format from cells below and/or to the right.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.EnableSelection">
      <summary>
            Specifies what can be selected on the sheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.EnableSelection.NoRestrictions">
      <summary>
            Anything can be selected.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.EnableSelection.UnlockedCells">
      <summary>
            Only unlocked cells can be selected.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.EnableSelection.NoSelection">
      <summary>
            Nothing can be selected.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellRenderOptions">
      <summary>
            Represents options for rendering a cell.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellRenderOptions.Default">
      <summary>
            Use default settings.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellRenderOptions.ExcludePostPaintCf">
      <summary>
            Exclude Data Bar and Icon Set conditional formatting.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Features">
      <summary>
            Represents all customizable features of Spread.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Features.AutoFormatting">
      <summary>
            Gets or sets a boolean value indicating whether format the cell by the auto-detected number format from the input formula.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Features.PasteSkipInvisibleRange">
      <summary>
            Gets or sets a boolean value indicating whether hidden cells will be skipped on pasting.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Imaging.HslColor.FromRGB(System.Int32)">
      <summary>
            Creates a <see cref="T:GrapeCity.Spreadsheet.Imaging.HslColor" /> structure from RGB value.
            </summary>
      <param name="red"></param>
      <param name="green"></param>
      <param name="blue"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Imaging.HslColor.HlsToRgb(System.Single,System.Single,System.Single,System.Int32@,System.Int32@,System.Int32@)">
      <summary>
            Convert an HLS value into an RGB value.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Imaging.WriteableBitmap">
      <summary>
            Represents a bitmap that can be written to and updated.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.#ctor(System.IntPtr,System.Int32,System.Int32,System.Int32)">
      <param name="buffer">An <see cref="T:System.IntPtr" /> that points to the base address of the buffer.</param>
      <param name="stride">An integer indicating the number of bytes in a single row of pixel data.</param>
      <param name="pixelWidth">The desired width of the bitmap.</param>
      <param name="pixelHeight">The desired height of the bitmap.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Imaging.WriteableBitmap" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.Lock">
      <summary>
            Reserves the back buffer for updates.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.Unlock">
      <summary>
            Releases the back buffer to make it available for display.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.Buffer">
      <summary>
            Gets or sets the pointer that points to the base address of the buffer.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.Stride">
      <summary>
            Gets or sets the number of bytes in a single row of pixel data.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.PixelWidth">
      <summary>
            Gets or sets the desired width of the bitmap.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.PixelHeight">
      <summary>
            Gets or sets the desired height of the bitmap.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.IsDisposed">
      <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
      <value>
        <c>true</c> if this instance is disposed; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.Finalize">
      <summary>
            Finalizes an instance of the <see cref="T:GrapeCity.Spreadsheet.Imaging.WriteableBitmap" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Imaging.WriteableBitmap.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellImageAttribute">
      <summary>
            Represents an attributes that allow to specify the cell inline image data.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellImageAttribute.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CellImageAttribute" /> class.
            </summary>
      <param name="member">A string value indicates the member specified cell inline image data.</param>
      <param name="isField">A boolean value indicates whether the member is a field. Default value is <c>false</c>.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellImageAttribute.Member">
      <summary>
            Gets the member indicating cell inline image data.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellImageAttribute.IsField">
      <summary>
            Gets a boolean value indicating whether the member is a field.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Extensions.StyleExtensions">
      <summary>
            Represents extension functions for style.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Extensions.StyleExtensions.CreateGradientFill(GrapeCity.Spreadsheet.IStyles,System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>
            Creates the path gradient fill.
            </summary>
      <param name="styles">The <see cref="T:GrapeCity.Spreadsheet.IStyles" /> object that creates the gradient fill.</param>
      <param name="top">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1).
            For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="left">Specifies in percentage format (from the left to the right) the position of the left edge of the inner rectangle (color 1).
            For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="bottom">Specifies in percentage format (from the top to the bottom) the position of the bottom edge of the inner rectangle (color 1).
            For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="right">Specifies in percentage format (from the left to the right) the position of the right edge of the inner rectangle (color 1).
            For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Extensions.StyleExtensions.CreateGradientFill(GrapeCity.Spreadsheet.IStyles,System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>
            Creates the path gradient fill.
            </summary>
      <param name="styles">The <see cref="T:GrapeCity.Spreadsheet.IStyles" /> object that creates the gradient fill.</param>
      <param name="top">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1).
            For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="left">Specifies in percentage format (from the left to the right) the position of the left edge of the inner rectangle (color 1).
            For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="bottom">Specifies in percentage format (from the top to the bottom) the position of the bottom edge of the inner rectangle (color 1).
            For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="right">Specifies in percentage format (from the left to the right) the position of the right edge of the inner rectangle (color 1).
            For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Extensions.StyleExtensions.CreateGradientFill(GrapeCity.Spreadsheet.IStyles,System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>
            Creates the linear gradient fill.
            </summary>
      <param name="styles">The <see cref="T:GrapeCity.Spreadsheet.IStyles" /> object that creates the gradient fill.</param>
      <param name="degree">A <see cref="T:System.Double" /> value indicates the angle of the linear gradient.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Extensions.StyleExtensions.CreateGradientFill(GrapeCity.Spreadsheet.IStyles,System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>
            Creates the linear gradient fill.
            </summary>
      <param name="styles">The <see cref="T:GrapeCity.Spreadsheet.IStyles" /> object that creates the gradient fill.</param>
      <param name="degree">A <see cref="T:System.Double" /> value indicates the angle of the linear gradient.</param>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Extensions.StyleExtensions.CreateGradientFill(GrapeCity.Spreadsheet.IStyles,GrapeCity.Spreadsheet.GradientFillEffect)">
      <summary>
            Creates the gradient fill.
            </summary>
      <param name="styles">The <see cref="T:GrapeCity.Spreadsheet.IStyles" /> object that creates the gradient fill.</param>
      <param name="gradientFillEffect">A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value indicates the gradient fill effect.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AutoFillType">
      <summary>
            Specifies how the target range is to be filled, based on the contents of the source range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFillType.FillCopy">
      <summary>
            Copy the values and formats from the source range to the target range, repeating if necessary.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFillType.FillSeries">
      <summary>
            Extend the values in the source range into the target range as a series (for example, '1, 2' is extended as '3, 4, 5').
            Formats are copied from the source range to the target range, repeating if necessary.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFillType.FillFormats">
      <summary>
            Copy only the formats from the source range to the target range, repeating if necessary.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFillType.FillValues">
      <summary>
            Copy only the values from the source range to the target range, repeating if necessary.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFillType.FillDays">
      <summary>
            Extend the names of the days of the week in the source range into the target range.
            Formats are copied from the source range to the target range, repeating if necessary.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFillType.FillWeekdays">
      <summary>
            Extend the names of the days of the workweek in the source range into the target range.
            Formats are copied from the source range to the target range, repeating if necessary.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFillType.FillMonths">
      <summary>
            Extend the names of the months in the source range into the target range.
            Formats are copied from the source range to the target range, repeating if necessary.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFillType.FillYears">
      <summary>
            Extend the years in the source range into the target range.
            Formats are copied from the source range to the target range, repeating if necessary.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFillType.LinearTrend">
      <summary>
            Extend the numeric values from the source range into the target range, assuming that the relationships between the numbers is additive
            (for example, '1, 2,' is extended as '3, 4, 5', assuming that each number is a result of adding some value to the previous number).
            Formats are copied from the source range to the target range, repeating if necessary.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFillType.GrowthTrend">
      <summary>
            Extend the numeric values from the source range into the target range, assuming that the relationships between the numbers in the source range are multiplicative
            (for example, '1, 2,' is extended as '4, 8, 16', assuming that each number is a result of multiplying the previous number by some value).
            Formats are copied from the source range to the target range, repeating if necessary.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFillType.FillValueSeries">
      <summary>
            Extend the values only in the source range into the target range as a series (for example, '1, 2' is extended as '3, 4, 5').
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Authors">
      <summary>
            Represents a list of authors.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Authors.GetColor(GrapeCity.Spreadsheet.IAuthor)">
      <summary>
            Gets the theme color of an author.
            </summary>
      <param name="author">The author.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represent the theme color of the author.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Comment.Visible">
      <summary>
            Gets or sets a boolean value that determines whether the object is visible.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Comment.RichText">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Comment.RichText" /> object of this comment.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Comment.GrapeCity#Spreadsheet#IComment#RichText">
      <summary>
            Gets text and style attributes of the comment.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IComments">
      <summary>
            Represents a collection of cell comments.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IComments.Count">
      <summary>
            Gets an integer value that represents the number of comments in the collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IComments.Item(System.Int32)">
      <summary>
            Gets a single comment from the collection.
            </summary>
      <param name="index">The index number for the comment.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IComment" /> object contained by the collection.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IComment">
      <summary>
            Represents a cell comment.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IComment.Author">
      <summary>
            Gets the author of the comment.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IComment.Shape">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object that represents the shape attached to the specified comment.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IComment.Visible">
      <summary>
            Gets or sets a boolean value that determines whether the object is visible.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IComment.Delete">
      <summary>
            Deletes the comment.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IComment.Next">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IComment" /> object that represents the next comment.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IComment.Previous">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IComment" /> object that represents the previous comment.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IComment.Text(System.String,System.Int32,System.Nullable{System.Boolean})">
      <summary>
            Gets or sets comment text.
            </summary>
      <param name="text">The text to be added.</param>
      <param name="start">The character number where the added text will be placed.</param>
      <param name="overwrite">
        <c>false</c> to insert the text.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IComment.Text(GrapeCity.Spreadsheet.RichText)">
      <summary>
            Sets comment text.
            </summary>
      <param name="text">The text to be added.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IComment.RichText">
      <summary>
            Gets text and style attributes of the comment.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IAuthor">
      <summary>
            Represents the author of the <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAuthor.Name">
      <summary>
            Gets a string that contains the display name of the specified comment author.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAuthor.ProviderID">
      <summary>
            Gets a string that represents the ID of the service providing the contact information.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAuthor.UserID">
      <summary>
            Gets a string that represents the user ID of the contact.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ICommentThreaded">
      <summary>
            Represents a cell's threaded comment. This object can represent both a top-level comment or its replies.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICommentThreaded.Author">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IAuthor" /> object that represents the author of the specified <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICommentThreaded.Date">
      <summary>
            Gets a <see cref="T:System.DateTime" /> value that represents the date and time that a threaded comment was added in local time.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICommentThreaded.Parent">
      <summary>
            Gets the top-level comment.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICommentThreaded.Replies">
      <summary>
            If this comment is a parent, returns an <see cref="T:GrapeCity.Spreadsheet.ICommentsThreaded" /> collection of <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> objects
            that are children/replies of the specified comment (if any exist). The replies are sorted by time stamp.
            <para>If this comment is a child/reply or a legacy comment, returns an empty collection.</para></summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICommentThreaded.Resolved">
      <summary>
            Gets or sets a boolean value indicating whether the threaded comment is resolved.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICommentThreaded.Next">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object that represents the next threaded comment.
            </summary>
      <remarks>
            If called on a top-level (parent) <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object, it returns a top-level (parent) <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object
            that represents the next comment. Using this method on the last comment on a sheet returns <c>null</c> (not the next comment on the next sheet).
            <para>
            If called on a reply <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object, it returns a reply <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object that represents the next reply of a thread.
            This method works only on one thread. Using this method on the last reply of a thread returns <c>null</c> (not the next top-level comment).
            </para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICommentThreaded.Previous">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object that represents the previous threaded comment.
            </summary>
      <remarks>
            If called on a top-level (parent) <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object, it returns a top-level (parent) <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object
            that represents the previous comment. Using this method on the first comment on a sheet returns <c>null</c> (not the last comment on the previous sheet).
            <para>
            If called on a reply <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object, it returns a reply <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object that represents the previous reply of a thread.
            This method works only on one thread. Using this method on the first reply of a thread returns <c>null</c> (not its top-level comment).
            </para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICommentThreaded.AddReply(System.String)">
      <summary>
            If the comment is a top-level comment, it will add a reply to its replies collection.
            If this comment is a reply, it will add a reply to its <see cref="P:GrapeCity.Spreadsheet.ICommentThreaded.Parent" />'s replies collection.
            </summary>
      <param name="text">The reply's text.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICommentThreaded.Delete">
      <summary>
            Deletes the specified threaded comment and all replies associated with that comment (if any exist).
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICommentThreaded.Text(System.String,System.Int32,System.Nullable{System.Boolean})">
      <summary>
            Sets threaded comment text.
            </summary>
      <param name="text">The text to be added.</param>
      <param name="start">The character number where the added text will be placed.</param>
      <param name="overwrite">
        <c>false</c> to insert the text.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ICommentsThreaded">
      <summary>
            Represents a collection of top-level <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> objects in a worksheet, or a collection of replies in a single threaded comment.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICommentsThreaded.Count">
      <summary>
            Gets an integer value that represents the number of comments in the collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICommentsThreaded.Item(System.Int32)">
      <summary>
            Gets a single threaded comment from the collection.
            </summary>
      <param name="index">The index number for the comment.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ICommentThreaded" /> object contained by the collection.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BuiltInCfRule">
      <summary>
            Represents a built-in conditional formatting rule.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInCfRule.MaxValuesCount">
      <summary>
            Gets the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.
            </summary>
      <value>An integer value represents the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInCfRule.GetValue(System.Int32)">
      <summary>
            Gets a conditional formatting value at the specified index.
            </summary>
      <param name="index">The index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents a conditional formatting value at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInCfRule.SetValue(System.Int32,GrapeCity.Spreadsheet.CfValue)">
      <summary>
            Sets the conditional formatting value.
            </summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> object indicates the conditional formatting value.</param>
      <returns>
        <c>true</c> if the new value is assigned successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInCfRule.CanProcessEmptyValue">
      <summary>
            Determines whether this rule is able to process empty value.
            </summary>
      <returns>
        <c>true</c> if this rule is able to process empty value; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInCfRule.IsMatched(GrapeCity.Spreadsheet.Conditional.MatchData)">
      <summary>
            Determines whether the cell value is matched conditions of this rule.
            </summary>
      <param name="data">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the context data to match.</param>
      <returns>
        <c>true</c> if the cell value is matched conditions of this rule; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInCfRule.ValuesCount">
      <summary>
            Gets the total count of conditional formatting values(s).
            </summary>
      <value>An integer value indicates the total count of conditional formatting values(s).</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Operator">
      <summary>
            Represents the comparison operator.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.Between">
      <summary>
            The value is between the specified range of values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.NotBetween">
      <summary>
            The value is not between the specified range of values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.Equal">
      <summary>
            The value is equal to the parameter value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.DoesNotEqual">
      <summary>
            The value is not equal to the parameter value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.GreaterThan">
      <summary>
            The value is greater than the parameter value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.LessThan">
      <summary>
            The value is less than the parameter value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.GreaterThanOrEqual">
      <summary>
            The value is greater than or equal to the parameter value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.LessThanOrEqual">
      <summary>
            The value is less than or equal to the parameter value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.ContainsText">
      <summary>
            The value contains the specified text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.DoesNotContainsText">
      <summary>
            The value does not contain the specified text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.BeginsWith">
      <summary>
            The value contains the specified text at the beginning.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Operator.EndsWith">
      <summary>
            The value contains the specified text at the end.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ContainsOperator">
      <summary>
            Specifies the text operator used in a function.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ContainsOperator.BeginsWith">
      <summary>
            Begins with a specified value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ContainsOperator.Contains">
      <summary>
            Contains a specified value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ContainsOperator.DoesNotContains">
      <summary>
            Does not contain the specified value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ContainsOperator.EndsWith">
      <summary>
            Ends with the specified value
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatConditionOperator">
      <summary>
            Specifies the operator to use to compare a formula against the value in a cell or, for <see cref="F:GrapeCity.Spreadsheet.FormatConditionOperator.Between" /> and <see cref="F:GrapeCity.Spreadsheet.FormatConditionOperator.NotBetween" /> , to compare two formulas.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.Between">
      <summary>
            The value is between the specified range of values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.Equal">
      <summary>
            The value is equal to the parameter value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.Greater">
      <summary>
            The value is greater than the parameter value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.GreaterEqual">
      <summary>
            The value is greater than or equal to the parameter value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.Less">
      <summary>
            The value is less than the parameter value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.LessEqual">
      <summary>
            The value is less than or equal to the parameter value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.NotBetween">
      <summary>
            The value is not between the specified range of values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionOperator.NotEqual">
      <summary>
            The value is not equal to the parameter value.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TimePeriods">
      <summary>
            Represents a time period which is used in date conditions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.Today">
      <summary>
            Today's date.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.Yesterday">
      <summary>
            Yesterday's date.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.Last7Days">
      <summary>
            A date in the last seven days.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.ThisWeek">
      <summary>
            A date occuring this week.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.LastWeek">
      <summary>
            A date occuring last week.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.LastMonth">
      <summary>
            A date occuring in the last calendar month.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.Tomorrow">
      <summary>
            Tomorrow's date.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.NextWeek">
      <summary>
            A date occuring next week.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.NextMonth">
      <summary>
            A date occuring in the next calendar month.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TimePeriods.ThisMonth">
      <summary>
            A date occuring in this calendar month.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatConditionType">
      <summary>
            Specifies whether the conditional format is based on a cell value or an expression.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.AboveAverageCondition">
      <summary>
            This conditional formatting rule highlights cells that are above or below the average for all values in the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.BlanksCondition">
      <summary>
            This conditional formatting rule highlights cells that are completely blank.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.CellValue">
      <summary>
            This conditional formatting rule highlights cells base on cell value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.ColorScale">
      <summary>
            This conditional formatting rule creates a gradated color scale on the cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.Databar">
      <summary>
            This conditional formatting rule displays a gradated data bar in the range of cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.ErrorsCondition">
      <summary>
            This conditional formatting rule highlights cells with formula errors.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.Expression">
      <summary>
            This conditional formatting rule contains a formula to evaluate.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.IconSet">
      <summary>
            This conditional formatting rule applies icons to cells according to their values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.NoBlanksCondition">
      <summary>
            This conditional formatting rule highlights cells that are not blank.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.NoErrorsCondition">
      <summary>
            This conditional formatting rule highlights cells without formula errors.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.TextString">
      <summary>
            This conditional formatting rule highlights cells base on cell text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.TimePeriod">
      <summary>
            This conditional formatting rule highlights cells containing dates in the specified time period.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.Top10">
      <summary>
            This conditional formatting rule highlights cells whose values fall in the top N or bottom N bracket, as specified.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.UniqueValues">
      <summary>
            This conditional formatting rule highlights cells that contain unique value or duplicated values in the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatConditionType.Custom">
      <summary>
            This is a customized conditional formatting rule.
            </summary>
      <remarks>This value is readonly.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.Average">
      <summary>
            This conditional formatting rule highlights cells that are above or below the average for all values in the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.BeginsWith">
      <summary>
            This conditional formatting rule highlights cells in the range that begin with the given text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsBlank">
      <summary>
            This conditional formatting rule highlights cells that are completely blank.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsNoBlank">
      <summary>
            This conditional formatting rule highlights cells that are not blank.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.CellIs">
      <summary>
            This conditional formatting rule compares a cell value to a formula calculated result, using an operator.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsErrors">
      <summary>
            This conditional formatting rule highlights cells with formula errors.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsText">
      <summary>
            This conditional formatting rule highlights cells containing given text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.DuplicateValues">
      <summary>
            This conditional formatting rule highlights duplicated values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.EndsWith">
      <summary>
            This conditional formatting rule highlights cells ending with given text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.Expression">
      <summary>
            This conditional formatting rule contains a formula to evaluate.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.TimePeriod">
      <summary>
            This conditional formatting rule highlights cells containing dates in the specified time period.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsNoErrors">
      <summary>
            This conditional formatting rule highlights cells without formula errors.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.ContainsNoText">
      <summary>
            This conditional formatting rule highlights cells that do not contain given text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.Top10">
      <summary>
            This conditional formatting rule highlights cells whose values fall in the top N or bottom N bracket, as specified.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ClassicCfRuleType.UniqueValues">
      <summary>
            This conditional formatting rule highlights unique values in the range.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CfRule" /> class.
            </summary>
      <param name="stylish">
        <c>true</c> indicates the conditional formatting rule will affect to the cell's formatting;
            otherwise, the conditional formatting rule will have independent behavior for the control.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.#ctor(GrapeCity.Spreadsheet.CfRule,GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.FormulaEngine)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CfRule" /> class.
            </summary>
      <param name="originRule">A <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule indicates the rule will be cloned.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfRule.ValuesCount">
      <summary>
            Gets the total count of conditional formatting values(s).
            </summary>
      <value>An integer value indicates the total count of conditional formatting values(s).</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.SetFirstPriority">
      <summary>
            Sets the priority of <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule as highest.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.SetLastPriority">
      <summary>
            Sets the priority of <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule as lowest.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.IncreasePriority">
      <summary>
            Increases the priority of <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.DecreasePriority">
      <summary>
            Decreases the priority of <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.Delete">
      <summary>
            Removes this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule from worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.ReplaceWith(GrapeCity.Spreadsheet.CfRule)">
      <summary>
            Replaces this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule with the specified <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule.
            </summary>
      <param name="rule">The new <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule to replace.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.AutoGenerateValues">
      <summary>
            Generates conditional formatting value(s) of this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> automatically.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.ApplyFormat(GrapeCity.Spreadsheet.Conditional.MatchData@,GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>
            Applies the format of this conditional formatting rule to the format result.
            </summary>
      <param name="matchData">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the context matching data.</param>
      <param name="result">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style formatting result.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.CanProcessEmptyValue">
      <summary>
            Determines whether this rule is able to process empty value.
            </summary>
      <returns>
        <c>true</c> if this rule is able to process empty value; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfRule.MaxValuesCount">
      <summary>
            Gets the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.
            </summary>
      <value>An integer value represents the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.GetValue(System.Int32)">
      <summary>
            Gets a conditional formatting value at the specified index.
            </summary>
      <param name="index">The index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents a conditional formatting value at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.SetValue(System.Int32,GrapeCity.Spreadsheet.CfValue)">
      <summary>
            Sets the conditional formatting value.
            </summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> object indicates the conditional formatting value.</param>
      <returns>
        <c>true</c> if the new value is assigned successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfRule.StopIfTrue">
      <summary>
            Gets a value indicating whether all next rules will be suspended if this rule is applied.
            </summary>
      <value>
        <c>true</c> if all next rules will be suspended if this rule is applied; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfRule.IsMatched(GrapeCity.Spreadsheet.Conditional.MatchData)">
      <summary>
            Determines whether the cell value is matched conditions of this rule.
            </summary>
      <param name="data">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the context data to match.</param>
      <returns>
        <c>true</c> if the cell value is matched conditions of this rule; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromPercentile(System.Double)">
      <summary>
            Create a percentile conditional formatting value.
            </summary>
      <param name="value">A double value indicates the percentile value. Value range is between 0..100.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the percentile conditional formatting value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromPercent(System.Double)">
      <summary>
            Create a percentage conditional formatting value.
            </summary>
      <param name="value">A double value indicates the percentage value. Value range is between 0..100.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the percentage conditional formatting value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromPercent(System.String,GrapeCity.CalcEngine.FormulaEngine)">
      <summary>
            Create a percentage conditional formatting value.
            </summary>
      <param name="formula">A string value indicates the formula text.</param>
      <param name="engine">The formula engine.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the percentage conditional formatting value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromFormula(System.String,GrapeCity.Spreadsheet.CfValueType,GrapeCity.CalcEngine.FormulaEngine)">
      <summary>
            Create a conditional formatting value using the specified formula.
            </summary>
      <param name="formula">A string value indicates the formula text.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the conditional formatting value.</returns>
      <param name="engine">The formula engine.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromPrimitiveValue(System.Double,GrapeCity.Spreadsheet.CfValueType)">
      <summary>
            Create a conditional formatting value using the specified numeric value.
            </summary>
      <param name="value">A double value indicates the numeric value.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the conditional formatting value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.FromPrimitiveValue(System.String)">
      <summary>
            Create a conditional formatting value using the specified string value.
            </summary>
      <param name="value">A double value indicates the string value.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents the conditional formatting value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.ToGreaterThanOnly(GrapeCity.Spreadsheet.CfValue@)">
      <summary>
            Ensures that the <see cref="T:GrapeCity.Spreadsheet.CfValue" /> will use greater-than when applying conditional formatting rules.
            </summary>
      <param name="cfValue">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value indicates the origin conditional formatting value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.IsUndefined">
      <summary>
            Gets a boolean value indicating whether this <see cref="T:GrapeCity.Spreadsheet.CfValue" /> is undefined.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.CfValue" /> is undefined; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.Equals(GrapeCity.Spreadsheet.CfValue)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfValue.ValueType">
      <summary>
            Gets the type of this conditional formatting value.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CfValueType" /> value represent the value type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfValue.GreaterThanOrEquals">
      <summary>
            Gets a boolean value indicates whether this <see cref="T:GrapeCity.Spreadsheet.CfValue" /> will be compared using greater than or equals operator.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.CfValue" /> will be compared using greater than or equals operator; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfValue.GetFormula(GrapeCity.CalcEngine.FormulaEngine)">
      <summary>
            Gets the formula text of this <see cref="T:GrapeCity.Spreadsheet.CfValue" />.
            </summary>
      <param name="engine">The formula engine.</param>
      <returns>A <see cref="T:System.String" /> value represents the formula text of this <see cref="T:GrapeCity.Spreadsheet.CfValue" />.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfValue.Value">
      <summary>
            Gets an <see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> object represent the primitive value of this <see cref="T:GrapeCity.Spreadsheet.CfValue" />.
            </summary>
      <value>An <see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> object represent the primitive value of this <see cref="T:GrapeCity.Spreadsheet.CfValue" />.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CfValueType">
      <summary>
            Specifies the types of condition values that can be used.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.None">
      <summary>
            No conditional value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Numeric">
      <summary>
            Number is used.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Percent">
      <summary>
            Percentage is used.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Formula">
      <summary>
            Formula is used.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Percentile">
      <summary>
            Percentile is used.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Max">
      <summary>
            Highest value from the list of values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.Min">
      <summary>
            Lowest value from the list of values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.AutoMin">
      <summary>
            The shortest data bar is proportional to the minimum value in the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfValueType.AutoMax">
      <summary>
            The longest data bar is proportional to the maximum value in the range.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ClassicCfRule">
      <summary>
            Represents a classic conditional formatting rule.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ClassicCfRule.#ctor(GrapeCity.Spreadsheet.ClassicCfRuleType,GrapeCity.Spreadsheet.DifferentialFormat)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.ClassicCfRule" /> class.
            </summary>
      <param name="ruleType">A <see cref="T:GrapeCity.Spreadsheet.ClassicCfRuleType" /> value indicates the type of the rule.</param>
      <param name="formatting">A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object indicates the applied formatting of the rule.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.Formatting">
      <summary>
            Gets the formatting of this conditional formatting rule.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the formatting of this conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.RuleType">
      <summary>
            Gets the type of this <see cref="T:GrapeCity.Spreadsheet.ClassicCfRule" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ClassicCfRuleType" /> value represents the type of this <see cref="T:GrapeCity.Spreadsheet.ClassicCfRule" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.Operator">
      <summary>
            Gets or sets the operator to compare with cell value.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Operator" /> value represents the operator to compare with cell value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.DateOperator">
      <summary>
            Gets or sets the date operator used in the format condition.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.TimePeriods" /> value represents the date operator used in the format condition.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.Bottom">
      <summary>
            Gets or sets a value indicates whether a "top/bottom n" rule is a "bottom n" rule.
            </summary>
      <value>
        <c>true</c> if conditional formatting is applied to cells whose value is in the bottom end of the range; otherwise, <c>false</c>.</value>
      <remarks>This attribute is ignored if type is not equal to top10.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.AboveAverage">
      <summary>
            Gets or sets a value that specifies how the conditional formatting rule is applied.
            </summary>
      <value>
        <c>true</c> if conditional formatting is applied to cells whose value is above average of the range; otherwise, <c>false</c>.</value>
      <remarks>This attribute is ignored if type is not equal to aboveAverage.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.EqualsIncluded">
      <summary>
            Gets or sets a value specifies how the conditional formatting rule is applied.
            </summary>
      <value>
        <c>true</c> if conditional formatting is applied to cells whose value is equal to or above the average value of cells in the range; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.StdDev">
      <summary>
            Gets or sets the standard deviations which is used by <see cref="F:GrapeCity.Spreadsheet.ClassicCfRuleType.Average" /> conditional formatting rule.
            </summary>
      <value>An integer value represents the number of standard deviations above or below the average to format in the conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.Rank">
      <summary>
            Gets or sets the rank which is used by <see cref="F:GrapeCity.Spreadsheet.ClassicCfRuleType.Top10" /> conditional formatting rule.
            </summary>
      <value>An integer value represents the number of value to format in the conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ClassicCfRule.IsPercent">
      <summary>
            Gets or sets a value indicating whether a "top/bottom n" rule is a "top/bottom n percent" rule.
            </summary>
      <value>
        <c>true</c> if a "top/bottom n" rule is a "top/bottom n percent" rule; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ClassicCfRule.ApplyFormat(GrapeCity.Spreadsheet.Conditional.MatchData@,GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>
            Applies the format of this conditional formatting rule to the format result.
            </summary>
      <param name="matchData">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the context matching data.</param>
      <param name="result">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style formatting result.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ClassicCfRule.Clone(GrapeCity.Spreadsheet.Conditional.ConditionalObjects{GrapeCity.Spreadsheet.CfRule,GrapeCity.Spreadsheet.ConditionalFormatting,GrapeCity.Spreadsheet.CfExecutedResult}.ConditionalObject,GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.FormulaEngine)">
      <summary>
            Creates a new <see cref="!:TItem" /> object that is a copy of the current <see cref="!:TItem" /> instance.
            </summary>
      <param name="targetConditionalObject">A <see cref="T:GrapeCity.Spreadsheet.Conditional.ConditionalObject" /> object indicates the target conditional object which hold this <see cref="!:TItem" />.</param>
      <param name="originEngine">The current formula engine.</param>
      <param name="targetEngine">The target formula engine which this conditional item is cloned to.</param>
      <returns>A new <see cref="!:TItem" /> object that is a copy of this <see cref="!:TItem" /> instance.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.Create2ColorScaleCfRule">
      <summary>
            Creates a 2-color scales conditional formatting rule.
            </summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ColorScaleCfRule" /> instance represents the 2-color scales conditional formatting rule.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.Create3ColorScaleCfRule">
      <summary>
            Creates a 3-color scales conditional formatting rule.
            </summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ColorScaleCfRule" /> instance represents the 3-color scales conditional formatting rule.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.Clone(GrapeCity.Spreadsheet.Conditional.ConditionalObjects{GrapeCity.Spreadsheet.CfRule,GrapeCity.Spreadsheet.ConditionalFormatting,GrapeCity.Spreadsheet.CfExecutedResult}.ConditionalObject,GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.FormulaEngine)">
      <summary>
            Creates a new <see cref="!:TItem" /> object that is a copy of the current <see cref="!:TItem" /> instance.
            </summary>
      <param name="targetConditionalObject">A <see cref="T:GrapeCity.Spreadsheet.Conditional.ConditionalObject" /> object indicates the target conditional object which hold this <see cref="!:TItem" />.</param>
      <param name="originEngine">The current formula engine.</param>
      <param name="targetEngine">The target formula engine which this conditional item is cloned to.</param>
      <returns>A new <see cref="!:TItem" /> object that is a copy of this <see cref="!:TItem" /> instance.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorScaleCfRule.ValuesCount">
      <summary>
            Gets the total count of conditional formatting values(s).
            </summary>
      <value>An integer value indicates the total count of conditional formatting values(s).</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorScaleCfRule.MaxValuesCount">
      <summary>
            Gets the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.
            </summary>
      <value>An integer value represents the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.GetValue(System.Int32)">
      <summary>
            Gets a conditional formatting value at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents a conditional formatting value at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.SetValue(System.Int32,GrapeCity.Spreadsheet.CfValue)">
      <summary>
            Sets the conditional formatting value at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> object indicates the conditional formatting value.</param>
      <returns>
        <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
      <returns>
        <c>true</c> if the new value is assigned successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.GetColor(System.Int32)">
      <summary>
            Gets the color at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the color at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.SetColor(System.Int32,GrapeCity.Spreadsheet.Color)">
      <summary>
            Sets the color at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="color">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the color.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorScaleCfRule.ApplyFormat(GrapeCity.Spreadsheet.Conditional.MatchData@,GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>
            Applies the format of this conditional formatting rule to the format result.
            </summary>
      <param name="matchData">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the context matching data.</param>
      <param name="result">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style formatting result.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ConditionalFormatting">
      <summary>
            Represents a conditional formatting which apply a set of rules to a set of range references.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarCfRule">
      <summary>
            Represents the data bar conditional formatting rule.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DatabarCfRule.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.DatabarCfRule" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DatabarCfRule.Clone(GrapeCity.Spreadsheet.Conditional.ConditionalObjects{GrapeCity.Spreadsheet.CfRule,GrapeCity.Spreadsheet.ConditionalFormatting,GrapeCity.Spreadsheet.CfExecutedResult}.ConditionalObject,GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.FormulaEngine)">
      <summary>
            Creates a new <see cref="!:TItem" /> object that is a copy of the current <see cref="!:TItem" /> instance.
            </summary>
      <param name="targetConditionalObject">A <see cref="T:GrapeCity.Spreadsheet.Conditional.ConditionalObject" /> object indicates the target conditional object which hold this <see cref="!:TItem" />.</param>
      <param name="originEngine">The current formula engine.</param>
      <param name="targetEngine">The target formula engine which this conditional item is cloned to.</param>
      <returns>A new <see cref="!:TItem" /> object that is a copy of this <see cref="!:TItem" /> instance.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.MaxValuesCount">
      <summary>
            Gets the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.
            </summary>
      <value>An integer value represents the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.FillColor">
      <summary>
            Gets or sets the fill color of the data bar.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the fill color of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.BorderColor">
      <summary>
            Gets or sets the border color of the data bar.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the border color of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.NegativeFillColor">
      <summary>
            Gets or sets the negative fill color of the data bar.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the negative fill color of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.NegativeBorderColor">
      <summary>
            Gets or sets the negative border color of the data bar.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the negative border color of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.AxisColor">
      <summary>
            Gets or sets the axis color of the data bar.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the axis color of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.Direction">
      <summary>
            Gets or sets the direction of the data bar.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DatabarDirection" /> value represents the direction of the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.AxisPosition">
      <summary>
            Gets or sets the axis position for the data bar.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DatabarAxisPosition" /> value represents the axis position for the data bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.MinLength">
      <summary>
            Gets or sets an integer value which indicates the length of the shortest data bar in this conditional formatting range,
            expressed as a percentage of the width of the cell containing the data bar.
            </summary>
      <value>An integer value represents the length of the shortest data bar in this conditional formatting range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.MaxLength">
      <summary>
            Gets or sets an integer value which indicates the length of the longest data bar in this conditional formatting range,
            expressed as a percentage of the width of the cell being formatted
            </summary>
      <value>An integer value represents the length of the longest data bar in this conditional formatting range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.ShowValue">
      <summary>
            Gets or sets a value indicating whether the cells in the conditional formatting range display both the data bar and the numeric value or only the data bar.
            </summary>
      <value>
        <c>true</c> if the cells in the conditional formatting range display both the data bar and the numeric value; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.ShowBorder">
      <summary>
            Gets or sets a value indicating whether the data bar has a border.
            </summary>
      <value>
        <c>true</c> if the data bar has a border; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.Gradient">
      <summary>
            Gets or sets a value indicating whether the <see cref="T:GrapeCity.Spreadsheet.DatabarCfRule" /> has a gradient fill.
            </summary>
      <value>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.DatabarCfRule" /> has a gradient fill; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.UseNegativeBorderColor">
      <summary>
            Gets or sets a value that indicates whether the negative border color is used to paint the border for the negative value.
            </summary>
      <value>
        <c>true</c> if the negative border color is used to paint the border for the negative value; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DatabarCfRule.UseNegativeFillColor">
      <summary>
            Gets or sets a value that indicates whether the negative fill color is used to paint the negative value.
            </summary>
      <value>
        <c>true</c> if the negative fill color is used to paint the negative value; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DatabarCfRule.SetValue(System.Int32,GrapeCity.Spreadsheet.CfValue)">
      <summary>
            Sets the conditional formatting value.
            </summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> object indicates the conditional formatting value.</param>
      <returns>
        <c>true</c> if the new value is assigned successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DatabarCfRule.AutoGenerateValues">
      <summary>
            Generates conditional formatting value(s) of this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> automatically.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarDirection">
      <summary>
            Specifies a value indicating whether the axis appears from right to left.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarDirection.Context">
      <summary>
            The direction of the axis is inherited from the current context.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarDirection.LeftToRight">
      <summary>
            The axis appears from left to right. This is the default.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarDirection.RightToLeft">
      <summary>
            The axis appears from right to left.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DatabarAxisPosition">
      <summary>
            Represents the axis position for the data bar.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarAxisPosition.Automatic">
      <summary>
            Indicates that the axis position for the data bar is calculated automatically.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarAxisPosition.Middle">
      <summary>
            Indicates that the axis position for the data bar is the midpoint of the cell.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DatabarAxisPosition.None">
      <summary>
            Indicates that there is no axis for the data bar.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatConditions">
      <summary>
            Represents the conditional formats associated with the specified <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatConditions.Add(GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.CfRule,System.Boolean)">
      <summary>
            Applies new <see cref="!:TItem" /> item for the specified cell range.
            </summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> indicates the cell range to apply new <see cref="T:GrapeCity.Spreadsheet.CfRule" /> item.</param>
      <param name="item">The <see cref="T:GrapeCity.Spreadsheet.CfRule" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.CfRule" /> object is applied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatConditions.GetDataRestriction(GrapeCity.Spreadsheet.Worksheet,GrapeCity.CalcEngine.Expression,GrapeCity.Spreadsheet.CfRule)">
      <summary>
            Determines whether the specified expression can be used for this <see cref="T:GrapeCity.Spreadsheet.CfValue" />.
            </summary>
      <param name="worksheet">The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object which contains the data validation.</param>
      <param name="expression">An <see cref="T:GrapeCity.CalcEngine.Expression" /> object indicates the expression to check.</param>
      <param name="rule">A <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rule which use the specified expression.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataRestrictions" /> value represents the restriction reason of the specified expression.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatConditions.GetDataRestriction(GrapeCity.Spreadsheet.Worksheet,GrapeCity.CalcEngine.Expression,GrapeCity.Spreadsheet.FormatConditionType)">
      <summary>
            Determines whether the specified expression can be used for this <see cref="T:GrapeCity.Spreadsheet.CfValue" />.
            </summary>
      <param name="worksheet">The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object which contains the data validation.</param>
      <param name="expression">An <see cref="T:GrapeCity.CalcEngine.Expression" /> object indicates the expression to check.</param>
      <param name="ruleType">A <see cref="T:GrapeCity.Spreadsheet.FormatConditionType" /> ruleType which type of the rule use the specified expression.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataRestrictions" /> value represents the restriction reason of the specified expression.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatConditions.GrapeCity#Spreadsheet#IO#Exchangeable#IExtension{GrapeCity#Spreadsheet#Worksheet}#Key">
      <summary>
            Gets the indentifier of the extension.
            </summary>
      <value>A <see cref="T:System.Guid" /> value {78C0D931-6437-407d-A8EE-F0AAD7539E65} represents the extension's identifier.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatConditions.GrapeCity#Spreadsheet#IO#Exchangeable#IExtension{GrapeCity#Spreadsheet#Worksheet}#IsRequiredExport(GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,System.Guid)">
      <summary>
            Gets a value indicating whether the extension requires to export its data.
            </summary>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
      <value>
        <c>true</c> if the extension requires to export its data; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CfExecutedResult">
      <summary>
            Represents the matched conditional formatting result.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfExecutedResult.Format">
      <summary>
            Gets the applied formatting of <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rules in the cell.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> value represents the applied formatting.</value>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfExecutedResult.OverrideFont">
      <summary>
            Gets the font that will override current font settings of cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.FunctionVisualizer">
      <summary>
            Gets the visualization function in the cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.Icon">
      <summary>
            Gets the conditional formatting icon.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value represents the conditional formatting icon.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.IconSetRule">
      <summary>
            Gets the icon set conditional formatting rule.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IconSetCfRule" /> object represents the icon set conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.DatabarLength">
      <summary>
            Gets the relative length of the data bar.
            </summary>
      <value>An double value represents length of the data bar.</value>
      <remarks>Value is between 0..1. <see cref="F:System.Double.NaN" /> means the data bar doesn't appear.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.DatabarAxisPosition">
      <summary>
            Gets the data bar's relative axis position.
            </summary>
      <value>A <see cref="T:System.Double" /> value represents the data bar's relative axis position.</value>
      <remarks>Value is between 0..1. <see cref="F:System.Double.NaN" /> means the axis doesn't appear.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.DatabarRule">
      <summary>
            Gets the data bar conditional formatting rule.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.DatabarCfRule" /> object represents the data bar conditional formatting rule.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.MatchData">
      <summary>
            Gets the conditional format matching data after processed conditional formatting rule(s).
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value represents the conditional format matching data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfExecutedResult.RuleCount">
      <summary>
            Gets the total number of matched conditional formatting rules which requires painting above cell surface.
            </summary>
      <value>An integer value represents the total number of matched conditional formatting rules.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfExecutedResult.GetMatchedRule(System.Int32,System.Int32@)">
      <summary>
            Gets the matched conditional formatting rule at the specified position.
            </summary>
      <param name="index">An integer value indicates the position of the conditional formatting rule.</param>
      <param name="rangeIndex">An integer value represents the index of the conditional formatting rule's container.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfRule" /> object represents the matched conditional formatting rule.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfExecutedResult.ClearPrintingCFs">
      <summary>
            Clears all conditional formatting data.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IconSetCfRule">
      <summary>
            Class IconSetConditionalFormattingRule. This class cannot be inherited.
            </summary>
      <seealso cref="T:GrapeCity.Spreadsheet.ClassicCfRule" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.Clone(GrapeCity.Spreadsheet.Conditional.ConditionalObjects{GrapeCity.Spreadsheet.CfRule,GrapeCity.Spreadsheet.ConditionalFormatting,GrapeCity.Spreadsheet.CfExecutedResult}.ConditionalObject,GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.FormulaEngine)">
      <summary>
            Creates a new <see cref="!:TItem" /> object that is a copy of the current <see cref="!:TItem" /> instance.
            </summary>
      <param name="targetConditionalObject">A <see cref="T:GrapeCity.Spreadsheet.Conditional.ConditionalObject" /> object indicates the target conditional object which hold this <see cref="!:TItem" />.</param>
      <param name="originEngine">The current formula engine.</param>
      <param name="targetEngine">The target formula engine which this conditional item is cloned to.</param>
      <returns>A new <see cref="!:TItem" /> object that is a copy of this <see cref="!:TItem" /> instance.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.#ctor(GrapeCity.Spreadsheet.IconSetType)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IconSetCfRule" /> class.
            </summary>
      <param name="iconSet">An <see cref="T:GrapeCity.Spreadsheet.IconSetType" /> value represents the icon set type.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.Reverse">
      <summary>
            Reverses the current order of the icons in this icon set
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.IsReversed">
      <summary>
             Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IconSetCfRule" /> is reversed.
             </summary>
      <value>
        <c>true</c> if the default order of the icons in this icon set is reversed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IconSetCfRule.ShowIconOnly">
      <summary>
            Gets or sets a value indicating whether to show icon only.
            </summary>
      <value>
        <c>true</c> to show icon only; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IconSetCfRule.IconSet">
      <summary>
            Gets or sets the icon set of this <see cref="T:GrapeCity.Spreadsheet.IconSetCfRule" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.IconSetType" /> value represents the icon set of this <see cref="T:GrapeCity.Spreadsheet.IconSetCfRule" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IconSetCfRule.MaxValuesCount">
      <summary>
            Gets the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.
            </summary>
      <value>An integer value represents the maximum values this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> can supports.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.GetValue(System.Int32)">
      <summary>
            Gets a conditional formatting value at the specified index.
            </summary>
      <param name="index">The index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> value represents a conditional formatting value at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.SetValue(System.Int32,GrapeCity.Spreadsheet.CfValue)">
      <summary>
            Sets the conditional formatting value.
            </summary>
      <param name="index">An integer value indicates the index of conditional formatting value.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.CfValue" /> object indicates the conditional formatting value.</param>
      <returns>
        <c>true</c> if the new value is assigned successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.AutoGenerateValues">
      <summary>
            Generates conditional formatting value(s) of this <see cref="T:GrapeCity.Spreadsheet.CfRule" /> automatically.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.GetIconsCount">
      <summary>
            Gets the icons count.
            </summary>
      <returns>An <see cref="T:System.Int32" /> value represents the icons count.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.GetIcon(System.Int32)">
      <summary>
            Gets icon at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of icon.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value represents icon at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IconSetCfRule.ValuesCount">
      <summary>
            Gets the total count of conditional formatting values(s).
            </summary>
      <value>An integer value indicates the total count of conditional formatting values(s).</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconSetCfRule.SetIcon(System.Int32,GrapeCity.Spreadsheet.CfIcon)">
      <summary>
            Sets an icon at the specified index
            </summary>
      <param name="index">An integer value indicates the index of icon.</param>
      <param name="icon">A <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value indicates the icon to be set.</param>
      <returns>
        <c>true</c> if the icon is set, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CfIcon">
      <summary>
            Represents a single icon of an icon set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CfIcon.NoIcon">
      <summary>
            No icon.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.#ctor(GrapeCity.Spreadsheet.IconSetType,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> struct.
            </summary>
      <param name="iconSet">An <see cref="T:GrapeCity.Spreadsheet.IconSetType" /> value represents the icon set type.</param>
      <param name="iconId">An integer value represents the icon to be used.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.IsNoIcon">
      <summary>
            Determines whether this icon is <see cref="F:GrapeCity.Spreadsheet.CfIcon.NoIcon" />.
            </summary>
      <returns>
        <c>true</c> if this icon is <see cref="F:GrapeCity.Spreadsheet.CfIcon.NoIcon" />; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfIcon.IconSet">
      <summary>
            Gets the icon set type.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IconSetType" /> value represents the icon set type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CfIcon.IconId">
      <summary>
            Gets an integer value represents the icon to be used.
            </summary>
      <value>An integer value represents the icon to be used.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.Equals(GrapeCity.Spreadsheet.CfIcon)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.op_Equality(GrapeCity.Spreadsheet.CfIcon,GrapeCity.Spreadsheet.CfIcon)">
      <summary>
            Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> values are equal.
            </summary>
      <param name="icon1">The first value to compare.</param>
      <param name="icon2">The second value to compare.</param>
      <returns>true if <paramref name="icon1" /> and <paramref name="icon2" /> are equal; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.op_Inequality(GrapeCity.Spreadsheet.CfIcon,GrapeCity.Spreadsheet.CfIcon)">
      <summary>
            Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> values are not equal.
            </summary>
      <param name="icon1">The first value to compare.</param>
      <param name="icon2">The second value to compare.</param>
      <returns>true if <paramref name="icon1" /> and <paramref name="icon2" /> are not equal; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CfIcon.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeArrows">
      <summary>
            Indicates a set of three colored arrow icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeArrowsGray">
      <summary>
            Indicates a set of three gray arrow icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeFlags">
      <summary>
            Indicates a set of three flag icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeTrafficLights1">
      <summary>
            Indicates a set of three unrimmed traffic light icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeTrafficLights2">
      <summary>
            Indicates a set of three rimmed traffic light icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeSigns">
      <summary>
            Indicates a set of three sign icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeSymbols">
      <summary>
            Indicates a set of three circled symbol icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeSymbols2">
      <summary>
            Indicates a set of three uncircled symbol icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FourArrows">
      <summary>
            Indicates a set of four colored arrow icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FourArrowsGray">
      <summary>
            Indicates a set of four gray arrow icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FourRedToBlack">
      <summary>
            Indicates a set of circled icons from red to black.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FourRating">
      <summary>
            Indicates a set of four rating icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FourTrafficLights">
      <summary>
            Indicates a set of four traffic light icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FiveArrows">
      <summary>
            Indicates a set of five colored arrow icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FiveArrowsGray">
      <summary>
            Indicates a set of five gray arrow icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FiveRating">
      <summary>
            Indicates a set of five rating icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FiveQuarters">
      <summary>
            Indicates a set of five quarter icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeStars">
      <summary>
            Indicates a set of three star icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.ThreeTriangles">
      <summary>
            Indicates a set of three triangle icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.FiveBoxes">
      <summary>
            Indicates a set of five box icons.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IconSetType.Custom">
      <summary>
            Indicates a set of custom icons.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.ConditionalItem.Priority">
      <summary>
            Gets or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.
            </summary>
      <value>The priority value of the conditional formatting rule.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObject.InvalidateUI">
      <summary>
            Invalidates whe whole cellrange(s) which is coverred by this <see cref="T:GrapeCity.Spreadsheet.ConditionalFormatting" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.ConditionalObject.ReferenceCount">
      <summary>
            Gets the total number of references.
            </summary>
      <value>An integer value represents the total number of references.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObject.GetReference(System.Int32)">
      <summary>
            Gets the range reference at the specified index.
            </summary>
      <param name="index">An integer value indicates the reference index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the reference at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.MatchData.Worksheet">
      <summary>
            Gets the context worksheet.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Conditional.MatchData.Worksheet" /> object indicates the context worksheet.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.MatchData.EvaluationContext">
      <summary>
            Gets The evaluation context.
            </summary>
      <value>The evaluation context.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.MatchData.CellValue">
      <summary>
            Gets an <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object represents the cell value.
            </summary>
      <value>An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object represents the cell value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.MatchData.CellRawValue">
      <summary>
            Gets an <see cref="T:System.Object" /> instance represents the origin cell value.
            </summary>
      <value>An <see cref="T:System.Object" /> instance represents the origin value.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.MatchData.GetLightweightValue(System.Int32)">
      <summary>
            Gets the corresponding expression cell view of the specified conditional formatting value.
            </summary>
      <param name="valueIndex">An integer value indicates the index of conditional formatting value.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ExpressionViewCell" /> object represents the expression cell view.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3">
      <summary>
            Represents the conditional objects associated with the specified <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Execute(System.Int32,System.Int32,System.Object)">
      <summary>
            Gets the affected result after applied all <see cref="T:GrapeCity.Spreadsheet.CfRule" /> rules in the specified cell.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="contextData">The context data which is used as replacement of cell value to execute.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CfExecutedResult" /> value represents the the affected result after applied all rules.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.GetFilteringMask(System.Object,System.Object@)">
      <summary>
            Gets the value from <paramref name="contextData" /> to process.
            </summary>
      <param name="contextData">An <see cref="T:System.Object" /> instance indicates the context data.</param>
      <param name="validatedValue">An <see cref="T:System.Object" /> instance represents the validated value.</param>
      <returns>An integer value represents the mask to filter splittable items.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.FindSplittableObject(GrapeCity.Spreadsheet.Reference@)">
      <summary>
            Finds the conditional object which covers the specified range.
            </summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value indicates the specified range.</param>
      <returns>An integer value represents the conditional object index. -1 means there is no conditional object found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.FindSplittableObject(GrapeCity.CalcEngine.RangeReference@)">
      <summary>
            Finds the conditional object which covers the specified range.
            </summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value indicates the specified range.</param>
      <returns>An integer value represents the conditional object index. -1 means there is no conditional object found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.FindSplittableObject(GrapeCity.Spreadsheet.Reference[])">
      <summary>
            Finds the conditional object which covers the specified ranges.
            </summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.CalcEngine.RangeReference" /> values indicates the specified ranges.</param>
      <returns>An integer value represents the conditional object index. -1 means there is no conditional object found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.FindSplittableObject(GrapeCity.CalcEngine.RangeReference[])">
      <summary>
            Finds the conditional object which covers the specified ranges.
            </summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.CalcEngine.RangeReference" /> values indicates the specified ranges.</param>
      <returns>An integer value represents the conditional object index. -1 means there is no conditional object found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Add(GrapeCity.Spreadsheet.Reference,`0,System.Boolean)">
      <summary>
            Applies new <see cref="!:TItem" /> item for the specified cell range.
            </summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the cell range to apply new <see cref="!:TItem" /> item.</param>
      <param name="item">The <see cref="!:TItem" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="!:TItem" /> object is applied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Add(GrapeCity.CalcEngine.RangeReference,`0,System.Boolean)">
      <summary>
             Applies new <see cref="!:TItem" /> item for the specified cell range.
            <para>Obsolete. This function is deprecated, please use other overload (with Reference argument) instead.</para></summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the cell range to apply new <see cref="!:TItem" /> item.</param>
      <param name="item">The <see cref="!:TItem" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="!:TItem" /> object is applied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Add(GrapeCity.Spreadsheet.Reference[],`0,System.Boolean)">
      <summary>
            Applies new <see cref="!:TItem" /> item for the specified cell ranges.
            </summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the cell ranges to apply new <see cref="!:TItem" /> item.</param>
      <param name="item">The <see cref="!:TItem" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="!:TItem" /> object is applied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Add(GrapeCity.CalcEngine.RangeReference[],`0,System.Boolean)">
      <summary>
            Applies new <see cref="!:TItem" /> item for the specified cell ranges.
            </summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the cell ranges to apply new <see cref="!:TItem" /> item.</param>
      <param name="item">The <see cref="!:TItem" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="!:TItem" /> object is applied successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Clear">
      <summary>
            Deletes all conditional objects.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Deletes all conditional objects in the specified range reference.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Clear(GrapeCity.Spreadsheet.Reference[])">
      <summary>
            Deletes all conditional objects in the specified range references.
            </summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> indicates the cell range to clear.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.DumpConditions(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets all conditions which belong to the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of the cell range.</param>
      <param name="column">An integer value indicates the left column index of the cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of the cell range.</param>
      <param name="column2">An integer value indicates the right column index of the cell range.</param>
      <returns>An array of <see cref="T:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Condition" /> represents all conditions of the specified cell range.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalObject.Remove">
      <summary>
            Removes this <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> from its owner <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            <para>
            Obsolete. Remove is deprecated, please use Delete instead.
            </para></summary>
      <remarks>This method is deprecated</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalObject.Delete">
      <summary>
            Removes this <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> from its owner <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalItem.Clone(GrapeCity.Spreadsheet.Conditional.ConditionalObjects{`0,`1,`2}.ConditionalObject,GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.FormulaEngine)">
      <summary>
            Creates a new <see cref="!:TItem" /> object that is a copy of the current <see cref="!:TItem" /> instance.
            </summary>
      <param name="targetConditionalObject">A <see cref="T:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalObject" /> object indicates the target conditional object which hold this <see cref="!:TItem" />.</param>
      <param name="originEngine">The current formula engine.</param>
      <param name="targetEngine">The target formula engine which this conditional item is cloned to.</param>
      <returns>A new <see cref="!:TItem" /> object that is a copy of this <see cref="!:TItem" /> instance.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalItem.Clone">
      <summary>
            Creates a new <see cref="!:TItem" /> object that is a copy of the current <see cref="!:TItem" /> instance.
            </summary>
      <param name="targetConditionalObject">A <see cref="T:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalObject" /> object indicates the target conditional object which hold this <see cref="!:TItem" />.</param>
      <returns>A new <see cref="!:TItem" /> object that is a copy of this <see cref="!:TItem" /> instance.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.ConditionalItem.Apply(GrapeCity.Spreadsheet.Conditional.MatchData@,`2@)">
      <summary>
            Applies settings of this matched item to the specified <see cref="!:TExecutedResult" /> value.
            </summary>
      <param name="matchingData">A <see cref="T:GrapeCity.Spreadsheet.Conditional.MatchData" /> value indicates the matching data.</param>
      <param name="result">A <see cref="!:TExecutedResult" /> value indicates the executed result.</param>
      <returns>
        <c>true</c> if other next items should be stopped executing, <c>false</c> otherwise.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Condition.Item">
      <summary>
            Gets the <see cref="!:TItem" /> object.
            </summary>
      <value>A <see cref="!:TItem" /> object represents the splittable item.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Condition.Container">
      <summary>
            Gets the container object which contains the specified item by this <see cref="T:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Condition" />.
            </summary>
      <value>A <see cref="!:TObject" /> object represents the container.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.Condition.References">
      <summary>
            Gets the range over which the conditional formatting rule apply.
            </summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> array indicates the range over which the conditional formatting rule apply.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Conditional.ConditionalObjects`3.IsAvailable(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets a boolean value indicating whether the is an item in the specified range.
            </summary>
      <param name="row">An integer value indicates the top row index of the cell range.</param>
      <param name="column">An integer value indicates the left column index of the cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of the cell range.</param>
      <param name="column2">An integer value indicates the right column index of the cell range.</param>
      <returns>
        <c>true</c> if there is an item in the specified range; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.#ctor(GrapeCity.Spreadsheet.DataValidations,GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator)">
      <summary>
            Instantiates data validation to a range of cells using the specified options.
            </summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.#ctor(GrapeCity.Spreadsheet.DataValidations,System.String[])">
      <summary>
            Instantiates data validation to list of items.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInDataValidation.Type">
      <summary>
            Gets or sets a value indicating the type of data validation.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value represents the type of the data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInDataValidation.Operator">
      <summary>
            Gets or sets a value indicating the operator of data validation.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value represents the operator of the data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInDataValidation.Formula1">
      <summary>
            Gets or sets the value or formula associated with the data validation.
            </summary>
      <value>A string value represents the value or formula associated with the data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BuiltInDataValidation.Formula2">
      <summary>
            Gets or sets the value or formula associated with the second part of a data validation.
            </summary>
      <value>A string value represents the value or formula associated with the second part of a data validation.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.Equals(GrapeCity.Spreadsheet.DataValidation)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.GetFormula(System.Boolean,System.Int32,System.Int32)">
      <summary>
            Gets or sets the value or formula associated with the specified part of a data validation.
            </summary>
      <param name="first">
        <c>true</c> to return the first part of the data validation; otherwise, return the second part of the data validation.</param>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <returns>A string value represents the value or formula associated with the specified part of a data validation.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.GrapeCity#Spreadsheet#IO#OpenXml#IOpenXml{GrapeCity#Spreadsheet#DataValidation}#CanExport">
      <summary>
            Determines whether this object can be exported to OpenXml format.
            </summary>
      <returns>
        <c>true</c> if this object can be exported to OpenXml format; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.GetSuggestionList(System.Int32,System.Int32)">
      <summary>
            Gets the suggestions for possible valid values.
            </summary>
      <param name="row">An integer value indicates the context row.</param>
      <param name="column">An integer value indicates the context column.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionList" /> object represents the suggestions for possible valid values.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.GrapeCity#Spreadsheet#IO#OpenXml#IOpenXml{GrapeCity#Spreadsheet#DataValidation}#Export(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>
            Exports this object to the specified writer.
            </summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> object indicates the Xml writer.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.GrapeCity#Spreadsheet#IO#OpenXml#IOpenXml{GrapeCity#Spreadsheet#DataValidation}#Import(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)">
      <summary>
            Imports data of <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> from the specified reader.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> object represents the imported object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInDataValidation.ParseInput(GrapeCity.Spreadsheet.Worksheet,System.String,System.String,System.Int32,System.Int32,GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationOperator,GrapeCity.CalcEngine.IPrimitiveValue@,GrapeCity.CalcEngine.Expression@,GrapeCity.CalcEngine.IPrimitiveValue@,GrapeCity.CalcEngine.Expression@)">
      <summary>
            Parses the inputs for a data validation.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the active worksheet.</param>
      <param name="formula1">A string value indicates the first formula.</param>
      <param name="formula2">A string value indicates the second formula.</param>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <param name="dvType">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the data validation type.</param>
      <param name="primitiveValue1">A <see cref="T:GrapeCity.CalcEngine.PrimitiveValue" /> object represents the first parsed value.</param>
      <param name="expression1">An <see cref="T:GrapeCity.CalcEngine.Expression" /> object represents the first parsed expression.</param>
      <param name="primitiveValue2">A <see cref="T:GrapeCity.CalcEngine.PrimitiveValue" /> object represents the second parsed value.</param>
      <param name="expression2">An <see cref="T:GrapeCity.CalcEngine.Expression" /> object represents the second parsed expression.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataRestrictions" /> value represents the restriction reason of the specified formulas.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidation">
      <summary>
            Represent for the data valiation information.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.IgnoreBlank">
      <summary>
            Gets or sets a value indicating whether the data validation allows the use of empty or blank entries.
            </summary>
      <value>
        <c>true</c> if the data validation allows the use of empty or blank entries; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.InCellDropdown">
      <summary>
            Gets or sets a value indicating whether to display a dropdown combo box for a list type data validation.
            </summary>
      <value>
        <c>true</c> if display a dropdown combo box; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.ShowError">
      <summary>
            Gets or sets a value indicating whether to display the error alert message when an invalid value has been entered, according to the criteria specified.
            </summary>
      <value>
        <c>true</c> if display the error alert message; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.ShowInput">
      <summary>
            Gets or sets a value indicating whether to display the input prompt message.
            </summary>
      <value>
        <c>true</c> if display the input prompt message; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.ErrorMessage">
      <summary>
            Gets or sets the message text of error alert.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the message text of error alert.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.AlertStyle">
      <summary>
            Gets or sets the style of error alert used for this data validation.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value represents the style of error alert used for this data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.ErrorTitle">
      <summary>
            Gets or sets the title bar text of error alert.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the title bar text of error alert.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.IMEMode">
      <summary>
            Gets or sets the IME (input method editor) mode enforced by this data validation.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ImeMode" /> value represents the IME (input method editor) mode enforced by this data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.InputMessage">
      <summary>
            Gets or sets the message text of input prompt.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the message text of input prompt.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidation.InputTitle">
      <summary>
            Gets or sets the title bar text of input prompt.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the title bar text of input prompt.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidation.GetSuggestionList(System.Int32,System.Int32)">
      <summary>
            Gets the suggestions for possible valid values.
            </summary>
      <param name="row">An integer value indicates the context row.</param>
      <param name="column">An integer value indicates the context column.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionList" /> object represents the suggestions for possible valid values.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidation.GetSuggestionList">
      <summary>
            Gets the suggestions for possible valid values.
            </summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionList" /> object represents the suggestions for possible valid values.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidation.GrapeCity#Spreadsheet#IO#OpenXml#IOpenXml{GrapeCity#Spreadsheet#DataValidation}#CanExport">
      <summary>
            Determines whether this object can be exported to OpenXml format.
            </summary>
      <returns>
        <c>true</c> if this object can be exported to OpenXml format; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidation.GrapeCity#Spreadsheet#IO#OpenXml#IOpenXml{GrapeCity#Spreadsheet#DataValidation}#Export(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>
            Exports this object to the specified writer.
            </summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> object indicates the Xml writer.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidation.GrapeCity#Spreadsheet#IO#OpenXml#IOpenXml{GrapeCity#Spreadsheet#DataValidation}#Import(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)">
      <summary>
            Imports data of <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> from the specified reader.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> object represents the imported object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidation.GrapeCity#Spreadsheet#IO#OpenXml#IOpenXml{GrapeCity#Spreadsheet#DataValidation}#CanImport">
      <summary>
            Determines whether this object can import from OpenXml format.
            </summary>
      <returns>
        <c>true</c> if this object can import from OpenXml format; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidation.Equals(GrapeCity.Spreadsheet.DataValidation)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationExecutedResult.Data">
      <summary>
            Gets or sets the custom data for matched result.
            </summary>
      <value>An object represents the custom data for matched result.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationExecutedResult.IsValid">
      <summary>
            Gets or sets a boolean value which indicates whether the validating is valid.
            </summary>
      <value>
        <c>true</c> if the validating is valid; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationExecutedResult.DataValidation">
      <summary>
            Gets the data validation which is associated with the cell.
            </summary>
      <value>The data validation which is associated with the cell.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidations">
      <summary>
            Represents the data validations associated with the specified <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidations.DisablePrompts">
      <summary>
            Gets or sets a boolean value indicates whether all data validation input prompts are disabled for the <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidations.XWindow">
      <summary>
            Gets or sets the x-coordinate, relative to the application window, of the upper-left corner of the data validation input prompt, measured in pixels.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.GetFilteringMask(System.Object,System.Object@)">
      <summary>
            Gets the value from <paramref name="contextData" /> to process.
            </summary>
      <param name="contextData">An <see cref="T:System.Object" /> instance indicates the context data.</param>
      <param name="validatedValue">An <see cref="T:System.Object" /> instance represents the validated value.</param>
      <returns>An integer value represents the mask to filter splittable items.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidations.YWindow">
      <summary>
            Gets or sets the y-coordinate, relative to the application window, of the upper-left corner of the data validation input prompt, measured in pixels.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.DataValidator,System.Boolean)">
      <summary>
            Applies new <see cref="!:TItem" /> item for the specified cell range.
            </summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> indicates the cell range to apply new <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> item.</param>
      <param name="item">The <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> object is applied successful, <c>false</c> otherwise.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.CalcEngine.RangeReference,GrapeCity.Spreadsheet.DataValidator,System.Boolean)">
      <summary>
            Applies new <see cref="!:TItem" /> item for the specified cell range.
            </summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the cell range to apply new <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> item.</param>
      <param name="item">The <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> object to apply for the specified range.</param>
      <param name="replacing">if set to <c>true</c>, all items, which belong to the specified range, will be clear.</param>
      <returns>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.DataValidator" /> object is applied successful, <c>false</c> otherwise.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>
            Adds data validation to the specified range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> instance represents the created data validation. <c>null</c> if the data is invalid.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>
            Adds data validation to the specified range.
            </summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value indicates the reference of this <see cref="T:GrapeCity.Spreadsheet.DataValidation" />.</param>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> instance represents the created data validation. <c>null</c> if the data is invalid.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.CalcEngine.RangeReference,GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>
            Adds data validation to the specified range.
            <para>
            Obsolete. This function is deprecated, please use other overload (with Reference argument) instead.
            </para></summary>
      <param name="rangeRef">A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value indicates the reference of this <see cref="T:GrapeCity.Spreadsheet.DataValidation" />.</param>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> instance represents the created data validation. <c>null</c> if the data is invalid.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.Spreadsheet.Reference[],GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>
            Adds data validation to the specified range.
            </summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.Spreadsheet.Reference" /> indicates the references of this <see cref="T:GrapeCity.Spreadsheet.DataValidation" />.</param>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="@operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> instance represents the created data validation. <c>null</c> if the data is invalid.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.Add(GrapeCity.CalcEngine.RangeReference[],GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>
            Adds data validation to the specified range.
            <para>
            Obsolete. This function is deprecated, please use other overload (with Reference argument) instead.
            </para></summary>
      <param name="rangeRefs">An array of <see cref="T:GrapeCity.CalcEngine.RangeReference" /> indicates the references of this <see cref="T:GrapeCity.Spreadsheet.DataValidation" />.</param>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="@operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> instance represents the created data validation. <c>null</c> if the data is invalid.</returns>
      <remarks>All existed data validations in the specified range will be removed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.ClearCircles">
      <summary>
            Clears circles from invalid entries on the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.CircleInvalid">
      <summary>
            Circles invalid entries on the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.CircleInvalid(System.Int32)">
      <summary>
            Get a <see cref="!:GrapeCity.Spreadsheet.CellReference[]" /> array of invalid entries on the worksheet.
            </summary>
      <param name="maximumCells">An integer value indicates the maximum returned invalid entries. Default value will be used if <paramref name="maximumCells" /> is less than 1.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.ContextData.#ctor(System.Boolean,System.Boolean,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.DataValidations.ContextData" /> class.
            </summary>
      <param name="selectCell">if set to <c>true</c>, the validating is performed for selecting cell.</param>
      <param name="inputData">if set to <c>true</c> the validating is performed for inputting data.</param>
      <param name="validatedValue">An <see cref="T:System.Object" /> value indicates the value to validate. <c>null</c> if the current cell value is used.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.GetDataRestriction(GrapeCity.Spreadsheet.Worksheet,GrapeCity.CalcEngine.Expression,GrapeCity.Spreadsheet.DataValidationType)">
      <summary>
            Determines whether the specified expression can be used for the data validation.
            </summary>
      <param name="worksheet">The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object which contains the data validation.</param>
      <param name="expression">An <see cref="T:GrapeCity.CalcEngine.Expression" /> object indicates the expression to check.</param>
      <param name="type">An enum indicates the type of data validation used to validate user input.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataRestrictions" /> value represents the restriction reason of the specified expression.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.GetDataRestriction(GrapeCity.CalcEngine.IPrimitiveValue,GrapeCity.Spreadsheet.DataValidationType)">
      <summary>
            Determines whether the specified expression can be used for the data validation.
            </summary>
      <param name="primitiveValue">An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object indicates the primitive value.</param>
      <param name="type">An enum indicates the type of data validation used to validate user input.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataRestrictions" /> value represents the restriction reason of the specified value.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidations.Item(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> at the specified cell.
            </summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <returns>DataValidation.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.GrapeCity#Spreadsheet#IO#OpenXml#IOpenXml{GrapeCity#Spreadsheet#DataValidations}#CanExport">
      <summary>
            Determines whether this object can be exported to OpenXml format.
            </summary>
      <returns>
        <c>true</c> if this object can be exported to OpenXml format; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.GrapeCity#Spreadsheet#IO#OpenXml#IOpenXml{GrapeCity#Spreadsheet#DataValidations}#Export(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>
            Exports this object to the specified writer.
            </summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> object indicates the Xml writer.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.GrapeCity#Spreadsheet#IO#OpenXml#IOpenXml{GrapeCity#Spreadsheet#DataValidations}#CanImport">
      <summary>
            Determines whether this object can import from OpenXml format.
            </summary>
      <returns>
        <c>true</c> if this object can import from OpenXml format; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.GrapeCity#Spreadsheet#IO#OpenXml#IOpenXml{GrapeCity#Spreadsheet#DataValidations}#Import(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)">
      <summary>
            Imports data of <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> from the specified reader.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DataValidation" /> object represents the imported object.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidations.GrapeCity#Spreadsheet#IO#Exchangeable#IExtension{GrapeCity#Spreadsheet#Worksheet}#Key">
      <summary>
            Gets the indentifier of the extension.
            </summary>
      <value>A <see cref="T:System.Guid" /> value {CCE6A557-97BC-4b89-ADB6-D9C93CAAB3DF} represents the extension's identifier.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidations.GrapeCity#Spreadsheet#IO#Exchangeable#IExtension{GrapeCity#Spreadsheet#Worksheet}#IsRequiredExport(GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,System.Guid)">
      <summary>
            Gets a value indicating whether the extension requires to export its data.
            </summary>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
      <value>
        <c>true</c> if the extension requires to export its data; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidationErrorStyle">
      <summary>
            The style of data validation error alert.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationErrorStyle.Stop">
      <summary>
            This data validation error style uses a stop icon in the error alert.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationErrorStyle.Warning">
      <summary>
            This data validation error style uses a warning icon in the error alert.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationErrorStyle.Information">
      <summary>
            This data validation error style uses an information icon in the error alert.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ImeMode">
      <summary>
            Specifies a value that determines the Input Method Editor (IME) status.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.NoControl">
      <summary>
            IME Mode is not controlled.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.On">
      <summary>
            The IME is on. This value indicates that the IME is on and characters specific to Chinese or Japanese can be entered. This setting is valid for Japanese, Simplified Chinese, and Traditional Chinese IME only.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.Off">
      <summary>
            The IME is off. This mode indicates that the IME is off, meaning that the object behaves the same as English entry mode. This setting is valid for Japanese, Simplified Chinese, and Traditional Chinese IME only.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.Disabled">
      <summary>
            The IME is disabled. With this setting, the users cannot turn the IME on from the keyboard, and the IME floating window is hidden.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.Hiragana">
      <summary>
            Hiragana DBC. This setting is valid for the Japanese IME only.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.FullKatakana">
      <summary>
            Katakana DBC. This setting is valid for the Japanese IME only.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.HalfKatakana">
      <summary>
            Katakana SBC. This setting is valid for the Japanese IME only.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.FullAlpha">
      <summary>
            Alphanumeric double-byte characters. This setting is valid for Korean and Japanese IME only.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.HalfAlpha">
      <summary>
            Alphanumeric single-byte characters(SBC). This setting is valid for Korean and Japanese IME only.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.FullHangul">
      <summary>
            Hangul DBC. This setting is valid for the Korean IME only.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ImeMode.HalfHangul">
      <summary>
            Hangul SBC. This setting is valid for the Korean IME only.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidationOperator">
      <summary>
            The relational operator used in data validation.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.Between">
      <summary>
            Data validation which checks if a value is between two other values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween">
      <summary>
            Data validation which checks if a value is not between two other values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.Equal">
      <summary>
            Data validation which checks if a value is equal to a specified value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.NotEqual">
      <summary>
            Data validation which checks if a value is not equal to a specified value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.LessThan">
      <summary>
            Data validation which checks if a value is less than a specified value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.GreaterThan">
      <summary>
            Data validation which checks if a value is greater than a specified value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.GreaterThanOrEqual">
      <summary>
            Data validation which checks if a value is greater than or equal to a specified value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationOperator.LessThanOrEqual">
      <summary>
            Data validation which checks if a value is less than or equal to a specified value.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidationType">
      <summary>
            Specifies the type of data validation used to validate user input.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.InputOnly">
      <summary>
            Only validate when user changes the value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.WholeNumber">
      <summary>
            Data validation which checks for whole number values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.Decimal">
      <summary>
            Data validation which checks for decimal values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.List">
      <summary>
            Data validation which checks for a value matching one of list of values. The maximum length of a list is 255 characters.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.Date">
      <summary>
            Data validation which checks for date values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.Time">
      <summary>
            Data validation which checks for time values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.TextLength">
      <summary>
            Data validation which checks for text values, whose length satisfies the given condition.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataValidationType.Custom">
      <summary>
            Data validation which uses a custom formula to check the cell value.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionList.Row">
      <summary>
            Gets the context row index.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionList.Column">
      <summary>
            Gets the context column index.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionList.Filter(System.String)">
      <summary>
            Gets the list of <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionItem" /> which start with the <paramref name="prefix" />.
            </summary>
      <param name="prefix">The prefix text of items.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionList.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionList" />.
            </summary>
      <value>The number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.DataValidationSuggestionList" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionList.Item(System.Int32)">
      <summary>
            Gets the suggested item at the specified position.
            </summary>
      <param name="index">An integer value indicates the position of the suggested item.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataValidationSuggestionItem">
      <summary>
            Represents a suggested data for the cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.Equals(GrapeCity.Spreadsheet.DataValidationSuggestionItem)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="other">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.ToString">
      <summary>
            Gets the description of this instance.
            </summary>
      <returns>The description of this instance.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionItem.Text">
      <summary>
            Gets the formatted text of the suggested value.
            </summary>
      <value>A string value represents the formatted text of the suggested value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionItem.ValueType">
      <summary>
            Gets the value type of this <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> instance.
            </summary>
      <value>The type of the data of the <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> instance.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetError">
      <summary>
            Gets the <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.
            </summary>
      <returns>An <see cref="T:GrapeCity.CalcEngine.CalcError" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetLogical">
      <summary>
            Gets the <see cref="T:System.Boolean" /> value.
            </summary>
      <returns>An <see cref="T:System.Boolean" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetNumber">
      <summary>
            Gets the <see cref="T:System.Double" /> value.
            </summary>
      <returns>An <see cref="T:System.Double" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetDate">
      <summary>
            Gets the <see cref="T:System.Double" /> value.
            </summary>
      <returns>An <see cref="T:System.Double" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetTime">
      <summary>
            Gets the <see cref="T:System.Double" /> value.
            </summary>
      <returns>An <see cref="T:System.Double" /> value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.GetText">
      <summary>
            Gets the <see cref="T:System.String" /> value.
            </summary>
      <returns>An <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionItem.Value">
      <summary>
            Gets the suggested value for this item.
            </summary>
      <value>An object represents the suggested value for this item.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidationSuggestionItem.ToCellValue">
      <summary>
            Gets the suggested value for this item.
            </summary>
      <value>An object represents the suggested value for this item.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DataValidationSuggestionItem.NumberFormatID">
      <summary>
            Gets the suggested number format.
            </summary>
      <value>An integer value represents the suggested number format ID.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidator.IsValid(System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>
            Determines whether the specified value is valid with this <see cref="T:GrapeCity.Spreadsheet.DataValidation" />.
            </summary>
      <param name="rangeIndex">An integer value indicates the range reference index of this data validation.</param>
      <param name="row">An integer value indicates the row index of cell to validate.</param>
      <param name="column">An integer value indicates the column index of cell to validate.</param>
      <param name="value">The cell value to validate.</param>
      <returns>
        <c>true</c> if the specified cell value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DataValidator.Apply(GrapeCity.Spreadsheet.Conditional.MatchData@,GrapeCity.Spreadsheet.DataValidationExecutedResult@)">
      <summary>
            Applies settings of this matched item to the specified <see cref="!:TExecutedResult" /> value.
            </summary>
      <param name="matchingData">A <see cref="T:GrapeCity.Spreadsheet.SplittableMatchData" /> value indicates the matching data.</param>
      <param name="result">A <see cref="!:TExecutedResult" /> value indicates the executed result.</param>
      <returns>
        <c>true</c> if other next items should be stopped executing, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IValidation">
      <summary>
            Represents data validation for a worksheet range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.Type">
      <summary>
            Gets a value indicating the data type validation for a range.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value represents the data type validation for a range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.Operator">
      <summary>
            Gets a value indicating the operator for the data validation.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value represents the operator for the data validation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.IgnoreBlank">
      <summary>
            Gets a value indicating whether blank values are permitted by the range data validation.
            </summary>
      <value>
        <c>true</c> if blank values are permitted by the range data validation; otherwise, <c>false</c>.</value>
      <remarks>If the <see cref="P:GrapeCity.Spreadsheet.IValidation.IgnoreBlank" /> property is <c>true</c> , cell data is considered valid if the cell is blank, or if a cell referenced by either the <see cref="P:GrapeCity.Spreadsheet.IValidation.Formula1" /> or <see cref="P:GrapeCity.Spreadsheet.IValidation.Formula2" /> property is blank.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.InCellDropdown">
      <summary>
            Gets or sets data validation displays a drop-down list that contains acceptable values.
            </summary>
      <value>
        <c>true</c> if data validation displays a drop-down list that contains acceptable values; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.ShowError">
      <summary>
            Gets or sets the data validation error message will be displayed whenever the user enters invalid data.
            </summary>
      <value>
        <c>true</c> if the data validation error message will be displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.ShowInput">
      <summary>
            Gets or sets the data validation input message will be displayed whenever the user selects a cell in the data validation range.
            </summary>
      <value>
        <c>true</c> if the data validation input message will be displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.ErrorMessage">
      <summary>
            Gets or sets the data validation error message.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the data validation error message.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.AlertStyle">
      <summary>
            Gets the validation alert style.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value represents the validation alert style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.ErrorTitle">
      <summary>
            Gets or sets the title of the data validation error dialog box.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the title of the data validation error dialog box.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.InputMessage">
      <summary>
            Gets or sets the data validation input message.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the data validation input message.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.InputTitle">
      <summary>
            Gets or sets the title of the data validation input dialog box.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the title of the data validation input dialog box.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.Formula1">
      <summary>
            Gets the value or expression associated with the conditional format or data validation.
            </summary>
      <value>A string value represents a constant value, a string value, a cell reference, or a formula.</value>
      <remarks>Because <see cref="P:GrapeCity.Spreadsheet.IValidation.Formula1" /> property is also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.Formula2">
      <summary>
            Gets the value or expression associated with the second part of a conditional format or data validation.
            </summary>
      <value>A string value represents a constant value, a string value, a cell reference, or a formula.</value>
      <remarks>Used only when the data validation conditional format <see cref="P:GrapeCity.Spreadsheet.IValidation.Operator" /> property is <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</remarks>
      <remarks>Because <see cref="P:GrapeCity.Spreadsheet.IValidation.Formula2" /> property is also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.ImeMode">
      <summary>
            Gets or sets the description of the Japanese input rules.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ImeMode" /> value represents the description of the Japanese input rules</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IValidation.Value">
      <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether all the validation criteria are met (that is, if the range contains valid data).
            </summary>
      <value>
        <c>true</c>if all the validation criteria are met (that is, if the range contains valid data); otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IValidation.Add(GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>
            Adds data validation to a range of cells using the specified options.
            </summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>The new created data validation. <c>null</c> if the data validation cannot be added.</returns>
      <remarks>Because <paramref name="formula1" /> and <paramref name="formula2" /> properties are also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IValidation.Delete">
      <summary>
            Deletes data validation.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IValidation.Modify(GrapeCity.Spreadsheet.DataValidationType,GrapeCity.Spreadsheet.DataValidationErrorStyle,GrapeCity.Spreadsheet.DataValidationOperator,System.String,System.String)">
      <summary>
            Modifies existing data validation for a range of cells using the specified options.
            </summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DataValidationType" /> value indicates the type of data validation to add.</param>
      <param name="errorStyle">A <see cref="T:GrapeCity.Spreadsheet.DataValidationErrorStyle" /> value indicates the error style to use for error messages.</param>
      <param name="operator">A <see cref="T:GrapeCity.Spreadsheet.DataValidationOperator" /> value indicates the data validation operator.</param>
      <param name="formula1">A string value indicates the first data validation value, formula or list.</param>
      <param name="formula2">A string value indicates the second data validation value for <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.Between" /> or <see cref="F:GrapeCity.Spreadsheet.DataValidationOperator.NotBetween" />.</param>
      <returns>The modified data validation. <c>null</c> if the data validation cannot be modified.</returns>
      <remarks>Because <paramref name="formula1" /> and <paramref name="formula2" /> properties are also used for primitive value, the formula must start with "=".</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Data.BindableObject">
      <summary>
            Represents a base class that contains formula binding properties.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.BindableObject.GrapeCity#Spreadsheet#Data#IBindings#Add(System.String,System.String,GrapeCity.Spreadsheet.Data.IValueConverter)">
      <summary>
            Add a formula binding to the specified property of an object.
            </summary>
      <param name="propertyName">The property name.</param>
      <param name="formula">The formula text to bind.</param>
      <param name="converter">The converter to convert value of the binding source.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.BindableObject.GrapeCity#Spreadsheet#Data#IBindings#Remove(System.String)">
      <summary>
            Removes the formula binding by the specified property name.
            </summary>
      <param name="propertyName">Name of the formula binding property.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Data.FormulaBindablePropertyAttribute">
      <summary>
            Indicates that the property can be bind to a formula.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="T:GrapeCity.Spreadsheet.Data.IBindings">
      <summary>
            Represents all bindings of an object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.IBindings.Add(System.String,System.String,GrapeCity.Spreadsheet.Data.IValueConverter)">
      <summary>
            Add a formula binding to the specified property of an object.
            </summary>
      <param name="propertyName">The property name.</param>
      <param name="formula">The formula text to bind.</param>
      <param name="converter">The converter to convert value of the binding source.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.IBindings.Remove(System.String)">
      <summary>
            Removes the formula binding by the specified property name.
            </summary>
      <param name="propertyName">Name of the formula binding property.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Data.ContentTypes">
      <summary>
            Specifies a value that indicates type(s) of content(s).
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.None">
      <summary>
            No data
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.CellValue">
      <summary>
            Includes cell data
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.Tag">
      <summary>
            Includes tags
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.Note">
      <summary>
            Includes notes
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.CellErrorText">
      <summary>
            Includes cell error text
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.RowErrorText">
      <summary>
            Includes row error text
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.CellFormula">
      <summary>
            Includes cell formula
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.RowFormula">
      <summary>
            Includes row formula
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.ColumnFormula">
      <summary>
            Includes column formula
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.ErrorText">
      <summary>
            Includes error text
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.Formula">
      <summary>
            Includes formulas
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.ContentTypes.All">
      <summary>
            Includes all data
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Data.IValueConverter">
      <summary>
            Provides a way to apply custom logic to a binding.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.IValueConverter.Convert(System.Object,System.Type,System.Object)">
      <summary>
            Converts a value.
            </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <returns>A converted value. If the method returns <c>null</c>, the valid null value is used.</returns>
      <remarks>The data binding engine calls this method when it propagates a value from the binding source to the binding target.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object)">
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <returns>A converted value. If the method returns <c>null</c>, the valid null value is used.</returns>
      <remarks>The data binding engine calls this method when it propagates a value from the binding target to the binding source.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Data.IValueConverter`1">
      <summary>
            Provides a way to apply custom logic to a binding.
            </summary>
      <typeparam name="T">The type to convert to.</typeparam>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.IValueConverter`1.Convert(System.Object,System.Object)">
      <summary>
            Converts a value.
            </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="parameter">The converter parameter to use.</param>
      <returns>A converted value. If the method returns <c>null</c>, the valid null value is used.</returns>
      <remarks>The data binding engine calls this method when it propagates a value from the binding source to the binding target.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.IValueConverter`1.ConvertBack``1(`0,System.Object)">
      <summary>
            Converts a value.
            </summary>
      <typeparam name="T2">The type to convert to.</typeparam>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="parameter">The converter parameter to use.</param>
      <returns>A converted value. If the method returns <c>null</c>, the valid null value is used.</returns>
      <remarks>The data binding engine calls this method when it propagates a value from the binding target to the binding source.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Data.BuiltInConverters">
      <summary>
            Contains all built-in value converters.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.BuiltInConverters.TextFormatConverter">
      <summary>
            Represents the converter that returns <see cref="T:GrapeCity.Drawing.TextFormat" /> object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.BuiltInConverters.BrushConverter">
      <summary>
            Represents the converter that returns <see cref="T:GrapeCity.Drawing.Brush" /> object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.BuiltInConverters.ColorConverter">
      <summary>
            Represents the converter that returns <see cref="T:GrapeCity.Spreadsheet.Color" /> object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.BuiltInConverters.SchemeColorConverter">
      <summary>
            Represents the converter that returns <see cref="T:GrapeCity.Spreadsheet.Color" /> object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.BuiltInConverters.PenConverter">
      <summary>
            Represents the converter that returns <see cref="T:GrapeCity.Drawing.Pen" /> object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Data.BuiltInConverters.NumericConverter">
      <summary>
            Represents the converter that return <see cref="T:System.Double" /> value.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.BuiltInConverters.EnumConverter``1">
      <summary>
            Gets the converter that return <see cref="T:GrapeCity.Spreadsheet.Data.Converters.EnumConverter`1" /> value.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Data.DataManager">
      <summary>
            Represents the data manager of a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManager.UnBoundNewRowIndex">
      <summary>
            Gets or sets the index of the unbound new row.
            </summary>
      <value>
            The index of the unbound new row.
            </value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.#ctor(GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Data.DataManager" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Data.DataManager" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.IsValidValue(System.Int32,System.Int32,System.Object,System.String@)">
      <summary>
            Check if the value is valid for data manager.
            </summary>
      <param name="row"></param>
      <param name="column"></param>
      <param name="value"></param>
      <param name="invalidMessage">Error message if value is not valid</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.AddUnboundRows(System.Int32,System.Int32)">
      <summary>
            Adds unbound rows to the data model.
            </summary>
      <param name="row">Row index at which to add the new rows</param>
      <param name="count">Number of rows to add</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.AddUnboundRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Adds unbound rows to the data model.
            </summary>
      <param name="row">Row index at which to add the new rows</param>
      <param name="count">Number of rows to add</param>
      <param name="notifyUI">
        <c>true</c> to notify the control; otherwise, queue the change.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.IsMoveableColumn">
      <summary>
            Gets a boolean value indicating whether the column(s) is able to move.
            </summary>
      <returns>
        <c>true</c> if the column(s) is able to move; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManager.NewRowPosition">
      <summary>
            Gets or sets the position of the new row when the worksheet is bound.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.NewRowPosition" /> value represents the position of the new row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManager.DataAllowAddNew">
      <summary>
            Gets or sets whether to allow the user to add a new row when the sheet is bound.
            </summary>
      <value>
        <c>true</c> if allowed to add new row; otherwise, <c>false</c></value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManager.GrapeCity#Spreadsheet#IDataManager#DataAllowAddNew">
      <summary>
            Gets or sets whether to allow the user to add a new row when the sheet is bound.
            </summary>
      <value>
        <c>true</c> if allowed to add new row; otherwise, <c>false</c></value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetUnboundValue(System.Int32,System.Int32)">
      <summary>
            Gets the unbound value
            </summary>
      <param name="row"></param>
      <param name="column"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GrapeCity#Spreadsheet#IDataManager#AddRowToDataSource(System.Int32,System.Boolean)">
      <summary>
            Adds the unbound row to the data source.
            </summary>
      <param name="row">Row index at which to add a row</param>
      <param name="autoFillData">Whether to automatically fill the row with data</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.AddRowToDataSource(System.Int32,System.Boolean)">
      <summary>
            Adds the unbound row to the data source.
            </summary>
      <param name="row">Row index at which to add a row</param>
      <param name="autoFillData">Whether to automatically fill the row with data</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetValue(System.Int32,System.Int32,GrapeCity.CalcEngine.IPrimitiveValue,System.Boolean)">
      <summary>
            Gets the value of the cell for the specified row and column.
            </summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="cellValue"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetValue(System.Int32,System.Int32,GrapeCity.CalcEngine.CellValue@)">
      <summary>
            Gets the value of the cell for the specified row and column.
            </summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
      <param name="cellValue"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManager.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the value of the cell for the specified row and column.
            </summary>
      <param name="row">Row index of the cell in the model</param>
      <param name="column">Column index of the cell in the model</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Data.DataManagerBase">
      <summary>
            Represents the data manager of a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManagerBase.DataSource">
      <summary>
            Gets or sets the data source.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManagerBase.DataMember">
      <summary>
            Gets or sets the data member (table name) to use for data. 
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManagerBase.ColumnCount">
      <summary>
              Gets the number of rows in the data source.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManagerBase.GetDataView(System.Boolean)">
      <summary>
            Gets the DataView object associated with this model.
            </summary>
      <param name="create">Whether to recreate the DataView</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManagerBase.AutoGenerateColumns">
      <summary>
            Gets or sets whether to generate the columns automatically based on the data source.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManagerBase.DataAllowAddNew">
      <summary>
            Gets or sets whether to allow the user to add a new row when the sheet is bound.
            </summary>
      <value>
        <c>true</c> if allowed to add new row; otherwise, <c>false</c></value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManagerBase.GetColumnIndex(System.String)">
      <summary>
            Gets the index of the column specified by name. 
            </summary>
      <param name="columnName">The column name.</param>
      <returns>The index of the specified column.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManagerBase.GetDataColumnName(System.Int32)">
      <summary>
            Gets the column name at the specified position.
            </summary>
      <param name="column">Column index for which name is requested</param>
      <exception cref="T:System.IndexOutOfRangeException">
            Specified index is out of range; must be between 0 and the total number of columns
            </exception>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManagerBase.GetDataSourceColumn(System.Int32)">
      <summary>
            Gets the data source column index for the specified column in the model.
            </summary>
      <param name="column">Index of the column in the model</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManagerBase.SetModelDataColumn(System.Int32,System.String)">
      <summary>
            Binds a model column to a specified data source column.
            </summary>
      <param name="column">Index of column in the model</param>
      <param name="columnName">Name of the data source column</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManagerBase.GetListSource">
      <summary>
            Returns the IList data source for this model or null if the data source is not an IList.
            </summary>
      <returns>IList object</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManagerBase.ItemType">
      <summary>
            Gets or sets the type of the object in the list for the list data source.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManagerBase.ItemPropertyCount">
      <summary></summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManagerBase.GetDataColumnType(System.Int32)">
      <summary>
            Gets the column data type at the specified position.
            </summary>
      <param name="column">Column index for which type is requested</param>
      <exception cref="T:System.IndexOutOfRangeException">
            Specified index is out of range; must be between 0 and the total number of columns
            </exception>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManagerBase.SetModelDataColumn(System.Int32,System.Int32)">
      <summary>
            Binds a model column to a specified data source column.
            </summary>
      <param name="column">Index of column in the model</param>
      <param name="value"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Data.DataManagerBase.GetDataColumnCaption(System.Int32)">
      <summary>
            Gets the column caption at the specified position.
            </summary>
      <param name="column">Column index for which caption is requested</param>
      <exception cref="T:System.IndexOutOfRangeException">
            Specified index is out of range; must be between 0 and the total number of columns
            </exception>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Data.DataManagerBase.RowCount">
      <summary>
              Gets the number of bound rows in the data source.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.RichText">
      <summary>
            Represents the rich text.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.RichText" /> class.
            </summary>
      <param name="text">The text value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Normalize(System.String)">
      <summary>
            Normalize the text.
            </summary>
      <param name="text">The text to normalize.</param>
      <returns>The normalized text.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.RichText.Text">
      <summary>
            Gets the <see cref="T:System.String" /> value represents the plain text of this rich text.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Clone">
      <summary>
            Creates a new <see cref="T:GrapeCity.Spreadsheet.RichText" /> object that is a copy of the current <see cref="T:GrapeCity.Spreadsheet.RichText" /> instance.
            </summary>
      <returns>A new <see cref="T:GrapeCity.Spreadsheet.RichText" /> object that is a copy of the current <see cref="T:GrapeCity.Spreadsheet.RichText" /> instance.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Append(System.String,GrapeCity.Spreadsheet.Font)">
      <summary>
            Appens the text run at the end of this rich text.
            </summary>
      <param name="text">The plain text of the tet run.</param>
      <param name="font">The font setting of the text run.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.RichText.RunCount">
      <summary>
            Gets the total number of runs in the rich text.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.RichText.GetCommonFont(GrapeCity.Spreadsheet.IWorkbook,System.Boolean)" -->
    <member name="M:GrapeCity.Spreadsheet.RichText.GetRun(System.Int32,System.Int32@,System.Int32@,GrapeCity.Spreadsheet.Font@)">
      <summary>
            Gets the attributes of the specified run.
            </summary>
      <param name="index">The run index.</param>
      <param name="start">The start character position of the run.</param>
      <param name="length">The total number of characters of the run.</param>
      <param name="font">The font settingsof the run.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.GetFormat(System.Int32)">
      <summary>
            Gets the font at the specified position.
            </summary>
      <param name="start">The start position of the text run.</param>
      <returns>The font at the specified position.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.RichText.Length">
      <summary>
            Gets the length of text.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Format(System.Int32,System.Int32,GrapeCity.Spreadsheet.Font)">
      <summary>
            Formats the specified text run with the specified font.
            </summary>
      <param name="start">The start position of the text run.</param>
      <param name="length">The length of the text run.</param>
      <param name="font">The font setting of the text run.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Format(GrapeCity.Spreadsheet.Font)">
      <summary>
            Formats the whole text with the specified font.
            </summary>
      <param name="font">The font setting of the text run.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.ClearFormat">
      <summary>
            Clears format of all text runs.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.ClearFormat(System.Int32,System.Int32)">
      <summary>
            Clears the format of the specified text run.
            </summary>
      <param name="start">The start position of the text run.</param>
      <param name="length">The length of the text run.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Overwrite(System.Int32,System.Int32,System.String)">
      <summary>
            Overwrites the specified range of this rich text by a new text.
            </summary>
      <param name="start">The start position of the replaced range.</param>
      <param name="length">The length of the replaced range.</param>
      <param name="text">The new text.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="other">The object to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.Equals(GrapeCity.Spreadsheet.RichText)">
      <summary>
            Determines whether the specified <see cref="T:GrapeCity.Spreadsheet.RichText" /> object is equal to the current <see cref="T:GrapeCity.Spreadsheet.RichText" /> object.
            </summary>
      <param name="other">The <see cref="T:GrapeCity.Spreadsheet.RichText" /> object to compare with the current <see cref="T:GrapeCity.Spreadsheet.RichText" /> object.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:GrapeCity.Spreadsheet.RichText" /> object is equal to the current <see cref="T:GrapeCity.Spreadsheet.RichText" /> object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.RichText.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormControls.Button">
      <summary>
            Represents a Windows Forms button that can be added to a worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.Button.State">
      <summary>
            Gets or sets the button visual state.
            </summary>
      <value>The visual state associated with this button.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.Button.Text">
      <summary>
            Gets or sets the text associated with this button.
            </summary>
      <value>The text associated with this button.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.Button.PaintCore(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="drawingContext">The drawing context that paints this drawing object.</param>
      <param name="rect">The painting area that display this drawing object.</param>
      <param name="useableCachedBitmap">Indicates whether to use the cached bitmap of geometry drawing(s).</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.Control.WorksheetDrawing">
      <summary>
            Gets the graphic object contained by this graphic frame.
            </summary>
      <value>The graphic object contained by this graphic frame.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.Control.ShowRotation">
      <summary>Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.FormControls.Control" /> is rotatable.</summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" /> is rotatable; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.Control.Font">
      <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.FormControls.Control.Font" /> to apply to the text displayed by the control.</value>
    </member>
    <member name="E:GrapeCity.Spreadsheet.FormControls.Control.Action">
      <summary>
            Occurs when the control action is invoked.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.Control.PerformAction">
      <summary>
            Generates a <see cref="E:GrapeCity.Spreadsheet.FormControls.Control.Action" /> event for a button.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.Control.Name">
      <summary>
            Gets or sets a string value representing the name of the control.
            </summary>
      <value>The name of the control.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormControls.FormControl">
      <summary>
            Specifies the type of the form control.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.FormControl.Button">
      <summary>
            Represents a button control.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.FormControl.CheckBox">
      <summary>
            Represents a check box control.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.FormControl.DropDown">
      <summary>
            Represents a combo box control.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.FormControl.GroupBox">
      <summary>
            Represents a control that displays a frame around a group of controls with an optional caption.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.FormControl.Label">
      <summary>
            Represents a standard label.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.FormControl.ListBox">
      <summary>
            Represents a control to display a list of items.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.FormControl.Option">
      <summary>
            Represents a control to select a single option from a group of choices.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.FormControl.ScrollBar">
      <summary>
            Represents a scroll bar control.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.FormControl.Spinner">
      <summary>
            Represents a spin box that displays numeric values.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormControls.ControlShape">
      <summary>
            Represents a shape that wrap the form control.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ControlShape.Name">
      <summary>
            Gets or sets a string value representing the name of the shape.
            </summary>
      <value>The name of the shape.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ControlShape.WorksheetDrawing">
      <summary>
            Gets the graphic object contained by this graphic frame.
            </summary>
      <value>The graphic object contained by this graphic frame.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ControlShape.Data">
      <summary>
            Gets or sets the extend data of the <see cref="T:GrapeCity.Spreadsheet.Drawing.DrawingObject" />.
            </summary>
      <value>The extend data.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ControlShape.Control">
      <summary>
            Gets the control associated with this shape.
            </summary>
      <value>The control associated with this shape.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.ControlShape.PaintCore(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="drawingContext">The drawing context that paints this drawing object.</param>
      <param name="rect">The painting area that display this drawing object.</param>
      <param name="useableCachedBitmap">Indicates whether to use the cached bitmap of geometry drawing(s).</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.ControlShape.CalculateRect(GrapeCity.Spreadsheet.Drawing.DrawingObject,GrapeCity.Drawing.Rectangle)">
      <summary>
            Calculates the client rectangle of a child shape inside the specified rectangle.
            </summary>
      <param name="childDrawingObj">The child drawing object.</param>
      <param name="rect">The rect.</param>
      <returns>Rectangle.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.ControlShape.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the shape.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.ControlShape.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Boolean,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the shape.</param>
      <param name="connecting">
        <c>true</c> if the hittest is for connection action; otherwise, <c>false</c>.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormControls.ScrollableControl">
      <summary>
            Defines a class for whatever <seealso cref="T:GrapeCity.Spreadsheet.Drawing.GraphicObject" /> that support scrolling behavior.
            </summary>
      <seealso cref="T:GrapeCity.Spreadsheet.Drawing.GraphicObject" />
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ScrollableControl.VerticalScrollBar">
      <summary>
            Gets the vertical scroll bar.
            </summary>
      <value>The vertical scroll bar.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ScrollableControl.HorizontalScrollBar">
      <summary>
            Gets the horizontal scroll bar.
            </summary>
      <value>The horizontal scroll bar.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.ScrollableControl.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of a control.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormControls.ScrollBar">
      <summary>
            Represents the value of another control based on the position of the scroll box.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.ScrollBar.IncrementalClick(System.Object,System.Action)">
      <summary>
            Incrementals the click.
            </summary>
      <param name="hittest">The hit test information.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ScrollBar.LinkedCell">
      <summary>
            Gets or sets the worksheet cell that contains the current value of a scroll bar control.
            </summary>
      <value>The worksheet cell that contains the current value of a scroll bar control.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ScrollBar.Max">
      <summary>
            Gets or sets the upper limit of values of the scrollable range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ScrollBar.Min">
      <summary>
            Gets or sets the lower limit of values of the scrollable range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ScrollBar.Value">
      <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.ScrollBar.SetPreciseValue(System.Double)">
      <summary>
            Sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.ScrollBar.DeleteCore">
      <summary>
            Deletes the <see cref="T:GrapeCity.Spreadsheet.FormControls.ScrollBar" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ScrollBar.SmallChange">
      <summary>
            Gets or sets the small change of the scrollbar.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormControls.ScrollBar.LargeChange">
      <summary>
            Gets or sets the large change of the scrollbar.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.ScrollBar.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Double)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of a control.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormControls.ScrollBar.PaintCore(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="drawingContext">The drawing context that paints this drawing object.</param>
      <param name="rect">The painting area that display this drawing object.</param>
      <param name="useableCachedBitmap">Indicates whether to use the cached bitmap of geometry drawing(s).</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormControls.ScrollBarButtonType">
      <summary>
            Represents the scrollbar button
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.ScrollBarButtonType.Up">
      <summary>
            The up button.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.ScrollBarButtonType.Down">
      <summary>
            The down button.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.ScrollBarButtonType.Thumb">
      <summary>
            The thumb button.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormControls.ButtonState">
      <summary>
            The definitions of button's state
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.ButtonState.Normal">
      <summary>
            The state of button is normal.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.ButtonState.Disabled">
      <summary>
            The state of button is disabled.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.ButtonState.Hot">
      <summary>
            The state of button is hot.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormControls.ButtonState.Pressed">
      <summary>
            The state of button is pressed.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UpdateLinks">
      <summary>
            Specifies a workbook's setting for updating embedded links.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UpdateLinks.UserSetting">
      <summary>
            Embedded links are updated according to the user's settings for the specified workbook.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UpdateLinks.Never">
      <summary>
            Embedded links are never updated for the specified workbook.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UpdateLinks.Always">
      <summary>
            Embedded links are always updated for the specified workbook.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AutoFilter">
      <summary>
            Represents autofiltering for the specified worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.Container">
      <summary>
            Gets the auto filter's container.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.Range">
      <summary>
            Gets a <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value that represents the range to which the specified AutoFilter applies. 
            </summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value represents the range of this <see cref="T:GrapeCity.Spreadsheet.AutoFilter" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.FilterMode">
      <summary>
            Gets a value indicating whether the worksheet is in the AutoFilter filter mode.
            </summary>
      <value>
        <c>true</c> if the worksheet is in the AutoFilter filter mode; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.AddFilter(System.Int32,GrapeCity.Spreadsheet.Filter,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Adds a filter to the specified column.
            </summary>
      <param name="column">An integer value indicates the column index.</param>
      <param name="filter">A <see cref="T:GrapeCity.Spreadsheet.Filter" /> object to add to the specified column.</param>
      <param name="applyIfFirst">if set to <c>true</c>, the filter will be re-applied if there is no filter in the specifed column.</param>
      <param name="removeActiveFilter">if set to <c>true</c>, the current active filter of the column will be removed.</param>
      <param name="replaceActiveFilter">if set to <c>true</c>, the current active filter of the column will be replaced.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.SetActiveFilter(System.Int32,GrapeCity.Spreadsheet.Filter,System.Boolean)">
      <summary>
            Activates the specified <see cref="T:GrapeCity.Spreadsheet.Filter" /> for a column and re-apply filtering.
            </summary>
      <param name="column">An integer value indicates the column index.</param>
      <param name="filter">A <see cref="T:GrapeCity.Spreadsheet.Filter" /> object to become the active filter of the specified column.</param>
      <param name="apply">if set to <c>true</c>, the filter will be re-applied.</param>
      <returns>
        <c>true</c> if the filter is activated, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.RemoveFilter(System.Int32,GrapeCity.Spreadsheet.Filter,System.Boolean)">
      <summary>
            Removes a filter from the specified column.
            </summary>
      <param name="column">An integer value indicates the column index.</param>
      <param name="filter">A <see cref="T:GrapeCity.Spreadsheet.Filter" /> object to remove from the specified column.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.AutoFilterColumn" /> at the specified column.
            </summary>
      <param name="column">An integer value indicates the column index.</param>
      <returns>FilterColumn.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.ShowFilterButton(System.Int32)">
      <summary>
            Shows the filter button.
            </summary>
      <param name="column">An integer value represents the column index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.HideFilterButton(System.Int32)">
      <summary>
            Hides the filter button.
            </summary>
      <param name="column">An integer value represents the column index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.ShowAllData(System.Boolean)">
      <summary>
            Displays all the data returned by the <see cref="T:GrapeCity.Spreadsheet.AutoFilter" /> object.
            </summary>
      <param name="removing">if set to <c>true</c>, the current active filter will be removed; otherwise, it'll be set as inactive.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.Clear(System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Clears the filter and sort state at the specified column for the current object.
            </summary>
      <param name="column">An integer value indicates the column index.</param>
      <param name="removing">if set to <c>true</c>, the current active filter will be removed; otherwise, it'll be set as inactive.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.ApplyFilter">
      <summary>
            Applies the specified <see cref="T:GrapeCity.Spreadsheet.AutoFilter" /> object. 
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilter.Delete">
      <summary>
            Removes the filter from the current worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.Worksheet">
      <summary>
            Gets the worksheet which contains this <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.AutoFilter.Worksheet" /> object which contains this <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.Sort">
      <summary>
            Gets the sort object.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.AutoFilter.Sort" /> object belong to the autofilter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.GrapeCity#Spreadsheet#IAutoFilter#Sort">
      <summary>
            Gets or sets the sort object.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.AutoFilter.Sort" /> object belong to the sort owner.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.GrapeCity#Spreadsheet#IAutoFilter#Range">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified AutoFilter applies.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified AutoFilter applies.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.GrapeCity#Spreadsheet#IAutoFilter#Filters">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IFilters" /> collection that represents all the filters in an auto filtered range.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IFilters" /> collection that represents all the filters in an auto filtered range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.GrapeCity#Spreadsheet#IFilters#Count">
      <summary>
            Gets the number of filters in the filter collection.
            </summary>
      <value>An integer value represents the number of filters.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilter.GrapeCity#Spreadsheet#IFilters#Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IFilter" /> with the specified error.
            </summary>
      <returns>GrapeCity.Spreadsheet.IFilter.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IAutoFilterOwner">
      <summary>
            Represents an object which contains an <see cref="P:GrapeCity.Spreadsheet.IAutoFilterOwner.AutoFilter" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilterOwner.Worksheet">
      <summary>
            Gets the worksheet which contains this <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IAutoFilterOwner.Worksheet" /> object which contains this <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IAutoFilterOwner.NotifyFilterButtonHiddenChanged(System.Boolean)">
      <summary>
            Notifies the filter button hidden has been changed.
            </summary>
      <param name="hidden">if set to <c>true</c> the filter button is hidden.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IAutoFilterOwner.RemoveFilter">
      <summary>
            Removes the filter from the current object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilterOwner.ShowDropDownButton">
      <summary>
            Gets a value indicating whether the filter drop down button is shown. AutoFilter in table has this property.
            </summary>
      <value>
        <c>true</c> if the filter drop down button is shown; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilterOwner.AutoFilter">
      <summary>
            Getsthe autoFilter object.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IAutoFilterOwner.AutoFilter" /> object belong to the autoFilter owner.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilterOwner.DefaultSortHeader">
      <summary>
            Gets a value indicating whether the first row contains header information.
            </summary>
      <value>
        <c>true</c> if  the first row contains header information; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IAutoFilterOwner.CreateAutoFilter(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates the automatic filter.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>An <see cref="P:GrapeCity.Spreadsheet.IAutoFilterOwner.AutoFilter" /> object represents the created filter. <c>null</c> if the data is invalid.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AutoFilterColumn">
      <summary>
            The FilterColumn collection identifies a particular column in the AutoFilter range and specifies filter information that has been applied
            to this column. If a column in the AutoFilter range has no criteria specified, then there is no corresponding filterColumn collection
            expressed for that column.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilterColumn.IsFilteredOut">
      <summary>
            Gets a value indicating whether there is any filtered out item.
            </summary>
      <value>
        <c>true</c> if there is any filtered out item; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilterColumn.ColumnIndex">
      <summary>
            Gets the zero-based index indicating the AutoFilter column to which this filter information applies.
            </summary>
      <value>An integer value represents the zero-based index indicating the AutoFilter column to which this filter information applies.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilterColumn.FilterCount">
      <summary>
            Gets the count of filters in the column.
            </summary>
      <value>An integer value represents the count of filters in the column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilterColumn.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:GrapeCity.Spreadsheet.Filter" /> with the specified filter index.
            </summary>
      <param name="filterIndex">An integer value indicates the filter index.</param>
      <returns>Filter.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.AutoFilterColumn.ActiveFilter">
      <summary>
            Gets the active filter.
            </summary>
      <value>The active filter.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilterColumn.GetFilterData(System.Boolean,System.Int32)">
      <summary>
            Gets filter data from this filter column.
            </summary>
      <param name="sortByText">if set to <c>true</c> the array contains the all display texts will be sorted.</param>
      <param name="maxItems">The maximum number of returned items.</param>
      <returns>
            A <see cref="T:GrapeCity.Spreadsheet.FilterData" /> represents the filter data of this filter column.
            </returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.AutoFilterColumn.GetFilterData(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Gets filter data from specified range.
            </summary>
      <param name="worksheet">The worksheet contains the <see cref="T:GrapeCity.Spreadsheet.AutoFilter" /> object.</param>
      <param name="columnIndex">The column index to get <see cref="T:GrapeCity.Spreadsheet.FilterData" />.</param>
      <param name="row">The start row index.</param>
      <param name="row2">The end row index.</param>
      <returns>
            A <see cref="T:GrapeCity.Spreadsheet.FilterData" /> represents the filter data of this filter column.
            </returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ColorFilter">
      <summary>
            This element specifies the color to filter by and whether to use the cell's fill or font color in the filter criteria.
            If the cell's font or fill color does not match the color specified in the criteria, the rows corresponding to those cells are hidden from view.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorFilter.#ctor(GrapeCity.Spreadsheet.Color,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.ColorFilter" /> class.
            </summary>
      <param name="color">The color to filter by.</param>
      <param name="isFillColor">if set to <c>true</c> filter by cell fill.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorFilter.#ctor(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Spreadsheet.Fill)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.ColorFilter" /> class.
            </summary>
      <param name="fill">The fill to filter by.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorFilter.ByFillColor">
      <summary>
            Gets or sets a value indicating whether filter by the cell's fill color. .
            </summary>
      <value>
        <c>true</c> if filter by the cell's fill color. ; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorFilter.Fill">
      <summary>
            Gets or sets the fill which is used to filter cells by fill.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.ColorFilter.Fill" /> value represents the fill which is used to filter cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ColorFilter.FontColor">
      <summary>
            Gets or sets the color which is used to filter cells by font color.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the color which is used to filter cells.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorFilter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Applies the current filter to the specified cell range of the specified worksheet.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
      <remarks>Safely for SpreadWin to use</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorFilter.Initialize(GrapeCity.Spreadsheet.IAutoFilterOwner)">
      <summary>
            Initializes private data of this <see cref="T:GrapeCity.Spreadsheet.Filter" />.
            </summary>
      <param name="container">An <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object indicates the <see cref="T:GrapeCity.Spreadsheet.Filter" />'s container.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CustomFilter">
      <summary>
            When there is more than one custom filter criteria to apply (an 'and' or 'or' joining two criteria),
            then this element groups the customFilter elements together
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilter.#ctor(GrapeCity.Spreadsheet.CustomFilterCriteria)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilter" /> class.
            </summary>
      <param name="criteria">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> instance indicates the filter criteria.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilter.#ctor(GrapeCity.Spreadsheet.CustomFilterCriteria,GrapeCity.Spreadsheet.CustomFilterCriteria,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilter" /> class.
            </summary>
      <param name="firstCriteria">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> instance indicates the first filter criteria.</param>
      <param name="secondCriteria">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> instance indicates the second filter criteria.</param>
      <param name="and">if set to <c>true</c> [and].</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CustomFilter.Criteria1">
      <summary>
            Gets or sets the first filter criteria.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> instance indicates the filter criteria.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CustomFilter.Criteria2">
      <summary>
            Gets or sets the second filter criteria.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> instance indicates the filter criteria.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CustomFilter.And">
      <summary>
            Gets or sets a value indicating whether the two criterias have an "and" relationship.
            </summary>
      <value>
        <c>true</c> if the two criterias have an "and" relationship; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilter.Initialize(GrapeCity.Spreadsheet.IAutoFilterOwner)">
      <summary>
            Initializes private data of this <see cref="T:GrapeCity.Spreadsheet.Filter" />.
            </summary>
      <param name="container">An <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object indicates the <see cref="T:GrapeCity.Spreadsheet.Filter" />'s container.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Applies the current filter to the specified cell range of the specified worksheet.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CustomFilterCriteria">
      <summary>
            A custom AutoFilter specifies an operator and a value. There can be at most two customFilters specified, and in that case the parent
            element specifies whether the two conditions are joined by 'and' or 'or'. For any cells whose values do not meet the specified criteria,
            the corresponding rows shall be hidden from view when the fitler is applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterCriteria.None">
      <summary>
            Returns a "None" filter criteria.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilterCriteria.#ctor(GrapeCity.Spreadsheet.CustomFilterOperator,GrapeCity.CalcEngine.CalcError)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> struct.
            </summary>
      <param name="op">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterOperator" /> value that indicates the operator of the filter criteria.</param>
      <param name="value">A <see cref="T:GrapeCity.CalcEngine.CalcError" /> value indictes the filtered value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilterCriteria.#ctor(GrapeCity.Spreadsheet.CustomFilterOperator,System.DateTime)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> struct.
            </summary>
      <param name="op">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterOperator" /> value that indicates the operator of the filter criteria.</param>
      <param name="value">A <see cref="T:System.DateTime" /> value indictes the filtered value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilterCriteria.#ctor(GrapeCity.Spreadsheet.CustomFilterOperator,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> struct.
            </summary>
      <param name="op">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterOperator" /> value that indicates the operator of the filter criteria.</param>
      <param name="value">A double value indictes the filtered value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilterCriteria.#ctor(GrapeCity.Spreadsheet.CustomFilterOperator,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> struct.
            </summary>
      <param name="op">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterOperator" /> value that indicates the operator of the filter criteria.</param>
      <param name="value">A double value indictes the filtered value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CustomFilterCriteria.#ctor(GrapeCity.Spreadsheet.CustomFilterOperator,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" /> struct.
            </summary>
      <param name="op">A <see cref="T:GrapeCity.Spreadsheet.CustomFilterOperator" /> value that indicates the operator of the filter criteria.</param>
      <param name="value">A string value indictes the filtered value.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CustomFilterCriteria.Value">
      <summary>
            Gets the value of this <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" />.
            </summary>
      <value>An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> represents the value of this <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CustomFilterCriteria.Operator">
      <summary>
            Gets the operator of this <see cref="T:GrapeCity.Spreadsheet.CustomFilterCriteria" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CustomFilterOperator" /> value represents the operator of the filter criteria.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CustomFilterOperator">
      <summary>
            Specifies the comparison operation to be performed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.None">
      <summary>
            Not used.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.Equals">
      <summary>
            Equal to.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.GreaterThan">
      <summary>
            Greater than.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.GreaterThanOrEqual">
      <summary>
            Greater than or equal to.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.LessThan">
      <summary>
            Less than.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.LessThanOrEqual">
      <summary>
            Less than or equal to.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CustomFilterOperator.DoesNotEquals">
      <summary>
            Not equal to.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DynamicFilter">
      <summary>
            This collection specifies dynamic filter criteria. These criteria are considered dynamic because they can change, either with the data
            itself (e.g., "above average") or with the current system date (e.g., show values for "today"). For any cells whose values do not meet
            the specified criteria, the corresponding rows shall be hidden from view when the filter is applied.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DynamicFilter.#ctor(GrapeCity.Spreadsheet.DynamicFilterType)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.DynamicFilter" /> class.
            </summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.DynamicFilterType" /> value indicates the dynamic filter type.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DynamicFilter.Type">
      <summary>
            Gets or sets the dynamic filter type.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DynamicFilterType" /> value represents the dynamic filter type.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DynamicFilter.ToCustomFilter">
      <summary>
            Convert this to a CustomFilter object.
            </summary>
      <returns>a CustomFilter object that has same effect as this. NULL in failed case.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DynamicFilter.Initialize(GrapeCity.Spreadsheet.IAutoFilterOwner)">
      <summary>
            Initializes private data of this <see cref="T:GrapeCity.Spreadsheet.Filter" />.
            </summary>
      <param name="container">An <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object indicates the <see cref="T:GrapeCity.Spreadsheet.Filter" />'s container.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DynamicFilter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Applies the current filter to the specified cell range of the specified worksheet.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DynamicFilterType">
      <summary>
            Specifies the type of dynamic filter to be applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.AboveAverage">
      <summary>
            Shows values that are above average.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.BelowAverage">
      <summary>
            Shows values that are below average.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Tomorrow">
      <summary>
            Shows tomorrow's dates.
             </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Today">
      <summary>
            Shows today's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Yesterday">
      <summary>
            Shows yesterday's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.NextWeek">
      <summary>
            Shows next week's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.ThisWeek">
      <summary>
            Shows this week's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.LastWeek">
      <summary>
            Shows last week's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.NextMonth">
      <summary>
            Shows next month's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.ThisMonth">
      <summary>
            Shows this month's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.LastMonth">
      <summary>
            Shows last month's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.NextQuarter">
      <summary>
            Shows next quarter's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.ThisQuarter">
      <summary>
            Shows this quarter's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.LastQuarter">
      <summary>
            Shows last quarter's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.NextYear">
      <summary>
            Shows next year's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.ThisYear">
      <summary>
            Shows this year's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.LastYear">
      <summary>
            Shows last year's dates.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.YearToDate">
      <summary>
            Shows the dates between the beginning of the year and today, inclusive.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Quarter1">
      <summary>
            Shows the dates that are in the first quarter, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Quarter2">
      <summary>
            Shows the dates that are in the second quarter, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Quarter3">
      <summary>
            Shows the dates that are in the third quarter, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.Quarter4">
      <summary>
            Shows the dates that are in the fourth quarter, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.January">
      <summary>
            Shows the dates that are in January, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.February">
      <summary>
            Shows the dates that are in February, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.March">
      <summary>
            Shows the dates that are in March, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.April">
      <summary>
            Shows the dates that are in April, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.May">
      <summary>
            Shows the dates that are in May, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.June">
      <summary>
            Shows the dates that are in June, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.July">
      <summary>
            Shows the dates that are in July, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.August">
      <summary>
            Shows the dates that are in August, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.September">
      <summary>
            Shows the dates that are in September, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.October">
      <summary>
            Shows the dates that are in October, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.November">
      <summary>
            Shows the dates that are in November, regardless of year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DynamicFilterType.December">
      <summary>
            Shows the dates that are in December, regardless of year.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Filter">
      <summary>
            Represents the base class for filter.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Filter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Applies the current filter to the specified cell range of the specified worksheet.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Filter.Initialize(GrapeCity.Spreadsheet.IAutoFilterOwner)">
      <summary>
            Initializes private data of this <see cref="T:GrapeCity.Spreadsheet.Filter" />.
            </summary>
      <param name="container">An <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object indicates the <see cref="T:GrapeCity.Spreadsheet.Filter" />'s container.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Filter.Clone">
      <summary>
            Creates a new <see cref="T:GrapeCity.Spreadsheet.Filter" /> object that is a copy of the current instance.
            </summary>
      <returns>A new <see cref="T:GrapeCity.Spreadsheet.Filter" /> object that is a copy of this instance.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IAutoFilter">
      <summary>
            Represents the filter for the specified worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IAutoFilter.ApplyFilter">
      <summary>
            Applies the specified <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object. 
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IAutoFilter.ShowAllData(System.Boolean)">
      <summary>
            Displays all the data returned by the <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object.
            </summary>
      <param name="removing">if set to <c>true</c>, the current active filter will be removed; otherwise, it'll be set as inactive.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilter.FilterMode">
      <summary>
            Gets a value indicating whether the worksheet is in the AutoFilter filter mode.
            </summary>
      <value>
        <c>true</c> if the worksheet is in the AutoFilter filter mode; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilter.Filters">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IFilters" /> collection that represents all the filters in an auto filtered range.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IFilters" /> collection that represents all the filters in an auto filtered range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilter.Range">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified AutoFilter applies.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified AutoFilter applies.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAutoFilter.Sort">
      <summary>
            Gets the sort column or columns, and sort order for the <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> collection.
            </summary>
      <value>The sort.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFilters">
      <summary>
            Represents a collection of <see cref="T:GrapeCity.Spreadsheet.IFilter" /> objects that represents all the filters in an auto filtered range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilters.Count">
      <summary>
            Gets the number of filters in the filter collection.
            </summary>
      <value>An integer value represents the number of filters.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilters.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IFilter" /> object at the specified index.
            </summary>
      <param name="index">An integer value indicates the index number of the filter.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IFilter" /> object at the specified index.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFilter">
      <summary>
            Represents a filter for a single column. 
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilter.Criteria1">
      <summary>
            Gets the first filtered value for the specified column in a filtered range. 
            </summary>
      <value>An object represents the first filtered value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilter.Criteria2">
      <summary>
            Gets the second filtered value for the specified column in a filtered range. 
            </summary>
      <value>An object represents the second filtered value.</value>
      <remarks>If you try to access the <see cref="P:GrapeCity.Spreadsheet.IFilter.Criteria2" /> property for a filter that does not use two criteria, <c>null</c> will be returned.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilter.Operator">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.AutoFilterOperator" /> value that represents the operator that associates the two criteria applied by the specified filter.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.AutoFilterOperator" /> value that represents the filter operator.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFilter.On">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IFilter" /> is on.
            </summary>
      <value>
        <c>true</c> if the specified filter is on; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AutoFilterOperator">
      <summary>
            Specifies the operator to use to associate two criteria applied by a filter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.And">
      <summary>
            Logical AND of Criteria1 and Criteria2.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.Bottom10Items">
      <summary>
            Lowest-valued items displayed (number of items specified in Criteria1).
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.Bottom10Percent">
      <summary>
            Lowest-valued items displayed (percentage specified in Criteria1).
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterCellColor">
      <summary>
            Color of the cell
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterDynamic">
      <summary>
            Dynamic filter
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterFontColor">
      <summary>
            Color of the font
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterIcon">
      <summary>
            Filter icon
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.FilterValues">
      <summary>
            Filter values
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.Or">
      <summary>
            Logical OR of Criteria1 or Criteria2.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.Top10Items">
      <summary>
            Highest-valued items displayed (number of items specified in Criteria1).
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AutoFilterOperator.Top10Percent">
      <summary>
            Highest-valued items displayed (percentage specified in Criteria1).
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IconFilter">
      <summary>
            This element specifies the icon set and particular icon within that set to filter by. For any cells whose icon does not match
            the specified criteria, the corresponding rows shall be hidden from view when the filter is applied.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconFilter.#ctor(GrapeCity.Spreadsheet.CfIcon)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IconFilter" /> class.
            </summary>
      <param name="icon">The icon set.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IconFilter.Icon">
      <summary>
            Gets the icon which is used to filter.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value represents the icon which is used to filter.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconFilter.Initialize(GrapeCity.Spreadsheet.IAutoFilterOwner)">
      <summary>
            Initializes private data of this <see cref="T:GrapeCity.Spreadsheet.Filter" />.
            </summary>
      <param name="container">An <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object indicates the <see cref="T:GrapeCity.Spreadsheet.Filter" />'s container.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IconFilter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Applies the current filter to the specified cell range of the specified worksheet.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.MultiValuesFilter">
      <summary>
            When multiple values are chosen to filter by, or when a group of date values are chosen to filter by,
            this element groups those criteria together.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.#ctor">
      <summary>
            This constructor intended to be used by importing logic only.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.MultiValuesFilter.FilterByBlank">
      <summary>
            Gets a value indicating whether the blank value is filtered-in.
            </summary>
      <value>
        <c>true</c> if the blank value is filtered-in; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.MultiValuesFilter.TextItemCount">
      <summary>
            Gets the total count of filtered text items.
            </summary>
      <value>An integer value represents the total count of filtered text items.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.MultiValuesFilter.DateGroupItemCount">
      <summary>
            Gets the total count of filtered date group items.
            </summary>
      <value>An integer value represents the total count of filtered date group items.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.GetTextItem(System.Int32)">
      <summary>
            Gets the text item at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of item.</param>
      <returns>A <see cref="T:System.String" /> value represents the value of text item.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.GetDateGroupItem(System.Int32)">
      <summary>
            Gets the date group item at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of item.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DateGroupItem" /> value represents the value of date group item.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.RemoveAll">
      <summary>
            Removes all items from this filter.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Remove(System.String)">
      <summary>
            Removes the specified text item.
            </summary>
      <param name="textItem">A <see cref="T:System.String" /> value indicates the text item.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Remove(GrapeCity.Spreadsheet.DateGroupItem)">
      <summary>
            Removes the specified date group item.
            </summary>
      <param name="textItem">A <see cref="T:GrapeCity.Spreadsheet.DateGroupItem" /> value indicates the date group item.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.RemoveAt(System.Int32,System.Boolean)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of item.</param>
      <param name="textItem">if set to <c>true</c>, the specified text item will be removed; otherwise, the specified date group item will be removed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Add(System.String)">
      <summary>
            Adds the specified filtered-in value.
            </summary>
      <param name="textItem">A string value represents the filtered-in value.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Add(GrapeCity.Spreadsheet.DateGroupItem)">
      <summary>
            Adds the specified filtered-in date group item.
            </summary>
      <param name="dateGroupItem">A <see cref="T:GrapeCity.Spreadsheet.DateGroupItem" /> value represents the filtered-in date group item.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Add(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds the specified filtered-in values.
            </summary>
      <param name="filteredValues">An <see cref="!:ICollection&lt;string&gt;" /> represents the filtered-in values.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Initialize(GrapeCity.Spreadsheet.IAutoFilterOwner)">
      <summary>
            Initializes private data of this <see cref="T:GrapeCity.Spreadsheet.Filter" />.
            </summary>
      <param name="container">An <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object indicates the <see cref="T:GrapeCity.Spreadsheet.Filter" />'s container.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Applies the current filter to the specified cell range of the specified worksheet.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-out items.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.MultiValuesFilter.ToCustomFilter">
      <summary>
            Convert this to a CustomFilter object.
            </summary>
      <returns>a CustomFilter object that has same effect as this. NULL in failed case.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DateGroupItem">
      <summary>
            This collection is used to express a group of dates or times which are used in an AutoFilter criteria
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DateGroupItem.#ctor(GrapeCity.Spreadsheet.DateTimeGrouping,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.DateGroupItem" /> struct.
            </summary>
      <param name="groupingBy">The grouping by.</param>
      <param name="year">An integer value indicates the filtering year.</param>
      <param name="month">An integer value indicates the filtering.</param>
      <param name="day">An integer value indicates the filtering day.</param>
      <param name="hour">An integer value indicates the filtering hour.</param>
      <param name="minute">An integer value indicates the filtering minute.</param>
      <param name="second">An integer value indicates the filtering second.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DateTimeGrouping">
      <summary>
            Specifies the part of the date time value used in a comparision.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Year">
      <summary>
            Specifies date time values compared by year.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Month">
      <summary>
            Specifies date time values compared by month.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Day">
      <summary>
            Specifies date time values compared by day.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Hour">
      <summary>
            Specifies date time values compared by hour.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Minute">
      <summary>
            Specifies date time values compared by minute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DateTimeGrouping.Second">
      <summary>
            Specifies date time values compared by second.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.None">
      <summary>
            When the item is serialized out as xml, its value is "none".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Gregorian">
      <summary>
            When the item is serialized out as xml, its value is "gregorian".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.GregorianUs">
      <summary>
            When the item is serialized out as xml, its value is "gregorianUs".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Japan">
      <summary>
            When the item is serialized out as xml, its value is "japan".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Taiwan">
      <summary>
            When the item is serialized out as xml, its value is "taiwan".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Korea">
      <summary>
            When the item is serialized out as xml, its value is "korea".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Hijri">
      <summary>
            When the item is serialized out as xml, its value is "hijri".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Thai">
      <summary>
            When the item is serialized out as xml, its value is "thai".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.Hebrew">
      <summary>
            When the item is serialized out as xml, its value is "hebrew".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.GregorianMiddleEastFrench">
      <summary>
            When the item is serialized out as xml, its value is "gregorianMeFrench".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.GregorianArabic">
      <summary>
            When the item is serialized out as xml, its value is "gregorianArabic".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.GregorianTransliteratedEnglish">
      <summary>
            When the item is serialized out as xml, its value is "gregorianXlitEnglish".
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CalendarType.GregorianTransliteratedFrench">
      <summary>
            When the item is serialized out as xml, its value is "gregorianXlitFrench".
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Top10Filter">
      <summary>
            This element specifies the top N (percent or number of items) to filter by.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Top10Filter.#ctor(System.Boolean,System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Top10Filter" /> class.
            </summary>
      <param name="topOrder">if set to <c>true</c> filter by top order.</param>
      <param name="value">An integer value represents top or bottom value to use as the filter criteria.</param>
      <param name="isPercentage">if set to <c>true</c> filter by percent value of the column.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Top10Filter.FilterByPercent">
      <summary>
            Gets or sets a value indicating whether or not to filter by percent value of the column. A false value filters by number of items.
            </summary>
      <value>
        <c>true</c> if filter by percent value of the column; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Top10Filter.TopOrder">
      <summary>
            Gets or sets a value indicating whether or not to filter by top order. A false value filters by bottom order.
            </summary>
      <value>
        <c>true</c> if filter by top order; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Top10Filter.Value">
      <summary>
            Gets or sets top or bottom value to use as the filter criteria.
            </summary>
      <value>An integer value represents top or bottom value to use as the filter criteria.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Top10Filter.FilterValue">
      <summary>
            Gets the actual cell value in the range which is used to perform the comparison for this filter.
            </summary>
      <value>A double value represents the actual cell value in the range which is used to perform the comparison for this filter.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Top10Filter.Initialize(GrapeCity.Spreadsheet.IAutoFilterOwner)">
      <summary>
            Initializes private data of this <see cref="T:GrapeCity.Spreadsheet.Filter" />.
            </summary>
      <param name="container">An <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object indicates the <see cref="T:GrapeCity.Spreadsheet.Filter" />'s container.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Top10Filter.Apply(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Applies the current filter to the specified cell range of the specified worksheet.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object to apply filtering.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="filterOutList">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object which store all filtered-in items.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FilterData">
      <summary>
            Represents all filter data of a filter column.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FilterData.CreateEmpty">
      <summary>
            Create an empty FilterData.
            </summary>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.Fills">
      <summary>
            Gets the all display fills of the filter column.
            </summary>
      <value>An array of <see cref="T:GrapeCity.Spreadsheet.Fill" /> represents all display fills of the filter column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.FontColors">
      <summary>
            Gets the all display text colors of the filter column.
            </summary>
      <value>An array of <see cref="T:GrapeCity.Spreadsheet.Color" /> represents all display text colors of the filter column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.Icons">
      <summary>
            Gets the all display conditional formatting icons of the filter column.
            </summary>
      <value>An array of <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> represents all conditional formatting icons of the filter column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.Texts">
      <summary>
            Gets the all display texts of the filter column.
            </summary>
      <value>An array of <see cref="T:System.String" /> represents all display texts of the filter column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.DateValues">
      <summary>
            Gets the all display date values of the filter column.
            </summary>
      <value>An array of <see cref="T:GrapeCity.Spreadsheet.FilterData.DateTimeItem" /> represents all display date values of the filter column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.Type">
      <summary>
            Gets the filter mode that UI should display corresponding filter items.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.FilterDataType" /> value represents the filter mode.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.Blanks">
      <summary>
            Gets a value indicating whether there is blank in the filter column.
            </summary>
      <value>
        <c>true</c> if there is blank in the filter column; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.ErrorFormat">
      <summary>
            Gets a value indicating whether there is a formatting error.
            </summary>
      <value>
        <c>true</c> if there is a formatting error; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.DateTimeFormatter">
      <summary>
            Gets the first date time formatter in the filter column.
            </summary>
      <value>
            The date time formatter.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.IsMaximumItems">
      <summary>
            Gets a boolean value indicating whether there is more item.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FilterData.DateTimeItem">
      <summary>
            Represents a date time value and its corresponding <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> in the worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FilterData.DateTimeItem.Value">
      <summary>
            Gets the date time value.
            </summary>
      <value>A <see cref="T:System.DateTime" /> value represents the cell date time value.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FilterDataType">
      <summary>
            Represents the filter mode which UI should be displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterDataType.Text">
      <summary>
            Display the Text filters.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterDataType.Numeric">
      <summary>
            Display the Numeric filters.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterDataType.Date">
      <summary>
            Display the Date filters.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CompatibleFeatures.AutoRowHeight">
      <summary>
            Gets a booelan value indicating whether the old behavior is used.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CompatibleFeatures.IsModernControl">
      <summary>
            Gets or sets how <see cref="T:GrapeCity.Spreadsheet.UI.UIManager" /> notify changes to the product.
            </summary>
      <value>
        <c>true</c> to allow <see cref="T:GrapeCity.Spreadsheet.UI.UIManager" /> notify for painting only.
            <c>false</c> to fire events precisely for product to work with separated models.
            </value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CompatibleFeatures.Clone">
      <summary>
            Clones this <see cref="T:GrapeCity.Spreadsheet.CompatibleFeatures" /> instance.
            </summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.CompatibleFeatures" /> value represents the cloned compatibleFeatures.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DataRestrictions">
      <summary>
            Specifies the reason for an unaccepted expression or value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.None">
      <summary>
            Indicates that the expression is valid.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.ExternalReference">
      <summary>
            You may not use references to other workbooks.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.RelativeReference">
      <summary>
            You cannot use relative references.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.ReferenceOperatorsOrArrayConstants">
      <summary>
            You may not use reference operators (such as unions, intersections and ranges) or array constants.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.InvalidMultiReference">
      <summary>
            This type of reference cannot be used in a formula.
            Change the reference to a single cell, or use the reference with a worksheet function, such as =SUM(A1:E5).
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.InvalidReference">
      <summary>
            This type of reference cannot be used in a formula.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.InvalidFormula">
      <summary>
            Enter a valid formula.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.NotFoundNamedRange">
      <summary>
            A named range you specified cannot be found.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.ListSource">
      <summary>
            The list source must be a delimited list, or a reference to single row or column.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.NumericOnly">
      <summary>
            The value must be a numeric value, numeric expression, or refer to a cell containing a numeric value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.IntegerOnly">
      <summary>
            Decimal values cannot be used.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.InvalidValue">
      <summary>
            The value (date/time) you entered is invalid.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.NegativeValue">
      <summary>
            Negative values cannot be used.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.InvalidBetween">
      <summary>
            The maximum must be greater than or equal to the minimum.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DataRestrictions.MissingBetween">
      <summary>
            You must enter both a Maximum and a Minimum.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ManipulationOptions">
      <summary>
            Indicates which data type will be performed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Values">
      <summary>
            Manipulate with cell values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Formulas">
      <summary>
            Manipulate with cell formulas.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Contents">
      <summary>
            Manipulate with cell values and formulas.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Comments">
      <summary>
            Manipulate with comments.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Formatting">
      <summary>
            Manipulate with formatting. This option includes the <see cref="F:GrapeCity.Spreadsheet.ManipulationOptions.NumberFormats" /> option.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.NumberFormats">
      <summary>
            Manipulate with number formats.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.ConditionalFormatting">
      <summary>
            Manipulate with conditional formatting.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.Formats">
      <summary>
            Manipulate with formatting and number formats.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ManipulationOptions.All">
      <summary>
            Manipulate with all data.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.MergePolicy">
      <summary>
            Specifies how the control handles automatic merging of cells based on the values in the cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.MergePolicy.None">
      <summary>
            Never automatically merges cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.MergePolicy.Always">
      <summary>
            Always automatically merges neighboring cells with identical values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.MergePolicy.Restricted">
      <summary>
            Automatically merges neighboring cells with identical values if the corresponding cells in another row or column are similarly merged.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IExtendedData">
      <summary>
            Represents an interface for other products to extend data of Worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IExtendedData.IsEmpty">
      <summary>
            Determines whether this instance is empty.
            </summary>
      <returns>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IExtendedData.ImportExtensionData(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)">
      <summary>
            Imports the extension data.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IExtendedData.IsRequiredExport(GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>
            Gets a value indicating whether the extension requires to export its data.
            </summary>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <value>
        <c>true</c> if the extension requires to export its data; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IExtendedData.ExportExtensionData(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>
            Exports the extension data.
            </summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> object indicates the Xml writer.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ICompositeExtendData">
      <summary>
            Represents an interface for other products to extend composable data of Worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICompositeExtendData.IsReusable">
      <summary>
            Gets a value indicating whether this instance can be reused via composing.
            </summary>
      <value>
        <c>true</c> if this instance can be reused via composing; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICompositeExtendData.Composite(GrapeCity.Spreadsheet.ICompositeExtendData)">
      <summary>
            Composites data from higher level object. Data of this object will be replaced.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICompositeExtendData.Merge(GrapeCity.Spreadsheet.ICompositeExtendData)">
      <summary>
            Merges data from lower level object. Data of this object will be kept.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICompositeExtendData.CopyFrom(GrapeCity.Spreadsheet.ICompositeExtendData)">
      <summary>
            Copies data from the source instance.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ICompositeExtendData.CanAffectToPreferredRowHeight">
      <summary>
            Gets a boolean value indicating whether this instance can affect to preferred row height
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICompositeExtendData.RemoveDifferentData(GrapeCity.Spreadsheet.ICompositeExtendData)">
      <summary>
            Remove common data from this <see cref="T:GrapeCity.Spreadsheet.ICompositeExtendData" /> object. 
            </summary>
      <param name="other">The <see cref="T:GrapeCity.Spreadsheet.ICompositeExtendData" /> object to compare with.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorksheetOptions">
      <summary>
            Represents all options of the <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetOptions.Delete">
      <summary>
            Delete this WorksheetOptions.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetOptions.FrozenLineThickness">
      <summary>
            Gets or sets the frozen line thickness.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetOptions.FrozenLineColor">
      <summary>
            Gets or sets the frozen line color.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Hyperlink">
      <summary>
            Represents a hyperlink.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Hyperlink.#ctor(GrapeCity.Spreadsheet.HyperlinkType)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Hyperlink" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Hyperlink.Type">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.HyperlinkType" /> constant, that represents the location of the hyperlink.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Hyperlink.NavigationAddress">
      <summary>
            Gets the string value that represents the navigation address of the hyperlink.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Hyperlink.Address">
      <summary>
            Gets or sets a string value that represents the address of the target document.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Hyperlink.EmailSubject">
      <summary>
            Gets or sets the string value of the specified hyperlink's email subject line. The subject line is appended to the hyperlink's address.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Hyperlink.ScreenTip">
      <summary>
            Gets or sets the ScreenTip text for the specified hyperlink.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Hyperlink.SubAddress">
      <summary>
            Gets or sets the location within the document associated with the hyperlink.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Hyperlink.Equals(GrapeCity.Spreadsheet.Hyperlink)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IHyperlinks">
      <summary>
            Represents the collection of hyperlinks for a worksheet or range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IHyperlinks.Count">
      <summary>
            Gets an integer value that represents the number of hyperlinks in the collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IHyperlinks.Item(System.Int32)">
      <summary>
            Gets a single hyperlink from a collection.
            </summary>
      <param name="index">The index number of the hyperlink.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IHyperlinks.Add(System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
      <summary>
            Adds a hyperlink to the specified range.
            </summary>
      <param name="row">The row for the hyperlink</param>
      <param name="column">The column for the hyperlink</param>
      <param name="address">The address of the hyperlink.</param>
      <param name="subAddress">The subaddress of the hyperlink.</param>
      <param name="screenTip">The screen tip to be displayed when the mouse pointer is paused over the hyperlink.</param>
      <param name="display">The text to be displayed for the hyperlink.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IHyperlink" /> object that represents the new hyperlink.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IHyperlinks.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
      <summary>
            Adds a hyperlink to the specified range.
            </summary>
      <param name="row">The top row for the hyperlink</param>
      <param name="column">The left column for the hyperlink</param>
      <param name="row2">The bottom row for the hyperlink</param>
      <param name="column2">The right column for the hyperlink</param>
      <param name="address">The address of the hyperlink.</param>
      <param name="subAddress">The subaddress of the hyperlink.</param>
      <param name="screenTip">The screen tip to be displayed when the mouse pointer is paused over the hyperlink.</param>
      <param name="display">The text to be displayed for the hyperlink.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IHyperlink" /> object that represents the new hyperlink.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IHyperlinks.Add(System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Adds a hyperlink to the specified range.
            </summary>
      <param name="range">The range for the hyperlink</param>
      <param name="address">The address of the hyperlink.</param>
      <param name="subAddress">The subaddress of the hyperlink.</param>
      <param name="screenTip">The screen tip to be displayed when the mouse pointer is paused over the hyperlink.</param>
      <param name="display">The text to be displayed for the hyperlink.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IHyperlink" /> object that represents the new hyperlink.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IHyperlinks.Add(GrapeCity.Spreadsheet.Drawing.IShape,System.String,System.String,System.String)">
      <summary>
            Adds a hyperlink to the specified range.
            </summary>
      <param name="shape">The <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object for the hyperlink</param>
      <param name="address">The address of the hyperlink.</param>
      <param name="subAddress">The subaddress of the hyperlink.</param>
      <param name="screenTip">The screen tip to be displayed when the mouse pointer is paused over the hyperlink.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.IHyperlink" /> object that represents the new hyperlink.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IHyperlinks.Delete">
      <summary>
            Deletes all hyperlinks.
            </summary>
      <remarks>
            Not only hyperlinks will be removed; cell formatting will be removed also. If you only want to remove the hyperlink, see the <see cref="M:GrapeCity.Spreadsheet.IRange.ClearHyperlinks" /> function.
            </remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IHyperlink">
      <summary>
            Represents a hyperlink.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IHyperlink.Address">
      <summary>
            Gets or sets a string value that represents the address of the target document.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IHyperlink.EmailSubject">
      <summary>
            Gets or sets the string value of the specified hyperlink's email subject line. The subject line is appended to the hyperlink's address.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IHyperlink.Range">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range that the specified hyperlink is attached to.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IHyperlink.ScreenTip">
      <summary>
            Gets or sets the ScreenTip text for the specified hyperlink.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IHyperlink.SubAddress">
      <summary>
            Gets or sets the location within the document associated with the hyperlink.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IHyperlink.TextToDisplay">
      <summary>
            Gets or sets the text to be displayed for the specified hyperlink. The default value is the address of the hyperlink.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IHyperlink.Type">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.HyperlinkType" /> constant, that represents the location of the hyperlink.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IHyperlink.Delete">
      <summary>
            Deletes the hyperlink.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.HyperlinkType">
      <summary>
            Specifies the type of hyperlink.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HyperlinkType.Range">
      <summary>
            Hyperlink applies to a <see cref="T:GrapeCity.Spreadsheet.IRange" /> object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HyperlinkType.Shape">
      <summary>
            Hyperlink applies to a <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.PageBreaks">
      <summary>
            Represents page break information used for print layout view, page layout view, drawing print breaks in normal view, and for printing the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.PageBreaks.#ctor">
      <summary>
            Initializes a new instance of the <see cref="!:PageSetup" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.PageBreaks.Clear">
      <summary>
            Clears all the existing page breaks
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.PageBreaks.Count">
      <summary>
            Gets the total number of page breaks.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.PageBreaks.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Break" /> value at the specified position.
            </summary>
      <param name="index">An integer value indicates the break item position.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Break" /> value at the specified position.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.PageBreaks.GetBreak(System.Int32)">
      <summary>
            Get the <see cref="!:BreakAttributes" /> value of the specified axis index.
            </summary>
      <param name="index">An integer value indicates the axis index.</param>
      <returns>A <see cref="!:BreakAttributes" /> value represents the page break information.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.PageBreaks.SetBreak(System.Int32,GrapeCity.Spreadsheet.PageBreak)">
      <summary>
            Set the page break information for the specified axis index.
            </summary>
      <param name="index">An integer value indicates the axis index.</param>
      <param name="breakAttributes">A <see cref="!:BreakAttributes" /> value indicates the page break information.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.PageBreaks.Reset(System.Int32)">
      <summary>
            Resets the page break at the specified axis index.
            </summary>
      <param name="index">An integer value indicates the axis index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.PageBreaks.NextBreakFromId(System.Int32,System.Int32@)">
      <summary>
            Gets the next break entry point.
            </summary>
      <param name="id">The current ID.</param>
      <param name="nextId">The corresponding ID of the next entry point.</param>
      <returns>The next break entry point.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.PageBreaks.NextBreak(System.Int32,System.Int32@)">
      <summary>
            Gets the next break entry point.
            </summary>
      <param name="breakItemIndex">The current break entry point.</param>
      <param name="id">The corresponding ID of the next entry point.</param>
      <returns>The next break entry point.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Break">
      <summary>
            Represents a page break information.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Break.Id">
      <summary>
            Gets an integer value indicates the axis index.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Break.Attributes">
      <summary>
            Gets the page break flag.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.PageBreak">
      <summary>
            Specifies page break location in the worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PageBreak.None">
      <summary>
            Page breaks are not inserted in the worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PageBreak.Manual">
      <summary>
            Page breaks are manually inserted.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.LayoutManager">
      <summary>
            Represents the layout manager.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.RowBreaks">
      <summary>
            Gets horizontal page break information used for print layout view, page layout view, drawing print breaks in normal view, and for printing the worksheet.
            </summary>
      <value>The row breaks.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.ColumnBreaks">
      <summary>
            Gets vertical page break information used for print layout view, page layout view, drawing print breaks in normal view, and for printing the worksheet.
            </summary>
      <value>The row breaks.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.UnMerge">
      <summary>
            Separates a merged area into individual cells.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.UnMerge(System.Int32,System.Int32)">
      <summary>
            Separates a merged area into individual cells.
            </summary>
      <param name="row">An integer value indicates the row index of the cell which belongs to the merged area.</param>
      <param name="column">An integer value indicates the column index of the cell which belongs to the merged area.</param>
      <returns>
        <c>true</c> if there is at least one unmerged area, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.UnMerge(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Separates a merged area into individual cells.
            </summary>
      <param name="row">An integer value indicates the top row index of the cell which belongs to the merged area.</param>
      <param name="column">An integer value indicates the left column index of the cell which belongs to the merged area.</param>
      <param name="row2">An integer value indicates the bottom row index of the cell which belongs to the merged area.</param>
      <param name="column2">An integer value indicates the right column index of the cell which belongs to the merged area.</param>
      <param name="overlap">Unmerges if the cell range overlaps the merged cells.</param>
      <returns>
        <c>true</c> if there is at least one unmerged area, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.Merge(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates a merged cell from the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="across">if set to <c>true</c>, merge cells in each row (or column) of the specified range as separate merged cells.</param>
      <param name="vertical">if set to <c>true</c>, cells are merged by rows; otherwise, cells are merged by columns. It has effect only if <paramref name="across" /> is <c>true</c>.</param>
      <param name="replace">if set to <c>true</c>, intersected merged cells will be removed; otherwise, they'll be unioned.</param>
      <param name="clearCellValue">if set to <c>true</c>, all overlapped cell will be clear.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ActionResult`1" /> value represents the action result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetRowAxisVisibility">
      <summary>
            Gets the row axis visibility. It contains hidden row indexes.
            </summary>
      <returns>IntervalBitmap.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetColumnAxisVisibility">
      <summary>
            Gets the column axis visibility. It contains hidden column indexes.
            </summary>
      <returns>IntervalBitmap.</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.LayoutManager.GetRowAxisVisibilityAsIntervalBitmap(System.Int32,System.Int32,System.Boolean)" -->
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.NextDifferenceVisibleRow(System.Int32)">
      <summary>
            Gets the next different visible row.
            </summary>
      <param name="row">The index of the current row.</param>
      <returns>An integer value represents the index of next different visible row.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.NextDifferenceVisibleColumn(System.Int32)">
      <summary>
            Gets the next different visible row.
            </summary>
      <param name="column">The index of the current row.</param>
      <returns>An integer value represents the index of next different visible row.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.PreviousDifferenceVisibleRow(System.Int32)">
      <summary>
            Gets the previous different visible row.
            </summary>
      <param name="row">The index of the current row.</param>
      <returns>An integer value represents the index of next different visible row.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.PreviousDifferenceVisibleColumn(System.Int32)">
      <summary>
            Gets the previous different visible row.
            </summary>
      <param name="column">The index of the current row.</param>
      <returns>An integer value represents the index of next different visible row.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.DefaultRowHeight">
      <summary>
            Gets the default height of the row.
            </summary>
      <value>An integer value indicates the default height of the row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.DefaultColumnWidth">
      <summary>
            Gets the default width of the column.
            </summary>
      <value>An integer value indicates the default width of the column.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.IsOutlineAvailable(System.Boolean)">
      <summary>
            Determines whether the corresponding outline contains group(s).
            </summary>
      <param name="isRowOutline">if set to <c>true</c>, return data from row outline; otherwise, return data from column outline.</param>
      <returns>
        <c>true</c> if the corresponding outline contains at least one group; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetMaxOutlineLevel(System.Boolean)">
      <summary>
            Gets an integer value represents the maximum outline level.
            </summary>
      <param name="isRowOutline">if set to <c>true</c>, return data from row outline; otherwise, return data from column outline.</param>
      <returns>An <see cref="T:System.Int32" /> value represents the maximum outline level.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.RowOutline">
      <summary>
            Gets the row outline.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.Outline" /> object represents the row outline.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.LayoutManager.ColumnOutline">
      <summary>
            Gets the column outline.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.Outline" /> object represents the column outline.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowHidden(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Sets the hidden state for the specified rows.
            </summary>
      <param name="row">A integer value indicates the top row index.</param>
      <param name="row2">A integer value indicates the bottom row index.</param>
      <param name="hidden">A boolean value indicates the hidden of the row.</param>
      <returns>
        <c>true</c> if the row visibility changed (also notified)</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowHidden(System.Int32,System.Boolean)">
      <summary>
            Sets the hidden of the row.
            </summary>
      <param name="row">A boolean value indicates the row index.</param>
      <param name="hidden">A boolean value indicates the hidden of the row.</param>
      <returns>
        <c>true</c> if the state of the element is changed, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnHidden(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Sets the hidden of the column.
            </summary>
      <param name="column">A boolean value indicates the left column index.</param>
      <param name="column2">A boolean value indicates the right column index.</param>
      <param name="hidden">A boolean value indicates the hidden of the column.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnHidden(System.Int32,System.Boolean)">
      <summary>
            Sets the hidden of the column.
            </summary>
      <param name="column">A boolean value indicates the column index.</param>
      <param name="hidden">A boolean value indicates the hidden of the column.</param>
      <returns>
        <c>true</c> if the state of the element is changed, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowHeight(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Sets the height of the row.
            </summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="row2">An integer value indicates the bottomr ow index.</param>
      <param name="value">An integer value indicates the height of the column.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowHeight(System.Int32,System.Int32)">
      <summary>
            Sets the height of the row.
            </summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="value">An integer value indicates the height of the column.</param>
      <returns>An integer value indicates the old size</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetRowMergePolicy(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.MergePolicy" /> value indicating whether to automatically merge adjacent identical cells.
            </summary>
      <param name="row">An integer value indicates the row index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowMergePolicy(System.Int32,GrapeCity.Spreadsheet.MergePolicy)">
      <summary>
            Sets the <see cref="T:GrapeCity.Spreadsheet.MergePolicy" /> value indicating whether to automatically merge adjacent identical cells.
            </summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.MergePolicy" /> value indicating whether to automatically merge adjacent identical cells.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowMergePolicy(System.Int32,System.Int32,GrapeCity.Spreadsheet.MergePolicy)">
      <summary>
            Sets the <see cref="T:GrapeCity.Spreadsheet.MergePolicy" /> value indicating whether to automatically merge adjacent identical cells.
            </summary>
      <param name="row">An integer value indicates the start row index.</param>
      <param name="row2">An integer value indicates the end row index.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.MergePolicy" /> value indicating whether to automatically merge adjacent identical cells.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetColumnMergePolicy(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.MergePolicy" /> value indicating whether to automatically merge adjacent identical cells.
            </summary>
      <param name="column">An integer value indicates the row index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnMergePolicy(System.Int32,GrapeCity.Spreadsheet.MergePolicy)">
      <summary>
            Sets the <see cref="T:GrapeCity.Spreadsheet.MergePolicy" /> value indicating whether to automatically merge adjacent identical cells.
            </summary>
      <param name="column">An integer value indicates the column index.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.MergePolicy" /> value indicating whether to automatically merge adjacent identical cells.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnMergePolicy(System.Int32,System.Int32,GrapeCity.Spreadsheet.MergePolicy)">
      <summary>
            Sets the <see cref="T:GrapeCity.Spreadsheet.MergePolicy" /> value indicating whether to automatically merge adjacent identical cells.
            </summary>
      <param name="column">An integer value indicates the start column index.</param>
      <param name="column2">An integer value indicates the end column index.</param>
      <param name="value">A <see cref="T:GrapeCity.Spreadsheet.MergePolicy" /> value indicating whether to automatically merge adjacent identical cells.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnWidth(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Sets the width of the column.
            </summary>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <param name="value">An integer value indicates the width of the column.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnWidth(System.Int32,System.Int32)">
      <summary>
            Sets the width of the column.
            </summary>
      <param name="column">An integer value indicates the column index.</param>
      <param name="value">An integer value indicates the width of the column.</param>
      <returns>An integer value indicates the old size</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetRowHeight(System.Int32)">
      <summary>
            Gets the height of the row.
            </summary>
      <param name="row">An integer value indicates the row index.</param>
      <returns>An integer value represents the height of the row.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetColumnWidth(System.Int32)">
      <summary>
            Gets the width of the column.
            </summary>
      <param name="column">An integer value indicates the column index.</param>
      <returns>An integer value represents the width of the column.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetRowResizable(System.Int32)">
      <summary>
            Gets whether a row can be resized
            </summary>
      <param name="row">An integer value indicates the row index</param>
      <returns>A boolean value represents whether row is resizable</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetColumnResizable(System.Int32)">
      <summary>
            Gets whether a column can be resized
            </summary>
      <param name="column">An integer value indicates the column index</param>
      <returns>A boolean value represents whether column is resizable</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowResizable(System.Int32,System.Boolean)">
      <summary>
            Sets the resizable flag of a row
            </summary>
      <param name="row">An integer value indicates the row index</param>
      <param name="value">A boolean value indicates whether row is resizable</param>
      <returns>
        <c>true</c> if the state of the element is changed, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetRowResizable(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Sets the resizable flag of a range of rows
            </summary>
      <param name="row">An integer value indicates the start row index</param>
      <param name="row2">An integer value indicates the end row index</param>
      <param name="value">A boolean value indicates whether rows are resizable</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnResizable(System.Int32,System.Boolean)">
      <summary>
            Sets the resizable flag of a column
            </summary>
      <param name="column">An integer value indicates the column index</param>
      <param name="value">A boolean value indicates whether column is resizable</param>
      <returns>
        <c>true</c> if the state of the element is changed, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetColumnResizable(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Sets the resizable flag of a range of columns
            </summary>
      <param name="column">An integer value indicates the start column index</param>
      <param name="column2">An integer value indicates the end column index</param>
      <param name="value">A boolean value indicates whether columns are resizable</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.CreateOutlineVisibilityStorage(System.Boolean)">
      <summary>
            Gets the outline visibility storage.
            </summary>
      <param name="isRow">
        <c>true</c> indicates the row outline visiblity storage; otherwise, it's the column outline visibility storage.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object represent the visibility storage of the outline.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.CreateAxisVisibilityStorage(System.Boolean)">
      <summary>
            Sets the row and column axis visibility storages.
            </summary>
      <param name="isRow">
        <c>true</c> indicates the row outline visiblity storage; otherwise, it's the column outline visibility storage.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object represent the visibility storage of the axis.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.CopyEntireAxis(System.Int32,System.Int32,GrapeCity.Spreadsheet.LayoutManager,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies axis information from the current <see cref="T:GrapeCity.Spreadsheet.LayoutManager" /> to another <see cref="T:GrapeCity.Spreadsheet.LayoutManager" />.
            </summary>
      <param name="fromRow">The start copied row.</param>
      <param name="fromColumn">The start copied column.</param>
      <param name="targetLayoutManager">The target <see cref="T:GrapeCity.Spreadsheet.LayoutManager" />.</param>
      <param name="toRow">The target row.</param>
      <param name="toColumn">The target column.</param>
      <param name="rowCount">The totals number of copied rows.</param>
      <param name="columnCount">The totals number of copied columns.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.IsMergedCellAvailable">
      <summary>
            Indicates whether there is at least on merged cell in the worksheet.
            </summary>
      <returns>
        <c>true</c> if there is at least one merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.IsMergedCellAvailable(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Indicates whether there is at least on merged cell in the specified range of the worksheet.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>
        <c>true</c> if there is at least one merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.FindMergedCell(System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference@)">
      <summary>
            Finds the merged cell which intersects with the specified reference.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="mergedCell">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the intersected reference.</param>
      <returns>
        <c>true</c> if there is intersected merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.FindOverlapMergedCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Finds all merged cells which overlap the specified reference.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.FindMergedCell(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference@)">
      <summary>
            Finds the unioned reference of all merged cells which intersect with the specified reference.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <param name="unionedMergedCell">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the unioned reference.</param>
      <param name="mergedCells">An array represents all merged cells in specified reference</param>
      <returns>
        <c>true</c> if there is at least one intersected merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.FindMergedCell(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference[]@)">
      <summary>
            Finds all merged cells which intersect with the specified reference.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <param name="mergedCells">An array represents all merged cells in specified reference</param>
      <returns>
        <c>true</c> if there is at least one intersected merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.FindMergedCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Finds all merged cells which intersect with the specified reference.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <returns>An enumarable object that can enumarate through all merged cells</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.IsIntersectedButNotOverlapMergedCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets a boolean value indicates that the specified range intersects with a merged cell but not overlap it.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <returns>
        <c>true</c> if the specified range intersects with a merged cell but not overlap it.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.CanAutoFitRow(System.Int32,System.Boolean)">
      <summary>
            Checks whether a row is eligible for auto row height when cell's value or properties changed
            </summary>
      <param name="row"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetAutoRowHeight(System.Int32,System.Int32)">
      <summary>
            Sets the automatic size to a specific row.
            </summary>
      <param name="row">An integer value indicates the row index.</param>
      <returns>An integer value indicates the auto height.</returns>
      <remarks>This method will clear custom size flag of row.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.ClearRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Clears the axis settings of rows
            </summary>
      <param name="row">An integer value indicates the index of row</param>
      <param name="count">An integer value indicates the number of rows to clear</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.ClearColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Clears the axis settings of columns
            </summary>
      <param name="column">An integer value indicates the index of column</param>
      <param name="count">An integer value indicates the number of columns to clear</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.ResetAxisProperty(System.Int32,GrapeCity.Spreadsheet.AxisProperty)">
      <summary>
            Resets the axis property of specified row or column
            </summary>
      <param name="index">An integer value indicates the index of row or column</param>
      <param name="axisProperty">The <seealso cref="T:GrapeCity.Spreadsheet.AxisProperty" /> to be reset</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetTotalVisibleSize(System.Boolean)">
      <summary>
            Gets the total visible size of the specified axis.
            </summary>
      <param name="isRow">
        <c>true</c> to calculate the visible height; otherwise, calculate the visible width.</param>
      <returns>The total visible size of the specified axis.</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.LayoutManager.GenerateUILayout(System.Int32,System.Int32,System.Boolean,System.Action{System.Int32,System.Int32,System.Int32,System.Boolean,GrapeCity.Spreadsheet.MergePolicy})" -->
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetHorizontalPaneCount">
      <summary>
            Gets the total numbers of horizontal panes.
            </summary>
      <returns>An integer value represents the total numbers of horizontal panes.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetVerticalPaneCount">
      <summary>
            Gets the total numbers of horizontal panes.
            </summary>
      <returns>An integer value represents the total numbers of horizontal panes.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetPaneColumn(System.Int32)">
      <summary>
            Gets the column number where the window is split into the specified pane.
            </summary>
      <param name="pane">The column pane index.</param>
      <returns>An integer value represents the column number where the window is split into the specified pane.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetPaneRow(System.Int32)">
      <summary>
            Gets the row number where the window is split into the specified pane.
            </summary>
      <param name="pane">The row pane index.</param>
      <returns>An integer value represents the row number where the window is split into the specified pane.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetPaneOffsetX(System.Int32)">
      <summary>
            Gets the column offset x where the window is split into the specified pane.
            </summary>
      <param name="pane">The column pane index.</param>
      <returns>An integer value represents the column number where the window is split into the specified pane.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetPaneOffsetY(System.Int32)">
      <summary>
            Gets the row offset y where the window is split into the specified pane.
            </summary>
      <param name="pane">The row pane index.</param>
      <returns>An integer value represents the row number where the window is split into the specified pane.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetPaneWidth(System.Int32)">
      <summary>
            Gets the width of the specified pane.
            </summary>
      <param name="pane">The column pane index.</param>
      <returns>An integer value represents the width of the specified pane.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetPaneHeight(System.Int32)">
      <summary>
            Gets the height of the specified pane.
            </summary>
      <param name="pane">The row pane index.</param>
      <returns>An integer value represents the height of the specified pane.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetPane(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>
            Gets the pane from the specified cell.
            </summary>
      <param name="row">An integer value indicates the top row index of the cell.</param>
      <param name="column">An integer value indicates the left column index of the cell.</param>
      <param name="paneRow">The active pane's row index.</param>
      <param name="paneColumn">The active pane's column index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetActivePane(System.Int32@,System.Int32@)">
      <summary>
            Gets the active pane.
            </summary>
      <param name="paneRow">The active pane's row index.</param>
      <param name="paneColumn">The active pane's column index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetActivePane(System.Int32,System.Int32)">
      <summary>
            Sets the active pane.
            </summary>
      <param name="paneRow">The active pane's row index.</param>
      <param name="paneColumn">The active pane's column index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetPaneRow(System.Int32,System.Int32)">
      <summary>
            Sets the top row of the specified pane.
            </summary>
      <param name="paneRow">The pane index.</param>
      <param name="row">The top row index of the pane.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetPaneColumn(System.Int32,System.Int32)">
      <summary>
            Sets the left column of the specified pane.
            </summary>
      <param name="paneColumn">The pane index.</param>
      <param name="column">The top row index of the pane.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetPaneOffsetX(System.Int32,System.Int32)">
      <summary>
            Sets the left offset of the specified pane.
            </summary>
      <param name="paneColumn">The pane index.</param>
      <param name="offSet">The top row index of the pane.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.SetPaneOffsetY(System.Int32,System.Int32)">
      <summary>
            Sets the top offset the specified pane.
            </summary>
      <param name="paneRow">The pane index.</param>
      <param name="offSet">The top offset of the pane.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.LayoutManager.GetScaledPaneOffsetX(System.Int32)" -->
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetScaledPaneOffsetY(System.Int32)">
      <summary>
            Gets the scaled row offset y where the window is split into the specified pane.
            </summary>
      <param name="pane">The row pane index.</param>
      <returns>An integer value represents the row number where the window is split into the specified pane.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.LayoutManager.GetDistance(System.Int32,System.Int32,System.Double,System.Boolean)">
      <summary>
            Gets the distance between 2 rows or columns.
            </summary>
      <param name="index">The first row/column.</param>
      <param name="index2">Theh second row/column.</param>
      <param name="scale">The scaling factor.</param>
      <param name="isRow">
        <c>true</c> to get distance between 2 rows; otherwise, <c>false</c>.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AxisProperty">
      <summary>
            Properties of axis
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.ColumnResizable">
      <summary>
            The resizable ability of column
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.RowResizable">
      <summary>
            The resizable ability of row
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.ColumnHidden">
      <summary>
            The visibility of column
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.RowHidden">
      <summary>
            The visibility of row
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.ColumnWidth">
      <summary>
            The width of column
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.RowHeight">
      <summary>
            The height of row
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.ColumnMergePolicy">
      <summary>
            The column merge policy
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.AxisProperty.RowMergePolicy">
      <summary>
            The column merge policy
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Outline.MaxOutlineLevel">
      <summary>
            Gets the maximum outline level.
            </summary>
      <value>The maximum outline level.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.Group(System.Int32,System.Int32)">
      <summary>
            Increments the outline level of the specified rows.
            </summary>
      <param name="startIndex">An integer value indicates the start index.</param>
      <param name="endIndex">An integer value indicates the end index.</param>
      <returns>
        <c>true</c> if the specified range is grouped, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.Ungroup(System.Int32,System.Int32)">
      <summary>
            Ungroups the specified range.
            </summary>
      <param name="startIndex">An integer value indicates the start index.</param>
      <param name="endIndex">An integer value indicates the end index.</param>
      <returns>
        <c>true</c> if the state is changed, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.Clear(System.Int32,System.Int32)">
      <summary>
            Clear the row group outline.
            </summary>
      <param name="startIndex">An integer value indicates the start index.</param>
      <param name="endIndex">An integer value indicates the end index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.ShowDetail(System.Int32,System.Int32)">
      <summary>
            Expands a group of cells.
            </summary>
      <param name="startIndex">An integer value indicates the start index.</param>
      <param name="endIndex">An integer value indicates the end index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.HideDetail(System.Int32,System.Int32)">
      <summary>
            Collapses a group of cells.
            </summary>
      <param name="startIndex">An integer value indicates the start index.</param>
      <param name="endIndex">An integer value indicates the end index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.ShowLevels(System.Int32,System.Boolean)">
      <summary>
            Shows all outline groups up to the specified outline level.
            </summary>
      <param name="level">An integer value indicates the group outline level.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Outline.DumpGroups(System.Int32,System.Boolean,System.Action{System.Int32,System.Int32,System.Int32,System.Boolean},System.Action{System.Int32,System.Int32})" -->
    <member name="M:GrapeCity.Spreadsheet.Outline.GetFirstBlock(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Boolean@)">
      <summary>
            Gets the first block of the outline.
            </summary>
      <param name="index">The starting index.</param>
      <param name="blockIndex">The start index of the block.</param>
      <param name="blockIndex2">The end index of the block.</param>
      <param name="level">The group level of the block.</param>
      <param name="collapsed">if set to <c>true</c>, the corresponding group is collapsed; otherwise, <c>false</c>.</param>
      <returns>An integer value represents the access key of the current block. <see cref="F:System.Int32.MaxValue" /> if there is no more block after.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Outline.GetNextBlock(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Boolean@)">
      <summary>
            Gets the next block of the specified access key in the outline.
            </summary>
      <param name="key">The access key of the previous block.</param>
      <param name="blockIndex">The start index of the block.</param>
      <param name="blockIndex2">The end index of the block.</param>
      <param name="level">The group level of the block.</param>
      <param name="collapsed">if set to <c>true</c>, the corresponding group is collapsed; otherwise, <c>false</c>.</param>
      <returns>An integer value represents the access key of the current block. <see cref="F:System.Int32.MaxValue" /> if there is no more block after.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ActionResult`1">
      <summary>
            Represents the executing result of an action.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ActionResult`1.#ctor(System.String)">
      <summary>
            Initializes an action failed result.
            </summary>
      <param name="details">The details information of executing action.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ActionResult`1.#ctor(System.String,System.Type)">
      <summary>
            Initializes an action failed result.
            </summary>
      <param name="details">The details information of executing action.</param>
      <param name="exceptionType">The details type of exception</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ActionResult`1.#ctor(`0,System.String,GrapeCity.Spreadsheet.UI.ActionCategory)">
      <summary>
            Initializes an action failed result.
            </summary>
      <param name="value">A <see cref="!:T" /> value represents the executing result.</param>
      <param name="details">The details information of executing action.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ActionResult`1.#ctor(`0)">
      <summary>
            Initializes an action success result.
            </summary>
      <param name="value">A <see cref="!:T" /> value represents the executing result.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ActionResult`1.Success">
      <summary>
            Gets a value indicating whether the action is executed successful.
            </summary>
      <value>
        <c>true</c> if the action is executed successful; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ActionResult`1.Details">
      <summary>
            Gets a string value indicating the details information of executing action.
            </summary>
      <value>The details information of executing action.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ActionResult`1.Value">
      <summary>
            Gets the <see cref="!:T" /> value represents the executing result.
            </summary>
      <value>A <see cref="!:T" /> value represents the executing result.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ActionResult`1.Category">
      <summary>
            Gets the details category.
            </summary>
      <value>The details category of the action result.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ActionResult`1.Range">
      <summary>
            Gets the corresponding range of the action.
            </summary>
      <value>The corresponding range of the action.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ActionResult`1.op_Implicit(GrapeCity.Spreadsheet.ActionResult{`0})~System.Boolean">
      <summary>
            Performs an implicit conversion from <see cref="!:ActionResult" /> to <see cref="T:System.Boolean" />.
            </summary>
      <param name="result">The specified <see cref="!:ActionResult" /> to convert.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ActionResult`1.op_Implicit(GrapeCity.Spreadsheet.ActionResult{`0})~`0">
      <summary>
            Performs an implicit conversion from <see cref="T:GrapeCity.Spreadsheet.ActionResult`1" /> to <see cref="!:T" />.
            </summary>
      <param name="result">The specified <see cref="!:ActionResult" /> to convert.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DefinedName">
      <summary>
            Represents a defined name.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DefinedName.GrapeCity#Spreadsheet#IName#Visible">
      <summary>
            Gets or sets the property which determines whether this defined name is visible to the user.
            </summary>
      <value>
        <c>true</c> if this defined name is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DefinedName.GrapeCity#Spreadsheet#IName#ValidWorkbookParameter">
      <summary>
            Gets a value indicating whether the <see cref="T:GrapeCity.Spreadsheet.IName" /> is a valid workbook parameter.
            </summary>
      <value>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.IName" /> is a valid workbook parameter; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DefinedName.GrapeCity#Spreadsheet#IName#Comment">
      <summary>
            Gets or sets the comment associated with this defined name.
            </summary>
      <value>The string value represents comment associated with this defined name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DefinedName.GrapeCity#Spreadsheet#IName#Name">
      <summary>
            Gets or sets the name of the defined name.
            </summary>
      <value>The string value represents name of the defined name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DefinedName.RefersToR1C1">
      <summary>
            Gets or sets the formula in R1C1 format which the defined name refers to.
            </summary>
      <value>The string value represents formula which the defined name refers to.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.GrapeCity#Spreadsheet#IName#GetRefersTo(System.Int32,System.Int32)">
      <summary>
            Gets the formula in A1 format which the defined name refers to.
            </summary>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <returns>The string value represents formula which the defined name refers to.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.GetRefersTo(System.Int32,System.Int32)">
      <summary>
            Gets the formula in A1 format which the defined name refers to.
            </summary>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <returns>The string value represents formula which the defined name refers to.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.SetRefersTo(System.Int32,System.Int32,System.String)">
      <summary>
            Sets the formula in A1 format which the defined name refers to.
            </summary>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <param name="refersTo">The formula in A1 format which the defined name refers to.</param>
      <returns>A <see cref="T:System.Boolean" /> value represents whether the formula is changed successfully.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.Delete">
      <summary>
            Deletes the defined name.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.ContainsErrors">
      <summary>
            Determines whether this instance contains errors.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DefinedName.GrapeCity#Spreadsheet#IName#Worksheet">
      <summary>
            Gets the scope of name as local worksheet.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the scope of name. Returns <c>null</c> if the scope of name is entire workbook.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.GrapeCity#Spreadsheet#IName#RefersToRange(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> object referred to by an <see cref="T:GrapeCity.Spreadsheet.IName" /> object.
            </summary>
      <param name="contextRow">An integer value indicates the context row. -1 means the row of the active cell.</param>
      <param name="contextColumn">An integer value indicates the context column. -1 means the column of the active cell.</param>
      <returns>IRange.</returns>
      <exception cref="T:System.NotImplementedException"></exception>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the <see cref="T:GrapeCity.Spreadsheet.IName" /> object.</value>
      <remarks>If the <see cref="T:GrapeCity.Spreadsheet.IName" /> object doesn't refer to a range (for example, if it refers to a constant or a formula), this property returns <c>null</c>.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DefinedName.Name">
      <summary>
            Gets or sets the name of the defined name.
            </summary>
      <value>The string value represents name of the defined name.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.IsUndefinedName">
      <summary>
            Determines whether this <see cref="T:GrapeCity.CalcEngine.IDefinedName" /> is an undefined name.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.CalcEngine.IDefinedName" /> is an undefined name; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.Equals(GrapeCity.Spreadsheet.DefinedName)">
      <summary>
            Determines whether the specified <see cref="T:GrapeCity.Spreadsheet.DefinedName" /> is equal to this instance.
            </summary>
      <param name="other">The <see cref="T:GrapeCity.Spreadsheet.DefinedName" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:GrapeCity.Spreadsheet.DefinedName" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DefinedName.ChangeExpression(GrapeCity.CalcEngine.Expression)">
      <summary>
            Changes the expression.
            </summary>
      <param name="newExpression">The new expression.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IName">
      <summary>
            Represents a defined name.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IName.Name">
      <summary>
            Gets or sets the name of the defined name.
            </summary>
      <value>The string value represents name of the defined name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IName.Comment">
      <summary>
            Gets or sets the comment associated with this defined name.
            </summary>
      <value>The string value represents comment associated with this defined name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IName.RefersToR1C1">
      <summary>
            Gets or sets the formula in R1C1 format which the defined name refers to.
            </summary>
      <value>The string value represents formula which the defined name refers to.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IName.GetRefersTo(System.Int32,System.Int32)">
      <summary>
            Gets the formula in A1 format which the defined name refers to.
            </summary>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <returns>The string value represents formula which the defined name refers to.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IName.SetRefersTo(System.Int32,System.Int32,System.String)">
      <summary>
            Sets the formula in A1 format which the defined name refers to.
            </summary>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <param name="refersTo">The formula in A1 format which the defined name refers to.</param>
      <returns>A <see cref="T:System.Boolean" /> value represents whether the formula is changed successfully.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IName.Worksheet">
      <summary>
            Gets the scope of name as local worksheet.
            </summary>
      <value>The <see cref="P:GrapeCity.Spreadsheet.IName.Worksheet" /> object indicates the scope of name. Returns <c>null</c> if the scope of name is entire workbook.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IName.Visible">
      <summary>
            Gets or sets the property which determines whether this defined name is visible to the user.
            </summary>
      <value>
        <c>true</c> if this defined name is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IName.ValidWorkbookParameter">
      <summary>
            Gets a value indicating whether the <see cref="T:GrapeCity.Spreadsheet.IName" /> is a valid workbook parameter.
            </summary>
      <value>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.IName" /> is a valid workbook parameter; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IName.Delete">
      <summary>
            Deletes the defined name.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IName.RefersToRange(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IRange" /> object referred to by an <see cref="T:GrapeCity.Spreadsheet.IName" /> object.
            </summary>
      <param name="contextRow">An integer value indicates the context row. -1 means the row of the active cell.</param>
      <param name="contextColumn">An integer value indicates the context column. -1 means the column of the active cell.</param>
      <returns>IRange.</returns>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the <see cref="T:GrapeCity.Spreadsheet.IName" /> object.</value>
      <remarks>If the <see cref="T:GrapeCity.Spreadsheet.IName" /> object doesn't refer to a range (for example, if it refers to a constant or a formula), this property returns <c>null</c>.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FilterOptions">
      <summary>
            Represents the filtering options for querying defined names.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterOptions.WithErrors">
      <summary>
            Returns defined names which contain <see cref="T:GrapeCity.CalcEngine.CalcError" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterOptions.WithoutErrors">
      <summary>
            Returns defined names which doesn't contain <see cref="T:GrapeCity.CalcEngine.CalcError" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterOptions.All">
      <summary>
            Returns all defined names.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FilterScopes">
      <summary>
            Represents the filtering scopes for querying defined names.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterScopes.Worksheet">
      <summary>
            Returns defined names scoped to worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterScopes.Workbook">
      <summary>
            Returns defined names scoped to workbook.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FilterScopes.All">
      <summary>
            Return all defined names.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.INames">
      <summary>
            Represents a collection of all the <see cref="T:GrapeCity.Spreadsheet.IName" /> objects in the workbook.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.INames.Add(System.String,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Boolean})">
      <summary>
            Creates a new defined name.
            </summary>
      <param name="name">A string value indicates the name of new defined name.</param>
      <param name="refersTo">A string value indicates the formula which new defined name refers to.</param>
      <param name="comment">A string value indicates the comment of new defined name.</param>
      <param name="contextRow">An integer value indicates the context row related to <paramref name="refersTo" /> formula.</param>
      <param name="contextColumn">An integer value indicates the context column related to <paramref name="refersTo" /> formula.</param>
      <param name="isA1StyleNotation">A <see cref="!:bool?" /> value indicates the notation style of the formula. <c>true</c> means A1-style notation. <c>false</c> means R1C1-style notation. <c>null</c> means current notation style.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IName" /> object indicates the new created defined name. <c>null</c> if the input is invalid.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.INames.GetNames(GrapeCity.Spreadsheet.FilterOptions,GrapeCity.Spreadsheet.FilterScopes)">
      <summary>
            Gets all sorted defined names inside a specified worksheet.
            </summary>
      <param name="filterOption">The <see cref="T:GrapeCity.Spreadsheet.FilterOptions" /> value to filter defined names.</param>
      <param name="filterScope">The <see cref="T:GrapeCity.Spreadsheet.FilterScopes" /> value to filter defined names' scope.</param>
      <returns>A <see cref="!:IName[]" /> array represents all found defined names.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.INames.Item(System.String,GrapeCity.Spreadsheet.IWorksheet)">
      <summary>
            Gets the defined name by the specified name.
            </summary>
      <param name="name">A string value indicates the name of the defined name.</param>
      <param name="worksheet">An object indicates what the defined name refers to.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IName" /> object contained by the collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.INames.Get(System.String)">
      <summary>
            Gets the defined name by the specified name.
            </summary>
      <param name="name">A string value indicates the name of the defined name.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IName" /> object contained by the collection.</returns>
      <remarks>This function has different behavior than <see cref="!:this[string, object]" />. It'll look up defined name from workbook or any worksheet.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.INames.AddExternalVariable(System.String,System.String)">
      <summary>
            Creates a external variable.
            </summary>
      <param name="name">A string value indicates the external variable name.</param>
      <param name="formula">A string value indicates the associated formula.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ExternalVariable" /> object indicates the new external variable.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.INames.AddExternalVariable``1(System.String,System.String)">
      <summary>
            Creates a external variable.
            </summary>
      <typeparam name="T">The external variable type that implement <see cref="T:GrapeCity.Spreadsheet.ExternalVariable" />.</typeparam>
      <param name="name">A string value indicates the external variable name.</param>
      <param name="formula">A string value indicates the associated formula.</param>
      <returns>A <see cref="!:&lt;T&gt;" /> object indicates the new external variable.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.INames.AddExternalVariable(System.String,GrapeCity.Spreadsheet.ExternalVariable,System.String)">
      <summary>
            Creates a external variable.
            </summary>
      <typeparam name="T">The external variable type that implement <see cref="T:GrapeCity.Spreadsheet.ExternalVariable" />.</typeparam>
      <param name="name">A string value indicates the external variable name.</param>
      <param name="externalVariable">A <see cref="T:GrapeCity.Spreadsheet.ExternalVariable" /> object indicates the external variable name to add.</param>
      <param name="formula">A string value indicates the associated formula.</param>
      <returns>
        <c>true</c> if the <paramref name="externalVariable" /> object is added successful; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.IPageSetup">
      <summary>
            Represents the page setup object contains all page setup attributes (left margin, bottom margin, paper size, and so on) as properties.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.CenterFooterPicture">
      <summary>
            Gets or set a Graphic object that represents the picture for the center section of the footer. Used to set attributes about the picture.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.CenterHeaderPicture">
      <summary>
            Gets or set a Graphic object that represents the picture for the center section of the header. Used to set attributes about the picture.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.LeftFooterPicture">
      <summary>
            Gets or set a Graphic object that represents the picture for the left section of the footer. Used to set attributes about the picture.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.LeftHeaderPicture">
      <summary>
            Gets or set a Graphic object that represents the picture for the left section of the header. Used to set attributes about the picture.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.RightFooterPicture">
      <summary>
            Gets or set a Graphic object that represents the picture for the right section of the footer. Used to set attributes about the picture.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.RightHeaderPicture">
      <summary>
            Gets or set a Graphic object that represents the picture for the right section of the header. Used to set attributes about the picture.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.CenterHeader">
      <summary>
            Gets or sets a value indicating whether a picture or text to be center-aligned in the page header.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.CenterFooter">
      <summary>
            Gets or sets a value indicating whether a picture or text to be center-aligned in the page footer.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.DifferentFirstPageHeaderFooter">
      <summary>
            Gets or sets a value indicating whether the different header or footer is used on the first page.
            </summary>
      <value>
        <c>true</c> if a different header or footer is used on the first page; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.FirstPage">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Printing.PageSetup" /> value indicating whether the alignment of text on the first page of a worksheet or section.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Printing.PageSetup" /> value specifying the alignment of text on the first page.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.EvenPage">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Printing.PageSetup" /> value indicating whether the alignment of text on the even page of a worksheet or section.
            <value>A <see cref="T:GrapeCity.Spreadsheet.Printing.PageSetup" /> value specifying the alignment of text on the even page.</value></summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.Zoom">
      <summary>
            Gets or sets the percentage scale of the worksheet for printing.
            </summary>
      <value>An integer value represents the percentage scale of the worksheet for printing.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.FitToPages">
      <summary>
            Gets or sets a boolean value indicating whether the worksheet will be scaled to fit to the specified number of pages when it's printed.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.FitToPagesWide">
      <summary>
            Gets or sets a value indicating the number of pages wide the worksheet will be scaled to when it's printed.
            </summary>
      <value>An integer value represents the number of pages wide the worksheet will be scaled to when it's printed.</value>
      <remarks>
            If this property is negative , Spread scales the worksheet according to the FitToPagesWide property.
            If the <see cref="P:GrapeCity.Spreadsheet.Printing.IPageSetup.Zoom" /> property is <c>true</c> , the <see cref="P:GrapeCity.Spreadsheet.Printing.IPageSetup.FitToPagesWide" /> property is ignored.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.FitToPagesTall">
      <summary>
            Gets or sets a value indicating the number of pages tall the worksheet will be scaled to when it's printed.
            </summary>
      <value>An integer value represents the number of pages tall the worksheet will be scaled to when it's printed.</value>
      <remarks>
            If this property is negative , Spread scales the worksheet according to the FitToPagesWide property.
            If the <see cref="P:GrapeCity.Spreadsheet.Printing.IPageSetup.Zoom" /> property is <c>true</c> , the <see cref="P:GrapeCity.Spreadsheet.Printing.IPageSetup.FitToPagesTall" /> property is ignored.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.ScaleWithDocHeaderFooter">
      <summary>
            Gets or sets a value indicating whether the header and footer should be scaled with the document when the size of the document changes.
            </summary>
      <value>
        <c>true</c> if the header and footer should be scaled with the document when the size of the document changes; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.CenterVertically">
      <summary>
            Gets or sets a value indicating whether the sheet is centered vertically on the page when it's printed.
            </summary>
      <value>
        <c>true</c> if the sheet is centered vertically on the page when it's printed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.CenterHorizontally">
      <summary>
            Gets or sets a value indicating whether the sheet is centered horizontally on the page when it's printed.
            </summary>
      <value>
        <c>true</c> if the sheet is centered horizontally on the page when it's printed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.AlignMarginsHeaderFooter">
      <summary>
            Gets or sets a value indicating whether the header and the footer are aligned with the margins set in the page setup options.
            </summary>
      <value>
        <c>true</c> if the header and the footer are aligned with the margins set in the page setup options; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.BlackAndWhite">
      <summary>
            Gets or sets a value indicating whether elements of the document will be printed in black and white.
            </summary>
      <value>
        <c>true</c> if elements of the document will be printed in black and white; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.PrintHeadings">
      <summary>
            Gets or sets a value indicating whether row and column headings are printed with this page.
            </summary>
      <value>
        <c>true</c> if row and column headings are printed with this page; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.OddAndEvenPagesHeaderFooter">
      <summary>
            Gets or sets a value indicating whether the specified PageSetup object has different headers and footers for odd-numbered and even-numbered pages.
            </summary>
      <value>
        <c>true</c> if the specified PageSetup object has different headers and footers for odd-numbered and even-numbered pages; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.PrintGridlines">
      <summary>
            Gets or sets a value indicating whether cell gridlines are printed on the page.
            </summary>
      <value>
        <c>true</c> if cell gridlines are printed on the page; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.PrintTitleColumns">
      <summary>
            Gets or sets a value indicating the columns that contain the cells to be repeated on the left side of each page.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the columns that contain the cells to be repeated on the left side of each page</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.PrintTitleRows">
      <summary>
            Gets or sets a value indicating the rows that contain the cells to be repeated on the left side of each page.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the rows that contain the cells to be repeated on the left side of each page</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.PrintArea">
      <summary>
            Gets or sets the range to be printed.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the range to be printed.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.Draft">
      <summary>
            Gets or sets a value indicating whether the sheet will be printed without graphics.
            </summary>
      <value>
        <c>true</c> if the sheet will be printed without graphics; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.Orientation">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Printing.PageOrientation" /> value that represents the portrait or landscape printing mode.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Printing.PageOrientation" /> value that represents the portrait or landscape printing mode.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.PaperSize">
      <summary>
            Gets or sets the size of the paper.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.Printing.IPageSetup.PaperSize" /> value represents the size of the paper.</value>
      <remarks>Some printers may not support all of these paper sizes.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.Order">
      <summary>
            Gets or sets an <see cref="P:GrapeCity.Spreadsheet.Printing.IPageSetup.Order" /> value that represents the order that Microsoft Excel uses to number pages when printing a large worksheet.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.Printing.IPageSetup.Order" /> value that represents the order that Microsoft Excel uses to number pages when printing a large worksheet..</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.PrintErrors">
      <summary>
            Gets or sets a <see cref="P:GrapeCity.Spreadsheet.Printing.IPageSetup.PrintErrors" /> contstant specifying the type of print error displayed. This feature allows users to suppress the display of error values when printing a worksheet.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Printing.IPageSetup.PrintErrors" /> contstant specifying the type of print error displayed.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.FirstPageNumber">
      <summary>
            Gets or sets the first page number that will be used when this sheet is printed.
            </summary>
      <value>An integer value represents the first page number that will be used when this sheet is printed.</value>
      <remarks>Negative value means Spread chooses the first page number automatically.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.TopMargin">
      <summary>
            Gets or sets the size of the top margin, in pixels.
            </summary>
      <value>A double value represents the top margin.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.RightMargin">
      <summary>
            Gets or sets the size of the right margin, in pixels.
            </summary>
      <value>A double value represents the right margin.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.BottomMargin">
      <summary>
            Gets or sets the size of the bottom margin, in pixels.
            </summary>
      <value>A double value represents the bottom margin.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.LeftMargin">
      <summary>
            Gets or sets the size of the left margin, in pixels.
            </summary>
      <value>A double value represents the left margin.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.HeaderMargin">
      <summary>
            Gets or sets the distance from the top of the page to the header, in pixels.
            </summary>
      <value>A double value represents the top of the page to the header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.FooterMargin">
      <summary>
            Gets or sets the distance from the bottom of the page to the footer, in pixels.
            </summary>
      <value>A double value represents the bottom of the page to the footer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.RightFooter">
      <summary>
            Gets or sets a value indicating whether a picture or text to be right-aligned in the page footer.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.RightHeader">
      <summary>
            Gets or sets a value indicating whether a picture or text to be right-aligned in the page header.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.LeftFooter">
      <summary>
            Gets or sets a value indicating whether a picture or text to be left-aligned in the page footer.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.LeftHeader">
      <summary>
            Gets or sets a value indicating whether a picture or text to be left-aligned in the page header.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.NumberOfCopies">
      <summary>
            Gets or sets the number of copies to print.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.IPageSetup.CellComments">
      <summary>
            Gets or sets a <see cref="P:GrapeCity.Spreadsheet.Printing.IPageSetup.CellComments" /> contstant specifying the type of print cell comments displayed. This feature allows users to suppress the display of cell comments when printing a worksheet.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Printing.IPageSetup.CellComments" /> contstant specifying the type of cell comments displayed.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.PageSetup">
      <summary>
            Represents the page setup object contains all page setup attributes (left margin, bottom margin, paper size, and so on) as properties.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.CenterHeader">
      <summary>
            Gets or sets a value indicating whether a picture or text to be center-aligned in the page header.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.CenterFooter">
      <summary>
            Gets or sets a value indicating whether a picture or text to be center-aligned in the page footer.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.DifferentFirstPageHeaderFooter">
      <summary>
            Gets or sets a value indicating whether the different header or footer is used on the first page.
            </summary>
      <value>
        <c>true</c> if a different header or footer is used on the first page; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.FirstPage">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Printing.PageSetup" /> value indicating whether the alignment of text on the first page of a worksheet or section.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Printing.PageSetup" /> value specifying the alignment of text on the first page.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.EvenPage">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Printing.PageSetup" /> value indicating whether the alignment of text on the even page of a worksheet or section.
            <value>A <see cref="T:GrapeCity.Spreadsheet.Printing.PageSetup" /> value specifying the alignment of text on the even page.</value></summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.Zoom">
      <summary>
            Gets or sets the percentage scale of the worksheet for printing.
            </summary>
      <value>An integer value represents the percentage scale of the worksheet for printing.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.FitToPagesWide">
      <summary>
            Gets or sets a value indicating the number of pages wide the worksheet will be scaled to when it's printed.
            </summary>
      <value>An integer value represents the number of pages wide the worksheet will be scaled to when it's printed.</value>
      <remarks>
            If this property is negative , Spread scales the worksheet according to the FitToPagesWide property.
            If the <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.Zoom" /> property is <c>true</c> , the <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.FitToPagesWide" /> property is ignored.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.FitToPages">
      <summary>
            Gets or sets a boolean value indicating whether the worksheet will be scaled to fit to the specified number of pages when it's printed.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.FitToPagesTall">
      <summary>
            Gets or sets a value indicating the number of pages tall the worksheet will be scaled to when it's printed.
            </summary>
      <value>An integer value represents the number of pages tall the worksheet will be scaled to when it's printed.</value>
      <remarks>
            If this property is negative , Spread scales the worksheet according to the FitToPagesWide property.
            If the <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.Zoom" /> property is <c>true</c> , the <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.FitToPagesTall" /> property is ignored.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.ScaleWithDocHeaderFooter">
      <summary>
            Gets or sets a value indicating whether the header and footer should be scaled with the document when the size of the document changes.
            </summary>
      <value>
        <c>true</c> if the header and footer should be scaled with the document when the size of the document changes; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.CenterVertically">
      <summary>
            Gets or sets a value indicating whether the sheet is centered vertically on the page when it's printed.
            </summary>
      <value>
        <c>true</c> if the sheet is centered vertically on the page when it's printed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.CenterHorizontally">
      <summary>
            Gets or sets a value indicating whether the sheet is centered horizontally on the page when it's printed.
            </summary>
      <value>
        <c>true</c> if the sheet is centered horizontally on the page when it's printed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.AlignMarginsHeaderFooter">
      <summary>
            Gets or sets a value indicating whether the header and the footer are aligned with the margins set in the page setup options.
            </summary>
      <value>
        <c>true</c> if the header and the footer are aligned with the margins set in the page setup options; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.BlackAndWhite">
      <summary>
            Gets or sets a value indicating whether elements of the document will be printed in black and white.
            </summary>
      <value>
        <c>true</c> if elements of the document will be printed in black and white; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintRowHeader">
      <summary>
            Gets or sets a value indicating whether row headings are printed with this page.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintColumnHeader">
      <summary>
            Gets or sets a value indicating whether column headings are printed with this page.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintHeadings">
      <summary>
            Gets or sets a value indicating whether row and column headings are printed with this page.
            </summary>
      <value>
        <c>true</c> if row and column headings are printed with this page; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintNotes">
      <summary>
            Gets or sets a value indicating whether cell notes are printed as end notes with the sheet.
            </summary>
      <value>
        <c>true</c> if cell notes are printed as end notes with the sheet; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.OddAndEvenPagesHeaderFooter">
      <summary>
            Gets or sets a value indicating whether the specified PageSetup object has different headers and footers for odd-numbered and even-numbered pages.
            </summary>
      <value>
        <c>true</c> if the specified PageSetup object has different headers and footers for odd-numbered and even-numbered pages; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintGridlines">
      <summary>
            Gets or sets a value indicating whether cell gridlines are printed on the page.
            </summary>
      <value>
        <c>true</c> if cell gridlines are printed on the page; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintTitleColumns">
      <summary>
            Gets or sets a value indicating the columns that contain the cells to be repeated on the left side of each page.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the columns that contain the cells to be repeated on the left side of each page</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintTitleRows">
      <summary>
            Gets or sets a value indicating the rows that contain the cells to be repeated on the left side of each page.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the rows that contain the cells to be repeated on the left side of each page</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintArea">
      <summary>
            Gets or sets the range to be printed.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the range to be printed.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.Draft">
      <summary>
            Gets or sets a value indicating whether the sheet will be printed without graphics.
            </summary>
      <value>
        <c>true</c> if the sheet will be printed without graphics; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.Orientation">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Spreadsheet.Printing.PageOrientation" /> value that represents the portrait or landscape printing mode.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Printing.PageOrientation" /> value that represents the portrait or landscape printing mode.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PaperSize">
      <summary>
            Gets or sets the size of the paper.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.PaperSize" /> value represents the size of the paper.</value>
      <remarks>Some printers may not support all of these paper sizes.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.Order">
      <summary>
            Gets or sets an <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.Order" /> value that represents the order that Microsoft Excel uses to number pages when printing a large worksheet.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.Order" /> value that represents the order that Microsoft Excel uses to number pages when printing a large worksheet..</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.CellComments">
      <summary>
            Gets or sets a <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.CellComments" /> contstant specifying the type of print cell comments displayed. This feature allows users to suppress the display of cell comments when printing a worksheet.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.CellComments" /> contstant specifying the type of cell comments displayed.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintErrors">
      <summary>
            Gets or sets a <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintErrors" /> contstant specifying the type of print error displayed. This feature allows users to suppress the display of error values when printing a worksheet.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Printing.PageSetup.PrintErrors" /> contstant specifying the type of print error displayed.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.FirstPageNumber">
      <summary>
            Gets or sets the first page number that will be used when this sheet is printed.
            </summary>
      <value>An integer value represents the first page number that will be used when this sheet is printed.</value>
      <remarks>Negative value means Spread chooses the first page number automatically.</remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PageSetup.FIRSTPAGENUMBER_MAX">
      <summary>
            The max value the first page number can take.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PageSetup.FIRSTPAGENUMBER_MIN">
      <summary>
            The min value the first page number can take.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.TopMargin">
      <summary>
            Gets or sets the size of the top margin, in pixels.
            </summary>
      <value>A double value represents the top margin.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.RightMargin">
      <summary>
            Gets or sets the size of the right margin, in pixels.
            </summary>
      <value>A double value represents the right margin.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.BottomMargin">
      <summary>
            Gets or sets the size of the bottom margin, in pixels.
            </summary>
      <value>A double value represents the bottom margin.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.LeftMargin">
      <summary>
            Gets or sets the size of the left margin, in pixels.
            </summary>
      <value>A double value represents the left margin.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.HeaderMargin">
      <summary>
            Gets or sets the distance from the top of the page to the header, in pixels.
            </summary>
      <value>A double value represents the top of the page to the header.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.FooterMargin">
      <summary>
            Gets or sets the distance from the bottom of the page to the footer, in pixels.
            </summary>
      <value>A double value represents the bottom of the page to the footer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.RightFooter">
      <summary>
            Gets or sets a value indicating whether a picture or text to be right-aligned in the page footer.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.PageSetup.SetHeaderFooter(System.String,System.String,System.Boolean)">
      <summary>
            Sets raw header/footer code.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.RightHeader">
      <summary>
            Gets or sets a value indicating whether a picture or text to be right-aligned in the page header.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.LeftFooter">
      <summary>
            Gets or sets a value indicating whether a picture or text to be left-aligned in the page footer.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.LeftHeader">
      <summary>
            Gets or sets a value indicating whether a picture or text to be left-aligned in the page header.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.PageSetup.NumberOfCopies">
      <summary>
            Gets or sets the number of copies to print.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.PageSetup.GetHeaderFooter(System.Boolean,System.Boolean)">
      <summary>
            Gets the original string of print header/footer.
            </summary>
      <param name="isHeader"></param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser">
      <summary>
            Represents the header/footer code parser.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.#ctor(GrapeCity.Spreadsheet.IWorkbook,System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser" /> class.
            </summary>
      <param name="code">The header/footer format code.</param>
      <param name="useShortName">
        <c>true</c> to use short code; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.Append(GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes)">
      <summary>
            Appends the <see cref="!:Codes" /> part.
            </summary>
      <param name="code">A <see cref="!:Codes" /> value indicates a part of the header/footer.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.AppendPageNumber(System.Int32,System.Boolean)">
      <summary>
            Appends the page number (with adjustment value) part.
            </summary>
      <param name="adjustment">An integer value indicates the adjustment value for page number.</param>
      <param name="isPageNumber">
        <c>true</c> if the adjustment is for page number.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.AppendText(System.Char*,System.Int32,System.Int32)">
      <summary>
            Appends the text part.
            </summary>
      <param name="codePtr">A <see cref="T:System.Char" /> array.</param>
      <param name="index">An integer value indicates the starting position in value.</param>
      <param name="length">An integer value indicates the number of characters to append.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.AppendInvalidCode(GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes,System.Char*,System.Int32,System.Int32)">
      <summary>
            Appends the text part which starts with a code.
            </summary>
      <param name="code">A <see cref="!:Codes" /> value indicates a part of the header/footer.</param>
      <param name="codePtr">A <see cref="T:System.Char" /> array.</param>
      <param name="index">An integer value indicates the starting position in value.</param>
      <param name="length">An integer value indicates the number of characters to append.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.AppendText(System.String)">
      <summary>
            Appends the text part.
            </summary>
      <param name="text">A <see cref="T:System.Char" /> value indicates the text part.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.AppendText(System.Char)">
      <summary>
            Appends the text part.
            </summary>
      <param name="value">A <see cref="T:System.Char" /> value indicates the text part.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.AppendColor(GrapeCity.Spreadsheet.Color@)">
      <summary>
            Appends the color part.
            </summary>
      <param name="color">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of characters that follow.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.AppendColorFormatCode(GrapeCity.Spreadsheet.Color@,System.Text.StringBuilder@)">
      <summary>
            Append the color format code from color.
            </summary>
      <param name="color"></param>
      <param name="sb"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.AppendFont(GrapeCity.Spreadsheet.Font@)">
      <summary>
            Appends the font part.
            </summary>
      <param name="font">A <see cref="T:GrapeCity.Spreadsheet.Font" /> value indicates the font of characters that follow.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.AppendFontSize(System.Int32)">
      <summary>
            Appends the font size part.
            </summary>
      <param name="font">A <see cref="T:GrapeCity.Spreadsheet.Font" /> value indicates the font size of characters that follow.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.OnStartSection(GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Section)">
      <summary>
            Occurs when a new section started.
            </summary>
      <param name="section"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.TextHeaderFooterParser.OnAfterParsing">
      <summary>
            Occurs after finished parsing a section.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.HeaderFooterParser">
      <summary>
            Represents the header/footer code parser.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.#ctor(GrapeCity.Spreadsheet.IWorkbook,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Printing.HeaderFooterParser" /> class.
            </summary>
      <param name="workbook">The associated workbook.</param>
      <param name="code">The header/footer format code.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Workbook">
      <summary>
            Gets the associated workbook.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Append(GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes)">
      <summary>
            Appends the <see cref="T:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes" /> part.
            </summary>
      <param name="code">A <see cref="T:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes" /> value indicates a part of the header/footer.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.AppendPageNumber(System.Int32,System.Boolean)">
      <summary>
            Appends the page number (with adjustment value) part.
            </summary>
      <param name="adjustment">An integer value indicates the adjustment value for page number.</param>
      <param name="isPageNumber">
        <c>true</c> if the adjustment is for page number.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.AppendText(System.String)">
      <summary>
            Appends the text part.
            </summary>
      <param name="text">A string value indicates the text.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.AppendColor(GrapeCity.Spreadsheet.Color@)">
      <summary>
            Appends the color part.
            </summary>
      <param name="color">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of characters that follow.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.AppendFont(GrapeCity.Spreadsheet.Font@)">
      <summary>
            Appends the font part.
            </summary>
      <param name="font">A <see cref="P:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Font" /> value indicates the font of characters that follow.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.AppendFontSize(System.Int32)">
      <summary>
            Appends the font size part.
            </summary>
      <param name="font">A <see cref="P:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Font" /> value indicates the font size of characters that follow.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.AppendText(System.Char*,System.Int32,System.Int32)">
      <summary>
            Appends the text part.
            </summary>
      <param name="codePtr">A <see cref="T:System.Char" /> array.</param>
      <param name="index">An integer value indicates the starting position in value.</param>
      <param name="length">An integer value indicates the number of characters to append.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.AppendInvalidCode(GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes,System.Char*,System.Int32,System.Int32)">
      <summary>
            Appends the text part which starts with a code.
            </summary>
      <param name="code">A <see cref="T:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes" /> value indicates a part of the header/footer.</param>
      <param name="codePtr">A <see cref="T:System.Char" /> array.</param>
      <param name="index">An integer value indicates the starting position in value.</param>
      <param name="length">An integer value indicates the number of characters to append.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.OnBeforeParsing">
      <summary>
            Occurs before start parsing a section.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.OnAfterParsing">
      <summary>
            Occurs after finished parsing a section.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.OnStartSection(GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Section)">
      <summary>
            Occurs when a new section started.
            </summary>
      <param name="section"></param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Font">
      <summary>
            Gets the current used font.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Section">
      <summary>
            Represents the header/footer section.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Section.Any">
      <summary>
            Indicates any section.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Section.Left">
      <summary>
            Indicates the left section.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Section.Center">
      <summary>
            Indicates the center section.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Section.Right">
      <summary>
            Indicates the right section.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes">
      <summary>
            Represents formatting code of header/footer.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.Unknown">
      <summary>
            Represents an unknown code.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.L">
      <summary>
            Left aligns the characters that follow.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.C">
      <summary>
            Centers the characters that follow.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.R">
      <summary>
            Right aligns the characters that follow.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.E">
      <summary>
            Turns double-underline printing on or off.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.X">
      <summary>
            Turns superscript printing on or off.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.Y">
      <summary>
            Turns subscript printing on or off.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.B">
      <summary>
            Turns bold printing on or off.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.I">
      <summary>
            Turns italic printing on or off.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.U">
      <summary>
            Turns underline printing on or off.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.S">
      <summary>
            Turns strikethrough printing on or off.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.K">
      <summary>
            Prints the characters that follow in the specified color from the current theme.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.D">
      <summary>
            Prints the current date.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.T">
      <summary>
            Prints the current time.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.F">
      <summary>
            Prints the name of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.A">
      <summary>
            Prints the name of the workbook tab.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.P">
      <summary>
            Prints the page number.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.Amp">
      <summary>
            Prints a single ampersand.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.N">
      <summary>
            Prints the total number of pages in the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.Z">
      <summary>
            Prints the file path.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.HeaderFooterParser.Codes.G">
      <summary>
            Inserts an image.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.PageOrientation">
      <summary>
            Specifies the page orientation when the worksheet is printed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PageOrientation.Auto">
      <summary>
            Uses the current printer setting
             </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PageOrientation.Landscape">
      <summary>
            The landscape mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PageOrientation.Portrait">
      <summary>
            The portrait mode.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.CellComments">
      <summary>
            Specifies the way that cell comments are printed with the sheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.CellComments.None">
      <summary>
            Does not Print comments.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.CellComments.AtEnd">
      <summary>
            Print comments at end.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.CellComments.AsDisplayed">
      <summary>
            Print comments as displayed.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.Order">
      <summary>
            Specifies the order in which cells are processed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.Order.DownThenOver">
      <summary>
            Process down the rows before processing across pages or page fields to the right.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.Order.OverThenDown">
      <summary>
            Process across pages or page fields to the right before moving down the rows.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.PrintErrors">
      <summary>
            Specifies the type of print error displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PrintErrors.Blank">
      <summary>
            Print errors are blank.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PrintErrors.Dash">
      <summary>
            Print errors are displayed as dashes.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PrintErrors.Displayed">
      <summary>
            All print errors are displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PrintErrors.NotAvailable">
      <summary>
            Print errors are displayed as not available.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Printing.PaperSize">
      <summary>
            Specifies the size of a paper.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.Unspecified">
      <summary>
            PaperSize is not defined.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.Paper10x14">
      <summary>
            10 in. x 14 in.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.Paper11x17">
      <summary>
            11 in. x 17 in.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperA3">
      <summary>
            A3 (297 mm x 420 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperA4">
      <summary>
            A4 (210 mm x 297 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperA4Small">
      <summary>
            A4 Small (210 mm x 297 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperA5">
      <summary>
            A5 (148 mm x 210 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperB4">
      <summary>
            B4 (250 mm x 354 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperB5">
      <summary>
            A5 (176 mm x 250 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperCsheet">
      <summary>
            C size sheet
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperDsheet">
      <summary>
            D size sheet
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelope10">
      <summary>
            Envelope #10 (4-1/8 in. x 9-1/2 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelope11">
      <summary>
            Envelope #11 (4-1/2 in. x 10-3/8 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelope12">
      <summary>
            Envelope #12 (4-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelope14">
      <summary>
            Envelope #14 (5 in. x 11-1/2 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelope9">
      <summary>
            Envelope #9 (3-7/8 in. x 8-7/8 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeB4">
      <summary>
            Envelope B4 (250 mm x 353 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeB5">
      <summary>
            Envelope B5 (176 mm x 250 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeB6">
      <summary>
            Envelope B6 (176 mm x 125 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeC3">
      <summary>
            Envelope C3 (324 mm x 458 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeC4">
      <summary>
            Envelope C4 (229 mm x 324 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeC5">
      <summary>
            Envelope C5 (162 mm x 229 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeC6">
      <summary>
            Envelope C6 (114 mm x 162 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeC65">
      <summary>
            Envelope C65 (114 mm x 229 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeDL">
      <summary>
            Envelope DL (110 mm x 220 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeItaly">
      <summary>
            Envelope (110 mm x 230 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopeMonarch">
      <summary>
            Envelope Monarch (3-7/8 in. x 7-1/2 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEnvelopePersonal">
      <summary>
            Envelope (3-5/8 in. x 6-1/2 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperEsheet">
      <summary>
            E size sheet
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperExecutive">
      <summary>
            Executive (7-1/2 in. x 10-1/2 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperFanfoldLegalGerman">
      <summary>
            German Legal Fanfold (8-1/2 in. x 13 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperFanfoldStdGerman">
      <summary>
            German Legal Fanfold (8-1/2 in. x 13 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperFanfoldUS">
      <summary>
            U.S. Standard Fanfold (14-7/8 in. x 11 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperFolio">
      <summary>
            Folio (8-1/2 in. x 13 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperLedger">
      <summary>
            Ledger (17 in. x 11 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperLegal">
      <summary>
            Legal (8-1/2 in. x 14 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperLetter">
      <summary>
            Letter (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperLetterSmall">
      <summary>
            Letter Small (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperNote">
      <summary>
            Note (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperQuarto">
      <summary>
            Quarto (215 mm x 275 mm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperStatement">
      <summary>
            Statement (5-1/2 in. x 8-1/2 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperTabloid">
      <summary>
            Tabloid (11 in. x 17 in.)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Printing.PaperSize.PaperUser">
      <summary>
            User-defined
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ProtectionMode">
      <summary>
            Represents the protection type of the workbook or worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ProtectionMode.Protected">
      <summary>
            The object is protected without password.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ProtectionMode.PasswordProtected">
      <summary>
            The object is protected by password.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ProtectionMode.None">
      <summary>
            The object is not protected.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorkbookLocks">
      <summary>
            Represent protected data of the workbook.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorkbookLocks.None">
      <summary>
            Protect nothing.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorkbookLocks.Structure">
      <summary>
             Protect the structure of the workbook (the relative position of the sheets).
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorkbookLocks.Windows">
      <summary>
            Protect the workbook windows.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorkbookLocks.All">
      <summary>
            Protect all data.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorksheetLocks">
      <summary>
            Represents protected data of the worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.None">
      <summary>
            Protect nothing.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.DrawingObjects">
      <summary>
            Protect shapes.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.Objects">
      <summary>
            Protect objects.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.Scenarios">
      <summary>
            Protect scenarios. This argument is valid only for worksheets.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.FormatCells">
      <summary>
            Not allows the user to format any cell on a protected worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.FormatColumns">
      <summary>
            Not allows the user to format any column on a protected worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.FormatRows">
      <summary>
            Not allows the user to format any row on a protected.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.InsertColumns">
      <summary>
            Not allows the user to insert columns on the protected worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.InsertRows">
      <summary>
            Not allows the user to insert rows on the protected worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.InsertHyperlinks">
      <summary>
            Not allows the user to insert hyperlinks on the worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.DeleteColumns">
      <summary>
            Not allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.DeleteRows">
      <summary>
            Not allows the user to delete rows on the protected worksheet, where every cell in the row to be deleted is unlocked.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.SelectLockedCells">
      <summary>
            Not allows the user to select locked cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.Sort">
      <summary>
            Not allows the user to sort on the protected worksheet. Every cell in the sort range must be unlocked or unprotected.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.AutoFilter">
      <summary>
            Not allows the user to set filters on the protected worksheet. Users can change filter criteria but can not enable or disable an auto filter. Users can set filters on an existing auto filter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.PivotTables">
      <summary>
            Not allows the user to use pivot table reports on the protected worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.SelectUnlockedCells">
      <summary>
            Not allows the user to select unlocked cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.Default">
      <summary>
            The default lock options
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetLocks.All">
      <summary>
            All lock options
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorksheetView">
      <summary>
            Represents a worksheet view.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheetView.TabSelected">
      <summary>
            Gets or sets a value indicating whether this sheet is selected.
            </summary>
      <value>
        <c>true</c> if this sheet is selected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheetView.ZoomScale">
      <summary>
            Gets or sets the window zoom magnification for current view representing percent values.
            </summary>
      <value>An integer value represents the window zoom magnification for current view representing percent values.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheetView.FreezePanes">
      <summary>
            Gets or sets a value indicating whether the split panes are frozen.
            </summary>
      <value>
        <c>true</c> if the split panes are frozen; otherwise, <c>false</c>.</value>
      <remarks>It's possible for <see cref="P:GrapeCity.Spreadsheet.IWorksheetView.FreezePanes" /> to be <c>true</c> and <see cref="!:Split" /> to be <c>false</c> , or vice versa.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheetView.SplitRow">
      <summary>
            Gets or sets the row number where the window is split into panes (the number of rows to the top of the split line). 
            </summary>
      <value>An integer value represents the split row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheetView.SplitColumn">
      <summary>
            Gets or sets the column number where the window is split into panes (the number of columns to the left of the split line). 
            </summary>
      <value>An integer value represents the split column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheetView.DisplayFormulas">
      <summary>
            Gets or sets a value indicating whether this sheet should display formulas.
            </summary>
      <value>
        <c>true</c> if this sheet should display formulas; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorksheetView">
      <summary>
            Represents a worksheet view.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetView.Create(GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Creates new <see cref="T:GrapeCity.Spreadsheet.WorksheetView" /> value.
            </summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.WorksheetView" /> value represents the new created value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetView.Deselect(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Deselects from the specified cell range.
            </summary>
      <param name="anchorRow">An integer value indictes the anchor row.</param>
      <param name="anchorColumn">An integer value indictes the anchor column.</param>
      <param name="row">An integer value indictes the top row of deselected cell range.</param>
      <param name="column">An integer value indictes the left column of deselected cell range.</param>
      <param name="row2">An integer value indictes the bottom row of deselected cell range.</param>
      <param name="column2">An integer value indictes the right column of deselected cell range.</param>
      <param name="notifyUI">
        <c>true</c> if the UI control will be notified; otherwise, <c>false</c>.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetView.GetActiveCell(System.Int32@,System.Int32@)">
      <summary>
            Gets the active row and column indexes.
            </summary>
      <param name="activeRow">The active row index.</param>
      <param name="activeColumn">The active column index.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.FreezePanes">
      <summary>
            Gets or sets a value indicating whether the split panes are frozen.
            </summary>
      <value>
        <c>true</c> if the split panes are frozen; otherwise, <c>false</c>.</value>
      <remarks>It's possible for <see cref="P:GrapeCity.Spreadsheet.WorksheetView.FreezePanes" /> to be <c>true</c> and <see cref="P:GrapeCity.Spreadsheet.WorksheetView.Split" /> to be <c>false</c> , or vice versa.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.Split">
      <summary>
            Gets or sets a value indicating whether the worksheet is split.
            </summary>
      <value>
        <c>true</c> if the worksheet is split; otherwise, <c>false</c>.</value>
      <remarks>It's possible for <see cref="P:GrapeCity.Spreadsheet.WorksheetView.FreezePanes" /> to be <c>true</c> and <see cref="P:GrapeCity.Spreadsheet.WorksheetView.Split" /> to be <c>false</c> , or vice versa.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.DefaultGridlineColor">
      <summary>
            Gets or sets a value indicating whether the consuming application should use the default grid lines color (system dependent). Overrides any color specified in colorId.
            </summary>
      <value>
        <c>true</c> if the consuming application should use the default grid lines color; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.RightToLeft">
      <summary>
            Gets or sets a value indicating whether the sheet is in 'right to left' display mode.
            </summary>
      <value>
        <c>true</c> if the sheet is in 'right to left' display mode; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.GrapeCity#Spreadsheet#IWorksheetView#DisplayFormulas">
      <summary>
            Gets or sets a value indicating whether this sheet should display formulas.
            </summary>
      <value>
        <c>true</c> if this sheet should display formulas; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.DisplayFormulas">
      <summary>
            Gets or sets a value indicating whether this sheet should display formulas.
            </summary>
      <value>
        <c>true</c> if this sheet should display formulas; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.DisplayGridlines">
      <summary>
            Gets or sets a value indicating whether this sheet should display grid lines.
            </summary>
      <value>
        <c>true</c> if this sheet should display grid lines; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.DisplayOutline">
      <summary>
            Gets or sets a value indicating whether the sheet has outline symbols visible.
            </summary>
      <value>
        <c>true</c> if the sheet has outline symbols visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.DisplayHeadings">
      <summary>
            Gets or sets a value indicating whether the sheet should display row and column headings.
            </summary>
      <value>
        <c>true</c> if the sheet should display row and column headings; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.DisplayRuler">
      <summary>
            Gets or sets a value indicating whether to show the ruler in Page Layout View.
            </summary>
      <value>
        <c>true</c> if the ruler is shown in Page Layout View; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetView.IsSelectSingleCell">
      <summary>
            Gets a boolean value indicating whether there is only one selected cell.
            </summary>
      <returns>
        <c>true</c> if there is only one selected cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetView.MoveActiveCell(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Moves the active cell base on the specified direction.
            </summary>
      <param name="direction">
            An integer value indicates the moving direction:
            0 - Moves closewise
            1 - Moves down
            2 - Moves up
            3 - Moves left
            4 - Moves right
            </param>
      <param name="detectTable">
        <c>true</c> if moving active cell take care of table; otherwise, <c>false</c>.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.DisplayWhitespace">
      <summary>
            Gets or sets a value indicating whether page layout view shall display margins.
            </summary>
      <value>
        <c>true</c> if page layout view shall display margins; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.DisplayZeros">
      <summary>
            Gets or sets a value indicating whether the window should show 0 (zero) in cells containing zero value.
            </summary>
      <value>
        <c>true</c> if the window should show 0 (zero) in cells containing zero value; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.TabSelected">
      <summary>
            Gets or sets a value indicating whether this sheet is selected.
            </summary>
      <value>
        <c>true</c> if this sheet is selected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.WindowProtection">
      <summary>
            Gets or sets a value indicating whether the panes in the window are locked due to workbook protection.
            </summary>
      <value>
        <c>true</c> if the panes in the window are locked due to workbook protection; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.TopLeftCell">
      <summary>
            Gets the location of the top left visible cell in the bottom right pane (when in Left-to-Right mode).
            </summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.CellReference" /> value represents the location of the top left visible cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.Type">
      <summary>
            Gets or sets the type of this view.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.SheetViewType" /> value represents the type of this view.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.GridlineColorIndex">
      <summary>
            Gets or sets the color value for gridlines. This is an 'index color value' (ICV) rather than rgb value.
            </summary>
      <value>An integer value represents the color value for gridlines.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.ZoomScale">
      <summary>
            Gets or sets the window zoom magnification for current view representing percent values.
            </summary>
      <value>An integer value represents the window zoom magnification for current view representing percent values.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.ZoomScaleNormal">
      <summary>
            Gets or sets the zoom magnification to use when in normal view, representing percent values.
            </summary>
      <value>An integer value represents the zoom magnification to use when in normal view, representing percent values.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.ZoomScalePageLayoutView">
      <summary>
            Gets or sets the zoom magnification to use when in page layout view, representing percent values.
            </summary>
      <value>An integer value represents the zoom magnification to use when in page layout view, representing percent values.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.ZoomScalePageBreakPreview">
      <summary>
            Gets or sets the zoom magnification to use when in page break preview, representing percent values.
            </summary>
      <value>An integer value represents the zoom magnification to use when in page break preview, representing percent values.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.SplitRow">
      <summary>
            Gets or sets the row number where the window is split into panes (the number of rows to the top of the split line).
            </summary>
      <value>An integer value represents the split row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.SplitColumn">
      <summary>
            Gets or sets the column number where the window is split into panes (the number of columns to the left of the split line).
            </summary>
      <value>An integer value represents the split column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.SplitHorizontal">
      <summary>
            Gets or sets the location of the horizontal window split, in points.
            </summary>
      <value>An integer values represents the location of the horizontal window split.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.SplitVertical">
      <summary>
            Gets or sets the location of the vertical window split, in points.
            </summary>
      <value>An integer values represents the location of the vertical window split.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetView.IsBelongToSelection(System.Int32,System.Int32)">
      <summary>
            Gets a boolean value indicating whether the specified cell belong to the current selection(s).
            </summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <returns>
        <c>true</c> if the specified cell belong to the current selection(s); otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetView.ClearSelections(System.Boolean)">
      <summary>
            Clears all selections.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetView.GetSelections">
      <summary>
            Gets all selections.
            </summary>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Reference" /> array represents all selections.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.ActiveCellIndex">
      <summary>
            Gets or sets the index of the selection which contains the active cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.ActiveSelection">
      <summary>
            Gets the selection that contains the active cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetView.SelectionCount">
      <summary>
            Gets the total number of selections.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetView.Reset">
      <summary>
            Re-create the view of a worksheet.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SheetViewType">
      <summary>
            Represents the view type of a <see cref="T:GrapeCity.Spreadsheet.IWorksheetView" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetViewType.Normal">
      <summary>
            Normal View
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetViewType.PageBreakPreview">
      <summary>
            Page Break Preview
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SheetViewType.PageLayout">
      <summary>
            Page Layout View
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache">
      <summary>
            Represents the current filter state for a slicer and information about which source the slicer is connected to.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.SlicerItems">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" /> collection that contains the collection of all items in the slicer cache.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" /> collection that contains the collection of all items in the slicer cache.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.Slicers">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicers" /> collection that contains the collection of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> objects associated with the specified <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" />.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicers" /> collection that contains the collection of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> objects.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.SourceName">
      <summary>
            Gets the name of the data source the slicer is connected to.
            </summary>
      <value>The name of the data source the slicer is connected to.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.Name">
      <summary>
            Gets or sets the name of the slicer cache.
            </summary>
      <value>The name of the slicer cache.</value>
      <remarks>Name of the slicer cache must be unique within the workbook namespace.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.RequireManualUpdate">
      <summary>
            Gets or sets a value indicating whether manual updates of the slicer cache required.
            </summary>
      <value>
        <c>true</c> if manual updates of the slicer cache required; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.List">
      <summary>
            Gets a value indicating whether the slicer cache is for a slicer on a table.
            </summary>
      <value>
        <c>true</c> if the slicer cache is for a slicer on a table; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.Index">
      <summary>
            Gets the index of the specified <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object in the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCaches" /> collection.
            </summary>
      <value>The index of the specified <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.FilterCleared">
      <summary>
            Gets a value indicating whether the filter state is cleared.
            </summary>
      <value>
        <c>true</c> if the filter state is cleared; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.CrossFilterType">
      <summary>
            Gets or sets whether the slicer is participating in cross filtering with other slicers that share the same slicer cache, and how cross filtering is displayed.
            </summary>
      <value>The type of the cross filter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.ListObject">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITable" /> object associated with this <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" />.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.SortItems">
      <summary>
            Gets or sets the sort order of the items in the slicer.
            </summary>
      <value>The sort order of the items in the slicer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.VisibleSlicerItems">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" /> collection that contains the collection of all the visible items in the specified slicer cache.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" /> collection that contains the collection of all the visible items.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerCache.ClearAllFilters">
      <summary>
            Clears the filter depending on the slicer cache type.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerCache.ClearDateFilter">
      <summary>
            Clears the filter for a timeline (date filter).
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerCache.ClearManualFilter">
      <summary>
            Clears the manual filter for the slicer cache.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerCache.Delete">
      <summary>
            Deletes the specified slicer cache and the slicers associated with it.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.SlicerSort">
      <summary>
            Specifies whether items displayed in the slicer are sorted, and if they are sorted, whether they are sorted in ascending or descending order by item captions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Slicers.SlicerSort.Ascending">
      <summary>
            Slicer items are sorted in ascending order by item captions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Slicers.SlicerSort.Descending">
      <summary>
            Slicer items are sorted in descending order by item captions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Slicers.SlicerSort.DataSourceOrder">
      <summary>
            Slicer items are displayed in the order provided by the data source.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.ISlicerCaches">
      <summary>
            Represents the collection of slicer caches associated with the specified workbook.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCaches.Count">
      <summary>
            Gets the number of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> objects in the collection.
            </summary>
      <value>The number of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> objects in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCaches.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object from a collection.
            </summary>
      <param name="index">The index number of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object from a collection.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerCaches.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object with the specified name.
            </summary>
      <param name="name">The name of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object from a collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerCaches.Add(GrapeCity.Spreadsheet.ITable,System.String,System.String,System.Boolean)">
      <summary>
            Adds a new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object to the collection.
            </summary>
      <param name="table">The data source that the new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> will be based on.</param>
      <param name="columnName">The name of the column in the table to filter by.</param>
      <param name="name">The name Spread uses to reference the slicer cache (the value of the <see cref="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.Name" /> property). If omitted, Spread will generate a name.</param>
      <param name="create">
        <c>true</c> to create new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object; otherwise, a corresponding <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object is reused if it exists.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> value represents the created slicer cache. <c>null</c> if the slicer cache cannot be created.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerCaches.Add(GrapeCity.Spreadsheet.ITable,System.Int32,System.String,System.Boolean)">
      <summary>
            Adds a new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object to the collection.
            </summary>
      <param name="table">The data source that the new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> will be based on.</param>
      <param name="columnIndex">The relative index of the column in the table to filter by.</param>
      <param name="name">The name Spread uses to reference the slicer cache (the value of the <see cref="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.Name" /> property). If omitted, Spread will generate a name.</param>
      <param name="create">
        <c>true</c> to create new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object; otherwise, a corresponding <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object is reused if it exists.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> value represents the created slicer cache. <c>null</c> if the slicer cache cannot be created.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem">
      <summary>
            Represents an item in a slicer.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerItem.Caption">
      <summary>
            Gets the label text for the slicer item.
            </summary>
      <value>The label text for the slicer item.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerItem.Selected">
      <summary>
            Gets or sets whether the slicer item is selected.
            </summary>
      <value>
        <c>true</c> if the slicer item is selected; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerItem.HasData">
      <summary>
            Gets a value indicating whether the slicer item contains data that matches the current manual filter state.
            </summary>
      <value>
        <c>true</c> if the slicer item contains data that matches the current manual filter state; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerItem.Name">
      <summary>
            Gets the name of the slicer item.
            </summary>
      <value>The name of the slicer item.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerItem.Value">
      <summary>
            Gets the value of the slicer item.
            </summary>
      <value>The value of the slicer item.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerItem.SourceNameStandard">
      <summary>
            Gets the slicer item's source name in standard English (United States) format settings.
            </summary>
      <value>The slicer item's source name in standard English (United States) format settings.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerItem.SourceName">
      <summary>
            Gets the source name of the slicer item.
            </summary>
      <value>The source name of the slicer item.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems">
      <summary>
            Represents the collection of SlicerItem objects contained in a <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerItems.Count">
      <summary>
            Gets the number of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects in the collection.
            </summary>
      <value>The number of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerItems.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object from a collection.
            </summary>
      <param name="index">The index number of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object from a collection.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicerItems.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object from a collection.
            </summary>
      <param name="name">The name of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object from a collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerItems.Range(System.String[])">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects from a collection.
            </summary>
      <param name="names">The names of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects from a collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerItems.Select(System.Int32[])">
      <summary>
            Selects the slicer items.
            </summary>
      <param name="indexes">An integer values indicates the selected slicer items.</param>
      <remarks>All other items, which is not in the array, will be deselected.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerItems.Select(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Selects the specified range of the slicer items.
            </summary>
      <param name="start">The start position of the slicer item range.</param>
      <param name="end">The end position of the slicer item range.</param>
      <param name="reverse">
        <c>true</c> if the selected state of items will be reversed; otherwise, select normally.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerItems.InitializeBatching">
      <summary>
            Initializes batching for the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerItems.TerminateBatching(System.Boolean)">
      <summary>
            Ends batching for the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" />.
            </summary>
      <param name="applyFilter">
        <c>true</c> if the filter is applied immediately; otherwise, <c>false</c>.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.ISlicer">
      <summary>
            Represents a slicer view to filter data.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Caption">
      <summary>
            Gets or sets the caption of the specified slicer.
            </summary>
      <value>The caption of the specified slicer.</value>
      <remarks>The value specified for the <see cref="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Caption" /> property is displayed in the header of the slicer.
            If the <see cref="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Caption" /> property is not specified, Spread uses the caption of the underlying field.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.DisableMoveResizeUI">
      <summary>
            Gets or sets whether the specified slicer can be moved or resized by using the user interface.
            </summary>
      <value>
        <c>true</c> if  the slicer cannot be moved or resized by selecting borders or handles in the user interface; otherwise, <c>false</c>.
            Setting the <see cref="P:GrapeCity.Spreadsheet.Slicers.ISlicer.DisableMoveResizeUI" /> property to <c>true</c> affects only the user interface.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.DisplayHeader">
      <summary>
            Gets or sets whether the header that displays the slicer <see cref="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Caption" /> is visible.
            </summary>
      <value>
        <c>true</c> if the header is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Height">
      <summary>
            Gets or sets the height of the specified slicer, in pixels.
            </summary>
      <value>The height of the specified slicer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Left">
      <summary>
            Gets or sets the horizontal position of the specified slicer, in pixels, relative to the upper-left corner of cell A1 on a worksheet.
            </summary>
      <value>The horizontal position of the specified slicer .</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Width">
      <summary>
            Gets or sets the width of the specified slicer, in pixels.
            </summary>
      <value>The width of the specified slicer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Top">
      <summary>
            Gets or sets the vertical position of the specified slicer, in pixels, relative to the upper-left corner of cell A1 on a worksheet.
            </summary>
      <value>The vertical position of the specified slicer .</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Locked">
      <summary>
            Gets or sets a value indicating whether the specified slicer can be modified when the sheet that contains it is protected.
            </summary>
      <value>
        <c>true</c> if the specified slicer cannot be modified; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Name">
      <summary>
            Gets or sets the name of the specified slicer.
            </summary>
      <value>The name of the specified slicer.</value>
      <remarks>The name must be unique across all slicers within a workbook.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.NumberOfColumns">
      <summary>
            Gets or sets the number of columns in the specified slicer.
            </summary>
      <value>The number of columns in the specified slicer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.ColumnWidth">
      <summary>
            Gets or sets the width, in pixels, of each column in the slicer.
            </summary>
      <value>The width of each column in the slicer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.RowHeight">
      <summary>
            Gets or sets the height of each row in the specified slicer.
            </summary>
      <value>The height of each row in the specified slicer.</value>
      <remarks>This property does not affect the height of the slicer.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.SlicerCache">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object associated with the slicer.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object associated with the slicer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Shape">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object associated with the specified slicer.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object associated with the specified slicer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicer.Style">
      <summary>
            Gets or sets the style currently applied to the specified slicer.
            </summary>
      <value>The style currently applied to the specified slicer.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicer.Copy">
      <summary>
            Copies the specified slicer to the clipboard.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicer.Cut">
      <summary>
            Cuts the specified slicer and copies it to the clipboard.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicer.Delete">
      <summary>
            Deletes the slicer and removes it from the associated <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicers" /> collection.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.ISlicers">
      <summary>
            Represents a collection of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> objects.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicers.Count">
      <summary>
            Gets the number of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects in the collection.
            </summary>
      <value>The number of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicers.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> object from a collection.
            </summary>
      <param name="index">The index number of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> object from a collection.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.ISlicers.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.Slicer" /> object from a collection.
            </summary>
      <param name="name">The name of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.Slicer" /> object from a collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicers.Add(GrapeCity.Spreadsheet.IWorksheet,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new slicer.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object where the resulting slicer will be placed.
            The destination sheet must be in the workbook that contains the Slicers object specified by expression.</param>
      <param name="name">The name of the slicer. Spread automatically generates a name if the parameter is missing. The name must be unique across all slicers within a workbook.</param>
      <param name="caption">The caption of the slicer.</param>
      <param name="x">The initial horizontal position of the slicer, in pixels, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <param name="y">The initial vertical position of the slicer, in pixels, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <param name="width">The initial width, in pixels, of the slicer control.</param>
      <param name="height">The initial height, in pixels, of the slicer control.</param>
      <returns>The created <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> object.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.Slicer">
      <summary>
            Represents a slicer view to filter data.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Slicers.Slicer.HT_ITEM">
      <summary>
            Indicates that the position is in a slicer item.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Slicers.Slicer.HT_MULTISELECT">
      <summary>
            Indicates that the position is in the multi-select icon.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Slicers.Slicer.HT_CLEARFILTER">
      <summary>
            Indicates that the position is in the clear filter icon.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.CanEditPoints">
      <summary>
            Gets a boolean value indicating whether this slicer can be edit points.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.Name">
      <summary>
            Gets or sets a string value representing the name of the slicer.
            </summary>
      <value>The name of the slicer.</value>
      <remarks>The name must be unique across all slicers within a workbook.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.SlicerCache">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object associated with the slicer.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object associated with the slicer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.GrapeCity#Spreadsheet#Slicers#ISlicer#Caption">
      <summary>
            Gets or sets the caption of the specified slicer.
            </summary>
      <value>The caption of the specified slicer.</value>
      <remarks>The value specified for the <see cref="P:GrapeCity.Spreadsheet.Slicers.Slicer.Caption" /> property is displayed in the header of the slicer.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.HoveredIndex">
      <summary>
            Gets or sets the hovered item index.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.StartItemIndex">
      <summary>
            Gets or sets the index of the first slicer item.
            </summary>
      <value>The index of the first slicer item.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.DisableMoveResizeUI">
      <summary>
            Gets or sets whether the specified slicer can be moved or resized by using the user interface.
            </summary>
      <value>
        <c>true</c> if  the slicer cannot be moved or resized by selecting borders or handles in the user interface; otherwise, <c>false</c>.
            Setting the <see cref="P:GrapeCity.Spreadsheet.Slicers.Slicer.DisableMoveResizeUI" /> property to <c>true</c> affects only the user interface.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.DisplayHeader">
      <summary>
            Gets or sets whether the header that displays the slicer <see cref="P:GrapeCity.Spreadsheet.Slicers.Slicer.Caption" /> is visible.
            </summary>
      <value>
        <c>true</c> if the header is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.NumberOfColumns">
      <summary>
            Gets or sets the number of columns in the specified slicer.
            </summary>
      <value>The number of columns in the specified slicer.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.RowHeight">
      <summary>
            Gets or sets the height of each row in the specified slicer.
            </summary>
      <value>The height of each row in the specified slicer.</value>
      <remarks>This property does not affect the height of the slicer.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.MultiSelect">
      <summary>
            Gets or sets the MultiSelect state of the specified slicer.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.Slicer.GrapeCity#Spreadsheet#Slicers#ISlicer#Style">
      <summary>
            Gets or sets the style currently applied to the specified slicer.
            </summary>
      <value>The style currently applied to the specified slicer.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.Slicer.DeleteCore">
      <summary>
            Deletes the slicer and removes it from the associated <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicers" /> collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.Slicer.GrapeCity#Spreadsheet#Slicers#ISlicer#Cut">
      <summary>
            Cuts the specified slicer and copies it to the clipboard.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.Slicer.GrapeCity#Spreadsheet#Slicers#ISlicer#Copy">
      <summary>
            Copies the specified slicer to the clipboard.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.Slicer.GetItemRect(GrapeCity.Drawing.Rectangle,System.Int32,GrapeCity.Drawing.Size,System.Single)">
      <summary>
            Get the boundary of slicer item.
            </summary>
      <param name="itemsRect">Boundary of container.</param>
      <param name="idx">The index of item.</param>
      <param name="itemSize">The item size.</param>
      <param name="zoomFactor">Zoom scale.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.Slicer.PaintCore(GrapeCity.Spreadsheet.Workbook,GrapeCity.Drawing.IDrawingContext,GrapeCity.Drawing.Rectangle,System.Boolean)">
      <summary>
            Paints this drawing object to the specified drawing context.
            </summary>
      <param name="workbook">The workbook that contains this drawing object.</param>
      <param name="drawingContext">The drawing context that paints this drawing object.</param>
      <param name="rect">The painting area that display this drawing object.</param>
      <param name="useableCachedBitmap">Indicates whether to use the cached bitmap of geometry drawing(s).</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.Slicer.CalculatePaintingArea(GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.Rectangle@,GrapeCity.Drawing.Rectangle@,GrapeCity.Drawing.Size@,GrapeCity.Drawing.Rectangle@,GrapeCity.Spreadsheet.StyleFormat@,System.Single)">
      <summary>
            Calculates the painting area of each section.
            </summary>
      <param name="rect">Boundary of the slicer</param>
      <param name="header">Boundary of the header.</param>
      <param name="itemsRect">Boundary of the items.</param>
      <param name="itemSize">The size of each item.</param>
      <param name="scrollbarRect">Boundary of the scrollbar.</param>
      <param name="headerStyleFormat">The header style format.</param>
      <param name="zoomFactor">Zoom scale</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.Slicer.HitTestOverride(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Double)">
      <summary>
            Gets the hit test information at the position of a slicer.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the slicer.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a slicer.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.Slicer.HitTest(System.Double,System.Double,GrapeCity.Drawing.Rectangle,System.Double)">
      <summary>
            Gets the hit test information at the position of a slicer.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="rect">The client rectangle of the slicer.</param>
      <param name="zoomFactor">The scaling factor for displaying.</param>
      <returns>The hit test information at the position of a slicer.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.Slicer.GrapeCity#Spreadsheet#Slicers#ISlicer#Delete">
      <summary>
            Deletes the slicer and removes it from the associated <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicers" /> collection.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.ISlicerData">
      <summary>
            Reprentsend slicer data extent for <see cref="T:GrapeCity.Spreadsheet.Slicers.Slicer" /> object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.ISlicerData.GetState(System.Int32)">
      <summary>
            Get current state of an item in Slicer
            </summary>
      <param name="index">index of item in Slicer data.</param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.SlicerItemState">
      <summary>
            Represent state of an slicer item
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.SortItems">
      <summary>
            Returns or sets the sort order of the items in the slicer
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerCache#SlicerItems">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" /> collection that contains the collection of all items in the slicer cache.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" /> collection that contains the collection of all items in the slicer cache.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.SlicerItemCount">
      <summary>
            Gets the slicer item count.
            </summary>
      <value>The slicer item count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.SlicerVisibleItemCount">
      <summary>
            Gets the slicer visible item count.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerItems#Count">
      <summary>
            Gets the number of objects in the collection.
            </summary>
      <value>The number of objects in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerCache#Slicers">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicers" /> collection that contains the collection of <see cref="T:GrapeCity.Spreadsheet.Slicers.Slicer" /> objects associated with the specified <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" />.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicers" /> collection that contains the collection of <see cref="T:GrapeCity.Spreadsheet.Slicers.Slicer" /> objects.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicers#Count">
      <summary>
            Gets the number of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects in the collection.
            </summary>
      <value>The number of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicers#Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.Slicer" /> object from a collection.
            </summary>
      <param name="index">The index number of the <see cref="T:GrapeCity.Spreadsheet.Slicers.Slicer" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> object from a collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicers#Add(GrapeCity.Spreadsheet.IWorksheet,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new slicer.
            </summary>
      <param name="iWorksheet">A <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object where the resulting slicer will be placed.
            The destination sheet must be in the workbook that contains the Slicers object specified by expression.</param>
      <param name="name">The name of the slicer. Spread automatically generates a name if the parameter is missing. The name must be unique across all slicers within a workbook.</param>
      <param name="caption">The caption of the slicer.</param>
      <param name="x">The initial horizontal position of the slicer, in pixels, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <param name="y">The initial vertical position of the slicer, in pixels, relative to the upper-left corner of cell A1 on a worksheet.</param>
      <param name="width">The initial width, in pixels, of the slicer control.</param>
      <param name="height">The initial height, in pixels, of the slicer control.</param>
      <returns>The created <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> object.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.SourceName">
      <summary>
            Gets the name of the data source the slicer is connected to.
            </summary>
      <value>The name of the data source the slicer is connected to.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.Name">
      <summary>
            Gets or sets the name of the slicer cache.
            </summary>
      <value>The name of the slicer cache.</value>
      <remarks>Name of the slicer cache must be unique within the workbook namespace.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerCache#RequireManualUpdate">
      <summary>
            Gets or sets a value indicating whether manual updates of the slicer cache required.
            </summary>
      <value>
        <c>true</c> if manual updates of the slicer cache required; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.List">
      <summary>
            Gets a value indicating whether the slicer cache is for a slicer on a table.
            </summary>
      <value>
        <c>true</c> if the slicer cache is for a slicer on a table; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerCache#Index">
      <summary>
            Gets the index of the specified <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object in the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCaches" /> collection.
            </summary>
      <value>The index of the specified <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.FilterCleared">
      <summary>
            Gets a value indicating whether the filter state is cleared.
            </summary>
      <value>
        <c>true</c> if the filter state is cleared; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.CrossFilterType">
      <summary>
            Gets or sets whether the slicer is participating in cross filtering with other slicers that share the same slicer cache, and how cross filtering is displayed.
            </summary>
      <value>The type of the cross filter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerCache#List">
      <summary>
            Gets a value indicating whether the slicer cache is for a slicer on a table.
            </summary>
      <value>
        <c>true</c> if the slicer cache is for a slicer on a table; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerCache#ListObject">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITable" /> object associated with this <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" />.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.VisibleSlicerItems">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" /> collection that contains the collection of all the visible items in the specified slicer cache.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" /> collection that contains the collection of all the visible items.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerItems#Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object from a collection.
            </summary>
      <param name="name">The name of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object from a collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerItems#Range(System.String[])">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects from a collection.
            </summary>
      <param name="names">The names of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> objects from a collection.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicers#Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.Slicer" /> object from a collection.
            </summary>
      <param name="name">The name of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicer" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.Slicer" /> object from a collection.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCache.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object from a collection.
            </summary>
      <param name="index">The index number of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItem" /> object from a collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCache.ClearAllFilters">
      <summary>
            Clears the filter depending on the slicer cache type.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerCache#Delete">
      <summary>
            Deletes the specified slicer cache and the slicers associated with it.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerCache#ClearDateFilter">
      <summary>
            Clears the filter for a timeline (date filter).
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCache.GrapeCity#Spreadsheet#Slicers#ISlicerCache#ClearManualFilter">
      <summary>
            Clears the manual filter for the slicer cache.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCache.Select(System.Int32[])">
      <summary>
            Selects the slicer items.
            </summary>
      <param name="indexes">An integer values indicates the selected slicer items.</param>
      <remarks>All other items, which is not in the array, will be deselected.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCache.Select(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Selects the specified range of the slicer items.
            </summary>
      <param name="start">The start position of the slicer item range.</param>
      <param name="end">The end position of the slicer item range.</param>
      <param name="reverse">
        <c>true</c> if the selected state of items will be reversed; otherwise, select normally.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCache.InitializeBatching">
      <summary>
            Initializes batching for the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCache.TerminateBatching(System.Boolean)">
      <summary>
            Ends batching for the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerItems" />.
            </summary>
      <param name="applyFilter">
        <c>true</c> if the filter is applied immediately; otherwise, <c>false</c>.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.SlicerCrossFilterType">
      <summary>
            Specifies how the slicer items that are used in slicer cross filtering are displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Slicers.SlicerCrossFilterType.None">
      <summary>
            Cross filtering is turned off entirely, so all tiles are displayed and active (not dimmed) regardless of filtering selections in other slicers.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Slicers.SlicerCrossFilterType.ShowItemsWithDataAtTop">
      <summary>
            Cross filtering is turned on for this slicer cache, any tile with no data for a filtering selection in other slicers connected to the same data source will be dimmed.
            Additionally, tiles with data are moved to the top in the slicer.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Slicers.SlicerCrossFilterType.ShowItemsWithNoData">
      <summary>
            Cross filtering is turned on for this slicer cache, any tile with no data for a filtering selection in other slicers connected to the same data source will be dimmed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Slicers.SlicerCrossFilterType.HideButtonsWithNoData">
      <summary>
            Cross filtering is turned on for this slicer cache, any tile with no data for a filtering selection in other slicers connected to the same data source will be dimmed.
            Additionally, buttons will be hidden.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Slicers.SlicerCaches">
      <summary>
            Represents the collection of slicer caches associated with the specified workbook.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCaches.Count">
      <summary>
            Gets the number of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> objects in the collection.
            </summary>
      <value>The number of <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> objects in the collection.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCaches.GrapeCity#Spreadsheet#Slicers#ISlicerCaches#Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object from a collection.
            </summary>
      <param name="index">The index number of the <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object from a collection.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCaches.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.SlicerCache" /> object from a collection.
            </summary>
      <param name="index">The index number of the <see cref="T:GrapeCity.Spreadsheet.Slicers.SlicerCache" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.SlicerCache" /> object from a collection.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Slicers.SlicerCaches.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Slicers.SlicerCache" /> object from a collection.
            </summary>
      <param name="name">The name of the <see cref="T:GrapeCity.Spreadsheet.Slicers.SlicerCache" /> object.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Slicers.SlicerCache" /> object from a collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCaches.GrapeCity#Spreadsheet#Slicers#ISlicerCaches#Add(GrapeCity.Spreadsheet.ITable,System.String,System.String,System.Boolean)">
      <summary>
            Adds a new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object to the collection.
            </summary>
      <param name="table">The data source that the new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> will be based on.</param>
      <param name="columnName">The name of the column in the table to filter by.</param>
      <param name="name">The name Spread uses to reference the slicer cache (the value of the <see cref="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.Name" /> property). If omitted, Spread will generate a name.</param>
      <param name="create">
        <c>true</c> to create new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object; otherwise, a corresponding <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object is reused if it exists.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> value represents the created slicer cache. <c>null</c> if the slicer cache cannot be created.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Slicers.SlicerCaches.GrapeCity#Spreadsheet#Slicers#ISlicerCaches#Add(GrapeCity.Spreadsheet.ITable,System.Int32,System.String,System.Boolean)">
      <summary>
            Adds a new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object to the collection.
            </summary>
      <param name="table">The data source that the new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> will be based on.</param>
      <param name="columnIndex">The relative index of the column in the table to filter by.</param>
      <param name="name">The name Spread uses to reference the slicer cache (the value of the <see cref="P:GrapeCity.Spreadsheet.Slicers.ISlicerCache.Name" /> property). If omitted, Spread will generate a name.</param>
      <param name="create">
        <c>true</c> to create new <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object; otherwise, a corresponding <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> object is reused if it exists.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Slicers.ISlicerCache" /> value represents the created slicer cache. <c>null</c> if the slicer cache cannot be created.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Table">
      <summary>
            Represents a table of the worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.TableColumn" /> at the specified column index.
            </summary>
      <param name="columnIndex">An integer value represents the column index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.TableColumn" /> object represents the specified table column.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.ShowHeaders">
      <summary>
            Gets or sets a value indicating whether the header row is visible.
            </summary>
      <value>
        <c>true</c> if the header row is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.IsBinding">
      <summary>
            Gets a boolean value indicating whether the table is binding to a data source.
            </summary>
      <returns>
        <c>true</c> if the table is binding to a data source; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.ShowTotals">
      <summary>
            Gets or sets a value indicating whether the total row is visible.
            </summary>
      <value>
        <c>true</c> if the total row is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.ApplyTableStyle(System.String)">
      <summary>
            Applies the specified table style to this <see cref="T:GrapeCity.Spreadsheet.Table" />.
            </summary>
      <param name="tableStyleName">A string value represents the name of table style.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.ApplyTableStyle(GrapeCity.Spreadsheet.TableStyle)">
      <summary>
            Applies the specified table style to this <see cref="T:GrapeCity.Spreadsheet.Table" />.
            </summary>
      <param name="tableStyle">A <see cref="P:GrapeCity.Spreadsheet.Table.TableStyle" /> object represents the table style.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.TableStyle">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Table.TableStyle" /> indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.Table" />.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Table.TableStyle" /> object indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.Table" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.TableStyleSetting">
      <summary>
            Gets or sets the <see cref="P:GrapeCity.Spreadsheet.Table.TableStyleSetting" /> value indicates which style will be applied.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Table.TableStyleSetting" /> value indicates which style will be applied.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.ShowAutoFilterDropDown">
      <summary>
            Gets or sets a value indicating whether the filter button in the header row of each column is displayed.
            </summary>
      <value>
        <c>true</c> if the filter button in the header row of each column is displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Name">
      <summary>
            Gets the name of <see cref="T:GrapeCity.Spreadsheet.Table" /> object.
            </summary>
      <value>A string value represents the name of <see cref="T:GrapeCity.Spreadsheet.Table" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Range">
      <summary>
            Gets the range reference of this <see cref="T:GrapeCity.Spreadsheet.Table" />.
            </summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value represents the range reference of this <see cref="T:GrapeCity.Spreadsheet.Table" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#CalcEngine#IStructuredObject#Range">
      <summary>
            Gets the range reference of the structured object.
            </summary>
      <value>A <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value represents the range of structured object.</value>
      <remarks>The <see cref="T:GrapeCity.CalcEngine.RangeReference" /> value must be absolute reference.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Active">
      <summary>
            Gets a value indicating whether the active cell of worksheet is inside the range of this <see cref="T:GrapeCity.Spreadsheet.Table" /> object.
            </summary>
      <value>
        <c>true</c> if the table is active; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Comment">
      <summary>
            Gets or sets the comment associated with the <see cref="T:GrapeCity.Spreadsheet.Table" /> object.
            </summary>
      <value>A string value represents the comment.</value>
      <remarks>The comment text cannot exceed 255 characters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.AutoFilter">
      <summary>
            Gets the filter of this <see cref="T:GrapeCity.Spreadsheet.Table" />.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.Table.AutoFilter" /> object represents the filter of this <see cref="T:GrapeCity.Spreadsheet.Table" />.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#Unlist">
      <summary>
            Convert data of this <see cref="T:GrapeCity.Spreadsheet.Table" /> into normal cells and deletes it from the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#Delete(System.Boolean)">
      <summary>
            Deletes this <see cref="T:GrapeCity.Spreadsheet.ITable" /> from the worksheet.
            </summary>
      <param name="clearCells">
        <c>true</c> to clear all cell data; otherwise, the table is removed only.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.Resize(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Resizes the boundary of this table over a new range. No cells are inserted or moved.
            </summary>
      <param name="column">An integer value indicates the new worksheet left column index.</param>
      <param name="column2">An integer value indicates the new worksheet right column index.</param>
      <param name="rowCount">An integer value indicates the new table row count. <c>-1</c> means no row count changed.</param>
      <param name="autoExpand">if set to <c>true</c>, all settings, which's fitted to table column, will be expanded automatically.</param>
      <returns>
        <c>true</c> if the table is resized successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#CalcEngine#IStructuredObject#IsUndefined">
      <summary>
            Determines whether this <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object is undefined.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object is undefined; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GetColumnId(System.String)">
      <summary>
            Gets the relative column index of the specified column.
            </summary>
      <param name="columnName">A string value indicates the specified column.</param>
      <returns>An integer value indicates the relative column index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#CalcEngine#IStructuredObject#GetColumnName(System.Int32)">
      <summary>
            Gets the table column name of the specified column.
            </summary>
      <param name="id">An integer value indicates the column unique ID inside the structure object.</param>
      <returns>A string indicates the column name.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#CalcEngine#IStructuredObject#GetColumnIndex(System.Int32)">
      <summary>
            Get the table column index of the specified column.
            </summary>
      <param name="id">An integer value indicates the column unique ID inside the structure object.</param>
      <returns>An <see cref="T:System.Int32" /> value represents the table column index of the specified column.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#CalcEngine#IStructuredObject#ReferenceSource">
      <summary>
            Gets the <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object which contains the <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object.
            </summary>
      <value>The <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> object which contains the <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> object.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#CalcEngine#IStructuredObject#GetReplacedStructuredObj">
      <summary>
            Get the replacement of this <see cref="T:GrapeCity.CalcEngine.IStructuredObject" /> in case it is removed.
            </summary>
      <returns>The replacement of this <see cref="T:GrapeCity.CalcEngine.IStructuredObject" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.Equals(GrapeCity.Spreadsheet.Table)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.InsertColumns(System.Int32,System.Int32)">
      <summary>
            Inserts table column(s) at the specified index.
            </summary>
      <param name="index">An integer value indicates the index to insert.</param>
      <param name="count">An integer value indicates the inserted column count.</param>
      <returns>
        <c>true</c> if the inserting is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITableColumns#Move(System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves table column(s) at the specified index to other index.
            </summary>
      <param name="index">An integer value indicates the index to move.</param>
      <param name="toIndex">An integer value indicates the target index.</param>
      <param name="count">An integer value indicates the moved column count.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.MoveColumns(System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves table column(s) at the specified index to other index.
            </summary>
      <param name="index">An integer value indicates the index to move.</param>
      <param name="toIndex">An integer value indicates the target index.</param>
      <param name="count">An integer value indicates the moved column count.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.InsertRows(System.Int32,System.Int32)">
      <summary>
            Inserts table row(s) at the specified index.
            </summary>
      <param name="index">An integer value indicates the index to insert.</param>
      <param name="count">An integer value indicates the inserted row count.</param>
      <returns>
        <c>true</c> if the inserting is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITableRows#Move(System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves table row(s) at the specified index to other index.
            </summary>
      <param name="row">An integer value indicates the index to move.</param>
      <param name="toRow">An integer value indicates the target index.</param>
      <param name="count">An integer value indicates the moved row count.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.MoveRows(System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves table row(s) at the specified index to other index.
            </summary>
      <param name="index">An integer value indicates the index to move.</param>
      <param name="toIndex">An integer value indicates the target index.</param>
      <param name="count">An integer value indicates the moved row count.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITableRows#MoveOut(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Moves table row(s) at the specified position to the first row below or above this <see cref="T:GrapeCity.Spreadsheet.Table" />.
            </summary>
      <param name="row">An integer value indicates the position to move.</param>
      <param name="count">An integer value indicates the moved row count.</param>
      <param name="moveDown">A boolean value indicates  whether to move the move direction is below or above table.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
      <remarks>Moved rows will be removed from this <see cref="T:GrapeCity.Spreadsheet.Table" />.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.RemoveColumns(System.Int32,System.Int32)">
      <summary>
            Removes table column(s) at the specified index.
            </summary>
      <param name="index">An integer value indicates the index to insert.</param>
      <param name="count">An integer value indicates the removed column count.</param>
      <returns>
        <c>true</c> if the removing is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.RemoveRows(System.Int32,System.Int32)">
      <summary>
            Removes table row(s) at the specified index.
            </summary>
      <param name="index">An integer value indicates the index to remove.</param>
      <param name="count">An integer value indicates the removed row count.</param>
      <returns>
        <c>true</c> if the removing is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.DataRow">
      <summary>
            Gets the worksheet index of the table data's top row.
            </summary>
      <value>An integer value represents the worksheet index of the table data's top row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.DataRow2">
      <summary>
            Gets the worksheet index of the table data's bottom row.
            </summary>
      <value>An integer value represents the worksheet index of the table data's bottom row.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.ToggleTotals">
      <summary>
            Toggles the totals row's visibility.
            </summary>
      <returns>
        <c>true</c> if the action complete successfully, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GetTableExpression(GrapeCity.CalcEngine.StructuredItemSpecifiers,System.Int32,System.Int32)">
      <summary>
            Get table Formula from structuredItemSpecifiers and column index.
            </summary>
      <param name="itemSpecifiers">the item specifiers of the structured object.</param>
      <param name="fromColumnId">the start column index.</param>
      <param name="toColumnId">the end column index.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.ToggleHeaders">
      <summary>
            Toggles the headers row's visibility.
            </summary>
      <returns>
        <c>true</c> if the action complete successfully, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.OnAutoFilterCreated">
      <summary>
            Occurs after the auto filter is created.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.OnAutoFilterDeleted">
      <summary>
            Occurs after the auto filter is deleted;
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.Sort">
      <summary>
            Gets the sort object.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Table.Sort" /> object belong to the table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#Sort">
      <summary>
            Gets the sort object.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ISort" /> object belong to the table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#AutoFilter">
      <summary>
            Gets the filter of this <see cref="T:GrapeCity.Spreadsheet.ITable" />.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object represents the filter of this <see cref="T:GrapeCity.Spreadsheet.Table" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#IAutoFilterOwner#Worksheet">
      <summary>
            Gets the worksheet which contains this <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object.
            </summary>
      <value>A <see cref="F:GrapeCity.Spreadsheet.Table._worksheet" /> object which contains this <see cref="T:GrapeCity.Spreadsheet.IAutoFilterOwner" /> object.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#IAutoFilterOwner#RemoveFilter">
      <summary>
            Removes the filter from the current object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#IAutoFilterOwner#NotifyFilterButtonHiddenChanged(System.Boolean)">
      <summary>
            Notifies the filter button hidden has been changed.
            </summary>
      <param name="hidden">if set to <c>true</c> the filter button is hidden.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#IAutoFilterOwner#CreateAutoFilter(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates the automatic filter.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>An <see cref="P:GrapeCity.Spreadsheet.Table.AutoFilter" /> object represents the created filter. <c>null</c> if the data is invalid.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#IAutoFilterOwner#ShowDropDownButton">
      <summary>
            Gets a value indicating whether [show drop down button].
            </summary>
      <value>
        <c>true</c> if [show drop down button]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#CalcEngine#IStructuredObject#HeaderRowCount">
      <summary>
            Gets the header row count.
            </summary>
      <value>An integer values represents the header row count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#CalcEngine#IStructuredObject#TotalsRowCount">
      <summary>
            Gets the totals row count.
            </summary>
      <value>An integer value represents the totals row count.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GetColumnFormula(System.Int32)">
      <summary>
            Gets the formula of the specified calculated column.
            </summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <returns>An <see cref="T:System.String" /> value represents the formula of the specified calculated column.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetColumnFormula(System.Int32,System.String,System.Boolean,System.Boolean)">
      <summary>
            Sets the calculated column's formula.
            </summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <param name="formula">A string value indicates formula of the calculated column. The first cell of data area will be count as context cell.</param>
      <param name="alwaysFill">if set to <c>true</c>, all cells of table column will be filled with the expression.</param>
      <param name="fillIfEmpty">if set to <c>true</c>, all cells of table column will be filled with the expression if they're all empty.</param>
      <returns>
        <c>true</c> if the formula is set successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetTotalsRowFormula(System.Int32,System.String)">
      <summary>
            Sets the totals row formula.
            </summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <param name="formula">A string value indicates formula of the total rows.</param>
      <returns>
        <c>true</c> if the formula is set successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetTotalsRowFormula(System.Int32,GrapeCity.Spreadsheet.TotalsCalculation)">
      <summary>
            Sets the totals row formula.
            </summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <param name="function">A <see cref="T:GrapeCity.Spreadsheet.TotalsCalculation" /> value indicates the totals row function.</param>
      <returns>
        <c>true</c> if the formula is set successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetTotalsRowLabel(System.Int32,System.String)">
      <summary>
            Sets the totals row label.
            </summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <param name="text">A string value indicates the totals row label.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetColumnName(System.Int32,System.String)">
      <summary>
            Sets the name of the column.
            </summary>
      <param name="index">An integer value indicates the calculated column index.</param>
      <param name="text">A string value indicates the column name.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetTotalsRowStyle(System.Int32,System.String)">
      <summary>
            Sets the name of the cell style that is applied to the totals row cell of the specified column.
            </summary>
      <param name="index">An integer value indicates the specifed column's index.</param>
      <param name="styleName">A string value represents the name of the cell style that is applied to the totals row cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetTotalsRowStyle(System.String)">
      <summary>
            Sets the name of the cell style that is applied to the totals row cell.
            </summary>
      <param name="styleName">A string value represents the name of the cell style that is applied to the totals row cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetHeaderRowStyle(System.Int32,System.String)">
      <summary>
            Sets the name of the cell style that is applied to the header row cell of the specified column.
            </summary>
      <param name="index">An integer value indicates the specifed column's index.</param>
      <param name="styleName">A string value represents the name of the cell style that is applied to the header row cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetHeaderRowStyle(System.String)">
      <summary>
            Sets the name of the cell style that is applied to the header row cell.
            </summary>
      <param name="styleName">A string value represents the name of the cell style that is applied to the header row cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetDataRowStyle(System.Int32,System.String)">
      <summary>
            Sets the name of the cell style that is applied to the data row cell of the specified column.
            </summary>
      <param name="index">An integer value indicates the specifed column's index.</param>
      <param name="styleName">A string value represents the name of the cell style that is applied to the data row cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.SetDataRowStyle(System.String)">
      <summary>
            Sets the name of the cell style that is applied to the data row cell.
            </summary>
      <param name="styleName">A string value represents the name of the cell style that is applied to the data row cell.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.HeaderRowFormatting">
      <summary>
            Gets the header row format.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the header row format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.HeaderRowBorderFormatting">
      <summary>
            Gets the header row border format.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the header row border format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.TotalsRowFormatting">
      <summary>
            Gets the totals row format.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the totals row format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.TotalsRowBorderFormatting">
      <summary>
            Gets the totals row border format.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the totals row border format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.DataRowFormatting">
      <summary>
            Gets the data row format.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the data row format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.BorderFormatting">
      <summary>
            Gets the table border format.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the table border format.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GetStyleFormat(System.Int32,System.Int32)">
      <summary>
            Gets the style format of the specified cell on this table.
            </summary>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value represents the style format of the cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#Resize(System.Int32,System.Int32,System.Int32)">
      <summary>
            Resizes the boundary of this table over a new range. No cells are inserted or moved.
            </summary>
      <param name="column">An integer value indicates the new worksheet left column index.</param>
      <param name="column2">An integer value indicates the new worksheet right column index.</param>
      <param name="rowCount">An integer value indicates the new table row count. Default value is -1 that indicates the row count remained.</param>
      <returns>
        <c>true</c> if the table is resized successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#Resize(System.String)">
      <summary>
            Resizes the boundary of this table over a new range. No cells are inserted or moved.
            </summary>
      <param name="range">The new range of the table.</param>
      <returns>
        <c>true</c> if the table is resized successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#Resize(GrapeCity.Spreadsheet.IRange)">
      <summary>
            Resizes the boundary of this table over a new range. No cells are inserted or moved.
            </summary>
      <param name="range">The new range of the table.</param>
      <returns>
        <c>true</c> if the table is resized successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#Worksheet">
      <summary>
            Gets the worksheet object for the specified table.
            </summary>
      <value>The worksheet contains the specified table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#TotalsRowRange">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object representing the Total row, if any, from a specified table object.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object representing the Total row, if any, from a specified table object..</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#DataBodyRange">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of values, excluding the header row, in a table.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of values, excluding the header row, in a table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#HeaderRowRange">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of the header row for a table.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of the header row for a table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#Range">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified table in the above list applies.
            </summary>
      <value>The range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#ShowTableStyleRowStripes">
      <summary>
            Gets or sets a value indicating whether the Row Stripes table style is used for the specified table object.
            </summary>
      <value>
        <c>true</c> if the Row Stripes table style is used for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#ShowTableStyleLastColumn">
      <summary>
            Gets or sets a value indicating whether the last column is displayed for the specified table object.
            </summary>
      <value>
        <c>true</c> if the last column is displayed for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#ShowTableStyleFirstColumn">
      <summary>
            Gets or sets a value indicating whether the first column is formatted for the specified table object.
            </summary>
      <value>
        <c>true</c> if the first column is formatted for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#ShowTableStyleColumnStripes">
      <summary>
            Gets or sets a value indicating whether the Column Stripes table style is used for the specified table object.
            </summary>
      <value>
        <c>true</c> if the Column Stripes table style is used for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#ShowAutoFilterDropDown">
      <summary>
            Gets or sets a boolean value indicating whether the <see cref="P:GrapeCity.Spreadsheet.Table.AutoFilter" /> drop down for the table object is displayed.
            </summary>
      <value>
        <c>true</c> if the <see cref="P:GrapeCity.Spreadsheet.Table.AutoFilter" /> drop down for the table object is displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#ShowAutoFilter">
      <summary>
            Gets or sets a boolean value indicating whether the <see cref="P:GrapeCity.Spreadsheet.Table.AutoFilter" /> will be displayed.
            </summary>
      <value>
        <c>true</c> if the <see cref="P:GrapeCity.Spreadsheet.Table.AutoFilter" /> will be displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#ShowHeaders">
      <summary>
            Gets or sets a value indicating whether the header row is visible.
            </summary>
      <value>
        <c>true</c> if the header row is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#ShowTotals">
      <summary>
            Gets or sets a value indicating whether the total row is visible.
            </summary>
      <value>
        <c>true</c> if the total row is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#TableStyle">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Table.TableStyle" /> indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Table.TableStyle" /> object indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#TableStyleName">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.Table.TableStyle" /> indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Table.TableStyle" /> object indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#TableColumns">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.ITableColumns" /> collection that represents all the columns in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ITableColumns" /> collection that represents all the columns in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITable#TableRows">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.ITableRows" /> collection that represents all the rows in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ITableRows" /> collection that represents all the rows in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITableColumns#Count">
      <summary>
            Gets an integer value that represents the number of columns in the table.
            </summary>
      <value>The number of columns in the table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITableColumns#Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of the table column.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITableColumns#Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.
            </summary>
      <param name="name">A string value indicates the name of the table column.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITableColumns#Add(System.Int32,System.Int32)">
      <summary>
            Adds a new column to the table object.
            </summary>
      <param name="position">An integer value indicates the relative position of the new column that starts at 1. The previous column at this position is shifted outward.</param>
      <param name="count">The total number of new columns.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object that represents the new column.</returns>
      <remarks>If <paramref name="position" /> is not specified, a new rightmost column is added. A name for the column is automatically generated. The name of the new column can be changed after the column is added.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITableRows#Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of the table column.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITableRows#Count">
      <summary>
            Gets an integer value that represents the number of columns in the table.
            </summary>
      <value>The number of columns in the table.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.GrapeCity#Spreadsheet#ITableRows#Add(System.Int32,System.Boolean,System.Int32)">
      <summary>
            Adds a new row to the table object.
            </summary>
      <param name="position">An integer value indicates the relative position of the new row.</param>
      <param name="alwaysInsert">A boolean value indicates  whether to always shift data in cells below the last row of the table when the new row is inserted, regardless if the row below the table is empty. If True , the cells below the table will be shifted down one row. If False , if the row below the table is empty, the table will expand to occupy that row without shifting cells below it; but if the row below the table contains data, those cells will be shifted down when the new row is inserted.</param>
      <param name="count">The total number of new rows.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITableRow" /> object that represents the new row.</returns>
      <remarks>If <paramref name="position" /> is not specified, a new bottom row is added. If <paramref name="alwaysInsert" /> is not specified, the cells below the table will be shifted down one row (same as specifying <c>true</c>).</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.AutoGenerateColumns">
      <summary>
            Gets or sets whether to generate the columns automatically based on the data source.
            </summary>
      <value>
        <c>true</c> if the table generate the columns automatically based on the data source; otherwise, <c>false</c>. The default is <c>true</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.DataSource">
      <summary>
            Gets or sets the data source that populates the table.
            </summary>
      <value>
            The data source that populates the table.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Table.DataAllowAddNew">
      <summary>
            Gets or sets whether to allow the user to add a new row when the table is bound.
            </summary>
      <value>
        <c>true</c> if allowed to add new row; otherwise, <c>false</c></value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Table.CreateFormula(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,GrapeCity.CalcEngine.StructuredItemSpecifiers,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Gets the formula that represents the specified area in the table.
            </summary>
      <param name="contextSheet">The <see cref="P:GrapeCity.Spreadsheet.Table.Worksheet" /> that contains the formula.</param>
      <param name="contextRow">An integer value indicates the row of cell that contains the formula.</param>
      <param name="contextColumn">An integer value indicates the column of cell that contains the formula.</param>
      <param name="itemSpecifiers">A <see cref="T:GrapeCity.CalcEngine.StructuredItemSpecifiers" /> value indicates the referred area.</param>
      <param name="columnId1">An integer value indicates the first column.</param>
      <param name="columnId2">An integer value indicates the second column.</param>
      <returns>The formula that represents the specified area in the table.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISort">
      <summary>
            Represents a sort of a range of data.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISort.Apply">
      <summary>
            Sorts the range based on the currently applied sort states.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISort.SetRange(GrapeCity.Spreadsheet.Reference)">
      <summary>
            Sets the range over which the sort occurs.
            </summary>
      <param name="rng">Specifies the range over which the sort represented by the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object occurs.</param>
      <remarks>
        <see cref="M:GrapeCity.Spreadsheet.ISort.SetRange(GrapeCity.Spreadsheet.Reference)" /> can only be used when applying a sort to a sheet range, and cannot be used if the range is within a table.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISort.SetRange(System.String)">
      <summary>
            Sets the range over which the sort occurs.
            </summary>
      <param name="rng">Specifies the range over which the sort represented by the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object occurs.</param>
      <remarks>
        <see cref="M:GrapeCity.Spreadsheet.ISort.SetRange(GrapeCity.Spreadsheet.Reference)" /> can only be used when applying a sort to a sheet range, and cannot be used if the range is within a table.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISort.SetRange(GrapeCity.Spreadsheet.IRange)">
      <summary>
            Sets the range over which the sort occurs.
            </summary>
      <param name="rng">Specifies the range over which the sort represented by the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object occurs.</param>
      <remarks>
        <see cref="M:GrapeCity.Spreadsheet.ISort.SetRange(GrapeCity.Spreadsheet.Reference)" /> can only be used when applying a sort to a sheet range, and cannot be used if the range is within a table.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.MatchCase">
      <summary>
            Gets or sets a value indicating whether to perform a case-sensitive sort.
            </summary>
      <value>
        <c>true</c> if perform a case-sensitive sort; otherwise, <c>false</c> to perform non-case sensitive sort.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.Orientation">
      <summary>
            Gets or sets the orientation for the sort.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.Rng">
      <summary>
            Gets or sets the range of values on which the sort is performed.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> value represents the range of values on which the sort is performed.</value>
      <remarks>This property can be changed when applying a sort to a sheet range, and cannot be changed if the range is within a table.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.SortFields">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ISortFields" /> object that represents the collection of sort fields associated with the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ISortFields" /> object that represents the collection of sort fields.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.SortMethod">
      <summary>
            Gets or sets the sort method for Chinese languages.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.ISort.SortMethod" /> value represents the sort method for Chinese languages.</value>
      <remarks>This property take effect on XLSX import/export only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISort.Header">
      <summary>
            Gets or sets a value indicating whether  the first row contains header information.
            </summary>
      <value>
        <c>true</c> if  the first row contains header information; otherwise, <c>false</c>.</value>
      <remarks>Default value is <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.No" />.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISortFields">
      <summary>
            Represents the collection of <see cref="T:GrapeCity.Spreadsheet.ISortField" /> objects.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortFields.Count">
      <summary>
            Gets the number of sort fields in the collection.
            </summary>
      <value>The count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortFields.Item(System.Int32)">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object that represents a collection of items that can be sorted in a workbook.
            </summary>
      <param name="index">An integer value indicates the index of the <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object that represents a collection of items that can be sorted in a workbook.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortFields.Clear">
      <summary>
            Clears all the sort fields.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortFields.Add(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.SortOn,GrapeCity.Spreadsheet.SortOrder,GrapeCity.Spreadsheet.SortDataOption)">
      <summary>
            Creates a new sort field and returns an <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.
            </summary>
      <param name="key">Specifies a key value for the sort.</param>
      <param name="sortOn">The field to sort on.</param>
      <param name="order">Specifies the sort order.</param>
      <param name="dataOption">Specifies the data option.</param>
      <returns>The new created <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortFields.Add(System.String,GrapeCity.Spreadsheet.SortOn,GrapeCity.Spreadsheet.SortOrder,GrapeCity.Spreadsheet.SortDataOption)">
      <summary>
            Creates a new sort field and returns an <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.
            </summary>
      <param name="key">Specifies a key value for the sort.</param>
      <param name="sortOn">The field to sort on.</param>
      <param name="order">Specifies the sort order.</param>
      <param name="dataOption">Specifies the data option.</param>
      <returns>The new created <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortFields.Add(GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.SortOn,GrapeCity.Spreadsheet.SortOrder,GrapeCity.Spreadsheet.SortDataOption)">
      <summary>
            Creates a new sort field and returns an <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.
            </summary>
      <param name="key">Specifies a key value for the sort.</param>
      <param name="sortOn">The field to sort on.</param>
      <param name="order">Specifies the sort order.</param>
      <param name="dataOption">Specifies the data option.</param>
      <returns>The new created <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortFields.Add(System.Int32,GrapeCity.Spreadsheet.SortOn,GrapeCity.Spreadsheet.SortOrder,GrapeCity.Spreadsheet.SortDataOption)">
      <summary>
            Creates a new sort field and returns an <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.
            </summary>
      <param name="key">Specifies a key value for the sort.</param>
      <param name="sortOn">The field to sort on.</param>
      <param name="order">Specifies the sort order.</param>
      <param name="dataOption">Specifies the data option.</param>
      <returns>The new created <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISortField">
      <summary>
            Represent an object contains all the sort information for the <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />, <see cref="T:GrapeCity.Spreadsheet.ITable" />, and <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> objects.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.Delete">
      <summary>
            Removes the specified <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object from the <see cref="T:GrapeCity.Spreadsheet.ISortFields" /> collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.ModifyKey(GrapeCity.Spreadsheet.IRange)">
      <summary>
            Modify the key value by which values are sorted in the field.
            </summary>
      <param name="key">Specifies the key to be modified. <paramref name="key" /> refers to worksheet range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.ModifyKey(GrapeCity.Spreadsheet.Reference)">
      <summary>
            Modify the key value by which values are sorted in the field.
            </summary>
      <param name="key">Specifies the key to be modified. <paramref name="key" /> refers to worksheet range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.ModifyKey(System.String)">
      <summary>
            Modify the key value by which values are sorted in the field.
            </summary>
      <param name="key">Specifies the key to be modified. <paramref name="key" /> refers to worksheet range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.ModifyKey(System.Int32)">
      <summary>
            Modify the key value by which values are sorted in the field.
            </summary>
      <param name="key">Specifies the key to be modified. <paramref name="key" /> refers to the sort range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ISortField.SetIcon(GrapeCity.Spreadsheet.CfIcon)">
      <summary>
            Sets an icon for a <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.
            </summary>
      <param name="cfIcon">The icon to be set.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.DataOption">
      <summary>
            Gets or sets the data option indicating how to sort text in the range specified in SortField object.
            </summary>
      <value>The data option indicating how to sort text.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.Key">
      <summary>
            Gets the range that is currently being sorted on.
            </summary>
      <value>The range that is currently being sorted on.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.Order">
      <summary>
            Gets or sets the sort order for the values specified in the key.
            </summary>
      <value>The sort order for the values specified in the key.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.Priority">
      <summary>
            Gets or sets the priority for the sort field.
            </summary>
      <value>The priority for the sort field.</value>
      <remarks>
            The priority starts from 1 which has the highest priority.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.SortOn">
      <summary>
            Gets or sets what attribute of the cell to sort on.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.SortOn" /> value represents what attribute of the cell to sort on.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortField.SortOnValue">
      <summary>
            Gets the value on which the sort is performed for the specified <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.
            </summary>
      <value>The value on which the sort is performed for the specified <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Sort">
      <summary>
            Represents a sort of a range of data.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.MatchCase">
      <summary>
            Gets or sets a value indicating whether to perform a case-sensitive sort.
            </summary>
      <value>
        <c>true</c> if perform a case-sensitive sort; otherwise, <c>false</c> to perform non-case sensitive sort.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.Header">
      <summary>
            Gets or sets a value indicating whether  the first row contains header information.
            </summary>
      <value>
        <c>true</c> if  the first row contains header information; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.Orientation">
      <summary>
            Gets or sets the orientation for the sort.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.Worksheet">
      <summary>
            Gets the worksheet which contains this <see cref="T:GrapeCity.Spreadsheet.ISortOwner" /> object.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Sort.Worksheet" /> object which contains this <see cref="T:GrapeCity.Spreadsheet.ISortOwner" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.Range">
      <summary>
            Gets the range of values on which the sort is performed.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the range of values on which the sort is performed.</value>
      <remarks>This property can be changed when applying a sort to a sheet range, and cannot be changed if the range is within a table.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.SortMethod">
      <summary>
            Gets or sets the sort method for Chinese languages.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.SortMethod" /> value represents the sort method for Chinese languages.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.Count">
      <summary>
            Gets the sort field count.
            </summary>
      <value>An integer value represents the sort field count.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sort.Clear">
      <summary>
            Clears all sort fields.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sort.Apply(System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>
            Sorts the range based on the currently applied sort states.
            </summary>
      <param name="sorting">if set to <c>true</c> apply the sort logic in current range.</param>
      <param name="sortFrozenRows">if set to <c>true</c> or not set, frozen rows will be sorted .</param>
      <returns>An array represents the order of sorted rows.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sort.GrapeCity#Spreadsheet#ISort#Apply">
      <summary>
            Sorts the range based on the currently applied sort states.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.GrapeCity#Spreadsheet#ISort#SortFields">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ISortFields" /> object that represents the collection of sort fields associated with the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ISortFields" /> object that represents the collection of sort fields.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.GrapeCity#Spreadsheet#ISort#Rng">
      <summary>
            Gets or sets the range of values on which the sort is performed.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IRange" /> value represents the range of values on which the sort is performed.</value>
      <remarks>This property can be changed when applying a sort to a sheet range, and cannot be changed if the range is within a table.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sort.GrapeCity#Spreadsheet#ISort#SetRange(GrapeCity.Spreadsheet.IRange)">
      <summary>
            Sets the range over which the sort occurs.
            </summary>
      <param name="rng">Specifies the range over which the sort represented by the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object occurs.</param>
      <remarks>
        <see cref="!:SetRange(Reference)" /> can only be used when applying a sort to a sheet range, and cannot be used if the range is within a table.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sort.GrapeCity#Spreadsheet#ISort#SetRange(GrapeCity.Spreadsheet.Reference)">
      <summary>
            Sets the range over which the sort occurs.
            </summary>
      <param name="rng">Specifies the range over which the sort represented by the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object occurs.</param>
      <remarks>
        <see cref="!:SetRange(Reference)" /> can only be used when applying a sort to a sheet range, and cannot be used if the range is within a table.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sort.GrapeCity#Spreadsheet#ISort#SetRange(System.String)">
      <summary>
            Sets the range over which the sort occurs.
            </summary>
      <param name="rng">Specifies the range over which the sort represented by the <see cref="T:GrapeCity.Spreadsheet.ISort" /> object occurs.</param>
      <remarks>
        <see cref="!:SetRange(Reference)" /> can only be used when applying a sort to a sheet range, and cannot be used if the range is within a table.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.GrapeCity#Spreadsheet#ISortFields#Count">
      <summary>
            Gets the number of sort fields in the collection.
            </summary>
      <value>The count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sort.GrapeCity#Spreadsheet#ISortFields#Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ISortField" /> with the specified error.
            </summary>
      <returns>GrapeCity.Spreadsheet.ISortField.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sort.GrapeCity#Spreadsheet#ISortFields#Add(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.SortOn,GrapeCity.Spreadsheet.SortOrder,GrapeCity.Spreadsheet.SortDataOption)">
      <summary>
            Creates a new sort field and returns an <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.
            </summary>
      <param name="key">Specifies a key value for the sort.</param>
      <param name="sortOn">The field to sort on.</param>
      <param name="order">Specifies the sort order.</param>
      <param name="dataOption">Specifies the data option.</param>
      <returns>The new created <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sort.GrapeCity#Spreadsheet#ISortFields#Add(GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.SortOn,GrapeCity.Spreadsheet.SortOrder,GrapeCity.Spreadsheet.SortDataOption)">
      <summary>
            Creates a new sort field and returns an <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.
            </summary>
      <param name="key">Specifies a key value for the sort.</param>
      <param name="sortOn">The field to sort on.</param>
      <param name="order">Specifies the sort order.</param>
      <param name="dataOption">Specifies the data option.</param>
      <returns>The new created <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sort.GrapeCity#Spreadsheet#ISortFields#Add(System.String,GrapeCity.Spreadsheet.SortOn,GrapeCity.Spreadsheet.SortOrder,GrapeCity.Spreadsheet.SortDataOption)">
      <summary>
            Creates a new sort field and returns an <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.
            </summary>
      <param name="key">Specifies a key value for the sort.</param>
      <param name="sortOn">The field to sort on.</param>
      <param name="order">Specifies the sort order.</param>
      <param name="dataOption">Specifies the data option.</param>
      <returns>The new created <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Chunk">
      <summary>
            Stores an ordered pair of integers.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Chunk.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Chunk" /> structure from the specified values.
            </summary>
      <param name="index">The start index.</param>
      <param name="index2">The end index.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SortField.Key">
      <summary>
            Gets the index that is currently being sorted on.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SortField.Priority">
      <summary>
            Gets or sets the priority for the sort field.
            </summary>
      <value>The priority for the sort field.</value>
      <remarks>
            The priority starts from 1 which has the highest priority.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SortField.Order">
      <summary>
            Gets or sets the sort order for the values specified in the key.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.SortOrder" /> value represents the sort order for the values specified in the key.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SortField.SortOn">
      <summary>
            Gets or sets what attribute of the cell to sort on.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.SortField.SortOn" /> value represents what attribute of the cell to sort on.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SortField.DataOption">
      <summary>
            Specifies how to sort text in the range specified in <see cref="T:GrapeCity.Spreadsheet.SortField" /> object.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.SortDataOption" /> value represents how to sort text in the range specified in <see cref="T:GrapeCity.Spreadsheet.SortField" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SortField.FontColor">
      <summary>
            Gets or sets the <see cref="T:GrapeCity.Spreadsheet.Color" /> value on which the sort is performed for the specified <see cref="T:GrapeCity.Spreadsheet.SortCondition" /> object.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the cell font color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SortField.Fill">
      <summary>
            Gets or sets the <see cref="P:GrapeCity.Spreadsheet.SortField.Fill" /> value on which the sort is performed for the specified <see cref="T:GrapeCity.Spreadsheet.SortCondition" /> object.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.SortField.Fill" /> value represents the cell fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SortField.Icon">
      <summary>
            Gets or sets the <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value on which the sort is performed for the specified <see cref="T:GrapeCity.Spreadsheet.SortCondition" /> object.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CfIcon" /> value represents the cell icon.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SortField.Delete">
      <summary>
            Removes the specified <see cref="T:GrapeCity.Spreadsheet.SortField" /> object from the <see cref="T:GrapeCity.Spreadsheet.Sort" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SortField.GrapeCity#Spreadsheet#ISortField#SortOnValue">
      <summary>
            Gets the value on which the sort is performed for the specified <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.
            </summary>
      <value>The value on which the sort is performed for the specified <see cref="T:GrapeCity.Spreadsheet.ISortField" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SortField.GrapeCity#Spreadsheet#ISortField#Key">
      <summary>
            Gets the range that is currently being sorted on.
            </summary>
      <value>The range that is currently being sorted on.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SortOrientation">
      <summary>
            Represents the sort orientation.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOrientation.Rows">
      <summary>
            Sorts by row.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOrientation.Columns">
      <summary>
            Sorts by column.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ISortComparer">
      <summary>
            Represents a custom sort comparer.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ISortComparer.RequiresRawValue">
      <summary>
            Gets a boolean value indiates whether the compare processes the original cell value.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SortMethod">
      <summary>
            Specifies the sort method for Chinese languages.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortMethod.PinYin">
      <summary>
            Phonetic Chinese sort order for characters.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortMethod.Stroke">
      <summary>
            Sort by the quantity of strokes in each character.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SortOn">
      <summary>
            Represents which data will be sorted.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOn.Value">
      <summary>
            Sort by cell value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOn.CellColor">
      <summary>
            Sort by cell color.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOn.FontColor">
      <summary>
            Sort by font color.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOn.Icon">
      <summary>
            Sort by icon.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SortOrder">
      <summary>
            Represents whether to sort in ascending order or descending order.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOrder.Ascending">
      <summary>
            The items are sorted in ascending order.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortOrder.Descending">
      <summary>
            The items are sorted in descending order.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SortDataOption">
      <summary>
            Specifies how to sort text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortDataOption.Normal">
      <summary>
            Sorts numeric and text data separately.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.SortDataOption.TextAsNumbers">
      <summary>
            Treat text as numeric data for the sort.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.YesNoGuess">
      <summary>
            Specifies whether or not the first row contains headers.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoGuess.Guess">
      <summary>
            Determines whether there is a header.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoGuess.Yes">
      <summary>
            The first row is the header.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.YesNoGuess.No">
      <summary>
            There is no header.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Sparkline">
      <summary>
            Represents a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sparkline.Worksheet">
      <summary>
            Gets the worksheet that contains this sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sparkline.Row">
      <summary>
            Gets the row index of this sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sparkline.Column">
      <summary>
            Gets the column index of this sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sparkline.DataRange">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.SparklineDataSource" /> object represents the data range of this sparkline.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sparkline.Clone">
      <summary>
            Creates a new sparkline object that is a copy of the current sparkline.
            </summary>
      <returns>A new sparkline object that is a copy of this sparkline.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sparkline.Equals(GrapeCity.Spreadsheet.Sparkline)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sparkline.ModifyLocation(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Modifies the location of a single sparkline.
            </summary>
      <param name="row">An integer value indicates the row of new location.</param>
      <param name="column">An integer value indicates the column of new location.</param>
      <param name="notifyUI">
        <c>true</c> to notify the UI to repaint; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Sparkline.ModifySourceData(System.String,System.Boolean)">
      <summary>
            Modifies the source data for a single sparkline.
            </summary>
      <param name="sourceData">The range that contains the source data.</param>
      <remarks>The data source range for a single sparkline must be continuous.</remarks>
      <param name="notifyUI">
        <c>true</c> to notify the UI to repaint; otherwise, <c>false</c>.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sparkline.Group">
      <summary>
            Gets or sets the sparkline group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Sparkline.Tag">
      <summary>
            Gets or sets the object that contains data about the sparkline.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SparklineDataSource">
      <summary>
            Represents the data source of a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineDataSource.Row">
      <summary>
            Gets the context row for evaluating.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineDataSource.Column">
      <summary>
            Gets the context column for evaluating.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineDataSource.OnDirtying">
      <summary>
            Designates this external variable to be recalculated when the next recalculation occurs.
            </summary>
      <returns>
        <c>true</c> if the external variable require executing its own logic after the calculation engine is ready; otherwise, <c>false</c>.</returns>
      <remarks>Accessing calculation engine (like get value of external variable) isn't available inside this function.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineDataSource.OnDirtied">
      <summary>
            Designates this external variable to be recalculated when the next recalculation occurs.
            </summary>
      <remarks>Accessing calculation engine (like get value of external variable) is available inside this function.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineDataSource.IsAbsoluteReferencePreferred">
      <summary>
            Gets a boolean value indicating whether the external variable prefers all absolute references.
            </summary>
      <returns>
        <c>true</c> if all references are converted to absolute; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineDataSource.Value">
      <summary>
            Gets the value of this external variable.
            </summary>
      <param name="context">The evaluation context to evaluate.</param>
      <returns>A <see cref="T:GrapeCity.CalcEngine.IValue" /> object represents the value of this external variable.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineDataSource.Values">
      <summary>
            Gets all numeric values from the data source of a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineDataSource.MinValue">
      <summary>
            Gets the minimum value of the sparkline source.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineDataSource.MaxValue">
      <summary>
            Gets the maximum value of the sparkline source.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellRangeDataSource">
      <summary>
            Represents the data source which binds to the specified cell range via a reference or a defined name.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellRangeDataSource.Reference">
      <summary>
            Gets the source data range of this data source.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SparklineGroup">
      <summary>
            Represents a group of sparklines.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineGroup.#ctor(GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.SparklineGroup" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineGroup.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.SparklineSetting)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.SparklineGroup" /> class.
            </summary>
      <param name="sparklineSetting">The settings of sparkline group.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineGroup.DateRange">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.SparklineDataSource" /> object represents the date range of this sparkline.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineGroup.NotifyUI">
      <summary>
            Notifies the control to repaint this sparkline group.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineGroup.GetUnionedRange">
      <summary>
            Gets the minimum range that contains all sparklines of this sparklilne group.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineGroup.AddSparkline(GrapeCity.Spreadsheet.Sparkline)">
      <summary>
            Adds the sparkline.
            </summary>
      <param name="sparkline">The sparkline to add.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineGroup.RemoveSparkline(GrapeCity.Spreadsheet.Sparkline)">
      <summary>
            Removes the sparkline
            </summary>
      <param name="sparkline">The sparkline to remove</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineGroup.TryExtractDataRange(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,GrapeCity.CalcEngine.Expression,GrapeCity.Spreadsheet.WorksheetReference@,GrapeCity.Spreadsheet.DefinedName@)">
      <summary>
            Extract data range of sparkline group.
            </summary>
      <param name="worksheet">The worksheet.</param>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="expression">The expression.</param>
      <param name="dataRange">The data range.</param>
      <param name="dataNamedRange">The data named range.</param>
      <returns>
        <c>true</c> if the specified expression represents data range of sparkline group; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineGroup.Clear">
      <summary>
            Clears all sparklines in this sparkline group.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineGroup.AddSparkline(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean)">
      <summary>
            Adds the sparkline.
            </summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="formula">The formula indicates data range of the sparkline.</param>
      <param name="syncWorksheet">
        <c>true</c> if the sparkline is added to the associated worksheet; otherwise, <c>false</c>.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineGroup.Worksheet">
      <summary>
            Gets the worksheet that contains this sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineGroup.Type">
      <summary>
            Gets or sets the type of sparkline for the group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineGroup.Count">
      <summary>
            Gets the number of sparklines in the sparkline group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineGroup.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ISparkline" /> object at the specified index.
            </summary>
      <param name="index">Index value of the sparkline.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineGroup.ModifyDateRange(System.String)">
      <summary>
            Modifies the date range for the sparkline group.
            </summary>
      <param name="dateRange">The date range for the sparkline group.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineGroup.Tag">
      <summary>
            Gets or sets the object that contains data about the sparkline group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineGroup.PlotBy">
      <summary>
            Gets or sets how to plot the sparkline when the data on which it is based is in a square-shaped range.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineGroup.GrapeCity#Spreadsheet#ISparkHorizontalAxis#IsDateAxis">
      <summary>
            Gets or sets a value indicating whether the horizontal axis of the sparkline is based on date values.
            </summary>
      <value>
        <c>true</c> if the horizontal axis of the sparkline is based on date values; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SparklineSetting">
      <summary>
            Represents settings for sparklines.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineSetting.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.SparklineSetting" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.AxisColor">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Color" /> value that specifies the color of the horizontal axis of the sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.IsDateAxis">
      <summary>
            Gets a value indicating whether the horizontal axis of the sparkline is based on date values.
            </summary>
      <value>
        <c>true</c> if the horizontal axis of the sparkline is based on date values; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.DisplayBlanksAs">
      <summary>
            Gets or sets the way that blank cells are plotted.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.DisplayXAxis">
      <summary>
            Gets a boolean value that specifies the horizontal axis of the sparkline is visible.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.FirstColor">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Color" /> value that specifies the color of the first point of the sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.LastColor">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Color" /> value that specifies the color of the last point of the sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.HighColor">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Color" /> value that specifies the color of the high point of the sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.LowColor">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Color" /> value that specifies the color of the low point of the sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.NegativeColor">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Color" /> value that specifies the color of the negative points of the sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.MarkersColor">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.Color" /> value that specifies the color of the markers of the sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.LineWeight">
      <summary>
            Gets or sets the thickness of the sparklines in the sparkline group, where the line weight is measured in points.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.ManualMax">
      <summary>
            Gets or sets the custom maximum value for the vertical axis of a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.ManualMin">
      <summary>
            Gets or sets the custom minimum value for the vertical axis of a sparkline.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.MaxAxisType">
      <summary>
            Gets or sets how the maximum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.MinAxisType">
      <summary>
            Gets or sets how the minimum value of the vertical axis of the sparkline is scaled relative to other sparklines in the group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.RightToLeft">
      <summary>
            Gets or sets a value indicating whether the points on the horizontal axis are plotted in right-to-left order.
            </summary>
      <value>
        <c>true</c> if the points on the horizontal axis are plotted in right-to-left order; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.SeriesColor">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.Color" /> object that represents the main series color for the sparkline group.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.ShowFirst">
      <summary>
            Gets a boolean value that specifies the first point of the sparkline is visible.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.ShowLast">
      <summary>
            Gets a boolean value that specifies the last point of the sparkline is visible.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.ShowHigh">
      <summary>
            Gets a boolean value that specifies the high point of the sparkline is visible.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.ShowLow">
      <summary>
            Gets a boolean value that specifies the low point of the sparkline is visible.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.ShowNegative">
      <summary>
            Gets a boolean value that specifies the negative points of the sparkline is visible.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.ShowMarkers">
      <summary>
            Gets a boolean value that specifies the markers of the sparkline is visible.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineSetting.DisplayHidden">
      <summary>
            Gets or sets a value indicating whether hidden cells are plotted in the sparkline group.
            </summary>
      <value>
        <c>true</c> if hidden cells are shown in the sparkline group; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DisplayBlanksAs">
      <summary>
            Specifies how empty cells are plotted.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DisplayBlanksAs.NotPlotted">
      <summary>
            Empty cells are not plotted.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DisplayBlanksAs.Zero">
      <summary>
            Empty cells are plotted as zero.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DisplayBlanksAs.Interpolated">
      <summary>
            Empty cells are plotted as interpolated.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SparklineStorage">
      <summary>
            Represents the sparkline storage
            </summary>
      <seealso cref="!:GrapeCity.Spreadsheet.CellMatrix&lt;GrapeCity.Spreadsheet.Sparkline&gt;" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.#ctor(GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.SparklineStorage" /> class.
            </summary>
      <param name="worksheet">The owner worksheet.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineStorage.Worksheet">
      <summary>
            Gets the owner worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.SparklineStorage.SparklineGroupCount">
      <summary>
            Gets the total number of sparkline groups.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.GetSparklineGroup(System.Int32)">
      <summary>
            Gets the sparkline group at the specified index.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.IsAvailable">
      <summary>
            Gets a boolean value indicating whether there is at least one item.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.Clear(System.Int32,System.Int32)">
      <summary>
            Clear the sparkline at the specified cell.
            </summary>
      <param name="row">An integer value indicates the row of sparkline.</param>
      <param name="column">An integer value indicates the column of sparkline.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.Clear(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Clear the sparkline at the specified cell.
            </summary>
      <param name="row">An integer value indicates the row of sparkline.</param>
      <param name="column">An integer value indicates the column of sparkline.</param>
      <param name="deleting">
        <c>true</c> if the <see cref="P:GrapeCity.Spreadsheet.Sparkline.DataRange" /> should be deleted; otherwise, <c>false</c>.</param>
      <param name="deleteGroup">
        <c>true</c> if the empty sparkline group is deleted; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.Clear(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Clears the sparkline(s) in the specified cell range.
            </summary>
      <param name="row">An integer value indicates the row of sparkline(s).</param>
      <param name="column">An integer value indicates the column of sparkline(s).</param>
      <param name="rowCount">An integer value indicates the row count of the cell range.</param>
      <param name="columnCount">An integer value indicates the column count of the cell range.</param>
      <param name="deleting">
        <c>true</c> if the <see cref="P:GrapeCity.Spreadsheet.Sparkline.DataRange" /> should be deleted; otherwise, <c>false</c>.</param>
      <param name="deleteGroup">
        <c>true</c> if the empty sparkline group is deleted; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.RemoveRows(System.Int32,System.Int32)">
      <summary>
            Removes one or more rows starting with the row at the specified position.
            </summary>
      <param name="row">An integer value indicates the index of first row to remove.</param>
      <param name="count">An integer value indicates the number of row(s) to remove.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.RemoveColumns(System.Int32,System.Int32)">
      <summary>
            Removes one or more columns starting with the column at the specified position.
            </summary>
      <param name="column">An integer value indicates the index of first column to remove.</param>
      <param name="count">An integer value indicates the number of column(s) to remove.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.InsertRows(System.Int32,System.Int32)">
      <summary>
            Inserts row(s) to the <see cref="P:GrapeCity.Spreadsheet.SparklineStorage.Worksheet" /> at the specified position.
            </summary>
      <param name="row">An integer value indicates the row index at which to insert new row(s).</param>
      <param name="count">An integer value indicates the number of row(s) to insert.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.InsertColumns(System.Int32,System.Int32)">
      <summary>
            Inserts column(s) to the <see cref="P:GrapeCity.Spreadsheet.SparklineStorage.Worksheet" /> at the specified position.
            </summary>
      <param name="column">An integer value indicates the column index at which to insert new columns.</param>
      <param name="count">An integer value indicates the number of rows to insert.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.AddSparklineGroup(GrapeCity.Spreadsheet.SparklineGroup)">
      <summary>
            Adds the sparkline group to this sparkline storage.
            </summary>
      <param name="sparklineGroup">The sparkline group.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SparklineStorage.UpdateSparklineGroup(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.SparklineGroup)">
      <summary>
            Synchronize sparkline group's data with worksheet.
            </summary>
      <param name="worksheet">The worksheet</param>
      <param name="sparklineGroup">The sparkline group</param>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Alignment.VerticalText">
      <summary>
            A constant integer value represent the vertical text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Alignment.DownwardText">
      <summary>
            A constant integer value represent the downward text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Alignment.HorizontalText">
      <summary>
            A constant integer value represent the horizontal text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Alignment.UpwardText">
      <summary>
            A constant integer value represent the upward text.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.HAlignment">
      <summary>
            Gets or sets the type of horizontal alignment in cells.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.HorizontalAlignment" /> value represents the type of horizontal alignment in cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.VAlignment">
      <summary>
            Gets or sets the type of vertical alignment in cells.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.HorizontalAlignment" /> value represents the type of vertical alignment in cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.Indent">
      <summary>
            Gets or sets the number of spaces (of the normal style font) of indentation for text in a cell.
            </summary>
      <value>An integer value represents the number of spaces (of the normal style font) of indentation for text in a cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.WrapText">
      <summary>
            Gets or sets a value indicating whether the text is wrappable.
            </summary>
      <value>
        <c>true</c> if the text is wrappable; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.ShrinkToFit">
      <summary>
            Gets or sets a value indicating whether the displayed text in the cell should be shrunk to fit the cell width.
            </summary>
      <value>
        <c>true</c> if the displayed text in the cell should be shrunk to fit the cell width; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.JustifyLastLine">
      <summary>
            Gets or sets a value indicating if the cells justified or distributed alignment should be used on the last line of text.
            </summary>
      <value>
        <c>true</c> if the cells justified or distributed alignment should be used on the last line of text; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.Reset(GrapeCity.Spreadsheet.AlignmentAttributes)">
      <summary>
            Resets the specified attribute(s).
            </summary>
      <param name="attr">A <see cref="T:GrapeCity.Spreadsheet.AlignmentAttributes" /> value indicates the attribute(s) will be reset.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.IsSet(GrapeCity.Spreadsheet.AlignmentAttributes)">
      <summary>
            Determines whether the specified attribute(s) is set.
            </summary>
      <param name="attr">A <see cref="T:GrapeCity.Spreadsheet.AlignmentAttributes" /> value indicates the attribute(s) will be tested.</param>
      <returns>
        <c>true</c> if the specified attribute(s) is set; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.Set(GrapeCity.Spreadsheet.AlignmentAttributes)">
      <summary>
            Sets the specified attribute.
            </summary>
      <param name="attr">The attribute.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.TextRotation">
      <summary>
            Gets or sets the text rotation in cells.
            </summary>
      <value>An integer value represents the text rotation in cells.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.ReadingOrder">
      <summary>
            Gets or sets the reading order (bidirectionality) of the cell.
            </summary>
      <value>The reading order.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Alignment.RelativeIndent">
      <summary>
            Gets or sets the additional number of spaces of indentation to adjust for text in a cell.
            </summary>
      <value>An integer value represents the additional number of spaces of indentation to adjust for text in a cell.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.Equals(GrapeCity.Spreadsheet.Alignment)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Alignment.IsEmpty">
      <summary>
            Determines whether this <see cref="T:GrapeCity.Spreadsheet.Alignment" /> is empty.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Alignment" /> is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.AlignmentAttributes">
      <summary>
            Specifies all attributes of the <see cref="T:GrapeCity.Spreadsheet.Alignment" /> value.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.HorizontalAlignment">
      <summary>
            Enum the horizontal alignment of a cell or object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.General">
      <summary>
            Specifies that text is left justified, numbers (including dates and times) are right justified, and logical values are centered.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Left">
      <summary>
            Spedifies left justification.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Center">
      <summary>
            Spedifies that the text should be centered.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Right">
      <summary>
            Spedifies right justification.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Fill">
      <summary>
            Specifies that the text will be repeated to fill the cell.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Justify">
      <summary>
            Specifies that text should wrap and be aligned to form straight edges on the left and right, except for the last line which is left justified.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.CenterAcrossSelection">
      <summary>
            The horizontal alignment is centered across multiple cells.The information about how many cells to span is
            expressed in the Sheet Part, in the row of the cell in question. For each cell that is spanned in the
            alignment, a cell element needs to be written out, with the same style Id which references the centerContinuous alignment.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.HorizontalAlignment.Distributed">
      <summary>
              Specifies that text should wrap and be aligned to form straight edges on the left and right, including the last line.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.VerticalAlignment">
      <summary>
            Specifies the vertical alignment of text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalAlignment.Top">
      <summary>
            Specifies that text is placed at the top.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalAlignment.Center">
      <summary>
            Specifies that text is vertically centered.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalAlignment.Bottom">
      <summary>
            Specifies that text is placed at the bottom.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalAlignment.Justify">
      <summary>
            Specifies that rotated text is vertically justified.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalAlignment.Distributed">
      <summary>
            Specifies that rotated text should wrap and be aligned to form straight edges on the left and right, including the last line.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.VerticalTextAlignment">
      <summary>
            Specifies the vertical alignment of text line.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalTextAlignment.Baseline">
      <summary>
            Normal script
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalTextAlignment.Superscript">
      <summary>
            Superscript
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.VerticalTextAlignment.Subscript">
      <summary>
            Subscript
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TextReadingOrder">
      <summary>
            Specifies the reading order.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TextReadingOrder.Context">
      <summary>
            Reading order is determined by scanning the text for the first non-whitespace character: if it is a strong right-to-left character, the reading order is right-to-left; otherwise, the reading order left-to-right.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TextReadingOrder.LeftToRight">
      <summary>
            Reading order is left-to-right in the cell, as in English.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TextReadingOrder.RightToLeft">
      <summary>
            Reading order is right-to-left in the cell, as in Hebrew.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IWorksheetStyles">
      <summary>
            Represents a collection of all styles in the worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheetStyles.AlternatingRows">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IAlternatingStyles" /> object for the alternating rows in the data area of the sheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IWorksheetStyles.AlternatingColumns">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IAlternatingStyles" /> object for the alternating columns in the data area of the sheet.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IAlternatingStyles">
      <summary>
            Represents a collection of alternating styles.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAlternatingStyles.Enabled">
      <summary>
            Gets or sets a boolean value indicating whether the alternating styles is enabled.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAlternatingStyles.IncludeHidden">
      <summary>
            Gets or sets a boolean value indicating whether the hidden rows (or columns) affect the display result.
            </summary>
      <value>
        <c>true</c> if the hidden rows (or columns) affect the display result; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAlternatingStyles.Count">
      <summary>
            Gets or sets the number of alternating styles in this collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IAlternatingStyles.Item(System.Int32)">
      <summary>
            Gets the alternating style at the specified position.
            </summary>
      <param name="index">The order of the alternating style.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object represents the alternating style.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Border">
      <summary>
            Represents the border of an object.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Border.NoBorder">
      <summary>
            Represents no border; so the default border should be used to paint.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Border.Empty">
      <summary>
            Represents a <see cref="T:GrapeCity.Spreadsheet.Border" /> structure with its properties left uninitialized.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.#ctor(GrapeCity.Spreadsheet.BorderLine)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Border" /> struct.
            </summary>
      <param name="borderLine">A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents all border lines.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Left">
      <summary>
            Gets or sets the left side of border.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the left side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Right">
      <summary>
            Gets or sets the right side of border.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the right side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Top">
      <summary>
            Gets or sets the top side of border.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the top side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Bottom">
      <summary>
            Gets or sets the bottom side of border.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the bottom side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Vertical">
      <summary>
            Gets or sets the inner vertical side of border.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the inner vertical side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Horizontal">
      <summary>
            Gets or sets the inner horizontal side of border.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the inner horizontal side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.All">
      <summary>
            Gets or sets all border lines.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents all border lines.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Diagonal">
      <summary>
            Gets or sets the diagonal side of border.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> value represents the diagonal side of border.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.DiagonalDown">
      <summary>
            Gets or sets a value indicating whether the cell's diagonal border includes a diagonal line, starting at the top left corner of the cell and moving down to the bottom right corner of the cell.
            </summary>
      <value>
        <c>true</c> if the cell's diagonal border includes a diagonal line, starting at the top left corner of the cell and moving down to the bottom right corner of the cell; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.DiagonalUp">
      <summary>
            Gets or sets a value indicating whether cell's diagonal border includes a diagonal line, starting at the bottom left corner of the cell and moving up to the top right corner of the cell.
            </summary>
      <value>
        <c>true</c> if cell's diagonal border includes a diagonal line, starting at the bottom left corner of the cell and moving up to the top right corner of the cell; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Border.Outline">
      <summary>
            Gets or sets a value indicating whether left, right, top, and bottom borders should be applied only to outside borders of a cell range.
            </summary>
      <value>
        <c>true</c> if left, right, top, and bottom borders should be applied only to outside borders of a cell range; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.Equals(GrapeCity.Spreadsheet.Border)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.Equals(GrapeCity.Spreadsheet.Border@)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.op_Equality(GrapeCity.Spreadsheet.Border,GrapeCity.Spreadsheet.Border)">
      <summary>
            Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Border" /> values are equal.
            </summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.op_Inequality(GrapeCity.Spreadsheet.Border,GrapeCity.Spreadsheet.Border)">
      <summary>
            Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Border" /> values are not equal.
            </summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.IsEmpty">
      <summary>
            Determines whether this instance is empty.
            </summary>
      <returns>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Border.IsDisplayable">
      <summary>
            Determines whether this instance contains border setting(s).
            </summary>
      <returns>
        <c>true</c> if this instance contains border setting(s); otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BorderLine">
      <summary>
            Represent the line settings of border.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLine.NoLine">
      <summary>
            Represents no border line; so the default border line should be used to paint.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLine.Empty">
      <summary>
            Represents no border line; so the default border line should be used to paint.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.BorderLine.Style">
      <summary>
            Gets the style of the border line.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.BorderLineStyle" /> value represents the style of the border line.</value>
    </member>
    <!-- Badly formed XML comment ignored for member "P:GrapeCity.Spreadsheet.BorderLine.Color" -->
    <member name="M:GrapeCity.Spreadsheet.BorderLine.#ctor(GrapeCity.Spreadsheet.BorderLineStyle,GrapeCity.Spreadsheet.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.BorderLine" /> struct.
            </summary>
      <param name="lineStyle">A <see cref="T:GrapeCity.Spreadsheet.BorderLineStyle" /> value indicates the border line style.</param>
      <param name="color">A <see cref="F:GrapeCity.Spreadsheet.BorderLine._color" /> value indicates the border line color.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BorderLine.Equals(GrapeCity.Spreadsheet.BorderLine)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BorderLine.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BorderLine.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BorderLineStyle">
      <summary>
            Represents the line style of border.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.None">
      <summary>
              No border.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Thin">
      <summary>
              Thin Border.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Medium">
      <summary>
              Medium Border.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Dashed">
      <summary>
              Dashed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Dotted">
      <summary>
              Dotted.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Thick">
      <summary>
              Thick Line Border.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Double">
      <summary>
              Double Line.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Hair">
      <summary>
              Hairline Border.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.MediumDashed">
      <summary>
              Medium Dashed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.DashDot">
      <summary>
              Dash Dot.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.MediumDashDot">
      <summary>
              Medium Dash Dot.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.DashDotDot">
      <summary>
              Dash Dot Dot.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.MediumDashDotDot">
      <summary>
              Medium Dash Dot Dot.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.SlantDashDot">
      <summary>
              Slant Dash Dot.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderLineStyle.Unset">
      <summary>
            The border line style is unset.
            </summary>
      <remarks>
            This value is used internal only. You should not use it directly from your code.
            </remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BorderSides">
      <summary>
            Represents the side of border.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.None">
      <summary>
            No border
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.Bottom">
      <summary>
              Border at the bottom of the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.Left">
      <summary>
              Border at the left-hand edge of the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.Right">
      <summary>
              Border at the right-hand edge of the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.Top">
      <summary>
              Border at the top of the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.InsideHorizontal">
      <summary>
              Horizontal borders for all cells in the range except borders on the outside of the range.
            </summary>
      <remarks>
            This value is used internal only. You should not use it directly from your code.
            </remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.InsideVertical">
      <summary>
              Vertical borders for all the cells in the range except borders on the outside of the range.
            </summary>
      <remarks>
            This value is used internal only. You should not use it directly from your code.
            </remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.Diagonal">
      <summary>
            Diagonal borders for all the cells in the range.
            </summary>
      <remarks>
            This value is used internal only. You should not use it directly from your code.
            </remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BorderSides.Default">
      <summary>
            Top, Left, Right, Bottom borders
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.Equals(GrapeCity.Spreadsheet.CellProtection)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.IsEmpty">
      <summary>
            Determines whether this <see cref="T:GrapeCity.Spreadsheet.CellProtection" /> is empty.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.CellProtection" /> is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.Reset(GrapeCity.Spreadsheet.CellProtectionAttributes)">
      <summary>
            Resets the specified property to unset state.
            </summary>
      <param name="attr">An <see cref="T:GrapeCity.Spreadsheet.CellProtectionAttributes" /> value indicates the specified property.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellProtection.IsSet(GrapeCity.Spreadsheet.CellProtectionAttributes)">
      <summary>
            Determines whether the specified property has been assigned value.
            </summary>
      <param name="attr">An <see cref="T:GrapeCity.Spreadsheet.AlignmentAttributes" /> value indicates the specified property.</param>
      <returns>
        <c>true</c> if the specified property has been assigned value; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellProtection.FormulaHidden">
      <summary>
            Gets or sets a value indicating whether the cell formula is hidden.
            </summary>
      <value>
        <c>true</c> if the cell formula is hidden; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellProtection.Locked">
      <summary>
            Gets or sets a value indicating whether the cell is locked.
            </summary>
      <value>
        <c>true</c> if the cell is locked; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellProtectionAttributes">
      <summary>
            Represents the cell protection attributes.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellProtectionAttributes.None">
      <summary>
            No attribute is set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellProtectionAttributes.FormulaHidden">
      <summary>
            Indicates that the formula is hidden.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellProtectionAttributes.Locked">
      <summary>
            Indicates that the cell is locked.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellProtectionAttributes.All">
      <summary>
            All attributes.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ICellType">
      <summary>
            Represents the cell type of a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICellType.GetFormatter(System.Globalization.CultureInfo)">
      <summary>
            Gets the formatter which represents the behavior of this cell type.
            </summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> object represents the formatter.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICellType.ToNumberFormat">
      <summary>
            Converts this cell type to the corresponding <see cref="T:GrapeCity.Spreadsheet.NumberFormat" /> value.
            </summary>
      <returns>The number format which produce same formatted text with this cell type.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICellType.Parse(System.String)">
      <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IEditor">
      <summary>
            Represents the editor of a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IEditor.IsReadOnly">
      <summary>
            Gets a boolean value indicates whether the editor is readonly.
            </summary>
      <returns>
        <c>true</c> the editor is readonly; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Color">
      <summary>
            Struct ColorData
            </summary>
      <seealso cref="!:System.IEquatable&lt;GrapeCity.Spreadsheet.Style.ColorData&gt;" />
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.ColorIndexAutomatic">
      <summary>
            Represents the automatic color.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.ColorIndexNone">
      <summary>
            Represents no index color is set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.ColorIndexWindow">
      <summary>
            Represents the default window indexed color.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.ColorIndexWindowText">
      <summary>
            Represents the default window text indexed color.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.ColorIndexTooltipColor">
      <summary>
            Represents the default tooltip's background indexed color.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.ThemeColorsNone">
      <summary>
            Represents no theme color is set
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.Window">
      <summary>
            Represents a color that is the color of window background.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.WindowText">
      <summary>
            Represents a color that is the color of window foreground.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.Auto">
      <summary>
            Represents a color that is automated by the application.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Color.Empty">
      <summary>
            Represents a color that is <c>null</c>.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.Tint">
      <summary>
            Gets or sets the tint.
            </summary>
      <value>The tint.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.ToArgb">
      <summary>
            Gets the 32-bit ARGB value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.
            </summary>
      <value>The 32-bit ARGB value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</value>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>false</c>.
            <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.ToThemeColors">
      <summary>
            Gets the <see cref="T:GrapeCity.Core.ThemeColors" /> value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.
            </summary>
      <returns>The <see cref="T:GrapeCity.Core.ThemeColors" /> value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</returns>
      <remarks>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.ToIndexedColor">
      <summary>
            Gets the indexed color value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.
            </summary>
      <returns>The indexed color value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.</returns>
      <remarks>The indexed color has base 1. The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the returned result.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.Type">
      <summary>
            Gets the type of color.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ColorType" /> value represents the type of color.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.IsKnownColor">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure is a predefined color.
            Predefined colors are represented by the elements of the KnownColor enumeration.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Color" /> was created from a predefined color; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.IsAutoColor">
      <summary>
            Gets a value indicating whether this color represent an automatic color.
            </summary>
      <value>
        <c>true</c> if this color represent an automatic color; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.IsNoDefinedColor">
      <summary>
            Gets a value indicating whether this color is not defined.
            </summary>
      <value>
        <c>true</c> if this color is not defined; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.IsEmpty">
      <summary>
            Gets a value indicating whether this color represent an empty color.
            </summary>
      <value>
        <c>true</c> if this color represent an empty color; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.ToKnownColor">
      <summary>
            Gets the <see cref="T:GrapeCity.Core.KnownColor" />  value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.
            </summary>
      <returns>An element of the <see cref="T:GrapeCity.Core.KnownColor" /> enumeration, if the <see cref="T:GrapeCity.Spreadsheet.Color" /> is created from a predefined color by using the FromKnownColor method; otherwise, 0.</returns>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>true</c>.
            <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.ToGrayscale">
      <summary>
            Get the corresponding grayscale color.
            </summary>
      <returns>The corresponding grayscale color.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.R">
      <summary>
            Gets the red component value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.
            </summary>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>false</c>.
            <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.G">
      <summary>
            Gets the green component value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.
            </summary>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>false</c>.
            <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.B">
      <summary>
            Gets the blue component value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.
            </summary>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>false</c>.
            <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Color.A">
      <summary>
            Gets the alpha component value of this <see cref="T:GrapeCity.Spreadsheet.Color" /> structure.
            </summary>
      <remarks>Invoke this function only if the <see cref="P:GrapeCity.Spreadsheet.Color.Type" /> is <see cref="F:GrapeCity.Spreadsheet.ColorType.ARGB" /> and <see cref="M:GrapeCity.Spreadsheet.Color.IsKnownColor" /> is <c>false</c>.
            <para>The <see cref="P:GrapeCity.Spreadsheet.Color.Tint" /> value isn't applied to the result.</para></remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromArgb(System.Int32)">
      <summary>
            Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the four 8-bit ARGB components (alpha, red, green, and blue) values.
            </summary>
      <param name="argb">The ARGB components.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the four 8-bit ARGB components (alpha, red, green, and blue) values.
            Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.
            </summary>
      <param name="alpha">The alpha component. Valid values are 0 through 255.</param>
      <param name="red">The red component. Valid values are 0 through 255.</param>
      <param name="green">The green component. Valid values are 0 through 255.</param>
      <param name="blue">The blue component. Valid values are 0 through 255.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromArgb(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the four 8-bit ARGB components (alpha, red, green, and blue) values.
            Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.
            </summary>
      <param name="red">The red component. Valid values are 0 through 255.</param>
      <param name="green">The green component. Valid values are 0 through 255.</param>
      <param name="blue">The blue component. Valid values are 0 through 255.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromKnownColor(GrapeCity.Core.KnownColor,System.Double)">
      <summary>
            Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the specified predefined color.
            </summary>
      <param name="knownColor">An element of the <see cref="T:GrapeCity.Core.KnownColor" /> enumeration.</param>
      <param name="tint">The mixture of a color with white, which increases lightness, 
            and a shade is the mixture of a color with black, which reduces lightness. Valid values are -1 through 1.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromThemeColor(GrapeCity.Core.ThemeColors,System.Double)">
      <summary>
            Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the specified predefined color.
            </summary>
      <param name="index">An element of the <see cref="T:GrapeCity.Core.ThemeColors" /> enumeration.</param>
      <param name="tint">The mixture of a color with white, which increases lightness, 
            and a shade is the mixture of a color with black, which reduces lightness. Valid values are -1 through 1.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromIndexedColor(System.Int32,System.Double)">
      <summary>
            Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the specified indexed color.
            </summary>
      <param name="index">An integer value indicates the indexed color. The value has base 1.</param>
      <param name="tint">The mixture of a color with white, which increases lightness, 
            and a shade is the mixture of a color with black, which reduces lightness. Valid values are -1 through 1.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.FromFormatColorEnum(GrapeCity.Spreadsheet.FormatColorEnum)">
      <summary>
            Creates a <see cref="T:GrapeCity.Spreadsheet.Color" /> structure from the specified format color enum.
            </summary>
      <param name="color">The format color enum.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Color" /> value that this method creates.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.Equals(GrapeCity.Spreadsheet.Color)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:GrapeCity.Spreadsheet.Color" /> is equal to this instance.
            </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:GrapeCity.Spreadsheet.Color" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>ColorData.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Color.ToString">
      <summary>
            Returns the fully qualified type name of this instance.
            </summary>
      <returns>The fully qualified type name.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ColorType">
      <summary>
            Specifies the color format type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColorType.Auto">
      <summary>
            The automatic color that is determined by application.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColorType.ARGB">
      <summary>
            The ARGB format which stands for alpha, red, green and blue.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColorType.Index">
      <summary>
            The system-defined indexed color format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ColorType.Theme">
      <summary>
            The system-defined theme color format.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ColorManager">
      <summary>
            Represents the color manager of the <see cref="T:GrapeCity.Spreadsheet.IWorkbookSet" /> object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorManager.ToSchemeColor(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Spreadsheet.Color)">
      <summary>
            Get SchemeColor color from the specified color.
            </summary>
      <param name="workbook">A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object which contains color settings.</param>
      <param name="color">The specified color to get SchemeColor color from.</param>
      <returns>A <see cref="T:GrapeCity.Core.SchemeColor" /> value represents SchemeColor color.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorManager.ToColor(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Core.SchemeColor)">
      <summary>
            Get SchemeColor color from the specified color.
            </summary>
      <param name="workbook">A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object which contains color settings.</param>
      <param name="color">The specified SchemeColor to get color from.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents SchemeColor color.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorManager.ToArgbColor(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Core.SchemeColor)">
      <summary>
            Get ARGB color from the specified color.
            </summary>
      <param name="workbook">A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object which contains color settings.</param>
      <param name="schemeColor">The specified color to get ARGB color from.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents ARGB color.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorManager.ToArgbColor(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Spreadsheet.Color)">
      <summary>
            Get ARGB color from the specified color.
            </summary>
      <param name="workbook">A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object which contains color settings.</param>
      <param name="color">The specified color to get ARGB color from.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents ARGB color.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorManager.ToArgb(GrapeCity.Spreadsheet.Workbook,GrapeCity.Spreadsheet.Fill@)">
      <summary>
            Get ARGB-compatible fill from the specified fill.
            </summary>
      <param name="workbook">A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object which contains color settings.</param>
      <param name="fill">The specified color to get ARGB color from.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents ARGB color.</returns>
      <remarks>
        <paramref name="fill" /> is passed as "ref" but its value is not changed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorManager.BlendColor(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color,System.Double)">
      <summary>
            Blends 2 colors.
            </summary>
      <param name="worksheet">The workbook which contans theme colors.</param>
      <param name="color1">The first color.</param>
      <param name="color2">The second color.</param>
      <param name="pos">The weight of the first color.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorResolver.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.ColorResolver" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ColorResolver.KnownColorToArgb(GrapeCity.Core.KnownColor)">
      <summary>
            Convert the specified known color to ARGB color.
            </summary>
      <param name="color">A <see cref="T:GrapeCity.Core.KnownColor" /> value indicates the specified known color.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the converted ARGB color</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DifferentialFormat.Clear">
      <summary>
            Clears all formatting.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.Font">
      <summary>
            Gets or sets the font formatting.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.DifferentialFormat.Font" /> value represents the font formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.NumberFormat">
      <summary>
            Gets or sets the number format.
            </summary>
      <value>A string value represents the number format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.Fill">
      <summary>
            Gets or sets the fill formatting.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.DifferentialFormat.Fill" /> value represents the fill formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.Border">
      <summary>
            Gets or sets the border formatting.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.DifferentialFormat.Border" /> value represents the border formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.Alignment">
      <summary>
            Gets or sets the alignment formatting.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.DifferentialFormat.Alignment" /> value represents the alignment formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.DifferentialFormat.Protection">
      <summary>
            Gets or sets the protection formatting.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.DifferentialFormat.Protection" /> value represents the protection formatting.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DifferentialFormat.Equals(GrapeCity.Spreadsheet.DifferentialFormat)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DifferentialFormat.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.DifferentialFormat.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Fill">
      <summary>
            Represent the fill formatting.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Fill.NoFill">
      <summary>
            Represents the blank fill formatting.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Fill.Empty">
      <summary>
            Represents a <see cref="T:GrapeCity.Spreadsheet.Border" /> structure with its properties left uninitialized.
            </summary>
      <remarks>
            Assigning this value works as same as clearing the fill formatting.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.#ctor(GrapeCity.Spreadsheet.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Fill" /> class which represents a solid pattern fill.
            </summary>
      <param name="patternColor">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the pattern color of pattern fill.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.#ctor(GrapeCity.Spreadsheet.PatternType,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Fill" /> class.
            </summary>
      <param name="parternType">A <see cref="P:GrapeCity.Spreadsheet.Fill.PatternType" /> value indicates the type of pattern fill.</param>
      <param name="patternColor">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the pattern color of pattern fill.</param>
      <param name="backgroundColor">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the background color of pattern fill.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Fill.PatternColor">
      <summary>
            Gets the pattern color of the pattern fill.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the pattern color of the pattern fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Fill.BackgroundColor">
      <summary>
            Gets the background color of the pattern fill.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the background color of the pattern fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Fill.PatternType">
      <summary>
            Gets the fill pattern type of this pattern fill.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Fill.PatternType" /> value represents the fill pattern type of this pattern fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Fill.HasGradientEffect">
      <summary>
            Gets a value indicating whether this fill has gradient effect.
            </summary>
      <value>
        <c>true</c> if this fill has gradient effect; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.IsEmpty">
      <summary>
            Determines whether this instance is empty.
            </summary>
      <returns>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.GetHashCode">
      <summary>
            Serves as a hash function for a particular type.
            </summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.Equals(GrapeCity.Spreadsheet.Fill@)">
      <summary>
            Equalses the specified other.
            </summary>
      <param name="other">The other.</param>
      <returns>
        <c>true</c> if equal to other, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.IsMatch(GrapeCity.Spreadsheet.Workbook,GrapeCity.Spreadsheet.Fill@)">
      <summary>
            Gets a boolean value indicating whether the two fills are matched.
            </summary>
      <param name="workbook">The workbook which holds the fill.</param>
      <param name="other">The compared fill.</param>
      <returns>
        <c>true</c> if the displaying of two fills are matched; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.Equals(GrapeCity.Spreadsheet.Fill)">
      <summary>
            Equalses the specified other.
            </summary>
      <param name="other">The other.</param>
      <returns>
        <c>true</c> if equal to other, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.op_Equality(GrapeCity.Spreadsheet.Fill,GrapeCity.Spreadsheet.Fill)">
      <summary>
            Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Fill" /> values are equal.
            </summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.op_Inequality(GrapeCity.Spreadsheet.Fill,GrapeCity.Spreadsheet.Fill)">
      <summary>
            Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Fill" /> values are not equal.
            </summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.IsNoFill">
      <summary>
            Determines whether this <see cref="T:GrapeCity.Spreadsheet.Fill" /> represents no fill.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Fill" /> represents no fill; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Fill.SwapColors">
      <summary>
            Swaps the background color and pattern color.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.FillStorage.#ctor(GrapeCity.Spreadsheet.WorkbookStyleStorage,System.Int32)" -->
    <member name="T:GrapeCity.Spreadsheet.PatternType">
      <summary>
            Represents the Fill pattern type.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.None">
      <summary>
            None
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.Solid">
      <summary>
            Solid
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.MediumGray">
      <summary>
            50% gray
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkGray">
      <summary>
            75% gray
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightGray">
      <summary>
            25% gray
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkHorizontal">
      <summary>
            Horizontal stripe
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkVertical">
      <summary>
            Vertical stripe
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkDown">
      <summary>
            Reverse diagonal stripe
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkUp">
      <summary>
            Diagonal stripe
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkGrid">
      <summary>
            Diagonal crosshatch
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.DarkTrellis">
      <summary>
            Thick Diagonal crosshatch
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightHorizontal">
      <summary>
            Thin horizontal stripe
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightVertical">
      <summary>
            Thin vertical stripe
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightDown">
      <summary>
            Thin reverse diagonal stripe
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightUp">
      <summary>
            Thin diagonal stripe
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightGrid">
      <summary>
            Thin horizontal crosshatch
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LightTrellis">
      <summary>
            Thin diagonal crosshatch
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.Gray125">
      <summary>
            The fill style is grayscale of 0.125 (1/8) value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.Gray0625">
      <summary>
            The fill style is grayscale of 0.0625 (1/16) value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.Automatic">
      <summary>
            The pattern is controlled automatically.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.LinearGradient">
      <summary>
            The linear gradient
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.PatternType.RectangularGradient">
      <summary>
            The rectangular gradient
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.GradientFillEffect">
      <summary>
            Represents the gradient fill effect.
            </summary>
      <seealso cref="!:System.IEquatable&lt;GrapeCity.Spreadsheet.GradientFillEffect&gt;" />
    </member>
    <member name="F:GrapeCity.Spreadsheet.GradientFillEffect.Empty">
      <summary>
            Represent the unset gradient fill formatting. Assigning this value works as same as clearing the gradient fill formatting.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.IsEmpty">
      <summary>
            Determines whether this gradient effect is empty.
            </summary>
      <returns>
        <c>true</c> if this gradient effect is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Create(System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>
            Creates the path gradient fill.
            </summary>
      <param name="top">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1).
            For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="left">Specifies in percentage format (from the left to the right) the position of the left edge of the inner rectangle (color 1).
            For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="bottom">Specifies in percentage format (from the top to the bottom) the position of the bottom edge of the inner rectangle (color 1).
            For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="right">Specifies in percentage format (from the left to the right) the position of the right edge of the inner rectangle (color 1).
            For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill effect.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill effect.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value represents the gradient fill effect.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Create(System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>
            Creates the path gradient fill.
            </summary>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value represents the gradient fill effect.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Create(System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>
            Creates the path gradient fill.
            </summary>
      <param name="degree">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1).
            For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value represents the gradient fill effect.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Create(System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>
            Creates the linear gradient fill.
            </summary>
      <param name="degree">A <see cref="T:System.Double" /> value indicates the angle of the linear gradient.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill effect.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill effect.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value represents the gradient fill effect.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.GradientType">
      <summary>
            Gets the type of this gradient fill.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.GradientFillEffect.GradientType" /> value represents the type of this gradient fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Count">
      <summary>
            Gets the total count of gradient stops.
            </summary>
      <value>An integer value represents the total count of gradient stops.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Item(System.Int32)">
      <summary>
            Gets the gradient stop at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of the gradient stop.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> value represents the gradient stop at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Degree">
      <summary>
            Gets the angle of the linear gradient fill.
            </summary>
      <value>A double value represents the angle of the linear gradient fill.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Top">
      <summary>
            Gets the position of the top edge of the inner rectangle (color 1) in percentage.
            </summary>
      <value>A double value represents the top edge of the inner rectangle.</value>
      <remarks>For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Bottom">
      <summary>
            Gets the position of the bottom edge of the inner rectangle (color 1) in percentage.
            </summary>
      <value>A double value represents the bottom edge of the inner rectangle.</value>
      <remarks>For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Left">
      <summary>
            Gets the position of the left edge of the inner rectangle (color 1) in percentage.
            </summary>
      <value>A double value represents the left edge of the inner rectangle.</value>
      <remarks>For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientFillEffect.Right">
      <summary>
            Gets the position of the right edge of the inner rectangle (color 1) in percentage.
            </summary>
      <value>A double value represents the right edge of the inner rectangle.</value>
      <remarks>For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.Equals(GrapeCity.Spreadsheet.GradientFillEffect)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.op_Equality(GrapeCity.Spreadsheet.GradientFillEffect,GrapeCity.Spreadsheet.GradientFillEffect)">
      <summary>
            Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> values are equal.
            </summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientFillEffect.op_Inequality(GrapeCity.Spreadsheet.GradientFillEffect,GrapeCity.Spreadsheet.GradientFillEffect)">
      <summary>
            Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> values are not equal.
            </summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.GradientStop">
      <summary>
            Represents the gradient stop.
            </summary>
      <seealso cref="!:System.IEquatable&lt;GrapeCity.Spreadsheet.GradientStop&gt;" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientStop.#ctor(System.Double,GrapeCity.Spreadsheet.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> struct.
            </summary>
      <param name="position">A double value represents the position information for this gradient stop.</param>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.GradientStop.Color" /> value represents the color of this gradient stop.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientStop.Color">
      <summary>
            Gets the color of this gradient stop.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.GradientStop.Color" /> value represents the color of this gradient stop.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.GradientStop.Position">
      <summary>
            Gets the position information for this gradient stop.
            </summary>
      <value>A double value represents the position information for this gradient stop.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientStop.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientStop.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.GradientStop.Equals(GrapeCity.Spreadsheet.GradientStop)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="other">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.GradientType">
      <summary>
            Type of gradient fill being used, either linear or path.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.GradientType.Linear">
      <summary>
            This gradient fill is of linear gradient type.
            Linear gradient type means that the transition from one color to the next is along a line.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.GradientType.Rectangular">
      <summary>
            This gradient fill is of path gradient type.
            Rectangular gradient type means the that the boundary of transition from one color to the next is a rectangle, 
            defined by top, bottom, left, and right attributes on the gradientFill element.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Font">
      <summary>
            Defines a particular format for text, including font face, size, and style attributes.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Font.Empty">
      <summary>
            Represents a <see cref="T:GrapeCity.Spreadsheet.Font" /> structure with its properties left uninitialized.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(System.String,System.Double,GrapeCity.Spreadsheet.FontStyle,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.UnderlineStyle,GrapeCity.Spreadsheet.VerticalTextAlignment,GrapeCity.Spreadsheet.ThemeFont)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct.
            </summary>
      <param name="name">A string value indicates the face name of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="size">An double value indicates the em-size of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="fontStyle">A <see cref="T:GrapeCity.Spreadsheet.FontStyle" /> value indicates style information for this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="underline">A <see cref="F:GrapeCity.Spreadsheet.Font._fontUnderline" /> value indicates the underline of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="verTextAlign">A <see cref="T:GrapeCity.Spreadsheet.VerticalTextAlignment" /> value indicates the vertical alignment of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value indicates the color of font color.</param>
      <param name="themeFont">A <see cref="T:GrapeCity.Spreadsheet.ThemeFont" /> value indicates the theme font.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.FontFamily,System.String,System.Double,GrapeCity.Spreadsheet.FontStyle,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.UnderlineStyle,GrapeCity.Spreadsheet.VerticalTextAlignment,GrapeCity.Spreadsheet.ThemeFont)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct.
            </summary>
      <param name="fontFamily">The <see cref="P:GrapeCity.Spreadsheet.Font._fontFamily" /> associated with this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="name">A string value indicates the face name of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="size">An double value indicates the em-size of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="fontStyle">A <see cref="T:GrapeCity.Spreadsheet.FontStyle" /> value indicates style information for this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="underline">A <see cref="F:GrapeCity.Spreadsheet.Font._fontUnderline" /> value indicates the underline of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="verTextAlign">A <see cref="T:GrapeCity.Spreadsheet.VerticalTextAlignment" /> value indicates the vertical alignment of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value indicates the color of font color.</param>
      <param name="themeFont">A <see cref="T:GrapeCity.Spreadsheet.ThemeFont" /> value indicates the theme font.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" /> and <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value.
            </summary>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value indicates the color of font color.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.FontStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" /> and <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value.
            </summary>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value indicates the color of font color.</param>
      <param name="fontStyle">The FontStyle to apply to the new Font.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.FontStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" /> and <see cref="T:GrapeCity.Spreadsheet.FontStyle" /> enumeration.
            </summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="fontStyle">The FontStyle to apply to the new Font.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" /> and <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value.
            </summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="color">A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value indicates the color of font color.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" /> and new font face name.
            </summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="name">A string value indicates the face name of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" /> and new font size.
            </summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="size">An double value indicates the em-size of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.VerticalTextAlignment)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" /> and new font vertical alignment.
            </summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="verTextAlign">A <see cref="T:GrapeCity.Spreadsheet.VerticalTextAlignment" /> value indicates the vertical alignment of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.UnderlineStyle)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" /> and new font underline.
            </summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="underline">A <see cref="F:GrapeCity.Spreadsheet.Font._fontUnderline" /> value indicates the underline of this <see cref="T:GrapeCity.Spreadsheet.Font" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.#ctor(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.ThemeFont)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Font" /> struct that uses the specified existing <see cref="T:GrapeCity.Spreadsheet.Font" /> and new theme font.
            </summary>
      <param name="prototype">The existing Font from which to create the new Font.</param>
      <param name="themeFont">A <see cref="T:GrapeCity.Spreadsheet.ThemeFont" /> value indicates the theme font.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Bold">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is bold.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is bold; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Condense">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is condensed.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is condensed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Extend">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is extend.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is extend; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Italic">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is italic.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is italic; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Outline">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is outline.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is outline; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Shadow">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is shadow.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is shadow; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Strikethrough">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Font" /> is strike.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Font" /> is strike; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Style">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.FontStyle" /> value indicates the font style.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.FontStyle" /> value represents the font style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Name">
      <summary>
            Gets the face name of this Font.
            </summary>
      <value>A string value represents the face name of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Size">
      <summary>
            Gets the em-size of this Font.
            </summary>
      <value>A double value represents the em-size of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.CharSet">
      <summary>
            Gets the char set of this Font.
            </summary>
      <value>An integer value represents the char set of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Underline">
      <summary>
            Gets the underline of this Font.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.UnderlineStyle" /> value represents the underline of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.ThemeFont">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ThemeFont" /> value of this Font.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ThemeFont" /> value represents the <see cref="T:GrapeCity.Spreadsheet.ThemeFont" /> value of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.VerticalAlign">
      <summary>
            Gets the vertical alignment of this Font.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.VerticalTextAlignment" /> value represents the vertical alignment of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Family">
      <summary>
            Gets the font family of this Font.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Font._fontFamily" /> value represents the font family of this Font.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Font.Color">
      <summary>
            Gets the color of this Font.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> value represents the font color.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.op_Equality(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.Font)">
      <summary>
            Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Font" /> values are equal.
            </summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.op_Inequality(GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.Font)">
      <summary>
            Returns a value that indicates whether two specified <see cref="T:GrapeCity.Spreadsheet.Font" /> values are not equal.
            </summary>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
      <returns>
        <c>true</c> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.Equals(GrapeCity.Spreadsheet.Font)">
      <summary>
              Indicates whether the current <see cref="T:GrapeCity.Spreadsheet.Font" /> object is equal to another <see cref="T:GrapeCity.Spreadsheet.Font" /> object.
            </summary>
      <param name="other">An <see cref="T:GrapeCity.Spreadsheet.Font" /> object to compare with this object.</param>
      <returns>
        <c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.Equals(GrapeCity.Spreadsheet.Font@)">
      <summary>
              Indicates whether the current <see cref="T:GrapeCity.Spreadsheet.Font" /> object is equal to another <see cref="T:GrapeCity.Spreadsheet.Font" /> object.
            </summary>
      <param name="other">An <see cref="T:GrapeCity.Spreadsheet.Font" /> object to compare with this object.</param>
      <returns>
        <c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.Equals(System.Object)">
      <summary>
              Determines whether the current <see cref="T:GrapeCity.Spreadsheet.Font" /> object is equal to another object.
            </summary>
      <param name="other">The object to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:GrapeCity.Spreadsheet.Font" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.IsEmpty">
      <summary>
            Determines whether this instance is empty.
            </summary>
      <returns>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.Reset(GrapeCity.Spreadsheet.FontAttributes)">
      <summary>
            Resets the specified attribute(s).
            </summary>
      <param name="attr">A <see cref="T:GrapeCity.Spreadsheet.FontAttributes" /> value indicates the attribute(s) will be reset.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.IsSet(GrapeCity.Spreadsheet.FontAttributes)">
      <summary>
            Determines whether the specified attribute(s) is set.
            </summary>
      <param name="attr">A <see cref="T:GrapeCity.Spreadsheet.FontAttributes" /> value indicates the attribute(s) will be tested.</param>
      <returns>
        <c>true</c> if the specified attribute(s) is set; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.Set(GrapeCity.Spreadsheet.FontAttributes)">
      <summary>
            Sets the specified attribute.
            </summary>
      <param name="attr">The attribute.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.GetHashCode">
      <summary>
              Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.Merge(GrapeCity.Spreadsheet.Font,System.Boolean)">
      <summary>
            Merges the current font with the other specified font.
            </summary>
      <param name="belowFont">The font that suspose to have lower priority than the current font.</param>
      <param name="mergeStyle">
        <c>true</c> indicates that the font style will be merged; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Font.ToGdiFont(GrapeCity.Spreadsheet.Workbook,System.Func{GrapeCity.Spreadsheet.Font,GrapeCity.Spreadsheet.Workbook,System.Single,System.IDisposable,System.IDisposable},System.Single)">
      <summary>
            Gets the corresponding GDI+ font.
            </summary>
      <value>An object represents the GDI+ font.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CharacterSet">
      <summary>
            Defines the possible sets of character glyphs that are defined in fonts for graphics output.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Ansi">
      <summary>
            Specifies the English character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Default">
      <summary>
            Specifies a character set based on the current system locale; for example, when the system locale is United States English, the default character set is <see cref="F:GrapeCity.Spreadsheet.CharacterSet.Ansi" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Symbol">
      <summary>
            Specifies a character set of symbols.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Mac">
      <summary>
            Specifies the Apple Macintosh character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.ShiftJis">
      <summary>
            Specifies the Japanese character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Hangul">
      <summary>
            Specifies the Hangul Korean character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Johab">
      <summary>
            Specifies the Johab Korean character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Gb2312">
      <summary>
            Specifies the "simplified" Chinese character set for People's Republic of China.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.ChineseBig5">
      <summary>
            Specifies the "traditional" Chinese character set, used mostly in Taiwan and in the Hong Kong and Macao Special Administrative Regions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Greek">
      <summary>
            Specifies the Greek character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Turkish">
      <summary>
            Specifies the Turkish character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Vietnamese">
      <summary>
            Specifies the Vietnamese character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Hebrew">
      <summary>
            Specifies the Hebrew character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Arabic">
      <summary>
            Specifies the Arabic character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Baltic">
      <summary>
             Specifies the Baltic (Northeastern European) character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Russian">
      <summary>
            Specifies the Russian Cyrillic character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Thai">
      <summary>
            Specifies the Thai character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.EastEurope">
      <summary>
            Specifies a Eastern European character set.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CharacterSet.Oem">
      <summary>
            Specifies a mapping to one of the OEM code pages, according to the current system locale setting.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FontAttributes">
      <summary>
            Represents all attributes of a font.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.None">
      <summary>
            Specifies no attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Bold">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Bold" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Italic">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Italic" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Extend">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Extend" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Condense">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Condense" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Outline">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Outline" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Shadow">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Shadow" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Strikethrough">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Strikethrough" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Style">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Style" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Family">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Family" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.ThemeFont">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.ThemeFont" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Underline">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Underline" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Color">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Color" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Size">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Size" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.VerticalAlign">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.VerticalAlign" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.CharSet">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.CharSet" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.Name">
      <summary>
            Specifies <see cref="P:GrapeCity.Spreadsheet.Font.Name" /> attribute.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.CfColor">
      <summary>
            Specifies the color is from conditional formatting.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontAttributes.All">
      <summary>
            Specifies all attributes of a font.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FontStyle">
      <summary>
            Represents the style of the typeface of a font.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Regular">
      <summary>
            Specifies normal weight or thickness of the typeface.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Bold">
      <summary>
            Specifies bold typeface. Bold is a heavier weight or thickness.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Italic">
      <summary>
            Specifies italic typeface, which produces a noticeable slant to the vertical stems of the characters.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Extend">
      <summary>
            Specifies a compatibility setting used for previous spreadsheet applications, resulting in special word/character rendering on those legacy applications, when this flag is set.
            The effect extends or stretches out the text. SpreadsheetML applications are not required to render according to this flag.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Condense">
      <summary>
            Macintosh compatibility setting. Represents special word/character rendering on Macintosh, when this flag is set.
            The effect is to condense the text (squeeze it together). SpreadsheetML applications are not required to render according to this flag.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Outline">
      <summary>
            This element displays only the inner and outer borders of each character. This is very similar to Bold in behavior.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Shadow">
      <summary>
            Macintosh compatibility setting. Represents special word/character rendering on Macintosh, when this flag is set.
            The effect is to render a shadow behind, beneath and to the right of the text. SpreadsheetML applications are not required to render according to this flag.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontStyle.Strikethrough">
      <summary>
            Specifies strike through, which displays a horizontal line drawn through the middle of the characters.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FontFamily">
      <summary>
            The FamilyFont enumeration specifies the font family.
            Font families describe the look of a font in a general way.
            They are intended for specifying fonts when the exact typeface desired is not available.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.NotApplicable">
      <summary>
            The default font is specified, which is implementation-dependent.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.Roman">
      <summary>
            Fonts with variable stroke widths, which are proportional to the actual widths of the glyphs, and which have serifs.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.Swiss">
      <summary>
            Fonts with variable stroke widths, which are proportional to the actual widths of the glyphs, and which do not have serifs.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.Modern">
      <summary>
             Fonts with constant stroke width, with or without serifs. Fixed-width fonts are usually modern.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.Script">
      <summary>
            Fonts designed to look like handwriting.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FontFamily.Decorative">
      <summary>
            Novelty fonts.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ThemeFont">
      <summary>
            Represents the theme font within the theme. The theme font consists of a pair of major and minor fonts for which to used in a document.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ThemeFont.None">
      <summary>
            Do not use any theme font.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ThemeFont.Major">
      <summary>
            Major Font.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.ThemeFont.Minor">
      <summary>
            Minor Font.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UnderlineStyle">
      <summary>
            Specifies the underline style of text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UnderlineStyle.None">
      <summary>
            Specifies that text is not underlined.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UnderlineStyle.Single">
      <summary>
            Specifies that text has a single underline.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UnderlineStyle.Double">
      <summary>
            Specifies that text has a double underline.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UnderlineStyle.SingleAccounting">
      <summary>
            Specifies that text has a single accounting underline, causing an entire cell to be underlined rather than just the cell text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UnderlineStyle.DoubleAccounting">
      <summary>
            Specifies that text has a double accounting underline, causing an entire cell to be underlined rather than just the cell text.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFormatter">
      <summary>
            Represents the value formatter.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatter.Culture">
      <summary>
            Gets the culture for the current formatter.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.IsExportCustomizable">
      <summary>
            Determines whether the formatter customize the exported cell value.
            </summary>
      <returns>
        <c>true</c> if the formatter customize the exported cell value; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.DateTime,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>
            Formats the specified date to display text.
            </summary>
      <param name="date">A <see cref="T:System.DateTime" /> value indicates the date to format.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.IsGeneral">
      <summary>
            Determines whether the current formatter is general formatter.
            </summary>
      <returns>
        <c>true</c> if the current formatter is general formatter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.IsFormattedWithDBNum">
      <summary>
            Determines whether the current formatter formats number with DBNum.
            </summary>
      <returns>
        <c>true</c> if the current formatter formats number with DBNum; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.IsDateGenernal">
      <summary>
            Determines whether the current formatter is general formatter for date values.
            </summary>
      <returns>
        <c>true</c> if the current formatter is general formatter for date values; otherwise, <c>false</c>.</returns>
      <remarks>Safely for SpreadWin to use</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.ContainsDateFormat">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains Day, Month or Year in the section formatter.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains Day, Month or Year in the section formatter; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.ContainsPercentage(System.Int32)">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains percentage number format in the section formatter.
            </summary>
      <param name="section">Index of section that need to check whether it contains percentage number format. -1 to check all sections</param>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains percentage number format in the section formatter; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.ContainsDateTimeFormat">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Formatter" /> contains at least one Date section formatter.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Formatter" /> contains at least one Date section formatter; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.ContainsTimeFormat">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.Formatter" /> contains at least one Time section formatter.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.Formatter" /> contains at least one Time section formatter; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.ContainsCurrencyFormat(System.Int32)">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains currency number format in the section formatter.
            </summary>
      <param name="section">Index of section that need to check whether it contains currency number format. -1 to check all sections</param>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains currency number format in the section formatter; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.ContainsNumberFormat(System.Int32)">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains number format in the section formatter.
            </summary>
      <param name="section">Index of section that need to check whether it contains number format. -1 to check all sections</param>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains number format in the section formatter; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.ContainsScientificFormat(System.Int32)">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains scientific format in the section formatter.
            </summary>
      <param name="section">Index of section that need to check whether it contains scientific format. -1 to check all sections</param>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains scientific format in the section formatter; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.ContainsGroupSeparator(System.Int32)">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains group separator in the section formatter.
            </summary>
      <param name="section">Index of section that need to check whether it contains group separator. -1 to check all sections</param>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains group separator in the section formatter; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.GetDecimalPartLength(System.Int32)">
      <summary>
            Gets a value indicating the decimal part's length of section inside <see cref="T:GrapeCity.Spreadsheet.IFormatter" />.
            </summary>
      <param name="section">Index of section that need to get length of decimal part.</param>
      <value>Length of section's decimal part.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.ContainsFraction">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains fraction number format in the section formatter.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> contains fraction number format in the section formatter; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.IsFormattedColorForNegativeValues">
      <summary>
            Indicates whether the current formatter will format negative value with the specified color.
            </summary>
      <returns>
        <c>true</c> if the negative value is formatted with the specified color; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.IsFormattedAsNumeric(System.Double)">
      <summary>
            Determines whether the specified numeric value is formatted as numeric.
            </summary>
      <param name="number">A double value indicates the number.</param>
      <returns>
        <c>true</c> if the specified numeric value is formatted as numeric; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.IsFormattedAsText(System.Double)">
      <summary>
            Determines whether the specified numeric value is formatted as text.
            </summary>
      <param name="number">A double value indicates the number.</param>
      <returns>
        <c>true</c> if the specified numeric value is formatted as text; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.IsFormattedAsText(System.Object)">
      <summary>
            Determines whether the specified value is formatted as text.
            </summary>
      <param name="value">An <see cref="T:System.Object" /> instance indicates the value.</param>
      <returns>
        <c>true</c> if the specified value is formatted as text; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.IsFormattedWithParenthesesForPositiveValues">
      <summary>
            Indicates whether the current formatter will format positive value with the parentheses.
            </summary>
      <returns>
        <c>true</c> if the negative value is formatted with the parentheses; otherwise, <c>false</c>.</returns>
      <remarks>Should be override by SpreadWin.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.TimeSpan,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>
            Formats the specified number to display text.
            </summary>
      <param name="timeSpan">A <see cref="T:System.TimeSpan" /> value indicates the time interval.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.Double,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>
            Formats the specified number to display text.
            </summary>
      <param name="number">A double value indicates the number to format.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.String,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>
            Formats the specified text to display text.
            </summary>
      <param name="text">A string value indicates the text to format.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.Boolean,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>
            Formats the specified boolean value to display text.
            </summary>
      <param name="value">An <see cref="T:System.Boolean" /> value indicates the data to format.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Format(System.Object,GrapeCity.Spreadsheet.FormatOptions)">
      <summary>
            Formats the specified object to display text.
            </summary>
      <param name="obj">An <see cref="T:System.Object" /> value indicates the data to format.</param>
      <param name="options">A value that specifies additional format options.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatting result.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatter.FormatCode">
      <summary>
            Gets the format code for this formatter.
            </summary>
      <value>A string value represents the format code for this formatter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFormatter.SectionCount">
      <summary>
            Gets the total number of sections in the number format.
            </summary>
      <value>An integer value represents the total number of sections.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.Parse(System.String)">
      <summary>
            Parses the specified format string.
            </summary>
      <param name="format">A <see cref="T:System.String" /> value indicates the format string.</param>
      <returns>
        <c>true</c> if the format string is in valid syntax, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFormatter.ParseText(System.String)">
      <summary>
            Parse the specified text to a cell value.
            </summary>
      <param name="text">The text to parse.</param>
      <returns>An object which represents the corresponding cell value of <paramref name="text" />.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatOptions">
      <summary>
            Represents advanced options for formatting value to text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.None">
      <summary>
            Indicates that no additional options should be used when formatting a value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.Space">
      <summary>
            Indicates that the space details information, which is created by '_' symbol, will be returned.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.Editing">
      <summary>
            Indicates that the value is formatted for editing.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.Date1904">
      <summary>
            Indicates that the date system used to convert a date from/to a serial value starts since 1/1/1904.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.RepeatChar">
      <summary>
            Indicates that the repeat character information will be included
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatOptions.ExcelCompatible">
      <summary>
            Indicates that formatting serial numeric value as date will be compatible with Excel.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatColorEnum">
      <summary>
            Represents all formatted color values.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.None">
      <summary>
            No color indicated.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Black">
      <summary>
            Indicates a system-defined color that has an ARGB value of #FF000000.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Blue">
      <summary>
            Indicates a system-defined color that has an ARGB value of #FF0000FF.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Cyan">
      <summary>
            Indicates a system-defined color that has an ARGB value of #FF00FFFF.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Green">
      <summary>
            Indicates a system-defined color that has an ARGB value of #FF008000.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Magenta">
      <summary>
            Indicates a system-defined color that has an ARGB value of #FFFF00FF.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Red">
      <summary>
            Indicates a system-defined color that has an ARGB value of #FFFF0000.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.White">
      <summary>
            Indicates a system-defined color that has an ARGB value of #FFFFFFFF.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Yellow">
      <summary>
            Indicates a system-defined color that has an ARGB value of #FFFFFF00.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color1">
      <summary>
            Indicates the indexed color 1.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color2">
      <summary>
            Indicates the indexed color 2.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color3">
      <summary>
            Indicates the indexed color 3.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color4">
      <summary>
            Indicates the indexed color 4.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color5">
      <summary>
            Indicates the indexed color 5.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color6">
      <summary>
            Indicates the indexed color 6.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color7">
      <summary>
            Indicates the indexed color 7.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color8">
      <summary>
            Indicates the indexed color 8.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color9">
      <summary>
            Indicates the indexed color 9.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color10">
      <summary>
            Indicates the indexed color 10.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color11">
      <summary>
            Indicates the indexed color 11.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color12">
      <summary>
            Indicates the indexed color 12.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color13">
      <summary>
            Indicates the indexed color 13.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color14">
      <summary>
            Indicates the indexed color 14.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color15">
      <summary>
            Indicates the indexed color 15.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color16">
      <summary>
            Indicates the indexed color 16.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color17">
      <summary>
            Indicates the indexed color 17.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color18">
      <summary>
            Indicates the indexed color 18.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color19">
      <summary>
            Indicates the indexed color 19.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color20">
      <summary>
            Indicates the indexed color 20.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color21">
      <summary>
            Indicates the indexed color 21.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color22">
      <summary>
            Indicates the indexed color 22.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color23">
      <summary>
            Indicates the indexed color 23.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color24">
      <summary>
            Indicates the indexed color 24.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color25">
      <summary>
            Indicates the indexed color 25.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color26">
      <summary>
            Indicates the indexed color 26.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color27">
      <summary>
            Indicates the indexed color 27.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color28">
      <summary>
            Indicates the indexed color 28.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color29">
      <summary>
            Indicates the indexed color 29.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color30">
      <summary>
            Indicates the indexed color 30.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color31">
      <summary>
            Indicates the indexed color 31.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color32">
      <summary>
            Indicates the indexed color 32.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color33">
      <summary>
            Indicates the indexed color 33.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color34">
      <summary>
            Indicates the indexed color 34.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color35">
      <summary>
            Indicates the indexed color 35.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color36">
      <summary>
            Indicates the indexed color 36.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color37">
      <summary>
            Indicates the indexed color 37.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color38">
      <summary>
            Indicates the indexed color 38.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color39">
      <summary>
            Indicates the indexed color 39.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color40">
      <summary>
            Indicates the indexed color 40.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color41">
      <summary>
            Indicates the indexed color 41.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color42">
      <summary>
            Indicates the indexed color 42.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color43">
      <summary>
            Indicates the indexed color 43.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color44">
      <summary>
            Indicates the indexed color 44.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color45">
      <summary>
            Indicates the indexed color 45.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color46">
      <summary>
            Indicates the indexed color 46.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color47">
      <summary>
            Indicates the indexed color 47.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color48">
      <summary>
            Indicates the indexed color 48.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color49">
      <summary>
            Indicates the indexed color 49.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color50">
      <summary>
            Indicates the indexed color 50.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color51">
      <summary>
            Indicates the indexed color 51.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color52">
      <summary>
            Indicates the indexed color 52.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color53">
      <summary>
            Indicates the indexed color 53.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color54">
      <summary>
            Indicates the indexed color 54.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color55">
      <summary>
            Indicates the indexed color 55.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatColorEnum.Color56">
      <summary>
            Indicates the indexed color 56.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.FormatResult">
      <summary>
            Represents the formatting value result.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatResult.Failed">
      <summary>
            Represents an unsuccessed format result.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.FormatResult.AnyValue">
      <summary>
            Represents any value which may be formatted.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatResult.GetDynamicSpacePositions">
      <summary>
            Gets the positions of dynamic space characters.
            </summary>
      <returns>An integer array represent the positions of dynamic space characters.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.Color">
      <summary>
            Gets the formatting color.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.FormatColorEnum" /> value represents the formatting color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.RepeatChar">
      <summary>
            Gets the repeating character.
            </summary>
      <value>A <see cref="T:System.Char" /> value represents the repeating character. A char \0 means there is no repeating character.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.Success">
      <summary>
            Gets a value indicating whether the formatting process successed.
            </summary>
      <value>
        <c>true</c> if the formatting process successed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.UnformattedText">
      <summary>
            Gets the unformatted text.
            </summary>
      <value>A string value represent the formatted text.</value>
      <remarks>The repeat character will be included one time in the unformatted text.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatResult.IsEmptyText">
      <summary>
            Gets a boolean value indicating whether the display text is empty.
            </summary>
      <returns>
        <c>true</c> if the display text is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.RepeatIndex">
      <summary>
            Gets the position of the repeat character.
            </summary>
      <value>An integer value represents the position of the repeat character. -1 means no repeat character.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.DisplayStyle">
      <summary>
            Gets a value indicating whether the formatted text should be displayed as numeric style.
            </summary>
      <value>
        <c>true</c> if the formatted text should be displayed as numeric style; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.Text">
      <summary>
            Gets the formatted text.
            </summary>
      <value>A string value represent the formatted text.</value>
      <remarks>The repeat character won't be included.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.FormatResult.RichText">
      <summary>
            Gets the rich text.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatResult.RemoveNewLines">
      <summary>
            Removes all newline strings.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatResult.RemoveRepeatChar">
      <summary>
            Removes the repeat character information.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatResult.Create(GrapeCity.Spreadsheet.RichText)">
      <summary>
            Creates a formatted result.
            </summary>
      <param name="richText">The text with style setting(s).</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatted result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatResult.Create(System.String,GrapeCity.Spreadsheet.DisplayValueStyle,GrapeCity.Spreadsheet.FormatColorEnum)">
      <summary>
            Creates a formatted result.
            </summary>
      <param name="text">The formatted text.</param>
      <param name="displayStyle">A <see cref="T:GrapeCity.Spreadsheet.DisplayValueStyle" /> value indicates how's text displayed.</param>
      <param name="color">The color of the formatted text.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatted result.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.FormatResult.Create(System.String,System.Int32,System.Char,GrapeCity.Spreadsheet.DisplayValueStyle,GrapeCity.Spreadsheet.FormatColorEnum)">
      <summary>
            Creates a formatted result with repeat character.
            </summary>
      <param name="text">The formatted text.</param>
      <param name="repeatCharIndex">The position of the repeat character in the formatted <paramref name="text" />.</param>
      <param name="repeatChar">The repeat character to fulfil display space.</param>
      <param name="displayStyle">A <see cref="T:GrapeCity.Spreadsheet.DisplayValueStyle" /> value indicates how's text displayed.</param>
      <param name="color">The color of the formatted text.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.FormatResult" /> value represents the formatted result.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.DisplayValueStyle">
      <summary>
            Represents the display style of a value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DisplayValueStyle.Text">
      <summary>
            The value displays as general text.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DisplayValueStyle.Number">
      <summary>
            The value displays as number.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.DisplayValueStyle.Constant">
      <summary>
            The value displays as constant.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IStyle">
      <summary>
            Represents the appearance of the cells in the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IStyle.Delete">
      <summary>
            Deletes this style.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Borders">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.IBorders" /> collection that represents the borders of the style.
            </summary>
      <value>The border collection of the style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.BuiltIn">
      <summary>
            Gets a value indicating whether the style is a built-in style.
            </summary>
      <value>
        <c>true</c> if the style is a built-in style; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Font">
      <summary>
            Returns a <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the style.
            </summary>
      <value>The font of the style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.HorizontalAlignment">
      <summary>
            Gets or sets a horizontal aligment value that represents the horizontal alignment for the style.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.IStyle.HorizontalAlignment" /> value represents the horizontal alignment.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludeAlignment">
      <summary>
            Gets a value indicating whether the style includes the alignment properties.
            </summary>
      <value>
        <c>true</c> if the style includes the alignment properties; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludeBorder">
      <summary>
            Gets a value indicating whether the style includes the <see cref="P:GrapeCity.Spreadsheet.IBorder.Color" />, <see cref="P:GrapeCity.Spreadsheet.IBorder.LineStyle" />, and Weight border properties..
            </summary>
      <value>
        <c>true</c> if [include border]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludeFont">
      <summary>
            Gets a value indicating whether the style includes the font properties.
            </summary>
      <value>
        <c>true</c> if the style includes the font properties; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludeNumber">
      <summary>
            Gets or sets a value indicating whether the style includes the <see cref="P:GrapeCity.Spreadsheet.IStyle.NumberFormat" /> property.
            </summary>
      <value>
        <c>true</c> if the style includes the <see cref="P:GrapeCity.Spreadsheet.IStyle.NumberFormat" /> property; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludePatterns">
      <summary>
            Gets or sets a value indicating whether the style includes the interior properties.
            </summary>
      <value>
        <c>true</c> if the style includes the interior properties; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IncludeProtection">
      <summary>
            Gets or sets a value indicating whether the style includes the protection properties.
            </summary>
      <value>
        <c>true</c> if the style includes the protection properties; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.IndentLevel">
      <summary>
            Gets or sets a value that represents the indent level for the style.
            </summary>
      <value>An integer value represents the indent level.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Interior">
      <summary>
            Returns an <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior of the specified object.
            </summary>
      <value>The interior.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Locked">
      <summary>
            Gets or sets a value that indicates if the object is locked.
            </summary>
      <value>
        <c>true</c> if the object is locked; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Name">
      <summary>
            Returns a value that represents the name of the style.
            </summary>
      <value>The name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.NumberFormat">
      <summary>
            Gets or sets a <see cref="T:System.String" /> value that represents the format code for the style.
            </summary>
      <value>The number format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.Orientation">
      <summary>
            Gets or sets a value that represents the text orientation.
            </summary>
      <value>The text orientation.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.ShrinkToFit">
      <summary>
            Gets or sets a <see cref="T:System.Boolean" /> value that indicates if text automatically shrinks to fit in the available column width.
            </summary>
      <value>
        <c>true</c> if text automatically shrinks to fit in the available column width; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.VerticalAlignment">
      <summary>
            Gets or sets a value that represents the vertical alignment of the style.
            </summary>
      <value>The vertical alignment of the style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IStyle.WrapText">
      <summary>
            Gets or sets a value that indicates if the text is wrapped in the cell.
            </summary>
      <value>
        <c>true</c> if the text is wrapped in the cell; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IFont">
      <summary>
            Contains the font attributes (font name, font size, color, and so on) for an object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Bold">
      <summary>
            True if the font is bold.
            </summary>
      <value>
        <c>true</c> if bold; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Color">
      <summary>
            Gets or sets the primary color of the object
            </summary>
      <value>The color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.ColorIndex">
      <summary>
            Gets or sets an integer value that represents the indexed color of the font.
            </summary>
      <value>An integer value represents the indexed color of the font.</value>
      <remarks>
        <para>Set this property to <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexAutomatic" /> to specify the automatic color.</para>
        <para>Set this property to <see cref="F:GrapeCity.Spreadsheet.Color.ColorIndexNone" /> to specify there is no color.</para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.FontStyle">
      <summary>
            Gets or sets the font style
            </summary>
      <value>The font style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Italic">
      <summary>
            True if the font style is italic
            </summary>
      <value>
        <c>true</c> if italic; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Name">
      <summary>
            Gets or sets a value that represents the name of the object.
            </summary>
      <value>The name.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Size">
      <summary>
            Gets or sets the size in points of the font.
            </summary>
      <value>A double value represents the size in points.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.SizeInPixels">
      <summary>
            Gets or sets the size in pixels of the font.
            </summary>
      <value>A double value represents the size in pixels.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Strikethrough">
      <summary>
            True if the font is struck through with a horizontal line.
            </summary>
      <value>
        <c>true</c> if strikethrough; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Subscript">
      <summary>
            True if the font is formatted as subscript. False by default.
            </summary>
      <value>
        <c>true</c> if subscript; otherwise, <c>false</c>.</value>
      <remarks>This property take effect on XLSX import/export only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Superscript">
      <summary>
            True if the font is formatted as superscript; False by default.
            </summary>
      <value>
        <c>true</c> if superscript; otherwise, <c>false</c>.</value>
      <remarks>This property take effect on XLSX import/export only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.Underline">
      <summary>
            Gets or sets the type of underline applied to the font.
            </summary>
      <value>The underline.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IFont.ThemeFont">
      <summary>
            Gets or sets the theme font in the applied font scheme that is associated with the specified object.
            </summary>
      <value>The theme font.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IFont.ApplyFont(GrapeCity.Spreadsheet.Font)">
      <summary>
            Apply font's setting for whole font
            </summary>
      <param name="font">The font's setting</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IBorder">
      <summary>
            Represents the border of an object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IBorder.Color">
      <summary>
            Gets or sets the primary color of the object.
            </summary>
      <value>The color.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IBorder.LineStyle">
      <summary>
            Gets or sets the line style for the border.
            </summary>
      <value>The line style.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BordersIndex">
      <summary>
            Specifies the border to be retrieved.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.DiagonalDown">
      <summary>
            Border running from the upper left-hand corner to the lower right of each cell in the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.DiagonalUp">
      <summary>
            Border running from the lower left-hand corner to the upper right of each cell in the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.Bottom">
      <summary>
            Border at the bottom of the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.Left">
      <summary>
            Border at the left-hand edge of the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.Right">
      <summary>
            Border at the right-hand edge of the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.Top">
      <summary>
            Border at the top of the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.InsideHorizontal">
      <summary>
            Horizontal borders for all cells in the range except borders on the outside of the range.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BordersIndex.InsideVertical">
      <summary>
            Vertical borders for all the cells in the range except borders on the outside of the range.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IBorders">
      <summary>
            A collection of Border objects that represent the four borders of a Range or Style object.
            </summary>
      <see cref="T:GrapeCity.Spreadsheet.IBorder" />
    </member>
    <member name="P:GrapeCity.Spreadsheet.IBorders.Item(GrapeCity.Spreadsheet.BordersIndex)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IBorder" /> at the specified index.
            </summary>
      <param name="index">The index.</param>
      <returns>IBorder.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IBorders.ApplyBorder(GrapeCity.Spreadsheet.Border)">
      <summary>
            Apply border setting for whole the border
            </summary>
      <param name="border">The border's setting</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.NumberFormat">
      <summary>
            Represents number format properties which indicate how to format and render the numeric value of a cell
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.NumberFormat.Empty">
      <summary>
            Gets the empty number format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.NumberFormat.General">
      <summary>
            Represents the general number format.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.NumberFormat" /> struct.
            </summary>
      <param name="code">A <see cref="T:System.String" /> value indicates the format code.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.#ctor(System.Int32,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.NumberFormat" /> struct.
            </summary>
      <param name="builtInId">An integer value indicates the format ID.</param>
      <param name="code">A <see cref="T:System.String" /> value indicates the format code.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.GetFormatter(GrapeCity.Spreadsheet.IWorkbook,System.Globalization.CultureInfo)">
      <summary>
            Gets the formatter which represents the behavior of this <see cref="T:GrapeCity.Spreadsheet.NumberFormat" />.
            </summary>
      <param name="workbook">The workook that defines the number format.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> object represents the formatter.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NumberFormat.BuiltInID">
      <summary>
            Gets the built-in number format ID.
            </summary>
      <value>An integer value represents the built-in number format ID. <see cref="F:System.Int32.MinValue" /> if the number format is custom.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NumberFormat.FormatCode">
      <summary>
            Gets the number format code of this number format.
            </summary>
      <value>A string value represents the number format code of this number format.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NumberFormat.CellType">
      <summary>
            Gets the cell type of this number format.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ICellType" /> object represents the cell type of this number format.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.IsEmpty">
      <summary>
            Determines whether this instance is empty.
            </summary>
      <returns>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.Equals(GrapeCity.Spreadsheet.NumberFormat)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.NumberFormat.CanBeOverridden(GrapeCity.Spreadsheet.NumberFormat@)">
      <summary>
            Determines whether this formatter should be replaced the specified number format.
            </summary>
      <param name="numberFormat">A <see cref="T:GrapeCity.Spreadsheet.NumberFormat" /> value indicates the number format.</param>
      <returns>
        <c>true</c> if this formatter should be replaced; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.INumberFormatExtendData">
      <summary>
            Represents extend data for <see cref="T:GrapeCity.Spreadsheet.NumberFormat" />.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BuiltInNumberFormats">
      <summary>
            Represents all built-in number formats.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInNumberFormats.GetBuiltInFormatter(GrapeCity.Spreadsheet.IWorkbook,System.Int32,System.Globalization.CultureInfo)">
      <summary>
            Gets a built-in formatter string by the specified ID.
            </summary>
      <param name="workbook">The workook that defines the number format.</param>
      <param name="numFmtId">An integer value indicates the number format ID.</param>
      <returns>A <see cref="T:System.String" /> value represents the built-in formatter.</returns>
      <remarks>This function has better performance than using <see cref="M:GrapeCity.Spreadsheet.NumberFormat.GetFormatterInternal(GrapeCity.Spreadsheet.NumberFormatStorage,System.Globalization.CultureInfo,GrapeCity.Spreadsheet.Localization.LanguagePackage)" />.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInNumberFormats.GetBuiltInNumberFormat(System.Int32,System.Globalization.CultureInfo)">
      <summary>
            Gets a number format string by the specified ID.
            </summary>
      <param name="builtInId">An integer value indicates the number format ID.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
      <returns>A <see cref="T:System.String" /> value represents the built-in number format.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.BuiltInNumberFormats.GetBuiltInId(System.String)">
      <summary>
            Gets the built-in ID of the specified number format.
            </summary>
      <param name="format">A string value indicates the number format.</param>
      <returns>A <see cref="T:System.Int32" /> value represents the built-in ID. Return -1 means the number format is not a built-in number format.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.StyleFormat">
      <summary>
            Represents all style settings of the cell.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.StyleFormat.OVERFLOW">
      <summary>
            Represents an overflow cell.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.StyleFormat.Empty">
      <summary>
            A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value represents empty style formatting.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.Normalize">
      <summary>
            Normalize the style format.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.QuotePrefix">
      <summary>
            Gets a value indicating whether the quote prefix is marked.
            </summary>
      <value>
        <c>true</c> if the quote prefix is marked; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Applyment">
      <summary>
            Gets or sets a boolean value indicating which formatting should be applied.
            </summary>
      <value>A boolean value indicating which formatting should be applied.</value>
      <remarks>This setting is applied for named style only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Fill">
      <summary>
            Gets or sets the fill formatting.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.Fill" /> value represents the fill formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.GradientFillEffect">
      <summary>
            Gets or sets the gradient fill formatting.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.Fill" /> value represents the gradient fill formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Border">
      <summary>
            Gets or sets the border formatting.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.Border" /> value represents the border formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Font">
      <summary>
            Gets or sets the font formatting.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.Font" /> value represents the font formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.NumberFormatCode">
      <summary>
            Gets or sets the number formatting code.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.NumberFormatCode" /> value represents the number formatting code.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.NumberFormat">
      <summary>
            Gets or sets the number formatting.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.NumberFormatCode" /> value represents the number formatting.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.GetFormatter(GrapeCity.Spreadsheet.IWorkbook,System.Globalization.CultureInfo)">
      <summary>
            Gets the formatter.
            </summary>
      <param name="workbook">The workook that defines the number format.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> object represents the formatter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Alignment">
      <summary>
            Gets or sets the alignment formatting.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.StyleFormat.Alignment" /> value represents alignment formatting.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Protection">
      <summary>
            Gets or sets the protection formatting.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.StyleFormat.Protection" /> value represents the protection formatting.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.ScaleFont(System.Double)">
      <summary>
            Scales the font by the specified scale factor.
            </summary>
      <param name="scale">The scale factor.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.StyleFormat.Extended">
      <summary>
            Gets or sets a value represents the extend information of the style.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ICompositeExtendData" /> object represents the extend information of the style.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.IsEmpty">
      <summary>
            Determines whether this <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> is empty.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.IsNormalStyle">
      <summary>
            Determines whether this <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> is same as Normal style.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> is same as Normal style; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.Equals(GrapeCity.Spreadsheet.StyleFormat)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.StyleFormat.MarkAsOverflowCell">
      <summary>
            Indicates that the cell is overflow and be aligned as center.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.StyleFormatApplyment.None">
      <summary>
            Indicates that no formatting should be applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.StyleFormatApplyment.Alignment">
      <summary>
            Indicates whether the alignment formatting specified should be applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.StyleFormatApplyment.Border">
      <summary>
            Indicates whether the border formatting specified should be applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.StyleFormatApplyment.Fill">
      <summary>
            Indicates whether the fill formatting specified should be applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.StyleFormatApplyment.Font">
      <summary>
            Indicates whether the font formatting specified should be applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.StyleFormatApplyment.NumberFormat">
      <summary>
            Indicates whether the number formatting specified should be applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.StyleFormatApplyment.Protection">
      <summary>
            Indicates whether the protection formatting specified should be applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.StyleFormatApplyment.All">
      <summary>
            Indicates that all formatting should be applied.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Styles">
      <summary>
            Represents a collection of all styles in the workbook.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.#ctor(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Styles" /> class.
            </summary>
      <param name="workbook">A <see cref="P:GrapeCity.Spreadsheet.Styles.Workbook" /> object indicates the workbook.</param>
      <param name="styleStorage">A <see cref="T:GrapeCity.Spreadsheet.WorkbookStyleStorage" /> object indicates the workbook style storage.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.Workbook">
      <summary>
            Gets the workbook which is associated with this <see cref="T:GrapeCity.Spreadsheet.Styles" /> instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetDefaultRowHeaderWidth">
      <summary>
            Gets the default width of row header.
            </summary>
      <returns>An integer value represents the default width of row header.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetPreferredRowHeight(GrapeCity.Spreadsheet.Font@,System.Boolean)">
      <summary>
            Gets the preferred row height of the specified font.
            </summary>
      <param name="font">The font to measure.</param>
      <returns>An integer value represents the preferred row height of the specified font</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.NormalStyle">
      <summary>
            Gets the normal style format.
            </summary>
      <value>The normal style format.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetNormalStyleRef">
      <summary>
            Gets the normal style format.
            </summary>
      <value>The normal style format.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetNumberFormat(System.Int32)">
      <summary>
            Gets the number format from stored ID.
            </summary>
      <param name="id">The identifier of the number format.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.IsSameAsNormalFont(GrapeCity.Spreadsheet.Font@)">
      <summary>
            Gets a boolean value indicating whether the specified <see cref="T:GrapeCity.Spreadsheet.Font" /> is same as the Normal style's <see cref="T:GrapeCity.Spreadsheet.Font" />.
            </summary>
      <param name="font">The font to compare.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:GrapeCity.Spreadsheet.Font" /> is same as the Normal style's <see cref="T:GrapeCity.Spreadsheet.Font" />; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.IsSameAsNormalFill(GrapeCity.Spreadsheet.Fill@)">
      <summary>
            Gets a boolean value indicating whether the specified <see cref="T:GrapeCity.Spreadsheet.Fill" /> is same as the Normal style's <see cref="T:GrapeCity.Spreadsheet.Fill" />.
            </summary>
      <param name="fill">The fill to compare.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:GrapeCity.Spreadsheet.Fill" /> is same as the Normal style's <see cref="T:GrapeCity.Spreadsheet.Fill" />; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.PixelsPerIndent">
      <summary>
            Get the width (in pixels) represented by 1 indent.
            </summary>
      <value>An integer value represents the width of 1 indent.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateGradientFill(System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>
            Creates the path gradient fill.
            </summary>
      <param name="top">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1).
            For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="left">Specifies in percentage format (from the left to the right) the position of the left edge of the inner rectangle (color 1).
            For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="bottom">Specifies in percentage format (from the top to the bottom) the position of the bottom edge of the inner rectangle (color 1).
            For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="right">Specifies in percentage format (from the left to the right) the position of the right edge of the inner rectangle (color 1).
            For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateGradientFill(System.Double,System.Double,System.Double,System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>
            Creates the path gradient fill.
            </summary>
      <param name="top">Specifies in percentage format (from the top to the bottom) the position of the top edge of the inner rectangle (color 1).
            For top, 0 means the top edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="left">Specifies in percentage format (from the left to the right) the position of the left edge of the inner rectangle (color 1).
            For left, 0 means the left edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="bottom">Specifies in percentage format (from the top to the bottom) the position of the bottom edge of the inner rectangle (color 1).
            For bottom, 0 means the bottom edge of the inner rectangle is on the top edge of the cell, and 1 means it is on the bottom edge of the cell.</param>
      <param name="right">Specifies in percentage format (from the left to the right) the position of the right edge of the inner rectangle (color 1).
            For right, 0 means the right edge of the inner rectangle is on the left edge of the cell, and 1 means it is on the right edge of the cell.</param>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateGradientFill(System.Double,GrapeCity.Spreadsheet.Color,GrapeCity.Spreadsheet.Color)">
      <summary>
            Creates the linear gradient fill.
            </summary>
      <param name="degree">A <see cref="T:System.Double" /> value indicates the angle of the linear gradient.</param>
      <param name="color1">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the first gradient stop, constituting this gradient fill.</param>
      <param name="color2">A <see cref="T:GrapeCity.Spreadsheet.Color" /> value indicates the color of the second gradient stop, constituting this gradient fill.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateGradientFill(System.Double,GrapeCity.Spreadsheet.GradientStop[])">
      <summary>
            Creates the linear gradient fill.
            </summary>
      <param name="degree">A <see cref="T:System.Double" /> value indicates the angle of the linear gradient.</param>
      <param name="gradientStops">A <see cref="T:GrapeCity.Spreadsheet.GradientStop" /> array indicates the gradient stops.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateGradientFill(GrapeCity.Spreadsheet.GradientFillEffect)">
      <summary>
            Creates the gradient fill.
            </summary>
      <param name="gradientFillEffect">A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value indicates the gradient fill effect.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value represents the created gradient fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetGradientEffect(GrapeCity.Spreadsheet.Fill)">
      <summary>
            Gets the gradient effect of the specified fill.
            </summary>
      <param name="fill">A <see cref="T:GrapeCity.Spreadsheet.Fill" /> value indicates the gradient fill.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.GradientFillEffect" /> value represents the gradient effect of the specified fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateDifferentialFormat">
      <summary>
            Creates the differential format.
            </summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> value represents the differential format.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.GeneralFormatter">
      <summary>
            Gets the general formatter for current workbook.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IFormatter" /> object represents the general formatter.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Add(System.String,System.String)">
      <summary>
            Creates a new style and adds it to the list of styles that are available for the current workbook.
            </summary>
      <param name="name">The new style name.</param>
      <param name="duplicatedStyle">The duplicated style name.</param>
      <remarks>Returns null if the name already exist.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.GrapeCity#Spreadsheet#IStyles#Count">
      <summary>
            Gets an integer value that represents the number of styles in the <see cref="T:GrapeCity.Spreadsheet.IStyles" /> collection.
            </summary>
      <value>An integer value that represents the number of styles.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.BuiltInVisibleCount">
      <summary>
            Gets an integer value that represents the number of visible built-in styles.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.GrapeCity#Spreadsheet#IStyles#Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object at the specified index.
            </summary>
      <param name="index">The index number of the style.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GrapeCity#Spreadsheet#IStyles#Merge(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Spreadsheet.YesNoCancel)">
      <summary>
            Merges the styles from another workbook into the <see cref="T:GrapeCity.Spreadsheet.IStyles" /> collection.
            </summary>
      <param name="workbook">An <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> object that represents the workbook containing styles to be merged.</param>
      <param name="duplicate">A <see cref="T:GrapeCity.Spreadsheet.YesNoCancel" /> value that represents the action for duplicated styles.
            <para><see cref="F:GrapeCity.Spreadsheet.YesNoCancel.Yes" /> to overwrite all duplicated styles.</para><para><see cref="F:GrapeCity.Spreadsheet.YesNoCancel.No" /> to merge only non-duplicated styles.</para><para><see cref="F:GrapeCity.Spreadsheet.YesNoCancel.Cancel" /> to merge nothing if there is a duplicated styles.</para></param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.GrapeCity#Spreadsheet#IStyles#Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object with the specified name.
            </summary>
      <param name="name">The name of the style.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object with the specified name.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.GrapeCity#Spreadsheet#IStyles#Item(GrapeCity.Spreadsheet.BuiltInStyle)">
      <summary>
            Gets the built-in <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object.
            </summary>
      <param name="builtInStyle">A <see cref="!:builtInStyle" /> value indicates the built-in style.</param>
      <returns>The built-in <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetStyle(System.String,System.Boolean)">
      <summary>
            Gets an <see cref="!:INamedStyle" /> object from the specified style name.
            </summary>
      <param name="styleName">A string value indicates the style name.</param>
      <param name="create">if set to <c>true</c>, a new <see cref="!:INamedStyle" /> will be created if it doesn't exist.</param>
      <returns>An <see cref="!:INamedStyle" /> object represents the named style.</returns>
      <remarks>If new named style is created, all its settings are copied from Normal style.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetStyle(GrapeCity.Spreadsheet.BuiltInStyle)">
      <summary>
            Gets a built-in <see cref="!:INamedStyle" /> object from the specified <see cref="T:GrapeCity.Spreadsheet.BuiltInStyle" /> value.
            </summary>
      <param name="builtInStyle">A <see cref="T:GrapeCity.Spreadsheet.BuiltInStyle" /> value indicates the built-in named style.</param>
      <returns>An <see cref="!:INamedStyle" /> object represents the named style.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Normalize(GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>
            Normalizes a <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value by filling missing setting from Normal style.
            </summary>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> to be normalized.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Normalize(GrapeCity.Spreadsheet.CfExecutedResult@)">
      <summary>
            Normalizes <see cref="F:GrapeCity.Spreadsheet.CfExecutedResult.Format" /> of a <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value by filling missing setting from Normal style.
            </summary>
      <param name="renderStyle">Indicates a <see cref="T:GrapeCity.Spreadsheet.CfExecutedResult" /> value to normalize its <see cref="F:GrapeCity.Spreadsheet.CfExecutedResult.Format" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Modify(GrapeCity.Spreadsheet.BuiltInStyle,GrapeCity.Spreadsheet.StyleFormat,System.Boolean)">
      <summary>
            Modifies formatting of the specified builtIn style.
            </summary>
      <param name="builtInStyle">A <see cref="T:GrapeCity.Spreadsheet.BuiltInStyle" /> value indicates the builtIn style.</param>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the formatting of the builtIn style.</param>
      <param name="autoDetect">A <see cref="T:System.Boolean" /> value indicates whether the applyment is specified from <paramref name="styleFormat" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Modify(System.String,GrapeCity.Spreadsheet.StyleFormat,System.Boolean)">
      <summary>
            Modifies formatting of the specified builtIn style.
            </summary>
      <param name="namedStyle">A string value indicates the named style.</param>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the formatting of the named style.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Composite(GrapeCity.Spreadsheet.StyleFormat@,GrapeCity.Spreadsheet.DifferentialFormat,GrapeCity.Spreadsheet.BorderSides,System.Boolean)">
      <summary>
            Composites the specified <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> value with another specified <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" />.
            </summary>
      <param name="currentStyle">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the current style formatting.</param>
      <param name="aboveDxf">A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> value indicates the differential formatting above.</param>
      <param name="markCfColor">
        <c>true</c> if the <see cref="F:GrapeCity.Spreadsheet.FontAttributes.CfColor" /> will be included if <paramref name="aboveDxf" /> have defined color.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CompositeCfFill(GrapeCity.Spreadsheet.Fill@,GrapeCity.Spreadsheet.Fill)">
      <summary>
            Composite cell fill with the CF fill.
            </summary>
      <param name="cellFill">The fill of cell.</param>
      <param name="cfFill">The fill of conditional format.</param>
      <returns>
        <c>true</c> if the CF Fill replace cell fill; otherwise, the CF Fill is blend with cell fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CompositeCfFill(GrapeCity.Spreadsheet.Fill@,GrapeCity.Spreadsheet.Fill@)">
      <summary>
            Composite cell fill with the CF fill.
            </summary>
      <param name="cellFill">The fill of cell.</param>
      <param name="cfFill">The fill of conditional format.</param>
      <returns>
        <c>true</c> if the CF Fill replace cell fill; otherwise, the CF Fill is blend with cell fill.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Composite(GrapeCity.Spreadsheet.StyleFormat@,GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>
            Composites the specified <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value with another specified <see cref="T:GrapeCity.Spreadsheet.StyleFormat" />.
            </summary>
      <param name="currentStyle">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the current style formatting.</param>
      <param name="aboveStyle">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style formatting above.</param>
      <remarks>The composited style result will be assigned to <paramref name="currentStyle" />.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CompositeBorder(GrapeCity.Spreadsheet.Border@,GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>
            Composites the specified <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value with another specified <see cref="T:GrapeCity.Spreadsheet.StyleFormat" />.
            </summary>
      <param name="currentBorder">A <see cref="T:GrapeCity.Spreadsheet.Border" /> value indicates the current border settings.</param>
      <param name="aboveStyle">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style formatting above.</param>
      <remarks>The composited style result will be assigned to <paramref name="currentStyle" />.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GenerateUniqueTableStyleName(System.String)">
      <summary>
            Generate new unique table style name
            </summary>
      <param name="name">A string value indicates the table style name</param>
      <returns>Return the input name in case of it doesn't exist; otherwise, the new unique name will be generated</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetRenderStyle(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,GrapeCity.Spreadsheet.CellRenderOptions,GrapeCity.Spreadsheet.CfExecutedResult@)">
      <summary>
            Gets the rendered style of the specified cell.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="options">A <see cref="T:GrapeCity.Spreadsheet.CellRenderOptions" /> value indicates settings for rendering the cell.</param>
      <param name="result">Represents all necessary style settings to render of the specified cell.</param>
      <returns>
        <c>true</c> if the render style need to be normalized with Normal style, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetFlatRenderBorder(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,GrapeCity.Spreadsheet.BorderSides@,GrapeCity.Spreadsheet.BorderSides@,System.Boolean)">
      <summary>
            Gets the rendered border of the specified cell.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object indicates the worksheet.</param>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <param name="borderFromCf">Indicates which border sides are applied from Cf.</param>
      <param name="borderFromTable">Indicates which border sides are applied from table.</param>
      <param name="allLayers">
        <c>true</c> if the border is from all layers' settings; otherwise, the border is from cell's settings only.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetCommonBorder(GrapeCity.Spreadsheet.IRange)">
      <summary>
            Gets the common border settings of the specified range.
            </summary>
      <param name="ranges">The current working cell range.</param>
      <returns>The common border settings of the specified range.</returns>
      <remarks>Only cell layer's border settings are processed.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetCommonStyle(GrapeCity.Spreadsheet.IRange,System.Nullable{System.Boolean}@)">
      <summary>
            Get the common cell-only style settings of the specified cell range.
            </summary>
      <param name="ranges"></param>
      <param name="isNormalFont"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetCommonStyle(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.Boolean}@,System.Boolean)">
      <summary>
            Get the common cell-only style settings of the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>The common cell-only style settings of the specified range.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetStyleFormat(GrapeCity.Spreadsheet.IStyle)">
      <summary>
            Gets style format of the specified <see cref="T:GrapeCity.Spreadsheet.IStyle" /> object.
            </summary>
      <param name="worksheet">The wro</param>
      <param name="style">The <see cref="T:GrapeCity.Spreadsheet.IStyle" /> to get.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value represents style format of the <see cref="T:GrapeCity.Spreadsheet.IStyle" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GetBorderLineWidth(GrapeCity.Spreadsheet.BorderLineStyle)">
      <summary>
            Get the size of the border line style.
            </summary>
      <param name="borderLineStyle">The border line style.</param>
      <returns>The size of the border line style.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.IsFlattenStyles">
      <summary>
            Gets a value indicating whether this instance is flatten styles.
            </summary>
      <value>
        <c>true</c> if this instance is flatten styles; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.GrapeCity#Spreadsheet#IO#Exchangeable#IExtensibleObject{GrapeCity#Spreadsheet#Styles}#CreateExtension(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Guid)">
      <summary>
            Create an <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object from the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the XML reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context data.</param>
      <param name="key">A <see cref="T:System.Guid" /> value indicates the GUID identifier of the extension.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object that indicates by the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.CreateExtension(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Guid)">
      <summary>
            Create an <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object from the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the XML reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context data.</param>
      <param name="key">A <see cref="T:System.Guid" /> value indicates the GUID identifier of the extension.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object that indicates by the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Styles.GrapeCity#Spreadsheet#IO#Exchangeable#IExtensibleObject{GrapeCity#Spreadsheet#Styles}#Extensions">
      <summary>
            Gets a collection of extension objects for this extensible object.
            </summary>
      <value>A <see cref="!:IExtensionCollection&lt;IExtension&lt;T&gt;&gt;" /> of extensible objects.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Finalize">
      <summary>
            Finalizes an instance of the <see cref="T:GrapeCity.Spreadsheet.Styles" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Styles.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BuiltInStyle">
      <summary>
            Represents all built-in styles.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Normal">
      <summary>
            The Normal style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Comma">
      <summary>
            The Comma style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Currency">
      <summary>
            The Currency style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent">
      <summary>
            The Percent style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Comma0">
      <summary>
            The Comma[0] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Currency0">
      <summary>
            The Currency[0] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Hyperlink">
      <summary>
            The Hyper-link style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.FollowedHyperlink">
      <summary>
            The Followed Hyper-link style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Note">
      <summary>
            The Note style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.WarningText">
      <summary>
            The warning text style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Emphasis1">
      <summary>
            The Emphasis[1] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Emphasis2">
      <summary>
            The Emphasis[2] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Emphasis3">
      <summary>
            The Emphasis[3] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Title">
      <summary>
            The Title style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Heading1">
      <summary>
            The Heading[1] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Heading2">
      <summary>
            The Heading[2] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Heading3">
      <summary>
            The Heading[3] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Heading4">
      <summary>
            The Heading[4] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Input">
      <summary>
            The Input style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Output">
      <summary>
            The Output style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Calculation">
      <summary>
            The Calculation style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.CheckCell">
      <summary>
            The Check Cell style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.LinkedCell">
      <summary>
            The Linked Cell style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Total">
      <summary>
            The Total style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Good">
      <summary>
            The Good style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Bad">
      <summary>
            The Bad style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Neutral">
      <summary>
            The Neutral style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent1">
      <summary>
            The Accent[1] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent1">
      <summary>
            The Accent[1] style with 20% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent1">
      <summary>
            The Accent[1] style with 40% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent1">
      <summary>
            The Accent[1] style with 60% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent2">
      <summary>
            The Accent[2] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent2">
      <summary>
            The Accent[2] style with 20% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent2">
      <summary>
            The Accent[2] style with 40% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent2">
      <summary>
            The Accent[2] style with 60% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent3">
      <summary>
            The Accent[3] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent3">
      <summary>
            The Accent[3] style with 20% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent3">
      <summary>
            The Accent[3] style with 40% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent3">
      <summary>
            The Accent[3] style with 60% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent4">
      <summary>
            The Accent[4] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent4">
      <summary>
            The Accent[4] style with 20% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent4">
      <summary>
            The Accent[4] style with 40% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent4">
      <summary>
            The Accent[4] style with 60% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent5">
      <summary>
            The Accent[5] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent5">
      <summary>
            The Accent[5] style with 20% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent5">
      <summary>
            The Accent[5] style with 40% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent5">
      <summary>
            The Accent[5] style with 60% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Accent6">
      <summary>
            The Accent[6] style.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent20Accent6">
      <summary>
            The Accent[6] style with 20% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent40Accent6">
      <summary>
            The Accent[6] style with 40% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.Percent60Accent6">
      <summary>
            The Accent[6] style with 60% lighter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInStyle.ExplanatoryText">
      <summary>
            The Explanatory Text style.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITable">
      <summary>
            Represents a table of the worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITable.Delete(System.Boolean)">
      <summary>
            Deletes this <see cref="T:GrapeCity.Spreadsheet.ITable" /> from the worksheet.
            </summary>
      <param name="clearCells">
        <c>true</c> to clear all cell data; otherwise, the table is removed only.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITable.Resize(System.Int32,System.Int32,System.Int32)">
      <summary>
            Resizes the boundary of this table over a new range. No cells are inserted or moved.
            </summary>
      <param name="column">An integer value indicates the new worksheet left column index.</param>
      <param name="column2">An integer value indicates the new worksheet right column index.</param>
      <param name="rowCount">An integer value indicates the new table row count. Default value is -1 that indicates the row count remained.</param>
      <returns>
        <c>true</c> if the table is resized successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITable.Resize(System.String)">
      <summary>
            Resizes the boundary of this table over a new range. No cells are inserted or moved.
            </summary>
      <param name="range">The new range of the table.</param>
      <returns>
        <c>true</c> if the table is resized successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITable.Resize(GrapeCity.Spreadsheet.IRange)">
      <summary>
            Resizes the boundary of this table over a new range. No cells are inserted or moved.
            </summary>
      <param name="range">The new range of the table.</param>
      <returns>
        <c>true</c> if the table is resized successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITable.Unlist">
      <summary>
            Convert data of this <see cref="T:GrapeCity.Spreadsheet.ITable" /> into normal cells and deletes it from the worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Active">
      <summary>
            Gets a value indicating whether the active cell of worksheet is inside the range of this <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.
            </summary>
      <value>
        <c>true</c> if the active cell of worksheet is inside this table; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.AutoFilter">
      <summary>
            Gets the filter of this <see cref="T:GrapeCity.Spreadsheet.ITable" />.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.IAutoFilter" /> object represents the filter of this <see cref="T:GrapeCity.Spreadsheet.Table" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Comment">
      <summary>
            Gets or sets the comment associated with the <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.
            </summary>
      <value>A string value represents the comment.</value>
      <remarks>The comment text cannot exceed 255 characters.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.DataBodyRange">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of values, excluding the header row, in a table.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of values, excluding the header row, in a table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.HeaderRowRange">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of the header row for a table.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range of the header row for a table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.TableColumns">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.ITableColumns" /> collection that represents all the columns in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ITableColumns" /> collection that represents all the columns in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.TableRows">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.ITableRows" /> collection that represents all the rows in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.ITableRows" /> collection that represents all the rows in a <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.TableStyle">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.ITable.TableStyle" /> indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.ITable.TableStyle" /> object indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.TableStyleName">
      <summary>
            Gets the string value indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.
            </summary>
      <value>A string value indicates which style will be applied to this <see cref="T:GrapeCity.Spreadsheet.ITable" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Name">
      <summary>
            Gets the name of <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.
            </summary>
      <value>A string value represents the name of <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Worksheet">
      <summary>
            Gets the worksheet object for the specified table.
            </summary>
      <value>The worksheet contains the specified table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Range">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified table in the above list applies.
            </summary>
      <value>The range.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowAutoFilter">
      <summary>
            Gets or sets a boolean value indicating whether the <see cref="P:GrapeCity.Spreadsheet.ITable.AutoFilter" /> will be displayed.
            </summary>
      <value>
        <c>true</c> if the <see cref="P:GrapeCity.Spreadsheet.ITable.AutoFilter" /> will be displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowAutoFilterDropDown">
      <summary>
            Gets or sets a boolean value indicating whether the <see cref="P:GrapeCity.Spreadsheet.ITable.AutoFilter" /> drop down for the table object is displayed.
            </summary>
      <value>
        <c>true</c> if the <see cref="P:GrapeCity.Spreadsheet.ITable.AutoFilter" /> drop down for the table object is displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowHeaders">
      <summary>
            Gets or sets a value indicating whether the header row is visible.
            </summary>
      <value>
        <c>true</c> if the header row is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowTableStyleRowStripes">
      <summary>
            Gets or sets a value indicating whether the Row Stripes table style is used for the specified table object.
            </summary>
      <value>
        <c>true</c> if the Row Stripes table style is used for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowTableStyleLastColumn">
      <summary>
            Gets or sets a value indicating whether the last column is displayed for the specified table object.
            </summary>
      <value>
        <c>true</c> if the last column is displayed for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowTableStyleFirstColumn">
      <summary>
            Gets or sets a value indicating whether the first column is formatted for the specified table object.
            </summary>
      <value>
        <c>true</c> if the first column is formatted for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowTableStyleColumnStripes">
      <summary>
            Gets or sets a value indicating whether the Column Stripes table style is used for the specified table object.
            </summary>
      <value>
        <c>true</c> if the Column Stripes table style is used for the specified table object; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.ShowTotals">
      <summary>
            Gets or sets a value indicating whether the total row is visible.
            </summary>
      <value>
        <c>true</c> if the total row is visible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.Sort">
      <summary>
            Gets the sort object.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.ISort" /> object belong to the table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.TotalsRowRange">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object representing the Total row, if any, from a specified table object.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object representing the Total row, if any, from a specified table object..</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.AutoGenerateColumns">
      <summary>
            Gets or sets whether to generate the columns automatically based on the data source.
            </summary>
      <value>
        <c>true</c> if the table generate the columns automatically based on the data source; otherwise, <c>false</c>. The default is <c>true</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.DataSource">
      <summary>
            Gets or sets the data source that populates the table.
            </summary>
      <value>
            The data source that populates the table.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITable.DataAllowAddNew">
      <summary>
            Gets or sets whether to allow the user to add a new row when the table is bound.
            </summary>
      <value>
        <c>true</c> if allowed to add new row; otherwise, <c>false</c></value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableColumns">
      <summary>
            Represents a collection of all the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> objects in the specified <see cref="T:GrapeCity.Spreadsheet.ITable" /> object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableColumns.Add(System.Int32,System.Int32)">
      <summary>
            Adds a new column to the table object.
            </summary>
      <param name="position">An integer value indicates the relative position of the new column that starts at 1. The previous column at this position is shifted outward.</param>
      <param name="count">The total number of new columns.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object that represents the new column.</returns>
      <remarks>If <paramref name="position" /> is not specified, a new rightmost column is added. A name for the column is automatically generated. The name of the new column can be changed after the column is added.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumns.Count">
      <summary>
            Gets an integer value that represents the number of columns in the table.
            </summary>
      <value>The number of columns in the table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumns.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of the table column.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumns.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.
            </summary>
      <param name="name">A string value indicates the name of the table column.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableColumns.Move(System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves table column(s) at the specified position to other position.
            </summary>
      <param name="column">An integer value indicates the position to move.</param>
      <param name="toColumn">An integer value indicates the target position.</param>
      <param name="count">An integer value indicates the moved column count.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableColumn">
      <summary>
            Represents a column in a table.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableColumn.Delete(System.Int32)">
      <summary>
            Deletes the column of data in the table.
            </summary>
      <param name="count">The total number of removed columns.</param>
      <returns>
        <c>true</c> if the table column is removed, <c>false</c> otherwise.</returns>
      <remarks>This method does not remove the column from the sheet.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.DataBodyRange">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that is the size of the data portion of a column.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that is the size of the data portion of a column.</value>
      <remarks>The returned object excludes the Header and Totals cell.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.Index">
      <summary>
            Gets an integer value that represents the index number of the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object within the <see cref="T:GrapeCity.Spreadsheet.ITableColumns" /> collection.
            </summary>
      <value>The integer value that represents the index number of the <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.Name">
      <summary>
            Gets or sets value that represents the name of the table column.
            </summary>
      <value>The name of the table column.</value>
      <remarks>The value of this property is also used as the display name of the table column. This name must be unique within the table.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.Range">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified table object in the above table applies.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified table object in the above table applies.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.Total">
      <summary>
            Gets the Total cell for a <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object.
            </summary>
      <value>The Total cell for a <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.Header">
      <summary>
            Gets the Header cell for a <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object.
            </summary>
      <value>The Header cell for a <see cref="T:GrapeCity.Spreadsheet.ITableColumn" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.TotalsCalculation">
      <summary>
            Gets or sets the type of calculation in the Totals row of the table column.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.ITableColumn.TotalsCalculation" /> value represents the type of calculation in the Totals row.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.DataField">
      <summary>
            Gets or sets the data field for this table column in the data source.
            </summary>
      <value>
            The data field.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableColumn.CellType">
      <summary>
            Gets or sets the cell type for this table column.
            </summary>
      <value>
            The cell type for this table column.
            </value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableRows">
      <summary>
            Represents a collection of all the table rows in the specified table.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableRows.Add(System.Int32,System.Boolean,System.Int32)">
      <summary>
            Adds a new row to the table object.
            </summary>
      <param name="position">An integer value indicates the relative position of the new row.</param>
      <param name="alwaysInsert">A boolean value indicates  whether to always shift data in cells below the last row of the table when the new row is inserted, 
            regardless if the row below the table is empty. If True , the cells below the table will be shifted down one row. 
            If False , if the row below the table is empty, the table will expand to occupy that row without shifting cells below it; 
            but if the row below the table contains data, those cells will be shifted down when the new row is inserted.</param>
      <param name="count">The total number of new rows.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITableRow" /> object that represents the new row.</returns>
      <remarks>If <paramref name="position" /> is not specified, a new bottom row is added. 
            If <paramref name="alwaysInsert" /> is not specified, the cells below the table will be shifted down one row (same as specifying <c>true</c>).</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableRows.Count">
      <summary>
            Gets an integer value that represents the number of rows in the table.
            </summary>
      <value>The number of rows in the table.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableRows.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITableRow" /> object at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of the table column.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.ITableRow" /> object at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableRows.Move(System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves table row(s) at the specified position to other position.
            </summary>
      <param name="row">An integer value indicates the position to move.</param>
      <param name="toRow">An integer value indicates the target position.</param>
      <param name="count">An integer value indicates the moved row count.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableRows.MoveOut(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Moves table row(s) at the specified position to the first row below or above this <see cref="T:GrapeCity.Spreadsheet.Table" />.
            </summary>
      <param name="row">An integer value indicates the position to move.</param>
      <param name="count">An integer value indicates the moved row count.</param>
      <param name="moveDown">A boolean value indicates  whether to move the move direction is below or above table.</param>
      <returns>
        <c>true</c> if the moving is done successful, <c>false</c> otherwise.</returns>
      <remarks>Moved rows will be removed from this <see cref="T:GrapeCity.Spreadsheet.Table" />.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableRow">
      <summary>
            Represents a row in a table.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableRow.Delete(System.Int32)">
      <summary>
            Deletes the cells of the table row and shifts upward any remaining cells below the deleted row.
            </summary>
      <param name="count">The total number of removed rows.</param>
      <returns>
        <c>true</c> if the table row is removed, <c>false</c> otherwise.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableRow.Index">
      <summary>
            Gets an integer value that represents the index number of the <see cref="T:GrapeCity.Spreadsheet.ITableRow" /> object within the <see cref="T:GrapeCity.Spreadsheet.ITableRows" /> collection.
            </summary>
      <value>The integer value that represents the index number of the <see cref="T:GrapeCity.Spreadsheet.ITableRow" /> object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableRow.Range">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified table object in the above table applies.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IRange" /> object that represents the range to which the specified table object in the above table applies.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableRow.InvalidData">
      <summary>
            Gets a value indicating whether the row in a list contains cells that don't pass data validation.
            </summary>
      <value>
        <c>true</c> if the row in a list contains cells that don't pass data validation; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITables">
      <summary>
            Represents an <see cref="T:GrapeCity.Spreadsheet.ITables" /> object which manages all <see cref="T:GrapeCity.Spreadsheet.ITable" /> tables in the specified <see cref="T:GrapeCity.Spreadsheet.IWorksheet" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITables.Add(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.YesNoGuess,System.String,System.String)">
      <summary>
            Creates the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <param name="tableHasHeaders">An <see cref="T:GrapeCity.Spreadsheet.YesNoGuess" /> constant that indicates whether the data has column labels. If the source range does not contain headers, Spread will automatically generate headers. Default value: <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.Guess" />.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the created table. <c>null</c> if the table cannot be created.</returns>
      <remarks>When the table has headers, the first row of cells will be converted to Text , if not already set to text. The conversion will be based on the visible text for the cell. This means that if there is a date value with a Date format that changes with locale, the conversion to a list might produce different results depending on the current system locale. Moreover, if there are two cells in the header row that have the same visible text, an incremental Integer will be appended to make each column header unique.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITables.Add(System.String,GrapeCity.Spreadsheet.YesNoGuess,System.String,System.String)">
      <summary>
            Creates the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified cell range.
            </summary>
      <param name="srcRange">An A1-style notation address indicates the data source.</param>
      <param name="tableHasHeaders">An <see cref="T:GrapeCity.Spreadsheet.YesNoGuess" /> constant that indicates whether the data has column labels. If the source range does not contain headers, Spread will automatically generate headers. Default value: <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.Guess" />.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the created table. <c>null</c> if the table cannot be created.</returns>
      <remarks>When the table has headers, the first row of cells will be converted to Text , if not already set to text. The conversion will be based on the visible text for the cell. This means that if there is a date value with a Date format that changes with locale, the conversion to a list might produce different results depending on the current system locale. Moreover, if there are two cells in the header row that have the same visible text, an incremental Integer will be appended to make each column header unique.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITables.Add(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.YesNoGuess,System.String,System.String)">
      <summary>
            Creates the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified cell range.
            </summary>
      <param name="srcRange">An <see cref="T:GrapeCity.Spreadsheet.IRange" /> objbect indicates the data source.</param>
      <param name="tableHasHeaders">An <see cref="T:GrapeCity.Spreadsheet.YesNoGuess" /> constant that indicates whether the data has column labels. If the source range does not contain headers, Spread will automatically generate headers. Default value: <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.Guess" />.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the created table. <c>null</c> if the table cannot be created.</returns>
      <remarks>When the table has headers, the first row of cells will be converted to Text , if not already set to text. The conversion will be based on the visible text for the cell. This means that if there is a date value with a Date format that changes with locale, the conversion to a list might produce different results depending on the current system locale. Moreover, if there are two cells in the header row that have the same visible text, an incremental Integer will be appended to make each column header unique.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITables.Count">
      <summary>
            Gets the number of tables in this <see cref="T:GrapeCity.Spreadsheet.ITables" />.
            </summary>
      <value>An integer value represents the number of tables in this <see cref="T:GrapeCity.Spreadsheet.ITables" />.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITables.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITable" /> with the specified name.
            </summary>
      <param name="name">A string value indicates the table name.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ITable" /> value represents the specified <see cref="T:GrapeCity.Spreadsheet.ITable" />.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITables.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified index.
            </summary>
      <param name="index">An integer value indicates the table index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ITable" /> value represents the specified <see cref="T:GrapeCity.Spreadsheet.ITable" />.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableStyle">
      <summary>
            Represents a single style that can be applied to a table.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyle.BuiltIn">
      <summary>
            Gets a value indicating whether the style is a built-in style.
            </summary>
      <value>
        <c>true</c> if the style is a built-in style; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyle.Name">
      <summary>
            Gets the name of this <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> object.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the name of the table style.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyle.NameLocal">
      <summary>
            Gets or sets the name of the table style, in the language of the user.
            </summary>
      <value>The name of the table style, in the language of the user.</value>
      <remarks>If the style is a built-in style, this property returns the name of the style in the language of the current locale.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyle.ShowAsAvailablePivotTableStyle">
      <summary>
            Gets or sets a value indicating whether the table style is shown in the gallery for PivotTable styles or not.
            </summary>
      <value>
        <c>true</c> if the table style is shown in the gallery for PivotTable styles or not; otherwise, <c>false</c>.</value>
      <remarks>This property take effect on XLSX import/export only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyle.ShowAsAvailableSlicerStyle">
      <summary>
            Gets or sets a value indicating whether the table style is shown as available in the slicer styles gallery.
            </summary>
      <value>
        <c>true</c> if the table style is shown as available in the slicer styles gallery; otherwise, <c>false</c>.</value>
      <remarks>This property take effect on XLSX import/export only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyle.ShowAsAvailableTableStyle">
      <summary>
            Gets or sets a value indicating whether the table style shown as available in the table styles gallery.
            </summary>
      <value>
        <c>true</c> if the table style shown as available in the table styles gallery; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyle.TableStyleElements">
      <summary>
            Gets the table style elements.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyleElements" /> object represents all table style elements.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableStyle.Delete">
      <summary>
            Delete this <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> from the table style collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableStyle.Duplicate(System.String)">
      <summary>
            Duplicates this table style with the specified name.
            </summary>
      <param name="name">The name of new duplicated table style.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> value represents the duplicated table style.</returns>
      <remarks>If no name is specified, the <see cref="M:GrapeCity.Spreadsheet.ITableStyle.Duplicate(System.String)" /> method generates a new name automatically.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableStyleElements">
      <summary>
            Represents table style elements.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElements.Count">
      <summary>
            Gets the number of table styles in the collection.
            </summary>
      <value>An integer value represents the number of table styles.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElements.Item(GrapeCity.Spreadsheet.TableStyleElementType)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITableStyleElement" /> at the specified index.
            </summary>
      <param name="index">A <see cref="T:GrapeCity.Spreadsheet.TableStyleElementType" /> value indicates the table style element.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITableStyleElement" /> object represents the table style element.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableStyleElement">
      <summary>
            Represents a single table style element.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElement.Borders">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IBorders" /> object that represents the borders of a table style element.
            </summary>
      <value>The borders.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElement.Interior">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior of the table style element.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IInterior" /> object that represents the interior of the table style element.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElement.Font">
      <summary>
            Gets an <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the specified object.
            </summary>
      <value>The <see cref="T:GrapeCity.Spreadsheet.IFont" /> object that represents the font of the specified object.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElement.HasFormat">
      <summary>
            Gets a value indicating whether this table style element has formatting applied to the specified element.
            </summary>
      <value>
        <c>true</c> if this table style element has formatting applied; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyleElement.StripeSize">
      <summary>
            Gets or sets the strip size of this table style element.
            </summary>
      <value>An integer value represents the strip size of this table style element.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableStyleElement.Clear">
      <summary>
            Clears the formatting for this element.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ITableStyles">
      <summary>
            Represents styles that can be applied to a table.
            </summary>
      <remarks>
            Table styles replaces the existing auto format feature for formatting an entire table.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyles.Count">
      <summary>
            Gets the number of objects in the collection.
            </summary>
      <value>An integer value represents the number of objects in the collection.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.ITableStyles.Add(System.String)">
      <summary>
            Creates a new <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> object and adds it to the collection. 
            </summary>
      <param name="name">A string value indicates the name of the table style.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> object represents the created table style.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyles.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> with the specified table style name.
            </summary>
      <param name="name">A string value indicates the name of the table style.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> object represents the corresponding table style.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyles.Item(GrapeCity.Spreadsheet.BuiltInTableStyles)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> with the specified table style name.
            </summary>
      <param name="tableStyle">A <see cref="T:GrapeCity.Spreadsheet.BuiltInTableStyles" /> value indicates the name of the table style.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> object represents the corresponding table style.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyles.Item(GrapeCity.Spreadsheet.BuiltInSlicerStyles)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> with the specified slicer style name.
            </summary>
      <param name="slicerStyle">A <see cref="T:GrapeCity.Spreadsheet.BuiltInSlicerStyles" /> value indicates the name of the slicer style.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> object represents the corresponding slicer style.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.ITableStyles.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of the table style.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> object represents the corresponding table style.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TableType">
      <summary>
            Specifies the type of a table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableType.Worksheet">
      <summary>
            Specifies a standard table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableType.Xml">
      <summary>
            Specifies an XML table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableType.QueryTable">
      <summary>
            Specifies a query table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableStyleSettings.None">
      <summary>
            Indicates that there is no style applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableStyleSettings.FirstColumn">
      <summary>
            Indicates whether the first column in the table should have the style applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableStyleSettings.LastColumn">
      <summary>
            Indicates whether the last column in the table should have the style applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableStyleSettings.ColumnStripes">
      <summary>
            Indicates whether column stripe formatting is applied.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TableStyleSettings.RowStripes">
      <summary>
            Indicates whether row stripe formatting is applied.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TableColumn">
      <summary>
            Represents a table column.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowFormula">
      <summary>
            Gets or sets the totals row formula.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the totals row formula.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowFunction">
      <summary>
            Gets the totals row function.
            </summary>
      <value>A <see cref="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowFunction" /> value represents the totals row function.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowLabel">
      <summary>
            Gets the totals row label.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the totals row label.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.CellType">
      <summary>
            Gets the table column cell type.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ICellType" /> object represents the table column cell type.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.Name">
      <summary>
            Gets the name of this column.
            </summary>
      <value>A string value represents the name of this column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.Formula">
      <summary>
            Gets or sets the formula for this calculated column.
            </summary>
      <value>A string value indicates the calculated column's formula.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowStyle">
      <summary>
            Gets the name of the cell style that is applied to the totals row cell of this column.
            </summary>
      <value>A string value represents the name of the cell style that is applied to the totals row cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.HeaderRowStyle">
      <summary>
            Gets the name of the cell style that is applied to the header row cell of this column.
            </summary>
      <value>A string value represents the name of the cell style that is applied to the header row cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.DataRowStyle">
      <summary>
            Gets the name of the cell style that is applied to the data row cell of this column.
            </summary>
      <value>A string value represents the name of the cell style that is applied to the data row cell.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.TotalsRowFormatting">
      <summary>
            Gets the format to apply to the totals row cell of this column.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> represents the format to apply to the totals row cell of this column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.HeaderRowFormatting">
      <summary>
            Gets the format to apply to the header row cell of this column.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> represents the format to apply to the header row cell of this column.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableColumn.DataRowFormatting">
      <summary>
            Gets the format to apply to the data row cell of this column.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> represents the format to apply to the data row cell of this column.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TotalsCalculation">
      <summary>
            An enumeration that specifies what function is used to aggregate the data in a column before it is displayed in the totals row.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.None">
      <summary>
            No total row.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Custom">
      <summary>
            Represents the custom formula.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Average">
      <summary>
            Represents the arithmetic mean.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Count">
      <summary>
            Represents a count of the number of non-empty cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.CountNumbers">
      <summary>
            Represents the number of cells that contains numbers.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Max">
      <summary>
            Represents the largest value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Min">
      <summary>
            Represents the smallest value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.StdDev">
      <summary>
            Represents the estimated standard deviation.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Sum">
      <summary>
            Represents the arithmetic sum.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.TotalsCalculation.Var">
      <summary>
            Represents the estimated variance.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Tables">
      <summary>
            Represents a <see cref="T:GrapeCity.Spreadsheet.Tables" /> which manages all <see cref="T:GrapeCity.Spreadsheet.Table" /> tables in the specified <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Tables.Query(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Queries all tables which belong to the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <param name="intersecting">if set to <c>true</c>, all tables will returns; otherwise, returns only table which belong to the cell range completely.</param>
      <returns>A <see cref="!:Table[]" /> array represents all tables which belong to the specified cell range.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Tables.Find(System.Int32,System.Int32)">
      <summary>
            Find the table which contains the specified cell.
            </summary>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.Table" /> object which contains the specified cell.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Tables.IsAvailable(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Determines whether there is any table that intersects with the specified range.
            </summary>
      <param name="row">An integer value indicates the start row index.</param>
      <param name="column">An integer value indicates the start column index.</param>
      <param name="row2">An integer value indicates the end row index.</param>
      <param name="column2">An integer value indicates the end column index.</param>
      <returns>
        <c>true</c> if there is any table that intersects with the specified range; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Tables.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String,System.String)">
      <summary>
            Creates the <see cref="T:GrapeCity.Spreadsheet.Table" /> at the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <param name="includeHeaders">if set to <c>true</c>, the first row of the specified cell range will be used as table header.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the created table. <c>null</c> if the table cannot be created.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Tables.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Table" /> with the specified name.
            </summary>
      <param name="name">A string value indicates the table name.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the specified <see cref="T:GrapeCity.Spreadsheet.Table" />.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Tables.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.Table" /> at the specified index.
            </summary>
      <param name="index">An integer value indicates the table index.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the specified <see cref="T:GrapeCity.Spreadsheet.Table" />.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Tables.Count">
      <summary>
            Gets the number of tables in this <see cref="T:GrapeCity.Spreadsheet.Tables" />.
            </summary>
      <value>An integer value represents the number of tables in this <see cref="T:GrapeCity.Spreadsheet.Tables" />.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Tables.GrapeCity#Spreadsheet#ITables#Add(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.YesNoGuess,System.String,System.String)">
      <summary>
            Creates the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
      <param name="tableHasHeaders">An <see cref="T:GrapeCity.Spreadsheet.YesNoGuess" /> constant that indicates whether the data has column labels. If the source range does not contain headers, Spread will automatically generate headers. Default value: <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.Guess" />.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the created table. <c>null</c> if the table cannot be created.</returns>
      <remarks>When the table has headers, the first row of cells will be converted to Text , if not already set to text. The conversion will be based on the visible text for the cell. This means that if there is a date value with a Date format that changes with locale, the conversion to a list might produce different results depending on the current system locale. Moreover, if there are two cells in the header row that have the same visible text, an incremental Integer will be appended to make each column header unique.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Tables.GrapeCity#Spreadsheet#ITables#Add(GrapeCity.Spreadsheet.IRange,GrapeCity.Spreadsheet.YesNoGuess,System.String,System.String)">
      <summary>
            Creates the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified cell range.
            </summary>
      <param name="srcRange">An <see cref="T:GrapeCity.Spreadsheet.IRange" /> objbect indicates the data source.</param>
      <param name="tableHasHeaders">An <see cref="T:GrapeCity.Spreadsheet.YesNoGuess" /> constant that indicates whether the data has column labels. If the source range does not contain headers, Spread will automatically generate headers. Default value: <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.Guess" />.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the created table. <c>null</c> if the table cannot be created.</returns>
      <remarks>When the table has headers, the first row of cells will be converted to Text , if not already set to text. The conversion will be based on the visible text for the cell. This means that if there is a date value with a Date format that changes with locale, the conversion to a list might produce different results depending on the current system locale. Moreover, if there are two cells in the header row that have the same visible text, an incremental Integer will be appended to make each column header unique.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Tables.GrapeCity#Spreadsheet#ITables#Add(System.String,GrapeCity.Spreadsheet.YesNoGuess,System.String,System.String)">
      <summary>
            Creates the <see cref="T:GrapeCity.Spreadsheet.ITable" /> at the specified cell range.
            </summary>
      <param name="srcRange">An A1-style notation address indicates the data source.</param>
      <param name="tableHasHeaders">An <see cref="T:GrapeCity.Spreadsheet.YesNoGuess" /> constant that indicates whether the data has column labels. If the source range does not contain headers, Spread will automatically generate headers. Default value: <see cref="F:GrapeCity.Spreadsheet.YesNoGuess.Guess" />.</param>
      <param name="tableStyle">A string value indicates the table style. Default value is TableStyleMedium2.</param>
      <param name="name">A string value indicates the table name. If you won't provide, table name will be generated automatically.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Table" /> value represents the created table. <c>null</c> if the table cannot be created.</returns>
      <remarks>When the table has headers, the first row of cells will be converted to Text , if not already set to text. The conversion will be based on the visible text for the cell. This means that if there is a date value with a Date format that changes with locale, the conversion to a list might produce different results depending on the current system locale. Moreover, if there are two cells in the header row that have the same visible text, an incremental Integer will be appended to make each column header unique.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Tables.GrapeCity#Spreadsheet#ITables#Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITable" /> with the specified error.
            </summary>
      <returns>GrapeCity.Spreadsheet.ITable.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Tables.GrapeCity#Spreadsheet#ITables#Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITable" /> with the specified error.
            </summary>
      <returns>GrapeCity.Spreadsheet.ITable.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TableStyle">
      <summary>
            Represents a single style that can be applied to a table.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.Name">
      <summary>
            Gets the name of this <see cref="T:GrapeCity.Spreadsheet.TableStyle" />.
            </summary>
      <value>A <see cref="T:System.String" /> value represents the name of item..</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.NameLocal">
      <summary>
            Gets the name of the table style, in the language of the user.
            </summary>
      <value>The name of the table style, in the language of the user.</value>
      <remarks>If the style is a built-in style, this property returns the name of the style in the language of the current locale. Otherwise, it's same as <see cref="P:GrapeCity.Spreadsheet.TableStyle.Name" />.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.BuiltIn">
      <summary>
            Gets a value indicating whether the style is a built-in style.
            </summary>
      <value>
        <c>true</c> if the style is a built-in style; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.ShowAsAvailablePivotTableStyle">
      <summary>
            Gets or sets a value indicating whether the table style is shown in the gallery for PivotTable styles or not.
            </summary>
      <value>
        <c>true</c> if the table style is shown in the gallery for PivotTable styles or not; otherwise, <c>false</c>.</value>
      <remarks>This property take effect on XLSX import/export only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.ShowAsAvailableSlicerStyle">
      <summary>
            Gets or sets a value indicating whether the table style is shown as available in the slicer styles gallery.
            </summary>
      <value>
        <c>true</c> if the table style is shown as available in the slicer styles gallery; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.ShowAsAvailableTableStyle">
      <summary>
            Gets or sets a value indicating whether the table style shown as available in the table styles gallery.
            </summary>
      <value>
        <c>true</c> if the table style shown as available in the table styles gallery; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.ShowAsAvailableTimelineStyle">
      <summary>
            Gets or sets a value indicating whether the table style is shown as available in the time-line styles gallery.
            </summary>
      <value>
        <c>true</c> if the table style is shown as available in the time-line styles gallery; otherwise, <c>false</c>.</value>
      <remarks>This property take effect on XLSX import/export only.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.Equals(GrapeCity.Spreadsheet.TableStyle)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.Delete">
      <summary>
            Delete this <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> from the table style collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.GrapeCity#Spreadsheet#ITableStyle#Delete">
      <summary>
            Delete this <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> from the table style collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.Duplicate(System.String)">
      <summary>
            Duplicates this table style with the specified name.
            </summary>
      <param name="name">The name of new duplicated table style.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.TableStyle" /> value represents the duplicated table style.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.Clone(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Clones the table style in the specified <see cref="T:GrapeCity.Spreadsheet.Workbook" />. The cloned table style will be already added to the table style collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyle.GrapeCity#Spreadsheet#ITableStyle#Duplicate(System.String)">
      <summary>
            Duplicates this table style with the specified name.
            </summary>
      <param name="name">The name of new duplicated table style.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITableStyle" /> value represents the duplicated table style.</returns>
      <remarks>If no name is specified, the <see cref="M:GrapeCity.Spreadsheet.TableStyle.Duplicate(System.String)" /> method generates a new name automatically.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.Item(GrapeCity.Spreadsheet.TableStyleElementType)">
      <summary>
            Gets or sets the <see cref="T:GrapeCity.Spreadsheet.TableStyleElement" /> with the specified table style element type.
            </summary>
      <param name="type">A <see cref="T:GrapeCity.Spreadsheet.TableStyleElementType" /> value indicates the table style element type.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.TableStyleElement" /> represents the specified table style element.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.GrapeCity#Spreadsheet#ITableStyle#TableStyleElements">
      <summary>
            Gets the table style elements.
            </summary>
      <value>An <see cref="T:GrapeCity.Spreadsheet.ITableStyleElements" /> object represents all table style elements.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.GrapeCity#Spreadsheet#ITableStyleElements#Count">
      <summary>
            Gets the number of table styles in the collection.
            </summary>
      <value>An integer value represents the number of table styles.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyle.GrapeCity#Spreadsheet#ITableStyleElements#Item(GrapeCity.Spreadsheet.TableStyleElementType)">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.ITableStyleElement" /> at the specified index.
            </summary>
      <param name="index">A <see cref="T:GrapeCity.Spreadsheet.TableStyleElementType" /> value indicates the table style element.</param>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.ITableStyleElement" /> object represents the table style element.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TableStyleElement">
      <summary>
            Represents a single table style element.
            </summary>
      <remarks>
            Table styles define formatting for one or all of the elements of a table, PivotTable, or slicer.
            Each table style element in a table can have formatting specified in a table style applied to the element.
            </remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyleElement.StripeSize">
      <summary>
            Gets or sets the strip size of this table style element.
            </summary>
      <value>An integer value represents the strip size of this table style element.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.TableStyleElement.Formatting">
      <summary>
            Gets the formatting of this table style element.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.DifferentialFormat" /> object represents the formatting of this table style element.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyleElement.Clear">
      <summary>
            Clears the formatting for this element.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyleElement.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyleElement.Equals(GrapeCity.Spreadsheet.TableStyleElement)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.TableStyleElement.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.TableStyleElementType">
      <summary>
            Represents the table style element's type.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BuiltInTableStyles">
      <summary>
            Represents all built-in table styles.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight1">
      <summary>
            Table Style Light 1
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight2">
      <summary>
            Table Style Light 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight3">
      <summary>
            Table Style Light 3
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight4">
      <summary>
            Table Style Light 4
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight5">
      <summary>
            Table Style Light 5
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight6">
      <summary>
            Table Style Light 6
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight7">
      <summary>
            Table Style Light 7
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight8">
      <summary>
            Table Style Light 8
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight9">
      <summary>
            Table Style Light 9
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight10">
      <summary>
            Table Style Light 10
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight11">
      <summary>
            Table Style Light 11
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight12">
      <summary>
            Table Style Light 12
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight13">
      <summary>
            Table Style Light 13
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight14">
      <summary>
            Table Style Light 14
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight15">
      <summary>
            Table Style Light 15
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight16">
      <summary>
            Table Style Light 16
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight17">
      <summary>
            Table Style Light 17
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight18">
      <summary>
            Table Style Light 18
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight19">
      <summary>
            Table Style Light 19
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight20">
      <summary>
            Table Style Light 20
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleLight21">
      <summary>
            Table Style Light 21
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium1">
      <summary>
            Table Style Medium 1
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium2">
      <summary>
            Table Style Medium 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium3">
      <summary>
            Table Style Medium 3
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium4">
      <summary>
            Table Style Medium 4
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium5">
      <summary>
            Table Style Medium 5
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium6">
      <summary>
            Table Style Medium 6
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium7">
      <summary>
            Table Style Medium 7
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium8">
      <summary>
            Table Style Medium 8
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium9">
      <summary>
            Table Style Medium 9
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium10">
      <summary>
            Table Style Medium 10
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium11">
      <summary>
            Table Style Medium 11
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium12">
      <summary>
            Table Style Medium 12
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium13">
      <summary>
            Table Style Medium 13
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium14">
      <summary>
            Table Style Medium 14
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium15">
      <summary>
            Table Style Medium 15
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium16">
      <summary>
            Table Style Medium 16
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium17">
      <summary>
            Table Style Medium 17
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium18">
      <summary>
            Table Style Medium 18
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium19">
      <summary>
            Table Style Medium 19
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium20">
      <summary>
            Table Style Medium 20
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium21">
      <summary>
            Table Style Medium 21
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium22">
      <summary>
            Table Style Medium 22
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium23">
      <summary>
            Table Style Medium 23
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium24">
      <summary>
            Table Style Medium 24
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium25">
      <summary>
            Table Style Medium 25
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium26">
      <summary>
            Table Style Medium 26
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium27">
      <summary>
            Table Style Medium 27
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleMedium28">
      <summary>
            Table Style Medium 28
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark1">
      <summary>
            Table Style Dark 1
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark2">
      <summary>
            Table Style Dark 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark3">
      <summary>
            Table Style Dark 3
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark4">
      <summary>
            Table Style Dark 4
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark5">
      <summary>
            Table Style Dark 5
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark6">
      <summary>
            Table Style Dark 6
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark7">
      <summary>
            Table Style Dark 7
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark8">
      <summary>
            Table Style Dark 8
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark9">
      <summary>
            Table Style Dark 9
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark10">
      <summary>
            Table Style Dark 10
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInTableStyles.TableStyleDark11">
      <summary>
            Table Style Dark 11
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.BuiltInSlicerStyles">
      <summary>
            Represents all built-in slicer styles.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleLight1">
      <summary>
            Slicer Style Light 1
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleLight2">
      <summary>
            Slicer Style Light 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleLight3">
      <summary>
            Slicer Style Light 3
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleLight4">
      <summary>
            Slicer Style Light 4
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleLight5">
      <summary>
            Slicer Style Light 5
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleLight6">
      <summary>
            Slicer Style Light 6
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleOther1">
      <summary>
            Slicer Style Other 1
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleOther2">
      <summary>
            Slicer Style Other 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleDark1">
      <summary>
            Slicer Style Dark 1
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleDark2">
      <summary>
            Slicer Style Dark 2
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleDark3">
      <summary>
            Slicer Style Dark 3
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleDark4">
      <summary>
            Slicer Style Dark 4
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleDark5">
      <summary>
            Slicer Style Dark 5
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.BuiltInSlicerStyles.SlicerStyleDark6">
      <summary>
            Slicer Style Dark 6
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.BorderLayoutEngine">
      <summary>
            Represents the helper for layouting cell border.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.BorderLayoutEngine.CalcNormalLayout(GrapeCity.Spreadsheet.BordersIndex,GrapeCity.Spreadsheet.BorderLine,GrapeCity.Spreadsheet.BorderLine,GrapeCity.Spreadsheet.BorderLine,GrapeCity.Spreadsheet.BorderLine,GrapeCity.Spreadsheet.BorderLine,GrapeCity.Spreadsheet.BorderLine,GrapeCity.Spreadsheet.BorderLine,System.Double@,System.Double@,System.Double@,System.Double@)">
      <summary>
            Calculates the layout of a normal LineItem object.
            </summary>
      <param name="lineItem">The specified LineItem object.</param>
      <param name="hOffset">The horizontal offset of the LineItem object.</param>
      <param name="vOffset">The vertical offset of the LineItem object.</param>
      <param name="direction">The direction of the LineItem object.</param>
      <param name="x1">The x1.</param>
      <param name="x2">The x2.</param>
      <param name="y1">The y1.</param>
      <param name="y2">The y2.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.BorderLayoutEngine.GetBorderLayout(GrapeCity.Drawing.Rect,GrapeCity.Drawing.Rect,GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Object)">
      <summary>
            Get the  layout of the border at the specify cell of worksheet.
            </summary>
      <param name="rectangle">The cell rectangle bound.</param>
      <param name="worksheet">A value indicate the worksheet. </param>
      <param name="row">An integer value indicate the row index.</param>
      <param name="column">An integer value indicate the column index.</param>
      <param name="bordersIndex">A value indicate the borders index.</param>
      <param name="borderLine">The borderline of the border.</param>
      <param name="xData">A double array contains the adjust location-X of main border</param>
      <param name="yData">A double array contains the adjust location-Y of main border.</param>
      <param name="clipOffsetXData">A double array contains the adjust clipped location-X of main border.</param>
      <param name="clipOffsetYData">A double array contains the adjust clipped location-Y of main border.</param>
      <param name="strokeDashOffsets">A double array contains the corresponding dash offsets if the border line style is dash style </param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.BorderLineData">
      <summary>
            Represents data for the border line.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.BorderLineData.FarDash">
      <summary>
            Gets dash information of the far line.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.BorderLineData.MiddleDash">
      <summary>
            Gets dash information of the middle line.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.BorderLineData.NearDash">
      <summary>
            Gets dash information of the near line.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.BorderLineData.StrokeDashOffset">
      <summary>
            Gets the stroke dash offset in the border line data.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.BorderLineData.DrawingThickness">
      <summary>
            Gets the border line count. 
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.Clipboard">
      <summary>
            Contains PInvoke signature of Clipboard APIs
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.Clipboard.CF_UNICODETEXT">
      <summary>
            Unicode text format. Each line ends with a carriage return/linefeed (CR-LF) combination. A null character signals the end of the data.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.Clipboard.IsAvailable(System.Int32)">
      <summary>
            Gets a boolean value indicates whether the specified format is available in clipboard.
            </summary>
      <param name="format">An integer value indicates the data format.</param>
      <returns>
        <c>true</c> if the specified format is available in clipboard; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.Clipboard.IsAvailable(System.String)">
      <summary>
            Gets a boolean value indicates whether the specified format is available in clipboard.
            </summary>
      <param name="format">A string value indicates the data format.</param>
      <returns>
        <c>true</c> if the specified format is available in clipboard; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.Clipboard.CloseClipboard">
      <summary>
            Closes the clipboard.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.Clipboard.OpenClipboard(System.IntPtr)">
      <summary>
            Opens the clipboard for examination and prevents other applications from modifying the clipboard content.
            </summary>
      <param name="hWndNewOwner"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.Clipboard.GetClipboardFormatName(System.UInt32,System.Text.StringBuilder,System.Int32)">
      <summary>
            Retrieves from the clipboard the name of the specified registered format.
            </summary>
      <param name="format"></param>
      <param name="lpszFormatName"></param>
      <param name="cchMaxCount"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.Clipboard.EnumClipboardFormats(System.UInt32)">
      <summary>
            Enumerates the data formats currently available on the clipboard.
            </summary>
      <param name="format"></param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.Clipboard.Formats">
      <summary>
            Provides predefined Clipboard format names
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.IntelliSenseItems">
      <summary>
            Represents a collection of items in intelli-sense window.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.IntelliSenseItems.IsFunctionArgumentOptions">
      <summary>
            Determines if the current IntelliSense is for function argument's options.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Create(GrapeCity.Spreadsheet.IWorksheet,System.Object,System.String,GrapeCity.Spreadsheet.UI.IntelliSenseItems,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Spreadsheet.UI.IntelliSenseItems" /> object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Create(GrapeCity.Spreadsheet.ITable,System.String,GrapeCity.Spreadsheet.UI.IntelliSenseItems)">
      <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Spreadsheet.UI.IntelliSenseItems" /> object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Prefix">
      <summary>
            Gets the prefix text of the intellisense list.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Item(System.Int32)">
      <summary>
            Gets the item at the specified index.
            </summary>
      <param name="index">An integer value indicates the index of item.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Entry" /> at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Count">
      <summary>
            Gets the total numbers of intelli-sense items.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.IntelliSenseItems.IsReadOnly">
      <summary>
            Gets a value indicating whether the <see cref="T:GrapeCity.Spreadsheet.UI.IntelliSenseItems" /> is read-only.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.IntelliSenseItems.ItemType">
      <summary>
            Represents the type of the intelli-sense item.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.IntelliSenseItems.ItemType.Invalid">
      <summary>
            Represents an invalid item.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.IntelliSenseItems.ItemType.Function">
      <summary>
            Represents a function.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.IntelliSenseItems.ItemType.FunctionArgument">
      <summary>
            Represents a function argument.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.IntelliSenseItems.ItemType.Table">
      <summary>
            Represents a table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.IntelliSenseItems.ItemType.DefinedName">
      <summary>
            Represents a defined name.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.IntelliSenseItems.ItemType.RichValue">
      <summary>
            Represents a rich value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.IntelliSenseItems.ItemType.FieldName">
      <summary>
            Represents a field name.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.IntelliSenseItems.ItemType.TableColumn">
      <summary>
            Represents a table column.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.IntelliSenseItems.ItemType.TableArea">
      <summary>
            Represents a table area.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Entry">
      <summary>
            Represents an item in intelli-sense window.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Entry.Invalid">
      <summary>
            Represents an invalid <see cref="T:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Entry" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Entry.Type">
      <summary>
            Gets the type of the entry.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Entry.Name">
      <summary>
            Gets the name of the entry.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Entry.Worksheet">
      <summary>
            Gets the associated worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Entry.Value">
      <summary>
            Gets the associated value.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Entry.Description">
      <summary>
            Gets the associated description.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.IntelliSenseItems.Entry.ToString">
      <summary>
            Returns the name of this instance.
            </summary>
      <returns>The name of this instance.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.IntelliSenseItems.GetFunctionArgumentIntelliSense(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.CalcEngine.Function,System.Int32)">
      <summary>
            Gets the IntelliSense content for the specified function.
            </summary>
      <param name="workbook">The workbook contains target function.</param>
      <param name="function">The function to get IntelliSense content.</param>
      <param name="argIndex">The index of current argument, which is under the caret.</param>
      <param name="argCount">The total number of current arguments.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.IntelliSenseItems.GetFunctionIntelliSense(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.CalcEngine.Function,System.Int32,System.Int32,GrapeCity.Spreadsheet.Font)">
      <summary>
            Gets the IntelliSense content for the specified function.
            </summary>
      <param name="workbook">The workbook contains target function.</param>
      <param name="function">The function to get IntelliSense content.</param>
      <param name="argIndex">The index of current argument, which is under the caret.</param>
      <param name="argCount">The total number of current arguments.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.IntelliSenseItems.IsLambdaDefinedName(GrapeCity.Spreadsheet.IName)">
      <summary>
            Determines if the defined name is a lambda expression.
            </summary>
      <param name="definedName"></param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.FunctionIntelliSense">
      <summary>
            Represents IntelliSense information of a function.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.FunctionIntelliSense.HT_FUNCTION">
      <summary>
            Indicates that the hit test is in function name.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.FunctionIntelliSense.HT_TRANSPARENT">
      <summary>
            Indicates that there is no hit test.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.FunctionIntelliSense.SelectedIndex">
      <summary>
            Gets the selected item. 
            </summary>
      <remarks>-1 if the item is function name. A non-negative value if the item is argument; otherwise, returns -2.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.FunctionIntelliSense.Text">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.RichText" /> object indicates the function's syntax.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.FunctionIntelliSense.HitTest(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>
            Gets the information at the position in a function's syntax.
            </summary>
      <param name="overload">The function overload order.</param>
      <param name="index">The position in the function's syntax.</param>
      <param name="start">The start position of found item.</param>
      <param name="end">The end position of found item.</param>
      <returns>-1 if the item is function name. A non-negative value if the item is argument; otherwise, returns -2.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.RichTextLayout">
      <summary>
            Represents layout data for painting <see cref="T:GrapeCity.Spreadsheet.RichText" /> in a rectangle.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.RichTextLayout.Text">
      <summary>
            Gets the rich text.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.RichTextLayout.Size">
      <summary>
            Gets the displayed size of rich text.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.RichTextLayout.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.RichTextLayout.HitTestInfo.HitTest">
      <summary>
            Gets a boolean value indicating whether hit test is in the text.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.RichTextLayout.HitTestInfo.Index">
      <summary>
            Gets the start position of hit block.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.UIHelper">
      <summary>
            Represents the helper for UI control.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.UIHelper.UriSchemeSpreadsheet">
      <summary>
            Specifies that the URI access cell(s) in the spreadsheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.ParseInput(GrapeCity.Spreadsheet.IWorksheet,System.String,System.Int32,System.Int32,GrapeCity.CalcEngine.IPrimitiveValue@,GrapeCity.CalcEngine.Expression@,System.Int32@,GrapeCity.Spreadsheet.UI.ParseInputMode)">
      <summary>
            Parsers the input value which accepts both of primitive value and formula.
            </summary>
      <param name="worksheet">The <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object which is using formula.</param>
      <param name="value">A string value indicates the input value.</param>
      <param name="contextRow">An integer value indicates the context row index.</param>
      <param name="contextColumn">An integer value indicates the context column index.</param>
      <param name="primitiveValue">The <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object which stores primitive value.</param>
      <param name="expression">The <see cref="T:GrapeCity.CalcEngine.Expression" /> which stores inputted formula.</param>
      <param name="builtInNumFmt">The number format which is parsed from inputted value.</param>
      <param name="mode">A <see cref="T:GrapeCity.Spreadsheet.UI.ParseInputMode" /> value indicates how the text will be parsed.</param>
      <returns>
        <c>true</c> if the formula can be parsed successful; otherwise, <c>false</c>.</returns>
      <remarks>This function doesn't accepts empty formula. It must be checked by the caller.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.IsInputtedFormula(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            Gets a boolean value indicating whether the specifed text is to input a formula.
            </summary>
      <param name="worksheet">The <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object which is using formula.</param>
      <param name="row">An integer value indicates the context row index.</param>
      <param name="column">An integer value indicates the context column index.</param>
      <param name="text">The inputted text.</param>
      <param name="highlightSyntax">
        <c>true</c> if the character position need to be kept for highlighting syntax.</param>
      <returns>
        <c>true</c> if the inputted text represents a formula; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.GetAutoFillValue(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.Reference,GrapeCity.Spreadsheet.AutoFillType@,GrapeCity.Spreadsheet.NumberFormat@)">
      <summary>
            Get the autoFill value.
            </summary>
      <param name="worksheet">The <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> object which is using autofill.</param>
      <param name="sourceRange">The selected cell range to create fill.</param>
      <param name="targetRange">The target cell range addres.s</param>
      <param name="fillType">Specifies the fill type.</param>
      <param name="numberFormat">The number format of auto fill cell </param>
      <returns>The value of autofill cell</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.IsShownInCardView(System.Object)">
      <summary>
            Gets a boolean value indicating whether the card view display to display sub-properties of cell value.
            </summary>
      <param name="cellValue">The cell value.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.ParseReference(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            Parses the text that reprsents a cell range address.
            </summary>
      <param name="worksheet">The current worksheet.</param>
      <param name="reference">The cell range address.</param>
      <param name="isA1Reference">A boolean value indicating whether the current reference style is A1.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.WorksheetReference" /> value represents the cell range address.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.IsFieldNameEncodeRequired(System.String)">
      <summary>
            Gets a boolean value indicating whether the field name must be covered with bracket.
            </summary>
      <param name="fieldName">The field name.</param>
      <returns>
        <c>true</c> if the field name must be covered with bracket; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.IsShapePointsRemovable(GrapeCity.Spreadsheet.Drawing.IShape,GrapeCity.Spreadsheet.API.Drawing.FreeFormNode)">
      <summary>
            Gets a boolean value indicating whether the editing node of shape can be removed.
            </summary>
      <param name="shape">The shape.</param>
      <param name="node">The node that will be processed.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.GetAddress(GrapeCity.Spreadsheet.WorksheetReference,System.Boolean,System.Boolean)">
      <summary>
            Gets the address of a worksheet place.
            </summary>
      <param name="place">The worksheet place.</param>
      <param name="includeWorkbook">
        <c>true</c> if workbook should be included; otherwise, <c>false</c>.</param>
      <param name="relative">
        <c>true</c> if the reference is relative; otherwise, <c>false</c>.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.GetWorksheetPlace(System.String,GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Boolean,System.Nullable{System.Boolean})">
      <summary>
            Gets the worksheet reference of the specified address.
            </summary>
      <param name="address">A string value indicates the worksheet place.</param>
      <param name="worksheet">The context worksheet.</param>
      <param name="row">An integer value indicates the context row index.</param>
      <param name="column">An integer value indicates the context column index.</param>
      <param name="navigate">
        <c>true</c> if the function validate for navigating; otherwise, <c>false</c> for accessing.</param>
      <param name="isA1Reference">A boolean value indicates the notation-reference style of the address.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.GetEditCommands(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,GrapeCity.CalcEngine.CellValue,System.Boolean,System.String,System.Boolean,System.Int32,System.Boolean,GrapeCity.Spreadsheet.Direction)">
      <summary>
            Get the commands use for editing.
            </summary>
      <param name="worksheet">the worksheet that current editing.</param>
      <param name="editingRow">the row postion that current editing.</param>
      <param name="editingColumn">the column position that current editing.</param>
      <param name="autoCreateCalcuatedColumns">A boolean value indicates the calculated columns will be created when enter formula</param>
      <param name="autoExpandTable">A boolean value indicates affected table will be expand</param>
      <param name="cellValue">editing cell value.</param>
      <param name="formula">editing formula.</param>
      <param name="isArrayFormula">A boolean value indicates is setting array formula.</param>
      <returns>Array of commands that could be used for editing</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.GetNextActiveCellPosition(GrapeCity.Spreadsheet.IWorksheet,System.Boolean,GrapeCity.Spreadsheet.Commands.Command@,GrapeCity.Spreadsheet.Direction,System.Boolean)">
      <summary>
            Get the commands that use for moving active cell.
            </summary>
      <param name="ws">The worksheet that contains moving active cell. </param>
      <param name="foward">A boolean value indicates affected moving direction from left to right or not</param>
      <returns>The command use for moving or null if it does not care about moving.</returns>
      <summary>
            Get the next suggest position for moving active cell.
            </summary>
      <param name="Worksheet">The worksheet that contains moving active cell. </param>
      <param name="foward">A boolean value indicates affected moving direction from left to right or not</param>
      <param name="command">The command can be used to move the active to the result position.</param>
      <returns> New suggest position of active cell. If it is Empty then does not care about new position</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.GetHyperlinkTarget(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.String,GrapeCity.Spreadsheet.IWorksheet@,GrapeCity.Spreadsheet.Reference[]@)">
      <summary>
            Gets the worksheet reference(s) of the specified address.
            </summary>
      <param name="worksheet">The current worksheet.</param>
      <param name="row">An integer value indicates the context row index.</param>
      <param name="column">An integer value indicates the context column index.</param>
      <param name="address">A string value indicates the worksheet place.</param>
      <param name="targetWorksheet">The target worksheet.</param>
      <param name="ranges">The target reference(s).</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.GetAddress(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,GrapeCity.CalcEngine.Expression)">
      <summary>
            Gets the hyperlink address from the specified expression
            </summary>
      <param name="expr"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.GetFractionDigits(System.Double,System.Boolean,System.Boolean@)">
      <summary>
            Gets the total number of digits after decimal point.
            </summary>
      <param name="value">The numeric value.</param>
      <param name="allowExponentialFormat">
        <c>true</c> if the exponential format is allowed; otherwise, <c>false</c>.</param>
      <param name="exponentialFormat">A boolean value indicates whether the exponential format is used. This value is used only if <paramref name="allowExponentialFormat" /> is <c>true</c>.</param>
      <returns>
        <para>-1 if the value is not a number.</para>
        <para>If <paramref name="exponentialFormat" /> is <c>true</c>, the result represents exponent value; 
            otherwise, it returns a non-negative value represents the total number of digits after decimal point.</para>
      </returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.Format(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IValue,GrapeCity.CalcEngine.ValueType,System.Boolean)">
      <summary>
            Formats a value to specify value type.
            </summary>
      <returns>A value with type is expected value type.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.Format(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IValue,GrapeCity.CalcEngine.CalcError@,System.Int32)">
      <summary>
            Formats a value by formatter and return a string.
            </summary>
      <returns>Text of a value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.GetPickupDropDownList(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32)">
      <summary>
            Gets the pickup drop down list.
            </summary>
      <param name="worksheet">The current editing worksheet.</param>
      <param name="row">The editing row.</param>
      <param name="column">The editing column.</param>
      <returns>A string array represents the pickup drop down list.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIHelper.GetPastingNameList(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.FilterOptions,System.Boolean)">
      <summary>
            Retrieve all defined name from current worksheet and workbook scope order by ascending.
            </summary>
      <param name="worksheet"></param>
      <param name="filterOption">The <see cref="T:GrapeCity.Spreadsheet.FilterOptions" /> value to filter defined names.</param>
      <param name="preferUniqueName">indicate that defined name at workbook scope same name with worksheet should be ignore.</param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.ParseInputMode">
      <summary>
            Represents how the text will be parsed to value and number format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ParseInputMode.Auto">
      <summary>
            Text, which starts with equal character, will be parsed as formula. Otherwise, it's parsed as primitive value.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ParseInputMode.Formula">
      <summary>
            Text will always be parsed as formula.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ParseInputMode.Value">
      <summary>
            Text will always be parsed as primitived value.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.UIManager">
      <summary>
            Represents an interface which indicates the UI control.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.UI.UIManager" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.UIManager.WorkbookSet">
      <summary>
            Gets the associated WorkbookSet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.ReportError(GrapeCity.Spreadsheet.ActionResult{System.Object}@)">
      <summary>
            Displays the exception.
            </summary>
      <param name="errorData">The error data.</param>
      <returns>
        <c>true</c> if the action should be stopped; otherwise, the action should be continued if it's possible.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.Awake">
      <summary>
            This function is called after the last call to <see cref="M:GrapeCity.Spreadsheet.WorkbookSet.EndUpdate" /> which cause <see cref="P:GrapeCity.Spreadsheet.UI.UIManager.WorkbookSet" /> not to be suspended.
            The <see cref="T:GrapeCity.Spreadsheet.UI.UIManager" /> is intended to refresh everything.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.OnDataChanged(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32)">
      <summary>
            Called when cell's value is changed.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> indicates the worksheet contains the changed cell.</param>
      <param name="row">An integer value indicates the row index of the cell.</param>
      <param name="column">An integer value indicates the column index of the cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.OnDataChanged(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.UI.ActionCategory)">
      <summary>
            Called when cell range's values are changed.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> indicates the worksheet contains changed cells.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.OnCircularChanged(System.Boolean)">
      <summary>
            Called when circular references state is changed.
            </summary>
      <param name="detected">
        <c>true</c> if the circular references is detected, <c>false</c> if the circular references is clear.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.OnCircularCellChanged(GrapeCity.Spreadsheet.WorksheetReference@,System.Boolean)">
      <summary>
            Called when circular references state is changed for the specified cell range.
            </summary>
      <param name="reference">The changed cell range.</param>
      <param name="included">
        <c>true</c> if the circular references is detected, <c>false</c> if the circular references is clear.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.OnRowVisibilityChanged(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32)">
      <summary>
            Row visibility is changed.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> indicates the worksheet contains changed rows.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.OnColumnVisibilityChanged(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32)">
      <summary>
            Column visibility is changed.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> indicates the worksheet contains changed columns.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.ResolveImageData(GrapeCity.Spreadsheet.IMedia,System.Int32@,System.Int32@)">
      <summary>
            Loads the image data.
            </summary>
      <param name="media">The <see cref="T:GrapeCity.Spreadsheet.IMedia" /> object contains image binary data.</param>
      <param name="width">The image width in pixels.</param>
      <param name="height">The image height in pixels.</param>
      <returns>
        <c>true</c> if the image data is loaded successful; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.ResolveImageData(System.String)">
      <summary>
            Loads the image data.
            </summary>
      <param name="media">The <see cref="T:GrapeCity.Spreadsheet.IMedia" /> object contains image binary data.</param>
      <param name="width">The image width in pixels.</param>
      <param name="height">The image height in pixels.</param>
      <returns>
        <c>true</c> if the image data is loaded successful; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.UI.UIManager.RemainedDataChangedCount">
      <summary>
            Gets the total number of the remained data changed ranges.
            </summary>
      <value>The total number of the remained data chagned ranges.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.GetRemainedDataChanged(System.Int32,GrapeCity.Spreadsheet.IWorksheet@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,GrapeCity.Spreadsheet.UI.ActionCategory@)">
      <summary>
            Gets the changed range.
            </summary>
      <param name="index">The index.</param>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> indicates the worksheet contains changed cells.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.NotifyDataChanged">
      <summary>
            Resumes all queued data changed events.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.BeforeActivateWorksheet(GrapeCity.Spreadsheet.IWorksheet)">
      <summary>
            Call before activate sheet is change.
            </summary>
      <param name="worksheet">The new activated worksheet.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.AfterActivateWorksheet(GrapeCity.Spreadsheet.IWorksheet)">
      <summary>
            Call after activate sheet is changed.
            </summary>
      <param name="worksheet">The new activated worksheet.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.BeforeVisibleWorksheet(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.SheetVisibility)">
      <summary>
            Call before sheet visibility is changed.
            </summary>
      <param name="worksheet">The new activated worksheet.</param>
      <param name="visibility">Specifies whether the worksheet is visible.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.Invalidate(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.UI.ActionCategory,System.Object)">
      <summary>
            Invalidates the specified region of the worksheet, the control need to re-paint the corresponding cell range.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.IWorksheet" /> indicates the worksheet contains cell range.</param>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <param name="category">An <see cref="T:GrapeCity.Spreadsheet.UI.ActionCategory" /> value indicates which data causes invalidating UI.</param>
      <param name="context">A context object that specifies current object that is being invalidated</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.CircleInvalid(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.CellReference[])">
      <summary>
            Paints the invalid cells.
            </summary>
      <param name="worksheet">A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> indicates the worksheet paints invalid cells</param>
      <param name="invalidCells">The invalid cells, if are null this will clear currently invalid cells</param>
      <returns>
        <c>true</c> if there is invalid circle changed; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.OnWorkbookNameChanged(GrapeCity.Spreadsheet.IWorkbook)">
      <summary>
            Called when the workbook name changed.
            </summary>
      <param name="workbook">The workbook.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.Invalidate(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Drawing.DrawingObject)">
      <summary>
            Invalidates the specified drawing object.
            </summary>
      <param name="worksheet">The worksheet which contains the drawing object.</param>
      <param name="shape">The drawing object to invalidate.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.Invalidate(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Spreadsheet.UI.ActionCategory)">
      <summary>
            Invalidates the workbook.
            </summary>
      <param name="workbook">A <see cref="T:GrapeCity.Spreadsheet.IWorkbook" /> indicates the workbook to repaint.</param>
      <param name="category">An <see cref="T:GrapeCity.Spreadsheet.UI.ActionCategory" /> value indicates which data causes invalidating UI.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.Execute(System.Object,System.Object)">
      <summary>
            Execute an UI command.
            </summary>
      <param name="sender">The sender that raise the command.</param>
      <param name="data">The contextual data.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.OnUIlessChanged">
      <summary>
            Occurs when there is changed data which doesn't affect to UI.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.OnActiveCellChanged(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32)">
      <summary>
            Occurs when the active cell of the active worksheet is changed.
            </summary>
      <param name="worksheet">The active worksheet.</param>
      <param name="row">The row index of the active cell.</param>
      <param name="column">The column index of the active cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.OnExecutedCommand(GrapeCity.Spreadsheet.Commands.CommandResult@)">
      <summary>
            Occurs when the command has been executed (excute, undo or redo).
            </summary>
      <param name="result">The command executed result.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.GetScaleDimension(GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Gets horizontal and vertical scaling value
            </summary>
    </member>
    <member name="E:GrapeCity.Spreadsheet.UI.UIManager.ShapeChanged">
      <summary>
            Occurs when the shape is changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.CanFireShapeChanged">
      <summary>
             Gets a value indicating whether the UI Manager can fire ShapeChanged event.
            </summary>
      <returns>true if the UI Manager can fire ShapeChanged event; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.UI.UIManager.OnShapeChanged(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.Drawing.ShapeEventArgs)">
      <summary>
            Occurs when the shape is changed.
            </summary>
      <param name="worksheet">The worksheet contains the shape.</param>
      <param name="e">The <see cref="T:GrapeCity.Spreadsheet.Drawing.ShapeEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.UI.ActionCategory">
      <summary>
            Represents which data causes invalidating UI.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.General">
      <summary>
            Cells should be repainted.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.DataValidation">
      <summary>
            Elements, related to data validation, should be refreshed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.ConditionalFormatting">
      <summary>
            Cells should be repainted because of conditional formatting.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.Table">
      <summary>
            Cells should be repainted because of table.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.Theme">
      <summary>
            Cells should be repainted because of changing theme.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.AutoFilter">
      <summary>
            Cells should be repainted because of auto filter.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.MergedCells">
      <summary>
            Cells should be repainted because of MergedCell
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.Layout">
      <summary>
            The layout should be re-calculated.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.TabStrip">
      <summary>
            The tabstrip should be recalculated.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.Data">
      <summary>
            Cell value is changed
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.LanguagePackage">
      <summary>
            LanguagePackage is changed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.Axis">
      <summary>
            The axis is changed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.Border">
      <summary>
            The border is changed (layout of diagonalLine should be re-calculated).
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.Selection">
      <summary>
            Selection is changed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.DrawingObject">
      <summary>
            The drawing object
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.NumberFormats">
      <summary>
            The number format is changed
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.Hyperlink">
      <summary>
            The hyperlink is changed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.ThreadedComment">
      <summary>
            The ThreadedComment is changed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.IME">
      <summary>
            The IME is changed.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.ShowActiveSheet">
      <summary>
            Active sheet need to be shown.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.FormulaBar">
      <summary>
            Formual bar need to be updated.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.View">
      <summary>
            The view need to be updated.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.Sparkline">
      <summary>
            The sparkline need to be updated.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.UI.ActionCategory.NamedStyle">
      <summary>
            The named style is changed.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Helpers.ColorHelper">
      <summary>
            Provides a set of util functions to process color.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Helpers.ColorHelper.GetAutoTextColor(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Spreadsheet.Color)">
      <summary>
            Gets the text color for a given background color.
            </summary>
      <param name="backgroundColor">The background color.</param>
      <returns>The best text color for a given background color.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Helpers.ColorHelper.GetAutoTextColor(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Core.SchemeColor)">
      <summary>
            Gets the text color for a given background color.
            </summary>
      <param name="backgroundColor">The background color.</param>
      <returns>The best text color for a given background color.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Helpers.ColorHelper.GetAutoTextColor(System.Int32)">
      <summary>
            Gets the text color for a given background color.
            </summary>
      <param name="backgroundColor">The background color.</param>
      <returns>The best text color for a given background color.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Helpers.ColorHelper.GetAutoTextColor(GrapeCity.Spreadsheet.IWorkbook,GrapeCity.Drawing.Brush)">
      <summary>
            Gets the text color for a given background brush.
            </summary>
      <param name="brush">The background brush.</param>
      <returns>The best text color for a given background brush.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ArrayHelper">
      <summary>
            The class intend not to be used directly in user code.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Utils">
      <summary>
            Internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Utils.GetScaleSize(System.Double,System.Double)">
      <summary>
            Get row/column size with zoom scale
            </summary>
      <param name="size">The row/column size</param>
      <param name="zoomFactor">The zoom factor</param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.SpreadsheetHelper">
      <summary>
            The class intend not to be used directly in user code.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SpreadsheetHelper.ContainsSlicer(GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Determines whether the specified cell range contains slicer.
            </summary>
      <returns>
        <c>true</c> if the specified worksheet contains slicer; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SpreadsheetHelper.CollectValues(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IValue,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Double)">
      <summary>
            Gets an array of numeric values from the specified <see cref="T:GrapeCity.CalcEngine.IValue" /> object.
            </summary>
      <param name="context">The evaluation context.</param>
      <param name="dataRangeValue">The <see cref="T:GrapeCity.CalcEngine.IValue" /> object indicates the source of numeric values.</param>
      <param name="emptyValue">The value is used when the cell is empty.</param>
      <param name="skipHiddenCells">A boolean value indicating whether the value hidden cells are skipped.</param>
      <param name="fillHiddenAsEmpty">Used if <paramref name="skipHiddenCells" /> is <c>true</c> to fill <paramref name="emptyValue" /> as replacement for hidden cells.</param>
      <param name="collectFirstColumn">A boolean value indicating whether the first column will be collected.</param>
      <param name="collectFirstRow">A boolean value indicating whether the first row will be collected.</param>
      <param name="defaultTextValue">The value to fill if cell's value is text.</param>
      <returns>An array of numeric values from the specified <paramref name="dataRangeValue" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SpreadsheetHelper.InterpolateValues(System.Double[])">
      <summary>
            Fills missing items with interpolated values.
            </summary>
      <param name="values">The numeric array.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SpreadsheetHelper.GenerateEtsModel(GrapeCity.Spreadsheet.WorksheetReference,GrapeCity.Spreadsheet.WorksheetReference,System.Int32,GrapeCity.CalcEngine.AggregateFunction,GrapeCity.CalcEngine.CalcError@)">
      <summary>
            Create an <see cref="!:IEstModel" /> from the specied ranges of value and timeline.
            </summary>
      <param name=""></param>
      <param name="dataCompletion"></param>
      <param name="aggregation"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SpreadsheetHelper.SplitTextPosition(System.String[])">
      <summary>
            Get the indices that text will be splited by whitespace character. when text is multiline, intersect will be using to truncate data.
            </summary>
      <param name="texts"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.SpreadsheetHelper.GetRemoveDuplicatesRange(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.Reference@,GrapeCity.Spreadsheet.Table@,System.Boolean)">
      <summary>
            Indicate that range can support Remove duplicate action.
            </summary>
      <param name="worksheet"></param>
      <param name="table"></param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.Reason">
      <summary>
            Represents the category of the result.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.Success">
      <summary>
            The action is performed successfully.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.General">
      <summary>
            Unspecifed reason.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.CompoundFile">
      <summary>
            The XLS file format is not supported.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.IncorrectPassword">
      <summary>
            The password is not correct.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.MissingPassword">
      <summary>
            The password is missing.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.InvalidFormat">
      <summary>
            The file format is not supported.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.CorruptedFile">
      <summary>
            The file structure is corrupted.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.Reason.ExistedName">
      <summary>
            There is a workbook with the same name in the workbook set.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.OpenResult">
      <summary>
            Represents the result of opening file.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.OpenResult.Failed">
      <summary>
            Represents a general error.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.OpenResult.Workbook">
      <summary>
            Gets the opened workbook.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.OpenResult.Reason">
      <summary>
            Gets the <see cref="P:GrapeCity.Spreadsheet.IO.OpenXml.OpenResult.Reason" /> value which indicates the state of the action.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions">
      <summary>
            Represents options for exporting.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.ColumnHeader">
      <summary>
            Indicates that the column header will be exported as top rows of the worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.RowHeader">
      <summary>
            Indicates that the row header will be exported as left columns of the worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.DataOnly">
      <summary>
            Indicates that only cell values are exported.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.NoFormulas">
      <summary>
            Indicates that cell formulas aren't exported.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.SaveAsFiltered">
      <summary>
            Saves the results of rows after filtering them to the Excel-compatible file.
            </summary>
      <remarks>
            This flag is available when worksheet filter isn't range filter only.
            </remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.Exchangeable">
      <summary>
            Spread data will be saved as extension of OpenXML file format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.ColumnFooter">
      <summary>
            Indicates that the column footer will be exported as bottom rows of the worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.ExternalReference">
      <summary>
            Indicates that the saved file will be used for external references to the workbook.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.PreferTextOnExport">
      <summary>
            The cell text will be exported if there is an explicit cell type.
            </summary>
      <remarks>
            This option doesn't affects to numeric, <see cref="T:System.DateTime" /> and <see cref="T:System.TimeSpan" /> values.
            </remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.IncludeAutoMergedCells">
      <summary>
            Indicates that the automatically merged cells will be exported.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.Lossless">
      <summary>
            Indicates that even state data should be kept.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ExportOptions.Default">
      <summary>
            The default export options
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext">
      <summary>
            Represents the export context.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.ContextPackagePart">
      <summary>
            Gets context package part.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.OnCalculatedBeforeSave">
      <summary>
            Notifies the calculated before save.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.CustomData">
      <summary>
            Gets or sets the custom data for the export context object.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.Add(GrapeCity.Spreadsheet.Comment)">
      <summary>
            Export a custom cell comment.
            </summary>
      <param name="comment">The cell comment.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.Add(GrapeCity.Spreadsheet.Drawing.Picture)">
      <summary>
            Export a custom picture.
            </summary>
      <param name="pic">The picture.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.Add(System.Int32,System.Int32,GrapeCity.Spreadsheet.BuiltInDataValidation)">
      <summary>
            Export a custom cell comment.
            </summary>
      <param name="comment">The cell comment.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.Options">
      <summary>
            Gets or sets the export options.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.#ctor(GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter,System.Func{System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> class.
            </summary>
      <param name="unitConverter">The unit converter which converts measurement values.</param>
      <param name="passwordRequest">The handler which provides password for password-protected workbook.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.UnitConverter">
      <summary>
            Gets the unit converter which converts measurement values.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.UnitConverter" /> object represents the unit converter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.Worksheet">
      <summary>
            Gets or sets the context worksheet.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.GetCellExporter">
      <summary>
            Gets the data converter which convert custom data to OpenXML-compatible data.
            </summary>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ICellExporter" /> value represents the data converter.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.GetDataConverter``1">
      <summary>
            Gets the data converter which convert custom data in extensible object to OpenXML-compatible data.
            </summary>
      <typeparam name="T">Represents the type of data to convert.</typeparam>
      <returns>An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.IDataConverter`1" /> value represents the data converter.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext.GetCellStyle(System.Int32)">
      <summary>
            Gets the style format from the specified 
            </summary>
      <param name="cellStyleId">An integer value indicates the cell style ID.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value represents cell's style format.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension">
      <summary>
            Represents an extension from extension list in Excel file. 
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext">
      <summary>
            Represents the import context.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.CustomData">
      <summary>
            Gets or sets the custom data for the import context object.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.CompatibleFeatures">
      <summary>
            Gets the override compatible features for importing.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.#ctor(GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter,System.Func{System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> class.
            </summary>
      <param name="unitConverter">The unit converter which converts measurement values.</param>
      <param name="passwordRequestDelegate">The password request delegate which will be called if the document is protected.</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.Options">
      <summary>
            Gets or sets an <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions" /> value indicates options for importing process.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.UnitConverter">
      <summary>
            Gets the unit converter which converts measurement values.
            </summary>
      <value>An <see cref="P:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.UnitConverter" /> object represents the unit converter.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.FunctionResolver">
      <summary>
            Gets or sets the function resolver.
            </summary>
      <value>An <see cref="T:GrapeCity.CalcEngine.IFunctionResolver" /> object represents the function resolver.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext.FinalizeImporting">
      <summary>
            Allows the caller to try to free resources and perform other cleanup operations before the importing process finished.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions">
      <summary>
            Represents options for importing process.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.Default">
      <summary>
            Indicates that default options will be used. It balances the performance of importing process and next actions.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.ColumnHeader">
      <summary>
            Indicates that the column header will be exported as top rows of the worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.RowHeader">
      <summary>
            Indicates that the row header will be exported as left columns of the worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.DataOnly">
      <summary>
            Indicates that only cell values (included formulas if <see cref="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.NoFormulas" /> is off) are imported.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.NoFormulas">
      <summary>
            Indicates that cell formulas aren't imported.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.Exchangeable">
      <summary>
            Spread data will be imported from extensions of OpenXML file format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.StopRecalculate">
      <summary>
            Indicates that recalculation after loading Excel file will be avoided. 
            </summary>
      <remarks>
        <see cref="P:GrapeCity.Spreadsheet.CalculationEngine.Calculation" /> will also be set to <see cref="F:GrapeCity.Spreadsheet.Calculation.Manual" />.
            </remarks>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.TruncateEmptyRowsAndColumns">
      <summary>
            Truncates empty rows and columns to improve performance.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.OpenXml.ImportOptions.CalculationChain">
      <summary>
            Indicates that calculation chain will be imported to optimize for calculations.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.IOpenXml`1">
      <summary>
            Represents an interface which allows custom data in extensible object can export to OpenXml format.
            </summary>
      <typeparam name="T">The type of custom data type.</typeparam>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IOpenXml`1.CanExport">
      <summary>
            Determines whether this object can be exported to OpenXml format.
            </summary>
      <returns>
        <c>true</c> if this object can be exported to OpenXml format; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IOpenXml`1.Export(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext)">
      <summary>
            Exports this object to the specified writer.
            </summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> object indicates the Xml writer.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IOpenXml`1.CanImport">
      <summary>
            Determines whether this object can import from OpenXml format.
            </summary>
      <returns>
        <c>true</c> if this object can import from OpenXml format; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IOpenXml`1.Import(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext)">
      <summary>
            Imports data of <see cref="!:T" /> from the specified reader.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <returns>A <see cref="!:T" /> object represents the imported object.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.IDataConverter`1">
      <summary>
            Represents an interface which allows custom data in extensible object can export to OpenXml format.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IDataConverter`1.CanConvert(`0@)">
      <summary>
            Determines whether this data converter can convert the specified data.
            </summary>
      <param name="data">A <see cref="!:&lt;T&gt;" /> instance indicates the data to convert.</param>
      <returns>
        <c>true</c> if this data converter can convert the specified data; otherwise, <c>false</c>.</returns>
      <remarks>Data is passed as reference to improve performance. The data convert should not change its value.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.IDataConverter`1.Convert(`0@)">
      <summary>
            Converts the specified data to OpenXML-compatible data.
            </summary>
      <param name="data">A <see cref="!:&lt;T&gt;" /> instance indicates the data to convert.</param>
      <returns>A <see cref="!:T" /> value represents the converted OpenXML-compatible data.</returns>
      <remarks>Data is passed as reference to improve performance. The data convert should not change its value.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.ICellExporter">
      <summary>
            Represents an interface which allows to customize exporting cell value.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.ICellExporter.Export(GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,System.Int32,System.Int32,System.Object,GrapeCity.CalcEngine.Expression,System.Int32,GrapeCity.CalcEngine.IPrimitiveValue)">
      <summary>
            Converts the specified value to the corresponding OpenXml data type.
            </summary>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context. </param>
      <param name="row">An integer value indicates the row index of cell.</param>
      <param name="column">An integer value indicates the column index of cell.</param>
      <param name="value">The value of cell.</param>
      <param name="expression">The expression of cell.</param>
      <param name="cellStyleId">The ID of the cell style. Use <see cref="!:Export(ExportContext, object, int, IPrimitiveValue)" /> to get the cell style.</param>
      <param name="result">A <see cref="T:GrapeCity.CalcEngine.PrimitiveValue" /> value to store the converted data.</param>
      <returns>
        <c>true</c> if the specified value can be exported to OpenXml format; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.OpenXmlHelper.ReadAttributeAsBoolean(System.Xml.XmlReader)">
      <summary>
            Reads the boolean value from <see cref="T:System.Xml.XmlReader" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.OpenXmlHelper.ParseSequenceReferences(System.String,System.Char,System.Boolean,System.Boolean)">
      <summary>
            Parses the sequence references.
            </summary>
      <param name="text">The text.</param>
      <returns></returns>
      <remarks>Safely for using by SpreadWin</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.OpenXmlHelper.WriteObject(System.Xml.XmlWriter,System.String,System.Object)">
      <summary>
            Serializes the specified object to XML text.
            </summary>
      <param name="obj">The object to serialize.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter">
      <summary>
            Represents a measurement unit converter.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter" /> class.
            </summary>
      <param name="dpi">An integer value indicates the current DPI.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PointsToPixels(System.Double)">
      <summary>
            Converts a measurement from points to pixels.
            </summary>
      <param name="point">The point value to be converted to pixels.</param>
      <returns>A integer value represents the corresponding number of pixels.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PtsToPixels(System.Double)">
      <summary>
            Converts a measurement from points to pixels.
            </summary>
      <param name="point">The point value to be converted to pixels.</param>
      <returns>A integer value represents the corresponding number of pixels.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PixelsToPoints(System.Int32)">
      <summary>
            Converts a measurement from pixels to points.
            </summary>
      <param name="pixel">The pixel value to be converted to points.</param>
      <returns>A double value represents the corresponding number of points.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PixelsToPts(System.Int32)">
      <summary>
            Converts a measurement from pixels to points.
            </summary>
      <param name="pixel">The pixel value to be converted to points.</param>
      <returns>A double value represents the corresponding number of points.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PixelsToCharacters(System.Int32)">
      <summary>
            Converts a measurement from pixels to character widths.
            </summary>
      <param name="pixel">The pixel value to be converted to character widths.</param>
      <returns>A double value represents the corresponding number of character widths.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.EmusToPixels(System.Int64)">
      <summary>
            Converts a measurement from EMUs (English Metric Unit) to pixels.
            </summary>
      <param name="emus">The EMU value to be converted to pixels.</param>
      <returns>A integer value represents the corresponding number of pixels.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.EmusToPixelsFP(System.Int64)">
      <summary>
            Converts a measurement from EMUs (English Metric Unit) to pixels.
            </summary>
      <param name="emus">The EMU value to be converted to pixels.</param>
      <returns>A integer value represents the corresponding number of pixels.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PixelsToEmus(System.Double)">
      <summary>
            Converts a measurement from pixels to EMUs (English Metric Unit).
            </summary>
      <param name="pixels">The pixel value to be converted to character widths.</param>
      <returns>A long value represents the corresponding number of EMUs.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PixelsToEmusFP(System.Double)">
      <summary>
            Converts a measurement from pixels to EMUs (English Metric Unit) with floating point.
            </summary>
      <param name="pixels">The pixel value to be converted to character widths.</param>
      <returns>A long value represents the corresponding number of EMUs.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPoints(System.Double)">
      <summary>
            Converts a measurement from inches to points (1 inch = 72 points).
            </summary>
      <param name="value">The value to be converted to points.</param>
      <returns>A double value represents the corresponding points.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.InchesToPixels(System.Double)">
      <summary>
            Converts a measurement from inches to pixels (1 inch = 96 pixels).
            </summary>
      <param name="value">The value to be converted to pixels.</param>
      <returns>A double value represents the corresponding pixels.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PointsToInches(System.Double)">
      <summary>
            Converts a measurement from points to inches (1 inch = 72 points).
            </summary>
      <param name="value">The value to be converted to inches.</param>
      <returns>A double value represents the corresponding inches.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PixelsToInches(System.Double)">
      <summary>
            Converts a measurement from pixels to inches (1 inch = 96 points).
            </summary>
      <param name="value">The value to be converted to inches.</param>
      <returns>A double value represents the corresponding inches.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPoints(System.Double)">
      <summary>
            Converts a measurement from centimeters to points (1 cm = 28.35 points)
            </summary>
      <param name="value">The value to be converted to points.</param>
      <returns>A double value represents the corresponding points.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.CentimetersToPixels(System.Double)">
      <summary>
            Converts a measurement from centimeters to pixels (1 cm = 37.8 points)
            </summary>
      <param name="value">The value to be converted to pixels.</param>
      <returns>A double value represents the corresponding pixels.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PixelsToCentimeters(System.Double)">
      <summary>
            Converts a measurement from pixels to centimeters (1 point = 1/37.8 cm)
            </summary>
      <param name="value">The value to be converted to centimeters.</param>
      <returns>A double value represents the corresponding centimeters.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.OpenXml.UnitConverter.PointsToCentimeters(System.Double)">
      <summary>
            Converts a measurement from points to centimeters (1 cm = 28.35 points)
            </summary>
      <param name="value">The value to be converted to centimeters.</param>
      <returns>A double value represents the corresponding centimeters.</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.IO.OpenXml.Writers.WorksheetWriter.WriteCol(System.Xml.XmlWriter,GrapeCity.Spreadsheet.Worksheet,System.Int32,System.Int32[],System.Int32[],GrapeCity.Spreadsheet.IntervalArray{GrapeCity.Spreadsheet.Axis.AxisData},System.Globalization.CultureInfo,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,GrapeCity.Spreadsheet.IntervalBitmap,GrapeCity.Spreadsheet.Outline,System.String[],System.Int32[],GrapeCity.Spreadsheet.IO.OpenXml.Writers.WorksheetWriter.ExportData@,GrapeCity.Spreadsheet.IntervalBitmap,System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.IO.OpenXml.Writers.WorksheetWriter.WriteMergeCellsForHeaders(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,GrapeCity.Spreadsheet.Worksheet,System.Boolean@)" -->
    <member name="T:GrapeCity.Spreadsheet.IO.FileFormat">
      <summary>
            Specifies the file format when saving the workbook.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.FileFormat.OpenXMLWorkbook">
      <summary>
            Open XML Workbook (*.xlsx)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.FileFormat.OpenXMLWorkbookMacroEnabled">
      <summary>
            Open XML Workbook Macro Enabled (*.xlsm)
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.FileFormat.CSV">
      <summary>
            Comma Separated Values
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1">
      <summary>
            Enable an object to participate in custom behavior, such as registering for events, or watching state transitions.
            </summary>
      <typeparam name="T">The type of the extensible class. </typeparam>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1.Extensions">
      <summary>
            Gets a collection of extension objects for this extensible object.
            </summary>
      <value>A <see cref="!:IExtensionCollection&lt;IExtension&lt;T&gt;&gt;" /> of extensible objects.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1.CreateExtension(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Guid)">
      <summary>
            Create an <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object from the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context data.</param>
      <param name="key">A <see cref="T:System.Guid" /> value indicates the GUID identifier of the extension.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object that indicates by the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1">
      <summary>
            Enables an object to extend another object through aggregation.
            </summary>
      <typeparam name="T">The object that participates in the custom behavior.</typeparam>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.Key">
      <summary>
            Gets the identifier of the extension.
            </summary>
      <value>A <see cref="T:System.Guid" /> value represents the extension's identifier.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.Attach(`0)">
      <summary>
            Enables an extension object to find out when it has been aggregated. Called when the extension is added to the <see cref="!:IExtensionObject&lt;T&gt;.Extensions" /> property.
            </summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.Detach(`0)">
      <summary>
            Enables an object to find out when it is no longer aggregated. Called when an extension is removed from the <see cref="!:IExtensionObject&lt;T&gt;.Extensions" /> property.
            </summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.ImportExtensionData(System.Xml.XmlReader,GrapeCity.IO.Packaging.PackagePart,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{`0},System.Guid)">
      <summary>
            Imports the extension data.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="packagePart">The package part stored in a package.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="extensibleObject">An <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1" /> object indicates the extension provider.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.IsRequiredExport(GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,System.Guid)">
      <summary>
            Gets a value indicating whether the extension requires to export its data.
            </summary>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
      <value>
        <c>true</c> if the extension requires to export its data; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1.ExportExtensionData(System.Xml.XmlWriter,GrapeCity.Spreadsheet.IO.OpenXml.ExportContext,GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject{`0},System.Guid)">
      <summary>
            Exports the extension data.
            </summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> object indicates the Xml writer.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ExportContext" /> object indicates the export context.</param>
      <param name="extensibleObject">An <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensibleObject`1" /> object indicates the extension provider.</param>
      <param name="key">A <see cref="T:System.Guid" /> value represents the extension's identifier.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensionCollection`1">
      <summary>
            A collection of the <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> objects that allow for retrieving the <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> by its type.
            </summary>
      <typeparam name="T">The type of the extension objects.</typeparam>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensionCollection`1.Add(System.Guid,GrapeCity.Spreadsheet.IO.Exchangeable.IExtension{`0})">
      <summary>
            Adds an object to the end of the <see cref="T:GrapeCity.Spreadsheet.Collection`1" />.
            </summary>
      <param name="key">The GUID key of the item.</param>
      <param name="item">The object to add to the <see cref="T:GrapeCity.Spreadsheet.Collection`1" />.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensionCollection`1.Find``1">
      <summary>
            Finds the specified extension object in the collection.
            </summary>
      <typeparam name="E">The type of extension object.</typeparam>
      <returns>The extension object that was found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensionCollection`1.Find``1(System.Guid)">
      <summary>
            Finds the specified extension object in the collection.
            </summary>
      <typeparam name="E">The type of extension object.</typeparam>
      <param name="key">The GUID key of the item.</param>
      <returns>The extension object that was found.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IO.Exchangeable.IExtensionCollection`1.FindAll``1">
      <summary>
            Finds all extension object in the collection specified by E.
            </summary>
      <typeparam name="E">The type of extension object.</typeparam>
      <returns>A collection of all extension objects in the collection that implement the specified type.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures">
      <summary>
            Represents all identifiers of built-in types.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures.CellFormatExtension">
      <summary>
            Represents the GUID identifier of the extension of cell format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures.CellDataExtension">
      <summary>
            Represents the GUID identifier of the extension of cell data.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures.NumberFormatExtension">
      <summary>
            Represents the GUID identifier of the extension of number format.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures.BorderExtension">
      <summary>
            Represents the GUID identifier of the extension of border.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.IO.Exchangeable.Signatures.SpreadDesktopExtension">
      <summary>
            Represents the GUID identifier of all general extensions from Spread desktop product.
            </summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Factory">
      <summary>
            Represents a spreadsheet factory for customizable types.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Factory" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.CreateWorkbookSet(System.Globalization.CultureInfo)">
      <summary>
            Creates the workbook set.
            </summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.</param>
      <returns>
            The new <see cref="T:GrapeCity.Spreadsheet.WorkbookSet" /> instance.
            </returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.GetWorkbookSet(System.Globalization.CultureInfo)">
      <summary>
            Gets a new instance of <see cref="T:GrapeCity.Spreadsheet.WorkbookSet" />.
            </summary>
      <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific formatting information.
            </param>
      <returns>
            The new <see cref="T:GrapeCity.Spreadsheet.WorkbookSet" /> instance.
            </returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.CreateIOWorkbook(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Create workbook used for import/export when save/open stream workbook.
            </summary>
      <param name="workbook"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.GetImportContext(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Get the import context when open stream workbook.
            </summary>
      <param name="workbook"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.GetExportContext(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Get the export context when save stream workbook.
            </summary>
      <param name="workbook"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.GetWorkbook(GrapeCity.Spreadsheet.WorkbookSet,System.Boolean)">
      <summary>
            Gets a new instance of <see cref="T:GrapeCity.Spreadsheet.Workbook" />.
            </summary>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Workbook" /> object represents the new created workbook.</returns>
      <remarks>Support for Spread.Win only</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.InitializeSettings(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Initialize <see cref="T:GrapeCity.Spreadsheet.Workbook" />'s settings with specified localization.
            </summary>
      <param name="workbook"></param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.GetWorksheet(System.String,GrapeCity.Spreadsheet.WorksheetType)">
      <summary>
            Gets a new instance of <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.
            </summary>
      <param name="worksheetName">A string value indicates the name of worksheet.</param>
      <param name="sheetType">A <see cref="T:GrapeCity.Spreadsheet.WorksheetType" /> value indicates the type of the <see cref="T:GrapeCity.Spreadsheet.Worksheet" />.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Worksheet" /> object represents the new created worksheet.</returns>
      <remarks>Support for Spread.Win only</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.GetStyles(GrapeCity.Spreadsheet.Workbook,System.Boolean)">
      <summary>
            Gets a new instance of <see cref="T:GrapeCity.Spreadsheet.Styles" />.
            </summary>
      <param name="legacyMode">
        <c>true</c> to use the composite style mode. This parameter is for Spread.Win only.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Styles" /> object represents the new created style manager.</returns>
      <remarks>Support for Spread.Win only</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.CreateGeometryDrawing(GrapeCity.Spreadsheet.Drawing.DrawingObject,System.Int32)">
      <summary>
            Gets the geometry shape drawing.
            </summary>
      <param name="drawingObject">The drawing object object.</param>
      <returns>The <see cref="T:GrapeCity.Drawing.GeometryDrawing" /> object which can be used to draw a geometry shape.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.CreateImageDrawing(System.IO.Stream,System.String,GrapeCity.Drawing.IDrawingCacheable)">
      <summary>
            Gets the image drawing.
            </summary>
      <param name="data">The binary stream data of the image.</param>
      <param name="contentType">The content type of the image binary data.</param>
      <param name="cachedDrawing">The <see cref="T:GrapeCity.Drawing.IDrawingCacheable" /> that contains shape data that <see cref="T:GrapeCity.Drawing.ImageDrawing" /> belong to.</param>
      <returns>The <see cref="T:GrapeCity.Drawing.ImageDrawing" /> object which can be used to draw an image.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.CreateImageDrawing(System.String,GrapeCity.Drawing.IDrawingCacheable)">
      <summary>
            Gets the image drawing.
            </summary>
      <param name="file">The path of the image file.</param>
      <param name="cachedDrawing">The <see cref="T:GrapeCity.Drawing.IDrawingCacheable" /> that contains shape data that <see cref="T:GrapeCity.Drawing.ImageDrawing" /> belong to.</param>
      <returns>The <see cref="T:GrapeCity.Drawing.ImageDrawing" /> object which can be used to draw an image.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.CreateImageDrawing(System.Int32,System.Int32,GrapeCity.Spreadsheet.Drawing.CopyPictureFormat,System.Boolean,GrapeCity.Drawing.IDrawingCacheable)">
      <summary>
            Gets the image drawing.
            </summary>
      <param name="width">The image width.</param>
      <param name="height">The image height.</param>
      <param name="displayFormat">The picture format.</param>
      <param name="compatible">
        <c>true</c> if the image is compatible with the screen; otherwise, <c>false</c>.</param>
      <param name="cachedDrawing">The <see cref="T:GrapeCity.Drawing.IDrawingCacheable" /> that contains shape data that <see cref="T:GrapeCity.Drawing.ImageDrawing" /> belong to.</param>
      <returns>The <see cref="T:GrapeCity.Drawing.ImageDrawing" /> object which can be used to draw an image.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.CreateEmptyImageDrawing(System.Int32,System.Int32,GrapeCity.Drawing.IDrawingCacheable)">
      <summary>
            Gets the image drawing.
            </summary>
      <param name="width">The image width.</param>
      <param name="height">The image height.</param>
      <param name="cachedDrawing">The <see cref="T:GrapeCity.Drawing.IDrawingCacheable" /> that contains shape data that <see cref="T:GrapeCity.Drawing.ImageDrawing" /> belong to.</param>
      <returns>The <see cref="T:GrapeCity.Drawing.ImageDrawing" /> object which can be used to draw an image.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.CreateImageData(System.Int32,System.Int32,System.Int32,System.IntPtr)">
      <summary>
            Creates the image data.
            </summary>
      <param name="width">The width, in pixels, of the new image.</param>
      <param name="height">The height, in pixels, of the new image.</param>
      <param name="stride">Integer that specifies the byte offset between the beginning of one scan line and the next.</param>
      <param name="scan0">Pointer to an array of bytes that contains the pixel data.</param>
      <returns>The binary stream data of the image.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.CreateWorksheetDrawing(GrapeCity.Spreadsheet.Worksheet)">
      <summary>
            Gets the worksheet drawing.
            </summary>
      <param name="worksheet"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.GetCellExporter">
      <summary>
            Gets the data converter which convert custom data to OpenXML-compatible data.
            </summary>
      <returns>An <see cref="!:ICellExporter2" /> value represents the data converter.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Factory.GetStyleExtendModiflers(System.Object,GrapeCity.Spreadsheet.API.StyleExtendDataModifier@,GrapeCity.Spreadsheet.API.NumberFormatExtendDataModifier@)">
      <summary>
            Get the modifers for extend object.
            </summary>
      <param name="exendObject">The extend object.</param>
      <param name="styleExtendDataModifier">The style extend data modifier of extend object.</param>
      <param name="numberFormatExtendDataModifier">The number format extend data modifer of exten object.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellMatrix`1">
      <summary>
            This class implements the function to store values in the locations of a sparse matrix.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.#ctor">
      <summary>
            Prevents a default instance of the <see cref="!:public&lt;T&gt;" /> class from being created.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.IsAvailable">
      <summary>
            Gets a boolean value indicating whether there is at least one item.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellMatrix`1.Item(System.Int32,System.Int32)">
      <summary>
            Gets or sets a data item for the specified cell in the SparseMatrix.
            </summary>
      <param name="row">The row must be greater than or equal to 0 and less than RowCount.</param>
      <param name="column">The column must be greater than or equal to 0 and less than ColumnCount.</param>
      <returns>The value at the specified row and column.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.Clone">
      <summary>
            Clones this instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.InsertRows(System.Int32,System.Int32)">
      <summary>
            Adds rows of cells after the specified row.
            </summary>
      <param name="row">Row index of row after which to add rows</param>
      <param name="rowCount">Number of rows to add</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.InsertColumns(System.Int32,System.Int32)">
      <summary>
            Adds columns of cells after the specified column.
            </summary>
      <param name="column">Column index of column after which to add columns</param>
      <param name="columnCount">Number of columns to add</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.RemoveRows(System.Int32,System.Int32)">
      <summary>
            Removes rows from the specified starting position.
            </summary>
      <param name="row">Row index at which to start removing rows</param>
      <param name="rowCount">Number of rows to remove</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.RemoveColumns(System.Int32,System.Int32)">
      <summary>
            Removes columns from the specified starting position.
            </summary>
      <param name="column">Column index at which to start removing columns</param>
      <param name="columnCount">Number of columns to remove</param>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellMatrix`1.ElementCount">
      <summary>
            Gets the total numbers of element(s) in the <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /></summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.Clear">
      <summary>
            Removes all items from the <see cref="T:GrapeCity.CalcEngine.SparseMatrix`1" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.IsAvailable(System.Int32,System.Int32)">
      <summary>
            Check if there is an item from the specified cell.
            </summary>
      <param name="row">Row index of the cell.</param>
      <param name="column">Column index of the cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.TryGet(System.Int32,System.Int32,`0@)">
      <summary>
            Gets the value associated with the specified cell.
            </summary>
      <param name="row">Row index of the cell.</param>
      <param name="column">Column index of the cell.</param>
      <param name="value">When this method returns, contains the value associated with the specified cell, if the cell has value; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
      <returns>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /> contains an element at the specified cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.IsAvailable(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Check if there is at least one item from the specified range.
            </summary>
      <param name="row">Row index of first row in selected range</param>
      <param name="column">Column index of first column in selected range</param>
      <param name="row2">Row index of last row in selected range</param>
      <param name="column2">Column index of last column in selected range</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Removes all of the contents from the cells in the specified range of cells.
            </summary>
      <param name="row">Row index of first row in selected range</param>
      <param name="column">Column index of first column in selected range</param>
      <param name="rowCount">Number of rows in selected range</param>
      <param name="columnCount">Number of columns in selected range</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.GetNonEmptyItems(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.CellReference[]@)">
      <summary>
            Copies a range of cells as a flatten array.
            </summary>
      <param name="row">An integer value indicates the first row.</param>
      <param name="column">An integer value indicates the first column.</param>
      <param name="row2">An integer value indicates the last row.</param>
      <param name="column2">An integer value indicates the last column.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.EnumerateNonEmptyItems(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Loops through all non-empty items in the <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" />.
            </summary>
      <param name="row">An integer value indicates the first row.</param>
      <param name="column">An integer value indicates the first column.</param>
      <param name="row2">An integer value indicates the last row.</param>
      <param name="column2">An integer value indicates the last column.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.EnumerateNonEmptyValues(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Loops through all non-empty items in the <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" />.
            </summary>
      <param name="row">An integer value indicates the first row.</param>
      <param name="column">An integer value indicates the first column.</param>
      <param name="row2">An integer value indicates the last row.</param>
      <param name="column2">An integer value indicates the last column.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.NextNonEmptyRow(System.Int32)">
      <summary>
            Searches for the next non-empty row in this <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /> object.
            </summary>
      <param name="row">An integer value indicates the row to search.</param>
      <returns>Returns the next non-empty row in this <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.PreviousNonEmptyRow(System.Int32)">
      <summary>
            Searches for the previous non-empty row in this <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /> object.
            </summary>
      <param name="row">An integer value indicates the row to search.</param>
      <returns>Returns the previous non-empty row in this <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.NextNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>
            Searches for the next non-empty column in the specified row of <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /> object.
            </summary>
      <param name="row">An integer value indicates the row to search.</param>
      <param name="column">An integer value indicates the column to search.</param>
      <returns>Returns the next non-empty column in the specified row of <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.PreviousNonEmptyColumnInRow(System.Int32,System.Int32)">
      <summary>
            Searches for the previous non-empty column in the specified row of <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /> object.
            </summary>
      <param name="row">An integer value indicates the row to search.</param>
      <param name="column">An integer value indicates the column to search.</param>
      <returns>Returns the previous non-empty column in the specified row of <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.Copy(System.Int32,System.Int32,GrapeCity.Spreadsheet.CellMatrix{`0},System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies a range of cells and pastes it into a range of cells at the specified location.
            </summary>
      <param name="fromRow">Row index from which to begin copying</param>
      <param name="fromColumn">Column index from which to begin copying</param>
      <param name="target">The target <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /> object to copy.</param>
      <param name="toRow">Row index at which to paste the cell range</param>
      <param name="toColumn">Column index at which to paste the cell range</param>
      <param name="rowCount">Number of rows to copy</param>
      <param name="columnCount">Number of columns to copy</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.Move(System.Int32,System.Int32,GrapeCity.Spreadsheet.CellMatrix{`0},System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves a range of cells and pastes it into a range of cells at the specified location.
            </summary>
      <param name="fromRow">Row index from which to begin the move</param>
      <param name="fromColumn">Column index from which to begin the move</param>
      <param name="target">The target <see cref="T:GrapeCity.Spreadsheet.CellMatrix`1" /> object to move.</param>
      <param name="toRow">Row index at which to paste the cell range</param>
      <param name="toColumn">Column index at which to paste the cell range</param>
      <param name="rowCount">Number of rows to move</param>
      <param name="columnCount">Number of columns to move</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellMatrix`1.Swap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Swaps a range of cells and pastes it with another range of cells at the specified location.
            </summary>
      <param name="fromRow">Row index from which to begin the swap.</param>
      <param name="fromColumn">Column index from which to begin the swap.</param>
      <param name="toRow">Row index at which to swap the cell range</param>
      <param name="toColumn">Column index at which to swap the cell range</param>
      <param name="rowCount">Number of rows to swap.</param>
      <param name="columnCount">Number of columns to swap.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.CellReference">
      <summary>
            Represents a reference to a position of cell.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.CellReference.Empty">
      <summary>
            Empty CellReference instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.IsEmpty">
      <summary>
            Determines whether this <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value is empty.
            </summary>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Reference" /> class.
            </summary>
      <param name="row">An integer value indicates the top row index of cell.</param>
      <param name="column">An integer value indicates the left column index of cell.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.op_Equality(GrapeCity.Spreadsheet.CellReference,GrapeCity.Spreadsheet.CellReference)">
      <summary>
            Returns whether two <see cref="T:GrapeCity.Spreadsheet.CellReference" /> are equals.
            </summary>
      <param name="cell1">The fisrt <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value to compare.</param>
      <param name="cell2">The second <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value to compare.</param>
      <returns>
        <c>true</c> if two values are equals; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.op_Inequality(GrapeCity.Spreadsheet.CellReference,GrapeCity.Spreadsheet.CellReference)">
      <summary>
            Returns whether two <see cref="T:GrapeCity.Spreadsheet.CellReference" /> are not equals.
            </summary>
      <param name="cell1">The fisrt <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value to compare.</param>
      <param name="cell2">The second <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value to compare.</param>
      <returns>
        <c>true</c> if two values are not equals; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.op_Implicit(GrapeCity.Spreadsheet.CellReference)~GrapeCity.CalcEngine.CellReference">
      <summary>
            Performs an implicit conversion from <see cref="T:GrapeCity.Spreadsheet.CellReference" /> to <see cref="T:GrapeCity.CalcEngine.CellReference" />.
            </summary>
      <param name="reference">The reference.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.op_Implicit(GrapeCity.CalcEngine.CellReference)~GrapeCity.Spreadsheet.CellReference">
      <summary>
            Performs an implicit conversion from <see cref="T:GrapeCity.CalcEngine.CellReference" /> to <see cref="T:GrapeCity.Spreadsheet.CellReference" />.
            </summary>
      <param name="reference">The reference.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellReference.Row">
      <summary>
            Gets the row index.
            </summary>
      <value>An integer value represents the row index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.CellReference.Column">
      <summary>
            Gets the column index.
            </summary>
      <value>An integer value represents the column index.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.CompareTo(GrapeCity.Spreadsheet.CellReference)">
      <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
      <param name="other">An object to compare with this instance.</param>
      <returns>A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <paramref name="other" /> in the sort order.  Zero This instance occurs in the same position in the sort order as <paramref name="other" />. Greater than zero This instance follows <paramref name="other" /> in the sort order.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.Equals(GrapeCity.Spreadsheet.CellReference)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this reference.
            </summary>
      <returns>A <see cref="T:System.String" /> that represents this reference.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.CellReference.Offset(System.Int32,System.Int32)">
      <summary>
            Translates this <seealso cref="T:GrapeCity.Spreadsheet.CellReference" /> by the specified amount.
            </summary>
      <param name="translateRows">The amount to offset the y-coordinate.</param>
      <param name="translateColumns">&gt;The amount to offset the x-coordinate.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Collection`1">
      <summary>
              Represents a strongly typed list of objects that can be accessed by index.
            </summary>
      <typeparam name="T">The type of elements in the list.</typeparam>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Collection`1.Item(System.Int32)">
      <summary>
              Gets or sets the element at the specified index.
            </summary>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Collection`1.ToArray(System.Boolean)">
      <summary>
            Copies the elements of the <see cref="T:GrapeCity.Spreadsheet.Collection`1" /> to a new array.
            </summary>
      <returns>An array containing copies of the elements of the <see cref="T:GrapeCity.Spreadsheet.Collection`1" />.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Collection`1.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.Collection`1" />.
            </summary>
      <value>The number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.Collection`1" />.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Collection`1.IndexOf(`0)">
      <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IndexBitmap">
      <summary>
            Represents the roaring bitmap data structure.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IndexBitmap.DataLength">
      <summary>
            Gets the length of the stored data.
            </summary>
      <value>The length of the stored data.</value>
      <remarks>This property is for optimized purpose only. It isn't the length of this <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.IsEmpty">
      <summary>
            Gets a value indicating whether the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> is empty.
            </summary>
      <returns>
        <c>true</c> if the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.IsEmpty(System.Int32,System.Int32)">
      <summary>
            Determines whether the specified range is empty.
            </summary>
      <param name="index">An integer value indicates the start index of the specified range.</param>
      <param name="index2">An integer value indicates the end index of the specified range.</param>
      <returns>
        <c>true</c> if the specified index is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Get(System.Int32)">
      <summary>
            Gets the value of the bit at a specific position in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
      <param name="index">The zero-based index of the value to get.</param>
      <returns>The value of the bit at position <paramref name="index" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Set(System.Int32)">
      <summary>
            Sets the bit at a specific position in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
      <param name="index">The zero-based index of the bit to set.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Clear">
      <summary>
            Clears all bits in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Clear(System.Int32)">
      <summary>
            Clears the bit at a specific position in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
      <param name="index">The zero-based index of the bit to set.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Clear(System.Int32,System.Int32)">
      <summary>
            Clears the bit at a specific range in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
      <param name="index">An integer value indicates the start index of the specified range.</param>
      <param name="index2">An integer value indicates the end index of the specified range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Copy(GrapeCity.Spreadsheet.IndexBitmap,System.Int32,GrapeCity.Spreadsheet.IndexBitmap,System.Int32,System.Int32)">
      <summary>
            Copies a range of elements from an IndexBitmap starting at the specified source index and
            pastes them to another IndexBitmap starting at the specified target index.
            The length and the indexes are specified as 32-bit integers.
            </summary>
      <param name="source">The IndexBitmap that contains the data to copy.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which copying begins.</param>
      <param name="target">The IndexBitmap that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to copy.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.IndexBitmap.ContainsUnset(System.Int32,System.Int32)" -->
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.CopyTo(GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Copies current indexes bitmap to the specified <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
      <param name="bitmap">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object indicates the bitmap is copied to.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.CopyTo(GrapeCity.Spreadsheet.IndexBitmap,System.Int32,System.Int32)">
      <summary>
            Copies current indexes bitmap to the specified <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
      <param name="bitmap">An <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object indicates the bitmap is copied to.</param>
      <param name="index">An integer value indicates the start index of the specified range.</param>
      <param name="index2">An integer value indicates the end index of the specified range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Fill(System.Int32,System.Int32)">
      <summary>
            Sets the bits at a specific range in the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
      <param name="index">An integer value indicates the start index of the specified range.</param>
      <param name="index2">An integer value indicates the end index of the specified range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Insert(System.Int32,System.Int32)">
      <summary>
            Insert an empty range of elements into the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
      <param name="index">The zero-based starting index of the range of elements to insert.</param>
      <param name="length">The number of elements to insert.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Remove(System.Int32,System.Int32)">
      <summary>
            Removes a range of elements from the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
      <param name="index">The zero-based starting index of the range of elements to remove.</param>
      <param name="length">The number of elements to remove.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Move(GrapeCity.Spreadsheet.IndexBitmap,System.Int32,GrapeCity.Spreadsheet.IndexBitmap,System.Int32,System.Int32)">
      <summary>
            Moves a range of elements from an IndexBitmap starting at the specified source index and
            pastes them to another IndexBitmap starting at the specified target index.
            Elements of old range will be clear.
            The length and the indexes are specified as 32-bit integers.
            </summary>
      <param name="sourceBitmap">The IndexBitmap that contains the data to move.</param>
      <param name="fromIndex">A 32-bit integer that represents the index in the source at which moving begins.</param>
      <param name="targetBitmap">The IndexBitmap that receives the data.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Swap(GrapeCity.Spreadsheet.IndexBitmap,System.Int32,GrapeCity.Spreadsheet.IndexBitmap,System.Int32,System.Int32)">
      <summary>
            Swaps a range of elements from an IndexBitmap starting at the specified source index with
            another IndexBitmap starting at the specified target index.
            The length and the indexes are specified as 32-bit integers.
            </summary>
      <param name="sourceBitmap">The IndexBitmap that contains the data to swap.</param>
      <param name="fromIndex">A 32-bit integer that represents the index in the source at which swapping begins.</param>
      <param name="targetBitmap">The IndexBitmap that receives the data.</param>
      <param name="count">A 32-bit integer that represents the number of elements to swap.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Clone">
      <summary>
            Creates a shallow copy of the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
      <returns>A shallow copy of the <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.op_BitwiseOr(GrapeCity.Spreadsheet.IndexBitmap,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Performs the bitwise OR operation between two <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> objects. 
            </summary>
      <param name="bitmap">The first bitmap with which to perform the bitwise OR operation.</param>
      <param name="otherBitmap">The second bitmap with which to perform the bitwise OR operation.</param>
      <returns>An array containing the result of the bitwise OR operation, which is a reference to the current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.op_BitwiseAnd(GrapeCity.Spreadsheet.IndexBitmap,GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Performs the bitwise AND operation between two <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> objects. 
            </summary>
      <param name="bitmap">The first bitmap with which to perform the bitwise AND operation.</param>
      <param name="otherBitmap">The second bitmap with which to perform the bitwise AND operation.</param>
      <returns>An array containing the result of the bitwise AND operation, which is a reference to the current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.IsFilled(System.Int32,System.Int32)">
      <summary>
            Determines whether there the specified range is all set.
            </summary>
      <returns>
        <c>true</c> if all indexes are set; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Or(GrapeCity.Spreadsheet.IndexBitmap,System.Int32,System.Int32)">
      <summary>
            Performs the bitwise OR operation between the elements of the current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object
            and the corresponding elements in the specified array.
            </summary>
      <param name="otherBitmap">The bitmap with which to perform the bitwise OR operation.</param>
      <param name="index">An integer value indicates the start index of the specified range.</param>
      <param name="index2">An integer value indicates the end index of the specified range.</param>
      <remarks>The current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object will be modified to store the result of the bitwise OR operation.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.Or(GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Performs the bitwise OR operation between the elements of the current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object
            and the corresponding elements in the specified array.
            </summary>
      <param name="otherBitmap">The bitmap with which to perform the bitwise OR operation.</param>
      <remarks>The current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object will be modified to store the result of the bitwise OR operation.</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IndexBitmap.And(GrapeCity.Spreadsheet.IndexBitmap)">
      <summary>
            Performs the bitwise AND operation between the elements of the current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object
            and the corresponding elements in the specified array.
            </summary>
      <param name="otherBitmap">The bitmap with which to perform the bitwise AND operation.</param>
      <remarks>The current <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> object will be modified to store the result of the bitwise AND operation.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IntervalArray`1">
      <summary>
            Represents an one dimension array data structure which is stored as intervals.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.GetValueFromQuickAccessKey(System.Int32)">
      <summary>
            Gets the value from quick access key. This function is used to optimized accessing data from IntervalArray.
            Caller must ensure that the quick access key is valid (&gt;=0) before call this function.
            </summary>
      <param name="key">The key.</param>
      <returns>T.</returns>
      <remarks>Safely for SpreadWin to use</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.TryGet(System.Int32,`0@)">
      <summary>
            Gets or sets the element <see cref="!:T" /> at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <param name="value">The <see cref="!:T" /> value represents the value at the specified position.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IntervalArray`1.Item(System.Int32)">
      <summary>
            Gets or sets the element <see cref="!:T" /> at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.IndexOf(`0)">
      <summary>
             Determines the index of a specific item in the <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" />.
            </summary>
      <param name="item">The object to locate in the <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" />.</param>
      <returns>The index of item if found in the list; otherwise, -1.</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.IntervalArray`1.Clear" -->
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.Contains(`0)">
      <summary>
            Determines whether the <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" /> contains a specific value.
            </summary>
      <param name="item">The item.</param>
      <returns>
        <c>true</c> if item is found in the <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" />; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.CopyTo(`0[],System.Int32)">
      <summary>
            Copies the elements of the <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" />.
            The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.CopyTo(`0[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies the elements of the <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" />.
            The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
      <param name="index">The zero-based index in array at which starts copying.</param>
      <param name="length">The length of copied items.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.CopyIgnoredEmpty(GrapeCity.Spreadsheet.IntervalArray{`0},System.Int32,GrapeCity.Spreadsheet.IntervalArray{`0},System.Int32,System.Int32)">
      <summary>
            Copies a range of elements from an IntervalArray starting at the specified source index and
            pastes them to another IntervalArray starting at the specified target index.
            The length and the indexes are specified as 32-bit integers.
            </summary>
      <param name="source">The IntervalArray that contains the data to copy.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which copying begins.</param>
      <param name="target">The IntervalArray that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to copy.</param>
      <remarks>Only items, which has value, are copied</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.Copy(GrapeCity.Spreadsheet.IntervalArray{`0},System.Int32,GrapeCity.Spreadsheet.IntervalArray{`0},System.Int32,System.Int32)">
      <summary>
            Copies a range of elements from an IntervalArray starting at the specified source index and
            pastes them to another IntervalArray starting at the specified target index.
            The length and the indexes are specified as 32-bit integers.
            </summary>
      <param name="source">The IntervalArray that contains the data to copy.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which copying begins.</param>
      <param name="target">The IntervalArray that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to copy.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.FillIfEmpty(System.Int32,System.Int32,`0)">
      <summary>
            Fills a range of array with a specified value. Only empty element will be filled.
            </summary>
      <param name="index">The start index of range.</param>
      <param name="length">The length of range.</param>
      <param name="value">The value to fill.</param>
      <returns>An <see cref="T:System.Int32" /> value represents the total numbers of element has been filled.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.Fill(System.Int32,System.Int32)">
      <summary>
            This function cannot be invoked from IntervalArray
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.Fill(System.Int32,System.Int32,`0)">
      <summary>
            Fills a range of array with a specified value.
            </summary>
      <param name="index">The start index of range.</param>
      <param name="length">The length of range.</param>
      <param name="value">The value to fill.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.Move(GrapeCity.Spreadsheet.IntervalArray{`0},System.Int32,GrapeCity.Spreadsheet.IntervalArray{`0},System.Int32,System.Int32)">
      <summary>
            Moves a range of elements from an IntervalArray starting at the specified source index and
            pastes them to another IntervalArray starting at the specified target index.
            Elements of old range will be clear.
            The length and the indexes are specified as 32-bit integers.
            </summary>
      <param name="source">The IntervalArray that contains the data to move.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which moving begins.</param>
      <param name="target">The IntervalArray that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to move.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.Swap(GrapeCity.Spreadsheet.IntervalArray{`0},System.Int32,GrapeCity.Spreadsheet.IntervalArray{`0},System.Int32,System.Int32)">
      <summary>
            Swaps a range of elements from an IntervalArray starting at the specified source index with
            another IntervalArray starting at the specified target index.
            The length and the indexes are specified as 32-bit integers.
            </summary>
      <param name="source">The IntervalArray that contains the data to swap.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which swapping begins.</param>
      <param name="target">The IntervalArray that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to swap.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalArray`1.Clone">
      <summary>
            Creates a new <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" /> object that is a copy of the current <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" /> instance.
            </summary>
      <returns>A new <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" /> object that is a copy of this <see cref="T:GrapeCity.Spreadsheet.IntervalArray`1" /> instance.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.IntervalBitmap">
      <summary>
            Represents an one dimension array data structure which is stored as intervals.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.IntervalBitmap" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.op_Explicit(GrapeCity.Spreadsheet.IntervalBitmap)~GrapeCity.Spreadsheet.IndexBitmap">
      <summary>
            Performs an implicit conversion from <see cref="T:GrapeCity.Spreadsheet.IntervalBitmap" /> to <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" />.
            </summary>
      <param name="bitmap">The interval bitmap.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IndexBitmap" /> result of the conversion.</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.IntervalBitmap.ClearInternal(System.Int32,System.Int32)" -->
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.Clone">
      <summary>
            Clones the specified range of the <see cref="T:GrapeCity.Spreadsheet.IntervalBitmap" />.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.IntervalBitmap.Clear" -->
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.Get(System.Int32)">
      <summary>
            Determines whether the element at the specified index is set.
            </summary>
      <param name="index">The index of the element to check.</param>
      <returns>
        <c>true</c> if the element at the specified index is set; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.GetQuickAccessKey(System.Int32)">
      <summary>
            Gets the quick access key. This function is used to optimized accessing data from SparseArray.
            Caller can determine whether the data exists in SparseArray without transfering default data.
            </summary>
      <param name="index">An integer value indicates the element's index.</param>
      <returns>An integer value represents the quick access key. Negative value indicates that the element isn't available.</returns>
      <remarks>Safely for SpreadWin to use</remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.GetIntervalCount">
      <summary>
            Gets the total number of non-empty chunks.
            </summary>
      <returns>The total number of non-empty chunks.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IntervalBitmap.DataLength">
      <summary>
            Returns the minimum rows (from the begining) which contains all non-null values.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.IntervalBitmap.ElementCount">
      <summary>
            Gets the total non-null values.
            </summary>
      <value>An integer value represents the total non-null values.</value>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.IntervalBitmap.Clear(System.Int32,System.Int32)" -->
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.Fill(System.Int32,System.Int32)">
      <summary>
            Fills a range of array with a specified value.
            </summary>
      <param name="index">The start index of range.</param>
      <param name="length">The length of range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.Set(System.Int32)">
      <summary>
            Turns on the bit at the specified position.
            </summary>
      <param name="index">An integer value indicates the index of the specified position.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.IntervalBitmap.Copy(GrapeCity.Spreadsheet.IntervalBitmap,System.Int32,GrapeCity.Spreadsheet.IntervalBitmap,System.Int32,System.Int32)">
      <summary>
            Copies a range of elements from an IntervalArray starting at the specified source index and
            pastes them to another IntervalArray starting at the specified target index.
            The length and the indexes are specified as 32-bit integers.
            </summary>
      <param name="source">The IntervalArray that contains the data to copy.</param>
      <param name="sourceIndex">A 32-bit integer that represents the index in the source at which copying begins.</param>
      <param name="target">The IntervalArray that receives the data.</param>
      <param name="targetIndex">A 32-bit integer that represents the index in the target at which storing begins.</param>
      <param name="length">A 32-bit integer that represents the number of elements to copy.</param>
    </member>
    <member name="T:GrapeCity.Spreadsheet.NamedObjectCollection`2">
      <summary>
            Represents a strongly typed list of objects that can be accessed by index or string key.
            </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TContainer">The type of the container which contains this list.</typeparam>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="!:TItem" /> at the specified index.
            </summary>
      <param name="index">The number of the item to be returned.</param>
      <returns>The <see cref="!:TItem" /> object at the specified position.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.Item(System.String)">
      <summary>
            Gets the <see cref="!:TItem" /> with the specified name.
            </summary>
      <param name="name">The name.</param>
      <returns>ItemType.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2" />.
            </summary>
      <value>The number of elements contained in the <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2" />.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.NamedObjectCollection`2.IItem">
      <summary>
            Represents the type of elements in this <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2" /> collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.IItem.Container">
      <summary>
            Gets the container of this item.
            </summary>
      <value>An object indicates the container.</value>
      <remarks>Although the caller can assign new value to the container, it isn't recommended. The setter is intended to be used internal only.</remarks>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.IItem.Name">
      <summary>
            Gets the name of this item.
            </summary>
      <value>A string value indicates the item's name.</value>
      <remarks>Although the caller can change item's name, it isn't recommended. The setter is intended to be used internal only.</remarks>
    </member>
    <member name="T:GrapeCity.Spreadsheet.NamedObjectCollection`2.IContainer">
      <summary>
            Represents the container which contains this <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2" /> collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.NamedObjectCollection`2.IContainer.Items">
      <summary>
            Gets the <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2" /> collection which contains <see cref="T:GrapeCity.Spreadsheet.NamedObjectCollection`2.IItem" /> elements.
            </summary>
      <value>The items.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Reference">
      <summary>
            Represents a reference to a range of cells.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.Reference.Empty">
      <summary>
            Returns the empty value of <see cref="T:GrapeCity.Spreadsheet.Reference" /> struct.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IsEmpty">
      <summary>
            Determines whether this reference is empty.
            </summary>
      <returns>
        <c>true</c> if this reference is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Reference" /> class.
            </summary>
      <param name="row">An integer value indicates the row index of single cell range reference.</param>
      <param name="column">An integer value indicates the column index of single cell range reference.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Reference" /> class.
            </summary>
      <param name="row">An integer value indicates the top row index of range reference.</param>
      <param name="column">An integer value indicates the left column index of range reference.</param>
      <param name="row2">An integer value indicates the bottom row index of range reference.</param>
      <param name="column2">An integer value indicates the right column index of range reference.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.Reference" /> class.
            </summary>
      <param name="address">The range reference.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.op_Implicit(GrapeCity.Spreadsheet.Reference)~GrapeCity.CalcEngine.RangeReference">
      <summary>
            Performs an implicit conversion from <see cref="T:GrapeCity.Spreadsheet.Reference" /> to <see cref="T:GrapeCity.CalcEngine.RangeReference" />.
            </summary>
      <param name="reference">The reference.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.op_Implicit(GrapeCity.CalcEngine.RangeReference)~GrapeCity.Spreadsheet.Reference">
      <summary>
            Performs an implicit conversion from <see cref="T:GrapeCity.CalcEngine.RangeReference" /> to <see cref="T:GrapeCity.Spreadsheet.Reference" />.
            </summary>
      <param name="reference">The reference.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.TopLeft">
      <summary>
            Gets the top left cell of this <see cref="T:GrapeCity.Spreadsheet.Reference" /> value.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value represents the top left cell of this <see cref="T:GrapeCity.Spreadsheet.Reference" /> value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.BottomRight">
      <summary>
            Gets the bottom right cell of this <see cref="T:GrapeCity.Spreadsheet.Reference" /> value.
            </summary>
      <value>A <see cref="T:GrapeCity.Spreadsheet.CellReference" /> value represents the bottom right cell of this <see cref="T:GrapeCity.Spreadsheet.Reference" /> value.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.Row">
      <summary>
            Gets the top row index.
            </summary>
      <value>An integer value represents the top row index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.Column">
      <summary>
            Gets the left column index.
            </summary>
      <value>An integer value represents the left column index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.Row2">
      <summary>
            Gets the bottom row index.
            </summary>
      <value>An integer value represents the bottom row index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.Column2">
      <summary>
            Gets the right column index.
            </summary>
      <value>An integer value represents the right column index.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.RowCount">
      <summary>
            Gets the totals row count.
            </summary>
      <value>An integer value represents the row count.</value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.Reference.ColumnCount">
      <summary>
            Gets the totals column count.
            </summary>
      <value>An integer value represents the column count.</value>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.CompareTo(GrapeCity.Spreadsheet.Reference)">
      <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
      <param name="other">An object to compare with this instance.</param>
      <returns>A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <paramref name="other" /> in the sort order.  Zero This instance occurs in the same position in the sort order as <paramref name="other" />. Greater than zero This instance follows <paramref name="other" /> in the sort order.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Union(System.Int32,System.Int32)">
      <summary>
            Unions the current <see cref="T:GrapeCity.Spreadsheet.Reference" /> with the specified reference.
            </summary>
      <param name="row">An integer value indicates the row index of the reference to union.</param>
      <param name="column">An integer value indicates the column index of the reference to union.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Union(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Unions the current <see cref="T:GrapeCity.Spreadsheet.Reference" /> with the specified reference.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference to union.</param>
      <param name="column">An integer value indicates the left column index of the reference to union.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference to union.</param>
      <param name="column2">An integer value indicates the right column index of the reference to union.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Union(GrapeCity.Spreadsheet.Reference)">
      <summary>
            Unions the current <see cref="T:GrapeCity.Spreadsheet.Reference" /> with the specified reference.
            </summary>
      <param name="reference">The reference.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IsIntersected(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Determines whether this reference is intersected with the specified reference.
            </summary>
      <param name="row">An integer value indicates the top row index of range reference.</param>
      <param name="column">An integer value indicates the left column index of range reference.</param>
      <param name="row2">An integer value indicates the bottom row index of range reference.</param>
      <param name="column2">An integer value indicates the right column index of range reference.</param>
      <returns>
        <c>true</c> if the specified row is intersected; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IsIntersected(System.Int32,System.Int32)">
      <summary>
            Determines whether this reference is intersected with the specified cell.
            </summary>
      <param name="row">An integer value indicates the top row index of cell.</param>
      <param name="column">An integer value indicates the left column index of cell.</param>
      <returns>
        <c>true</c> if this reference contains the specified cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IsIntersected(GrapeCity.Spreadsheet.Reference@)">
      <summary>
            Determines whether this reference is intersected with the specified reference.
            </summary>
      <returns>
        <c>true</c> if the specified row is intersected; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IntersectWith(GrapeCity.Spreadsheet.Reference@)">
      <summary>
            Intersects this <see cref="T:GrapeCity.Spreadsheet.Reference" /> range with the specified <see cref="T:GrapeCity.Spreadsheet.Reference" /> range.
            </summary>
      <param name="range">The <see cref="T:GrapeCity.Spreadsheet.Reference" /> range to intersect with.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> range represents the intersected <see cref="T:GrapeCity.Spreadsheet.Reference" /> range.</returns>
      <remarks>
            Make sure that all rows and columns are all absolute or relative.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IntersectWith(GrapeCity.Spreadsheet.Reference)">
      <summary>
            Intersects this <see cref="T:GrapeCity.Spreadsheet.Reference" /> range with the specified <see cref="T:GrapeCity.Spreadsheet.Reference" /> range.
            </summary>
      <param name="range">The <see cref="T:GrapeCity.Spreadsheet.Reference" /> range to intersect with.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Reference" /> range represents the intersected <see cref="T:GrapeCity.Spreadsheet.Reference" /> range.</returns>
      <remarks>
            Make sure that all rows and columns are all absolute or relative.
            </remarks>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this reference.
            </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this reference; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Equals(GrapeCity.Spreadsheet.Reference@)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Equals(GrapeCity.Spreadsheet.Reference)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Offset(System.Int32,System.Int32)">
      <summary>
            Translates this <seealso cref="T:GrapeCity.CalcEngine.RangeReference" /> by the specified amount.
            </summary>
      <param name="translateRows">The amount to offset the y-coordinate.</param>
      <param name="translateColumns">&gt;The amount to offset the x-coordinate.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IsOverlapped(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Determines whether this reference is overlaped by the specified range.
            </summary>
      <param name="row">An integer value indicates the top row index of range reference.</param>
      <param name="column">An integer value indicates the left column index of range reference.</param>
      <param name="row2">An integer value indicates the bottom row index of range reference.</param>
      <param name="column2">An integer value indicates the right column index of range reference.</param>
      <returns>
        <c>true</c> if the specified row is overlapped; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Overlaps(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Determines whether this reference overlaps the specified range.
            </summary>
      <param name="row">An integer value indicates the top row index of range reference.</param>
      <param name="column">An integer value indicates the left column index of range reference.</param>
      <param name="row2">An integer value indicates the bottom row index of range reference.</param>
      <param name="column2">An integer value indicates the right column index of range reference.</param>
      <returns>
        <c>true</c> if the specified row is overlapped; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.Contains(System.Int32,System.Int32)">
      <summary>
            Determines whether this reference contains the specified cell.
            </summary>
      <param name="row">An integer value indicates the top row index of cell.</param>
      <param name="column">An integer value indicates the left column index of cell.</param>
      <returns>
        <c>true</c> if this reference contains the specified cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Reference.IsOneCell">
      <summary>
            Gets a value indicating whether this reference is one cell.
            </summary>
      <value>
        <c>true</c> if this reference is one cell; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Spreadsheet.WorksheetReference">
      <summary>
            Represents a reference to a range of cells in the specified worksheet.
            </summary>
    </member>
    <member name="F:GrapeCity.Spreadsheet.WorksheetReference.Empty">
      <summary>
            Represents a <see cref="T:GrapeCity.Spreadsheet.WorksheetReference" /> structure with its properties left uninitialized.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetReference.#ctor(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.WorksheetReference" /> class.
            </summary>
      <param name="worksheet">The worksheet.</param>
      <param name="row">An integer value indicates the row index.</param>
      <param name="column">An integer value indicates the column index.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetReference.#ctor(GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Spreadsheet.WorksheetReference" /> class.
            </summary>
      <param name="worksheet">The worksheet.</param>
      <param name="row">An integer value indicates the top row index.</param>
      <param name="column">An integer value indicates the left column index.</param>
      <param name="row2">An integer value indicates the bottom row index.</param>
      <param name="column2">An integer value indicates the right column index.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.WorksheetReference.#ctor(GrapeCity.Spreadsheet.IWorksheet,GrapeCity.Spreadsheet.Reference)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.WorksheetReference.#ctor(GrapeCity.Spreadsheet.Worksheet,GrapeCity.Spreadsheet.Reference)" -->
    <member name="P:GrapeCity.Spreadsheet.WorksheetReference.IsEmpty">
      <summary>
            Gets a value indicating whether this value is empty.
            </summary>
      <value>
        <c>true</c> if this value is empty; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetReference.Worksheet">
      <summary>
            Gets the worksheet.
            </summary>
    </member>
    <member name="P:GrapeCity.Spreadsheet.WorksheetReference.Range">
      <summary>
            Gets the range of cells.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetReference.IsValid(System.Boolean)">
      <summary>
            Gets a boolean value indicating whether this <see cref="T:GrapeCity.Spreadsheet.WorksheetReference" /> value is valid.
            </summary>
      <param name="navigate">
        <c>true</c> if the function validate for navigating; otherwise, <c>false</c> for accessing.</param>
      <returns>
        <c>true</c> if this <see cref="T:GrapeCity.Spreadsheet.WorksheetReference" /> value is valid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetReference.ToString">
      <summary>
            Converts to string.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.WorksheetReference.Equals(GrapeCity.Spreadsheet.WorksheetReference)">
      <summary>
            Indicates whether the current <see cref="T:GrapeCity.Spreadsheet.WorksheetReference" /> value is equal to another <see cref="T:GrapeCity.Spreadsheet.WorksheetReference" /> value.
            </summary>
      <param name="other">A <see cref="T:GrapeCity.Spreadsheet.WorksheetReference" /> value to compare with this <see cref="T:GrapeCity.Spreadsheet.WorksheetReference" /> value.</param>
      <returns>
        <c>true</c> if the current <see cref="T:GrapeCity.Spreadsheet.WorksheetReference" /> value is equal to the other parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Storages.MergedCellStorage">
      <summary>
            Represent the merged cell storage which implements hybrid data structure.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.IsEmpty">
      <summary>
            Gets a boolean value indicating whether the merged cell storage is empty.
            </summary>
      <returns>
        <c>true</c> if the merged cell storage is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.ContainsMergedCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Determines whether this storage already contains a merged cell which intersects with the specified range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
      <returns>
        <c>true</c> if this storage already contains a merged cell which intersects with the specified range; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Merge(GrapeCity.Spreadsheet.Reference@)">
      <summary>
            Creates a merged cell from the specified cell range.
            </summary>
      <param name="range">The cell range to merge.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Merge(GrapeCity.Spreadsheet.Reference)">
      <summary>
            Creates a merged cell from the specified cell range.
            </summary>
      <param name="range">The cell range to merge.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Merge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a merged cell from the specified cell range.
            </summary>
      <param name="row">An integer value indicates the top row index of cell range.</param>
      <param name="column">An integer value indicates the left column index of cell range.</param>
      <param name="row2">An integer value indicates the bottom row index of cell range.</param>
      <param name="column2">An integer value indicates the right column index of cell range.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Find(System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference@)">
      <summary>
            Finds the merged cell which intersects with the specified reference.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="mergedCell">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the intersected reference.</param>
      <returns>
        <c>true</c> if there is intersected merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Find(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Finds all merged cells which intersect with the specified reference.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Find(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference[]@,System.Int32@)">
      <summary>
            Finds the unioned reference of all merged cells which intersect with the specified reference.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <param name="mergedCells">An array represents all merged cells in specified reference</param>
      <returns>An integer value represents the found item size.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Find(System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.Spreadsheet.Reference@)">
      <summary>
            Finds the unioned reference of all merged cells which intersect with the specified reference.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference.</param>
      <param name="column">An integer value indicates the left column index of the reference.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference.</param>
      <param name="column2">An integer value indicates the right column index of the reference.</param>
      <param name="unionedMergedCell">A <see cref="T:GrapeCity.Spreadsheet.Reference" /> value represents the unioned reference.</param>
      <returns>
        <c>true</c> if there is at least one intersected merged cell; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.UnMerge(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Separates a merged area into individual cells.
            </summary>
      <param name="row">An integer value indicates the top row index of the reference which belongs to the merged area.</param>
      <param name="column">An integer value indicates the left column index of the reference which belongs to the merged area.</param>
      <param name="row2">An integer value indicates the bottom row index of the reference which belongs to the merged area.</param>
      <param name="column2">An integer value indicates the right column index of the reference which belongs to the merged area.</param>
      <param name="overlap">Unmerges if the cell range overlaps the merged cells.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.Copy(System.Int32,System.Int32,GrapeCity.Spreadsheet.Storages.MergedCellStorage,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)" -->
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.InsertRows(System.Int32,System.Int32)">
      <summary>
            Insert specified amout of rows at specified index
            </summary>
      <param name="index"></param>
      <param name="count"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.InsertColumns(System.Int32,System.Int32)">
      <summary>
            Insert specified amout of columns at specified index
            </summary>
      <param name="index"></param>
      <param name="count"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.RemoveRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Remove specified amout of rows at specified index
            </summary>
      <param name="index"></param>
      <param name="rowCount"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Storages.MergedCellStorage.RemoveColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Remove specified amout of columns at specified index
            </summary>
      <param name="index"></param>
      <param name="columnCount"></param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Spreadsheet.Cloner`1">
      <summary>
            Supports cloning, which creates a new instance of a class with the same value as an existing instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Cloner`1.Clone(`0@)">
      <summary>
            Creates a new object that is a copy of the specified value.
            </summary>
      <param name="value">The value to clone.</param>
      <returns>A new object that is a copy of the specified value.</returns>
    </member>
    <member name="M:GrapeCity.Spreadsheet.Cloner`1.Clone(`0)">
      <summary>
            Creates a new object that is a copy of the specified value.
            </summary>
      <param name="value">The value to clone.</param>
      <returns>A new object that is a copy of the specified value.</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.AggregateOption">
      <summary>
            Represents a options that determines which values to ignore in the evaluation range for the function.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreNestedAggregation">
      <summary>
            Ignore nested SUBTOTAL and AGGREGATE functions.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreHiddenNestedAggregation">
      <summary>
            Ignore hidden rows, nested SUBTOTAL and AGGREGATE functions.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreErrorNestedAggregation">
      <summary>
            Ignore error values, nested SUBTOTAL and AGGREGATE functions.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreHiddenErrorNestedAggregation">
      <summary>
            Ignore hidden rows, error values, nested SUBTOTAL and AGGREGATE functions.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreNothing">
      <summary>
            Ignore nothing.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreHidden">
      <summary>
            Ignore hidden rows.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreError">
      <summary>
            Ignore error values.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.AggregateOption.IgnoreHiddenError">
      <summary>
            Ignore hidden rows and error values.
            </summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.WebImage">
      <summary>
            Represents value of a cell which use IMAGE function.
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.WebImage.#ctor(System.String,GrapeCity.Spreadsheet.IWorksheet,System.Int32,System.Int32)">
      <summary>
            Internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.Worksheet">
      <summary>
            Gets the worksheet which contains this web image.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.AlternateText">
      <summary>
            Gets or sets alternative text that describes the image for accessibility.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.Sizing">
      <summary>
            Gets or sets the <see cref="T:GrapeCity.CalcEngine.WebImage.SizingMode" /> value which indicates the image dimensions.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.Width">
      <summary>
            Gets or sets the custom width of the image in pixels.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.Height">
      <summary>
            Gets or sets the custom height of the image in pixels.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.ClipX">
      <summary>
            Gets or sets the x-axis coordinate of the top left corner of the source image sub-rectangle to draw into the destination context.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.ClipY">
      <summary>
            Gets or sets the y-axis coordinate of the top left corner of the source image sub-rectangle to draw into the destination context.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.ClipWidth">
      <summary>
            Gets or sets the width of the source image sub-rectangle to draw into the destination context.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.ClipHeight">
      <summary>
            Gets or sets the height of the source image sub-rectangle to draw into the destination context.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.VAlign">
      <summary>
            Gets or sets the vertical alignment of the image.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.HAlign">
      <summary>
            Gets or sets the horizontal alignment of the image.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.Data">
      <summary>
            Gets or sets the custom data.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.Connected">
      <summary>
            Gets or sets a boolean value indicating whether the image is loaded.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.WebImage.IsPaintable">
      <summary>
            Gets or sets a boolean value indicating whether the image is paintable.
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.WebImage.Load(System.Boolean,System.Boolean)">
      <summary>
            Loads the image data if it is not available.
            </summary>
      <param name="httpsOnly">
        <c>true</c> if only supported "https" protocol; otherwise, <c>false</c>.</param>
      <param name="synchronously">
        <c>true</c> if loading URL is processed in current thread; otherwise, <c>false</c>.</param>
      <returns>
        <c>true</c> if the image data is loaded; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.WebImage.SizingMode">
      <summary>
            Represents the image dimensions.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.WebImage.SizingMode.Fit">
      <summary>
            Fits the image in the cell, maintaining the original aspect ratio.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.WebImage.SizingMode.Fill">
      <summary>
            Fills the entire cell with the image, ignoring aspect ratio.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.WebImage.SizingMode.Original">
      <summary>
            Maintains the original image size, which may exceed the bounds of the cell.
            </summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.WebImage.SizingMode.Custom">
      <summary>
            Displays the image according to a custom height and width.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.CalcEngine.BuiltInRichValue`1.CompareTo(GrapeCity.CalcEngine.BuiltInRichValue{`0})" -->
    <member name="T:GrapeCity.CalcEngine.BuiltInRichValue">
      <summary>
            Represents a rich cell value of an .NET object.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.CalcEngine.BuiltInRichValue.FromDataTable(System.Data.DataTable,System.String,System.Boolean)" -->
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.CalcEngine.BuiltInRichValue.FromDataView(System.Data.DataView,System.String,System.Boolean)" -->
    <member name="T:GrapeCity.CalcEngine.FormattedCellValue">
      <summary>
            Represents the value of a cell with a format string. 
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormattedCellValue.Create(GrapeCity.Spreadsheet.IWorkbook,System.Object,System.String)">
      <summary>
            Creates a cell value that contains both of value and number format.
            </summary>
      <param name="workbook">The current workbook.</param>
      <param name="value">The actual cell value.</param>
      <param name="numFmt">The number format of cell.</param>
      <returns>The <see cref="T:GrapeCity.CalcEngine.FormattedCellValue" /> object represents the formatted cell value.</returns>
    </member>
    <member name="P:GrapeCity.CalcEngine.FormattedCellValue.BasicValue">
      <summary>
            Gets the original value of this cell value.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.FormattedCellValue.Format">
      <summary>
            Gets the number format string that is used to format this value.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.FormattedCellValue.Formatter">
      <summary>
            Gets the formatter which is used to format this value.
            </summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.IIntelliSenseFunction">
      <summary>
            Represents an interface that provide help information of a function.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.IIntelliSenseFunction.Overloads">
      <summary>
            Gets the total number of function overloads.
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.IIntelliSenseFunction.GetArgumentCount(System.Int32,System.Int32,System.Boolean@)">
      <summary>
            Gets the total number of parameters that display in the intelli-sense tooltip.
            </summary>
      <param name="argsCount">The total number of current passed arguments.</param>
      <param name="overload">The order of function overload.</param>
      <param name="limited">
        <c>true</c> if the parameter count is maximum; otherwise, more parameter can be passed.</param>
      <returns>The total number of parameters that display in the intelli-sense tooltip.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IIntelliSenseFunction.GetGroupedArguments(System.Int32,System.Int32@,System.Int32@)">
      <summary>
            Gets the lower index and upper index of the argument group that contains the specified argument.
            </summary>
      <param name="index">The index of the argument.</param>
      <param name="lowerIndex">The lower index of the argument group.</param>
      <param name="upperIndex">The upper index of the argument group.</param>
      <returns>
        <c>true</c> if the argument belong to an argument group; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IIntelliSenseFunction.GetDescription(GrapeCity.Spreadsheet.Localization.LanguagePackage)">
      <summary>
            Gets description of the function in the specified language package.
            </summary>
      <param name="languagePackage">The language package.</param>
      <returns>A string value represents description of the function.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IIntelliSenseFunction.GetDescription2(GrapeCity.Spreadsheet.Localization.LanguagePackage)">
      <summary>
            Gets the function description which is displayed from Function Arguments dialog.
            </summary>
      <param name="builtinFunction">The function to display.</param>
      <returns>A string value represents the function's description.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IIntelliSenseFunction.GetArgumentName(GrapeCity.Spreadsheet.Localization.LanguagePackage,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets name of the parameter in the specified language package.
            </summary>
      <param name="languagePackage">The language package.</param>
      <param name="index">An integer value indicates position of the argument.</param>
      <param name="argsCount">The total number of current passed arguments.</param>
      <param name="overload">The order of function overload.</param>
      <returns>A string value represents name of the argument.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IIntelliSenseFunction.GetArgumentType(GrapeCity.CalcEngine.Function,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets the parameter name of the specified function.
            </summary>
      <param name="function">The function to extract parameter name.</param>
      <param name="index">An integer value indicates the parameter's position.</param>
      <param name="argCount">The total number of current passed arguments.</param>
      <param name="overload">An integer value indicates the order of function overload.</param>
      <returns>A string value represents the parameter name.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IIntelliSenseFunction.GetArgumentOptions(GrapeCity.Spreadsheet.Localization.LanguagePackage,System.Int32)">
      <summary>
            Gets an array of option values for the specified parameter.
            </summary>
      <param name="languagePackage">The language package.</param>
      <param name="index">An integer value indicates position of the argument.</param>
      <returns>An array of parameter's option values; <c>null</c> if there is no option value.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IIntelliSenseFunction.GetArgumentDescription(GrapeCity.Spreadsheet.Localization.LanguagePackage,System.Int32)">
      <summary>
            Gets the description of function's argument which is displayed from Function Arguments dialog.
            </summary>
      <param name="languagePackage">The language package.</param>
      <param name="index">The order of argument.</param>
      <returns>A string value represents the description of function's argument.</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.RichValue`1">
      <summary>
            Represents a rich cell value of an .NET object.
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.RichValue`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.CalcEngine.RichValue`1" /> class.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.RichValue`1.#ctor(`0,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="!:RichValue" /> class.
            </summary>
      <param name="obj">The actual object value.</param>
      <param name="tag">The object that contains data about this <see cref="T:GrapeCity.CalcEngine.RichValue`1" /> object.</param>
    </member>
    <member name="P:GrapeCity.CalcEngine.RichValue`1.Tag">
      <summary>
            Gets or sets the object that contains data about <see cref="T:GrapeCity.CalcEngine.RichValue`1" /> object.
            </summary>
      <value>An <see cref="T:System.Object" /> that contains data about <see cref="T:GrapeCity.CalcEngine.RichValue`1" /> object. The default is <c>null</c>.</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.RichValue`1.ShowDetailsIcon">
      <summary>
            Gets or sets a boolean indicating whether to show the icon for <see cref="T:GrapeCity.CalcEngine.RichValue`1" /> object.
            </summary>
      <remarks>
        <para>If the value is <c>true</c>, the icon of <see cref="T:GrapeCity.CalcEngine.RichValue`1" /> object displays if it's available; otherwise, default icon displays.</para>
        <para>If the value is <c>false</c>, no icon displays.</para>
        <para>If the value is <c>null</c>, the icon of <see cref="T:GrapeCity.CalcEngine.RichValue`1" /> object will display if it's available; otherwise, no icon displays.</para>
      </remarks>
    </member>
    <member name="P:GrapeCity.CalcEngine.RichValue`1.FieldCount">
      <summary>
            Gets the total numbers of fields.
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.RichValue`1.GetFieldName(System.Int32)">
      <summary>
            Gets the name of field.
            </summary>
      <param name="index">An integer value indicates the field index.</param>
      <returns>A string value represents the name of field.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RichValue`1.TryGetFieldValue(System.String,System.Object@)">
      <summary>
            Gets the specified field value from this <see cref="T:GrapeCity.CalcEngine.IRichValue" /> object.
            </summary>
      <param name="name">The field name.</param>
      <param name="value">The field value.</param>
      <returns>A boolean value indicates whether the field value is returned successful.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RichValue`1.TryGetFieldValue(System.Int32,GrapeCity.CalcEngine.CellValue@)">
      <summary>
            Gets the specified field value from this <see cref="T:GrapeCity.CalcEngine.IRichValue" /> object.
            </summary>
      <param name="index">An integer value indicates the field index.</param>
      <param name="result">An <see cref="T:GrapeCity.CalcEngine.CellValue" /> object indicates the result.</param>
      <returns>A boolean value indicates whether the field value is returned successful.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RichValue`1.TryGetFieldValue(System.Int32,GrapeCity.CalcEngine.IPrimitiveValue)">
      <summary>
            Gets the specified field value from this <see cref="T:GrapeCity.CalcEngine.IRichValue" /> object.
            </summary>
      <param name="index">An integer value indicates the field index.</param>
      <param name="result">An <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> object indicates the result.</param>
      <returns>A boolean value indicates whether the field value is returned successful.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RichValue`1.IsSameField(GrapeCity.CalcEngine.IRichValue)">
      <summary>
            Gets a boolean value indicating whether this object has same fields as the specified object.
            </summary>
      <param name="value">The <see cref="T:GrapeCity.CalcEngine.IRichValue" /> object to compare.</param>
      <returns>
        <c>true</c> if this object has same fields as the specified object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RichValue`1.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.CalcEngine.RichValue`1.CompareTo(GrapeCity.CalcEngine.RichValue{`0})" -->
    <member name="T:GrapeCity.CalcEngine.VisualFunction">
      <summary>
            Represents a data visualization function that visualize cell value.
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.VisualFunction.#ctor(System.String,System.Int32,System.Int32,GrapeCity.CalcEngine.FunctionAttributes,GrapeCity.CalcEngine.IFunctionVisualizer,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.CalcEngine.VisualFunction" /> class.
            </summary>
      <param name="visualizerName">A string value represents the visualizer name.</param>
      <param name="minArgs">An integer values indicates the minimum argument count.</param>
      <param name="maxArgs">An integer values indicates the maximum argument count.</param>
      <param name="attributes">A <see cref="T:GrapeCity.CalcEngine.FunctionAttributes" /> value indicates attributes of the function.</param>
      <param name="visualizer">The function visualizer to visualize cell value.</param>
      <param name="appendPrefix">A boolean value indicates whether to append the prefix "VF." before the function. <c>true</c> if the visual function is used in the formula as "VS.[visualizer name]".</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.VisualFunction.Evaluate(GrapeCity.CalcEngine.IArguments,GrapeCity.CalcEngine.IValue)">
      <summary>
            Evaluates the function based on specified arguments and set evaluated value to <paramref name="result" />.
            </summary>
      <param name="arguments">The <see cref="T:GrapeCity.CalcEngine.IArguments" /> object indicates set of arguments.</param>
      <param name="result">The <see cref="T:GrapeCity.CalcEngine.IValue" /> object to set result value.</param>
      <returns>
        <c>true</c> if the evaluation is handled; otherwise, the base evaluation logic will be executed.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.VisualFunction.EvaluateCellValue(GrapeCity.CalcEngine.IArguments,GrapeCity.CalcEngine.IValue)">
      <summary>
            Evaluates the cell value.
            </summary>
      <param name="arguments">The <see cref="T:GrapeCity.CalcEngine.IArguments" /> object indicates set of arguments.</param>
      <param name="result">The <see cref="T:GrapeCity.CalcEngine.IValue" /> object to set result value.</param>
      <returns>
        <c>true</c> if the evaluation is handled; otherwise, the base evaluation logic will be executed.</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.VisualizationData">
      <summary>
            Represents the visualization data.
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.VisualizationData.#ctor(System.Object,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.CalcEngine.VisualizationData" /> class.
            </summary>
      <param name="parameterCount">The total numbers of parameters.</param>
    </member>
    <member name="P:GrapeCity.CalcEngine.VisualizationData.Parameters">
      <summary>
            Gets all evaluated parameters.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.VisualizationData.Value">
      <summary>
            Gets the evaluated result of the cell.
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.VisualizationData.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.VisualizationData.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.IFunctionVisualizer">
      <summary>
            Represents a function visualizer.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.IFunctionVisualizer.IsVisual">
      <summary>
            Gets a boolean value indicating whether the function is data visualization function.
            </summary>
      <value>
        <c>true</c> if the function is data visualization function; otherwise, the function apply style format to cell.</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.IFunctionVisualizer.IsShowCell(System.Object)">
      <summary>
            Gets boolean value that specifies if the cell is displayed.
            </summary>
      <param name="cellValue">The cell value.</param>
      <value>
        <c>true</c> if the cell is displayed; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.IFunctionVisualizer.ApplyFormat(System.Object,GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>
            Applies the format to the cell style format.
            </summary>
      <param name="cellValue">The cell value.</param>
      <param name="styleFormat">A <see cref="T:GrapeCity.Spreadsheet.StyleFormat" /> value indicates the style formatting result.</param>
      <remarks>This function is invoked only if <see cref="P:GrapeCity.CalcEngine.IFunctionVisualizer.IsVisual" /> property returns <c>false</c>.</remarks>
    </member>
    <member name="T:GrapeCity.CalcEngine.INotSupportedParams">
      <summary>
            Represents an interface that indicates that the object requires no parameter. 
            </summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.GenericCellData`1">
      <summary>
            Represents a generic cell data.
            </summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.GenericCellData`1.Value">
      <summary>
            Gets the cell value.
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.GenericCellData`1.ToString">
      <summary>
            Returns a String which represents the object instance.
            </summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.TextCellData">
      <summary>
            Represents a text cell data.
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.TextCellData.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.CalcEngine.TextCellData" /> class.
            </summary>
      <param name="value">The string value.</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.NumberCellData">
      <summary>
            Represents a numeric cell data.
            </summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.NumberCellData.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.CalcEngine.NumberCellData" /> class.
            </summary>
      <param name="value">The numeric value.</param>
    </member>
    <member name="P:GrapeCity.Core.CustomDocumentProperties.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Core.DocumentProperty" /> object from the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.
            </summary>
      <param name="index">The index number of the document property returned.</param>
      <returns>A <see cref="T:GrapeCity.Core.DocumentProperty" /> object represents the document property.</returns>
    </member>
    <member name="P:GrapeCity.Core.CustomDocumentProperties.GrapeCity#Core#IDocumentProperties#Item(GrapeCity.Core.BuiltinDocumentProperties)">
      <summary>
            Gets the <see cref="T:GrapeCity.Core.DocumentProperty" /> object from the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.
            </summary>
      <param name="index">The index of the document property returned.</param>
      <returns>A <see cref="T:GrapeCity.Core.DocumentProperty" /> object represents the document property.</returns>
    </member>
    <member name="P:GrapeCity.Core.CustomDocumentProperties.GrapeCity#Core#IDocumentProperties#Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Core.DocumentProperty" /> object from the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.
            </summary>
      <param name="index">The name of the document property returned.</param>
      <returns>A <see cref="T:GrapeCity.Core.DocumentProperty" /> object represents the document property.</returns>
    </member>
    <member name="P:GrapeCity.Core.CustomDocumentProperties.GrapeCity#Core#IDocumentProperties#Count">
      <summary>
            Gets an integer value indicating the number of items in the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.
            </summary>
    </member>
    <member name="T:GrapeCity.Core.DocumentProperty">
      <summary>
            Represents a custom or built-in document property of a container document.
            </summary>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Name">
      <summary>
            Gets or sets the custom name associated with the custom document property.
            </summary>
      <value>A string value represents the custom name.</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Type">
      <summary>
            Gets or sets the custom property type associated with the custom document property.
            </summary>
      <value>A CustomPropertyType represents the custom property type</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Text">
      <summary>
             Gets or sets the text value associated with the custom document property.
            </summary>
      <value>A string represents the text value</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Date">
      <summary>
             Gets or sets the datetime value associated with the custom document property.
            </summary>
      <value>A DateTime represents the datetime value</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Number">
      <summary>
             Gets or sets the number value associated with the custom document property.
            </summary>
      <value>A double represents the number value</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.FloatNumber">
      <summary>
             Gets or sets the number value associated with the custom document property.
            </summary>
      <value>A double represents the number value</value>
    </member>
    <member name="P:GrapeCity.Core.DocumentProperty.Boolean">
      <summary>
             Gets or sets the yes or no value associated with the custom document property.
            </summary>
      <value>A boolean represents the yes or no value</value>
    </member>
    <member name="M:GrapeCity.Core.DocumentProperty.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:GrapeCity.Core.DocumentPropertyType">
      <summary>
            DocumentPropertyType defines the type of the custom document property.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.DocumentPropertyType.String">
      <summary>
            The value of document property is string value.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.DocumentPropertyType.Date">
      <summary>
            The value of document property is date value.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.DocumentPropertyType.Number">
      <summary>
            The value of document property is integer value.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.DocumentPropertyType.Float">
      <summary>
            The value of document property is floating point value.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.DocumentPropertyType.Boolean">
      <summary>
            The value of document property is boolean value;
            </summary>
    </member>
    <member name="T:GrapeCity.Core.IDocumentProperties">
      <summary>
            Represents a collection of <see cref="T:GrapeCity.Core.DocumentProperty" /> objects.
            Each <see cref="T:GrapeCity.Core.DocumentProperty" /> object represents a built-in or custom property of a container document.
            </summary>
    </member>
    <member name="P:GrapeCity.Core.IDocumentProperties.Count">
      <summary>
            Gets an integer value indicating the number of items in the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Core.IDocumentProperties.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GrapeCity.Core.DocumentProperty" /> object from the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.
            </summary>
      <param name="index">The index number of the document property returned.</param>
      <returns>A <see cref="T:GrapeCity.Core.DocumentProperty" /> object represents the document property.</returns>
    </member>
    <member name="P:GrapeCity.Core.IDocumentProperties.Item(GrapeCity.Core.BuiltinDocumentProperties)">
      <summary>
            Gets the <see cref="T:GrapeCity.Core.DocumentProperty" /> object from the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.
            </summary>
      <param name="index">The index of the document property returned.</param>
      <returns>A <see cref="T:GrapeCity.Core.DocumentProperty" /> object represents the document property.</returns>
      <remarks>If the document properties is not builtin document properties, return <c>null</c>.</remarks>
    </member>
    <member name="P:GrapeCity.Core.IDocumentProperties.Item(System.String)">
      <summary>
            Gets the <see cref="T:GrapeCity.Core.DocumentProperty" /> object from the <see cref="T:GrapeCity.Core.IDocumentProperties" /> collection.
            </summary>
      <param name="index">The name of the document property returned.</param>
      <returns>A <see cref="T:GrapeCity.Core.DocumentProperty" /> object represents the document property.</returns>
    </member>
    <member name="T:GrapeCity.Core.BuiltinDocumentProperties">
      <summary>
            Represents all builtin document properties.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Title">
      <summary>
            The title of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Subject">
      <summary>
            The subject of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Author">
      <summary>
            The author of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Keywords">
      <summary>
            The keywords of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Comments">
      <summary>
            The comments of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Template">
      <summary>
            The template of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.LastAuthor">
      <summary>
            The last author of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.RevisionNumber">
      <summary>
            The revision number of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.ApplicationName">
      <summary>
            The application name of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.LastPrintDate">
      <summary>
            The last print date of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.CreationDate">
      <summary>
            The creation date of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.LastSaveTime">
      <summary>
            The last saved time of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.TotalEditingTime">
      <summary>
            The total number of editing times of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.NumberOfPages">
      <summary>
            The total number of pages of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.NumberOfWords">
      <summary>
            The total number of words of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.NumberOfCharacters">
      <summary>
            The total number of characters of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Security">
      <summary>
            The security information of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Category">
      <summary>
            Theh category of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Format">
      <summary>
            The format of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Manager">
      <summary>
            The manager information of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Company">
      <summary>
            The company information of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.NumberOfBytes">
      <summary>
            The total number of bytes of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.NumberOfLines">
      <summary>
            The total number of lines of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.NumberOfParagraphs">
      <summary>
            The total number of paragraphs of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.NumberOfSlides">
      <summary>
            The total number of slides of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.NumberOfNotes">
      <summary>
            The total number of notes of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.NumberOfHiddenSlides">
      <summary>
            The total number of hidden slides of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.NumberOfMultimediaClips">
      <summary>
            The total number of multimedia clips of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.HyperlinkBase">
      <summary>
            The hyperlink base of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.NumberOfCharactersWithSpaces">
      <summary>
            The total number of whitespace characters of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.ContentType">
      <summary>
            The content type of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.ContentStatus">
      <summary>
            The content status of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.Language">
      <summary>
            The language of the document.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.BuiltinDocumentProperties.DocumentVersion">
      <summary>
            The document version of the document.
            </summary>
    </member>
    <member name="T:GrapeCity.Core.IConvertible`1">
      <summary>
            Represents an object which is able to convert to the <typeparamref name="T" /> value.
            </summary>
      <typeparam name="T">The target type.</typeparam>
    </member>
    <member name="M:GrapeCity.Core.IConvertible`1.ConvertTo">
      <summary>
            Converts this object to the <typeparamref name="T" /> value.
            </summary>
      <returns>The converted value as <typeparamref name="T" /> type.</returns>
    </member>
    <member name="T:GrapeCity.Core.KnownColor">
      <summary>
            Specifies the known system colors.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ActiveBorder">
      <summary>
            The system-defined color of the active window's border.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ActiveCaption">
      <summary>
            The system-defined color of the background of the active window's title bar.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ActiveCaptionText">
      <summary>
            The system-defined color of the text in the active window's title bar.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.AliceBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.AntiqueWhite">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.AppWorkspace">
      <summary>
            The system-defined color of the application workspace. The application workspace is the area in a multiple-document view that is not being occupied by documents.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Aqua">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Aquamarine">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Azure">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Beige">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Bisque">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Black">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.BlanchedAlmond">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Blue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.BlueViolet">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Brown">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.BurlyWood">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ButtonFace">
      <summary>
            The system-defined face color of a 3-D element.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ButtonHighlight">
      <summary>
            The system-defined color that is the highlight color of a 3-D element. This color is applied to parts of a 3-D element that face the light source.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ButtonShadow">
      <summary>
            The system-defined color that is the shadow color of a 3-D element. This color is applied to parts of a 3-D element that face away from the light source.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.CadetBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Chartreuse">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Chocolate">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Control">
      <summary>
            The system-defined face color of a 3-D element.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ControlDark">
      <summary>
            The system-defined shadow color of a 3-D element. The shadow color is applied to parts of a 3-D element that face away from the light source.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ControlDarkDark">
      <summary>
            The system-defined color that is the dark shadow color of a 3-D element. The dark shadow color is applied to the parts of a 3-D element that are the darkest color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ControlLight">
      <summary>
            The system-defined color that is the light color of a 3-D element. The light color is applied to parts of a 3-D element that face the light source.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ControlLightLight">
      <summary>
            The system-defined highlight color of a 3-D element. The highlight color is applied to the parts of a 3-D element that are the lightest color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ControlText">
      <summary>
            The system-defined color of text in a 3-D element.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Coral">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.CornflowerBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Cornsilk">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Crimson">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Cyan">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkCyan">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGoldenrod">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkKhaki">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkMagenta">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOliveGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOrange">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOrchid">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkRed">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSalmon">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSeaGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkTurquoise">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkViolet">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DeepPink">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DeepSkyBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Desktop">
      <summary>
            The system-defined color of the desktop.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DimGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DodgerBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Firebrick">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.FloralWhite">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ForestGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Fuchsia">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Gainsboro">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.GhostWhite">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Gold">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Goldenrod">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.GradientActiveCaption">
      <summary>
            The system-defined color of the lightest color in the color gradient of an active window's title bar.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.GradientInactiveCaption">
      <summary>
            The system-defined color of the lightest color in the color gradient of an inactive window's title bar.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Gray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.GrayText">
      <summary>
            The system-defined color of dimmed text. Items in a list that are disabled are displayed in dimmed text.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Green">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.GreenYellow">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Highlight">
      <summary>
            The system-defined color of the background of selected items. This includes selected menu items as well as selected text.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.HighlightText">
      <summary>
            The system-defined color of the text of selected items.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Honeydew">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.HotPink">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.HotTrack">
      <summary>
            The system-defined color used to designate a hot-tracked item. Single-clicking a hot-tracked item executes the item.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.InactiveBorder">
      <summary>
            The system-defined color of an inactive window's border.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.InactiveCaption">
      <summary>
            The system-defined color of the background of an inactive window's title bar.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.InactiveCaptionText">
      <summary>
            The system-defined color of the text in an inactive window's title bar.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.IndianRed">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Indigo">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Info">
      <summary>
            The system-defined color of the background of a ToolTip.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.InfoText">
      <summary>
            The system-defined color of the text of a ToolTip.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Ivory">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Khaki">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Lavender">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LavenderBlush">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LawnGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LemonChiffon">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightCoral">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightCyan">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGoldenrodYellow">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightPink">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSalmon">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSeaGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSkyBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSlateGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSteelBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightYellow">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Lime">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LimeGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Linen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Magenta">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Maroon">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumAquamarine">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumOrchid">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumPurple">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSeaGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSlateBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSpringGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumTurquoise">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumVioletRed">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Menu">
      <summary>
            The system-defined color of a menu's background.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MenuBar">
      <summary>
            The system-defined color of the background of a menu bar.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MenuHighlight">
      <summary>
            The system-defined color used to highlight menu items when the menu appears as a flat menu.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MenuText">
      <summary>
            The system-defined color of a menu's text.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MidnightBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MintCream">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MistyRose">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Moccasin">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.NavajoWhite">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Navy">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.OldLace">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Olive">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.OliveDrab">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Orange">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.OrangeRed">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Orchid">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PaleGoldenrod">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PaleGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PaleTurquoise">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PaleVioletRed">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PapayaWhip">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PeachPuff">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Peru">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Pink">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Plum">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.PowderBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Purple">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Red">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.RosyBrown">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.RoyalBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SaddleBrown">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Salmon">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SandyBrown">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.ScrollBar">
      <summary>
            The system-defined color of the background of a scroll bar.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SeaGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SeaShell">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Sienna">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Silver">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SkyBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SlateBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SlateGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Snow">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SpringGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SteelBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Tan">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Teal">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Thistle">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Tomato">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Transparent">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Turquoise">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Violet">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Wheat">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.White">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.WhiteSmoke">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Window">
      <summary>
            The system-defined color of the background in the client area of a window.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.WindowFrame">
      <summary>
            The system-defined color of a window frame.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.WindowText">
      <summary>
            The system-defined color of the text in the client area of a window.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Yellow">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.YellowGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkBlue2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkCyan2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGoldenrod2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGray2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGreen2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGrey">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkGrey2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkKhaki2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkMagenta2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOliveGreen2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOrange2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkOrchid2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkRed2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSalmon2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSeaGreen2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateBlue2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateGray2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateGrey">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkSlateGrey2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkTurquoise2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DarkViolet2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.DimGrey">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.Grey">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightBlue2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightCoral2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightCyan2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGoldenrodYellow2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGray2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGreen2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGrey">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightGrey2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightPink2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSalmon2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSeaGreen2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSkyBlue2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSlateGray2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSlateGrey">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSlateGrey2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightSteelBlue2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.LightYellow2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumAquamarine2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumBlue2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumOrchid2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumPurple2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSeaGreen2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSlateBlue2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumSpringGreen2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumTurquoise2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.MediumVioletRed2010">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.KnownColor.SlateGrey">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="T:GrapeCity.Core.SchemeColor">
      <summary>
            Represents a scheme color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeColor.Default">
      <summary>
            Represents an empty <see cref="T:GrapeCity.Core.SchemeColor" /> value.
            </summary>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.CreateHslColor(System.Double,System.Double,System.Double)">
      <summary>
            Creates the color represented in HLS color.
            </summary>
      <param name="hue">A double value indicates the angular value describing the wavelength. The value must be in 0..360.</param>
      <param name="luminance">A double value indicates the luminance referring to the lightness or darkness of the color. The value must be in 0.0..1.0. 0.0 referring to maximal dark (black) and 1.0 referring to maximal white.</param>
      <param name="saturation">A double value indicates the saturation referring to the purity of the hue. The value must be in 0.0..1.0.. 0.0 referring to grey, 1.0 referring to the purest form of the hue.</param>
      <returns>A <see cref="T:GrapeCity.Core.SchemeColor" /> value represents the color</returns>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.CreatePresetColor(System.Int16)">
      <summary>
            Creates the preset color.
            </summary>
      <param name="colorIndex">The preset color index.</param>
      <returns>A <see cref="T:GrapeCity.Core.SchemeColor" /> value represents the color</returns>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.CreateThemeColor(GrapeCity.Core.SchemeThemeColors)">
      <summary>
            Creates the theme color.
            </summary>
      <param name="themeColor">The theme color.</param>
      <returns>A <see cref="T:GrapeCity.Core.SchemeColor" /> value represents the color</returns>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.GetColorTransform(GrapeCity.Core.ColorTransformType)">
      <summary>
            Get color transform of this color.
            </summary>
      <param name="type">type color transform</param>
      <returns>color transform of this color</returns>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.RemoveColorTransform(GrapeCity.Core.ColorTransformType)">
      <summary>
            Remove color transform for this color.
            </summary>
      <param name="type"></param>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.Apply(GrapeCity.Core.ColorTransform)">
      <summary>
            Applies the specified <see cref="T:GrapeCity.Core.ColorTransform" /> value to this <see cref="T:GrapeCity.Core.SchemeColor" /> color.
            </summary>
      <param name="colorTransform">The <see cref="T:GrapeCity.Core.ColorTransform" /> value to apply.</param>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.CreateRgbColor(System.Int32)">
      <summary>
            Creates the RGB color. The alpha color channel is set to 255.
            </summary>
      <param name="rgb">The RGB color components.</param>
      <returns>A <see cref="T:GrapeCity.Core.SchemeColor" /> value represents the color</returns>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.CreateArgbColor(System.Int32)">
      <summary>
            Creates the ARGB color.
            </summary>
      <param name="argb">The ARGB color components.</param>
      <returns>A <see cref="T:GrapeCity.Core.SchemeColor" /> value represents the color</returns>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.CreateArgbColor(System.Int32,System.Int32,System.Int32,System.Byte)">
      <summary>
            Creates the ARGB color.
            </summary>
      <param name="red">The red color component.</param>
      <param name="green">The green color component.</param>
      <param name="blue">The blue color component.</param>
      <param name="alpha">The alpha color component.</param>
      <returns>A <see cref="T:GrapeCity.Core.SchemeColor" /> value represents the color</returns>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.CreateIndexedColor(System.Int32)">
      <summary>
             Creates the Indexed color.
            </summary>
      <param name="colorIndex">The color index.</param>
      <returns>A <see cref="T:GrapeCity.Core.SchemeColor" /> value represents the color</returns>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.Equals(GrapeCity.Core.SchemeColor)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.IsDefault">
      <summary>
            Indicates whether the specified SchemeColor is default.
            </summary>
      <returns>
        <c>true</c> if this instance isn't set; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Core.SchemeColor.IsAutoColor">
      <summary>
            Gets a value indicating whether this color represent an automatic color.
            </summary>
      <value>
        <c>true</c> if this color represent an automatic color; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:GrapeCity.Core.ColorType">
      <summary>
            Specifies the scheme color type.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorType.ARGB">
      <summary>
            Color is determined by values of alpha, red, green, and blue.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorType.SchemeColor">
      <summary>
            Color is defined by an application-specific scheme.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorType.Unspecified">
      <summary>
            Color is not defined.
            </summary>
    </member>
    <member name="T:GrapeCity.Core.SchemeThemeColors">
      <summary>
            Represents a scheme color value.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.NotThemeColor">
      <summary>
            Specifies no theme color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Accent1">
      <summary>
            Represents the 1st accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Accent2">
      <summary>
            Represents the 2nd accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Accent3">
      <summary>
            Represents the 3rd accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Accent4">
      <summary>
            Represents the 4th accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Accent5">
      <summary>
            Represents the 5th accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Accent6">
      <summary>
            Represents the 6th accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Background1">
      <summary>
            Represents the 1st background color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Background2">
      <summary>
            Represents the 2nd background color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.FollowedHyperlink">
      <summary>
            Represents the followed hyperlink color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Hyperlink">
      <summary>
            Represents the hyperlink color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Text1">
      <summary>
            Represents the 1st text color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Text2">
      <summary>
            Represents the 2nd text color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.PhColor">
      <summary>
            Represents the style color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Dark1">
      <summary>
            Represents the 1st dark color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Dark2">
      <summary>
            Represents the 2nd dark color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Light1">
      <summary>
            Represents the 1st light color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.SchemeThemeColors.Light2">
      <summary>
            Represents the 2nd light color.
            </summary>
    </member>
    <member name="T:GrapeCity.Core.ColorTransform">
      <summary>
            Represents the color transform.
            </summary>
    </member>
    <member name="M:GrapeCity.Core.ColorTransform.IsEmpty">
      <summary>
            Is empty color transform.
            </summary>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Core.ColorTransform.Value">
      <summary>
            Return value of color transform.
            </summary>
    </member>
    <member name="P:GrapeCity.Core.ColorTransform.Type">
      <summary>
            Return type of color transform.
            </summary>
    </member>
    <member name="M:GrapeCity.Core.ColorTransform.Create(GrapeCity.Core.ColorTransformType,System.Double)">
      <summary>
            Creates a <see cref="T:GrapeCity.Core.ColorTransform" /> value.
            </summary>
      <param name="type">The type of color transform.</param>
      <param name="value">The value of color transform.</param>
      <returns>The new <see cref="T:GrapeCity.Core.ColorTransform" /> value.</returns>
    </member>
    <member name="T:GrapeCity.Core.ColorTransformType">
      <summary>
            Represents the type which a defined color transforms.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Alpha">
      <summary>
            Specifies its input color with the specific opacity, but with its color unchanged.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.AlphaModulation">
      <summary>
            Specifies a more or less opaque version of its input color.
            An alpha modulate never increases the alpha beyond 100%.
            A 200% alpha modulate makes a input color twice as opaque as before.
            A 50% alpha modulate makes a input color half as opaque as before.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.AlphaOffset">
      <summary>
            Specifies a more or less opaque version of its input color.
            Increases or decreases the input alpha percentage by the specified percentage offset.
            The transformed alpha values are limited to a range of 0 to 100%.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Blue">
      <summary>
            Specifies the input color with the specific blue component, but with the red and green color components unchanged.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.BlueModulation">
      <summary>
            Specifies the input color with its blue component modulated by the given percentage.
            A 50% blue modulate reduces the blue component by half. A 200% blue modulate doubles the blue component.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.BlueOffset">
      <summary>
            Specifies the input color with its blue component shifted, but with its red and green color components unchanged.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Complement">
      <summary>
            Specifies that the color rendered should be the complement of its input color with the complement being defined as such.
            Two colors are called complementary if, when mixed they produce a shade of grey.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Gamma">
      <summary>
            Specifies that the output color rendered by the generating application should be the sRGB gamma shift of the input color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Gray">
      <summary>
            Specifies a grayscale of its input color, taking into relative intensities of the red, green, and blue primaries.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Green">
      <summary>
            Specifies the input color with the specified green component, but with its red and blue color components unchanged.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.GreenModulation">
      <summary>
            Specifies the input color with its green component modulated by the given percentage.
            A 50% green modulate reduces the green component by half. A 200% green modulate doubles the green component.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.GreenOffset">
      <summary>
            Specifies the input color with its green component shifted, but with its red and blue color components unchanged.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Hue">
      <summary>
            Specifies the input color with the specified hue, but with its saturation and luminance unchanged.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.HueModulation">
      <summary>
            Specifies the input color with its hue modulated by the given percentage.
            A 50% hue modulate decreases the angular hue value by half. A 200% hue modulate doubles the angular hue value.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.HueOffset">
      <summary>
            Specifies the input color with its hue shifted, but with its saturation and luminance unchanged.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Inverse">
      <summary>
            Specifies the inverse of its input color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.InverseGamma">
      <summary>
            Specifies that the output color rendered by the generating application should be the inverse sRGB gamma shift of the input color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Luminance">
      <summary>
            Specifies the input color with the specified luminance, but with its hue and saturation unchanged. Typically luminance values fall in the range [0%, 100%].
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.LuminanceModulation">
      <summary>
            Specifies the input color with its luminance modulated by the given percentage.
            A 50% luminance modulate reduces the luminance by half. A 200% luminance modulate doubles the luminance.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.LuminanceOffset">
      <summary>
            Specifies the input color with its luminance shifted, but with its hue and saturation unchanged.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Red">
      <summary>
            Specifies the input color with the specified red component, but with its green and blue color components unchanged.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.RedModulation">
      <summary>
            Specifies the input color with its red component modulated by the given percentage.
            A 50% red modulate reduces the red component by half. A 200% red modulate doubles the red component.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.RedOffset">
      <summary>
            Specifies the input color with its red component shifted, but with its green and blue color components unchanged.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Saturation">
      <summary>
            Specifies the input color with the specified saturation, but with its hue and luminance unchanged. Typically saturation values fall in the range [0%, 100%].
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.SaturationModulation">
      <summary>
            Specifies the input color with its saturation modulated by the given percentage.
            A 50% saturation modulate reduces the saturation by half. A 200% saturation modulate doubles the saturation.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.SaturationOffset">
      <summary>
            Specifies the input color with its saturation shifted, but with its hue and luminance unchanged. A 10% offset to 20% saturation yields 30% saturation.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Shade">
      <summary>
            Specifies a darker version of its input color. A 10% shade is 10% of the input color combined with 90% black.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ColorTransformType.Tint">
      <summary>
            Specifies a lighter version of its input color. A 10% tint is 10% of the input color combined with 90% white.
            </summary>
    </member>
    <member name="T:GrapeCity.Core.Theme">
      <summary>
            Represents a spreadsheet theme.
            </summary>
    </member>
    <member name="M:GrapeCity.Core.Theme.SetDefaultFontSize(System.Double)">
      <summary>
            Internal use only.
            </summary>
      <param name="fontSize"></param>
    </member>
    <member name="P:GrapeCity.Core.Theme.Name">
      <summary>
            Gets the name of this <see cref="T:GrapeCity.Core.Theme" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Core.Theme.ColorScheme">
      <summary>
            Gets a <see cref="!:Drawing.ThemeColorScheme" /> object that represents the color scheme of a <see cref="T:GrapeCity.Core.Theme" />. 
            </summary>
    </member>
    <member name="P:GrapeCity.Core.Theme.FontScheme">
      <summary>
            Gets a <see cref="P:GrapeCity.Core.Theme.FontScheme" /> object that represents the font scheme of a <see cref="T:GrapeCity.Core.Theme" />. 
            </summary>
    </member>
    <member name="P:GrapeCity.Core.Theme.EffectScheme">
      <summary>
            Gets a <see cref="!:Drawing.ThemeEffectScheme" /> object that represents the effect scheme of a <see cref="T:GrapeCity.Core.Theme" />.
            </summary>
      <remarks>This property update data for importing/exporting XLSX only. There is no effect in run-time yet.</remarks>
    </member>
    <member name="M:GrapeCity.Core.Theme.GetRenderColor(GrapeCity.Core.SchemeColor,GrapeCity.Spreadsheet.Color)">
      <summary>
            Gets the display color from the specified scheme color.
            </summary>
      <param name="schemeColor">The scheme color.</param>
      <returns>A <see cref="T:GrapeCity.Spreadsheet.Color" /> value represents the display color.</returns>
      <remarks>The <paramref name="schemeColor" /> value can be modified after exists from this function.</remarks>
    </member>
    <member name="M:GrapeCity.Core.Theme.GetRenderFont(GrapeCity.Spreadsheet.StyleFormat@)">
      <summary>
            Gets the display font from the special font.
            </summary>
      <param name="styleFormat">The style format which contains the raw font.</param>
    </member>
    <member name="M:GrapeCity.Core.Theme.GetRenderFont(GrapeCity.Spreadsheet.Font@)">
      <summary>
            Gets the display font from the special font.
            </summary>
      <param name="font">The raw font.</param>
    </member>
    <member name="M:GrapeCity.Core.Theme.GrapeCity#Spreadsheet#IO#Exchangeable#IExtensibleObject{GrapeCity#Core#Theme}#CreateExtension(System.Xml.XmlReader,GrapeCity.Spreadsheet.IO.OpenXml.ImportContext,System.Guid)">
      <summary>
            Create an <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object from the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.
            </summary>
      <param name="reader">A <see cref="T:System.Xml.XmlReader" /> object indicates the Xml reader.</param>
      <param name="context">An <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.ImportContext" /> object indicates the import context data.</param>
      <param name="key">A <see cref="T:System.Guid" /> value indicates the GUID identifier of the extension.</param>
      <returns>The <see cref="T:GrapeCity.Spreadsheet.IO.Exchangeable.IExtension`1" /> object that indicates by the specified <see cref="T:GrapeCity.Spreadsheet.IO.OpenXml.Extension" /> data.</returns>
    </member>
    <member name="T:GrapeCity.Core.ThemeColorScheme">
      <summary>
              An interface used to defines a set of colors which are referenced to as a color scheme. The
              color scheme is responsible for defining a list a twelve colors. The twelve colors consist of
              six accent colors, two dark colors, two light colors and a color for each of a hyperlink and
              followed hyperlink.
            </summary>
    </member>
    <member name="P:GrapeCity.Core.ThemeColorScheme.Name">
      <summary>
              The common name for this color scheme.
            </summary>
    </member>
    <member name="M:GrapeCity.Core.ThemeColorScheme.Load(System.String)">
      <summary>
            Loads the color scheme of a <see cref="T:GrapeCity.Core.Theme" /> from a file.
            </summary>
      <param name="filename">A string value indicates the color scheme file to load.</param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Core.ThemeColors">
      <summary>
            Represents the set of twelve colors come together to form the color scheme for a theme.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Background1">
      <summary>
            Represents the 1st background color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Text1">
      <summary>
            Represents the 1st text color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Background2">
      <summary>
            Represents the 2nd background color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Text2">
      <summary>
            Represents the 2nd text color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent1">
      <summary>
            Represents the 1st accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent2">
      <summary>
            Represents the 2nd accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent3">
      <summary>
            Represents the 3rd accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent4">
      <summary>
            Represents the 4th accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent5">
      <summary>
            Represents the 5th accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Accent6">
      <summary>
            Represents the 6th accent color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.Hyperlink">
      <summary>
            Represents the hyperlink color.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeColors.FollowedHyperlink">
      <summary>
            Represents the followed hyperlink color.
            </summary>
    </member>
    <member name="T:GrapeCity.Core.ThemeEffectScheme">
      <summary>
            Represents the effects scheme of a theme.
            </summary>
    </member>
    <member name="P:GrapeCity.Core.ThemeEffectScheme.Name">
      <summary>
            The common name for this effect scheme.
            </summary>
    </member>
    <member name="M:GrapeCity.Core.ThemeEffectScheme.Load(System.String)">
      <summary>
            Loads the color scheme of a <see cref="T:GrapeCity.Core.Theme" /> from a file.
            </summary>
      <param name="filename">A string value indicates the color scheme file to load.</param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Core.ThemeFontScheme">
      <summary>
              Represents the font scheme within the theme. The font scheme consists of a pair of major and
              minor fonts for which to used in a document.
            </summary>
    </member>
    <member name="P:GrapeCity.Core.ThemeFontScheme.Major">
      <summary>
            Gets the font setting for the "Headings" in a document.
            </summary>
    </member>
    <member name="P:GrapeCity.Core.ThemeFontScheme.Minor">
      <summary>
            Gets the font settings for the "Body" of a document.
            </summary>
    </member>
    <member name="P:GrapeCity.Core.ThemeFontScheme.Name">
      <summary>
              The name of the font scheme shown in the user interface
            </summary>
    </member>
    <member name="M:GrapeCity.Core.ThemeFontScheme.Load(System.String)">
      <summary>
            Loads the color scheme of a <see cref="T:GrapeCity.Core.Theme" /> from a file.
            </summary>
      <param name="filename">A string value indicates the color scheme file to load.</param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Core.ThemeFontLanguage">
      <summary>
            Represents one of the three language fonts contained in the <see cref="T:GrapeCity.Core.ThemeFonts" /> collection.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeFontLanguage.Latin">
      <summary>
            Represents the Latin font face.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeFontLanguage.ComplexScript">
      <summary>
            Represents the font face for Complex Script languages. The Complex Script language collection supports Arabic, Georgian, Hebrew, Indian, Thai and Vietnamese alphabets.
            </summary>
    </member>
    <member name="F:GrapeCity.Core.ThemeFontLanguage.EastAsian">
      <summary>
            Represents the East Asian font face. East Asian Languages include Simplified Chinese, Traditional Chinese, Japanese, and Korean.
            </summary>
    </member>
    <member name="T:GrapeCity.Core.ThemeFonts">
      <summary>
              This element defines the set of fonts which are to be used under different languages or locals.
            </summary>
    </member>
    <member name="M:GrapeCity.Core.ThemeFonts.SetFont(System.Globalization.CultureInfo,System.String)">
      <summary>
            Sets the display font for the specified <see cref="T:System.Globalization.CultureInfo" />.
            </summary>
      <param name="cultureInfo">The culture information.</param>
      <param name="typeface">The name of font.</param>
      <returns>A string value represents the display font.</returns>
    </member>
    <member name="M:GrapeCity.Core.ThemeFonts.GetFont(System.Globalization.CultureInfo)">
      <summary>
            Gets the display font for the specified <see cref="T:System.Globalization.CultureInfo" />.
            </summary>
      <param name="cultureInfo">The culture information.</param>
      <returns>A <see cref="T:GrapeCity.Core.TextFont" /> object represents the display font.</returns>
    </member>
    <member name="P:GrapeCity.Core.ThemeFonts.Item(GrapeCity.Core.ThemeFontLanguage)">
      <summary>
            Gets or sets one of the three language fonts contained in the <see cref="T:GrapeCity.Core.ThemeFonts" /> collection.
            </summary>
      <param name="index">The index value of the language font.</param>
      <returns>A string value represents the language font.</returns>
    </member>
    <member name="T:GrapeCity.Core.TextFont">
      <summary>
              This element specifies that an East Asian(or Latin or complex) font be used for a specific run of text. This font is
              specified with a typeface attribute much like the others but is specifically classified as an East Asian(or Latin or
              complex) font.
            </summary>
    </member>
    <member name="P:GrapeCity.Core.TextFont.Typeface">
      <summary>
            Gets the typeface, or name of the font that is to be used
            </summary>
    </member>
    <member name="P:GrapeCity.Core.TextFont.CharSet">
      <summary>
            Gets a <see cref="T:GrapeCity.Spreadsheet.CharacterSet" /> value that specifies the GDI character set that this font uses.
            </summary>
    </member>
    <member name="T:GrapeCity.Core.AutoLoadAttribute">
      <summary>
            Represents an attribute indicating whether the class will be loaded automatically.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="M:GrapeCity.Core.AutoLoadAttribute.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Core.AutoLoadAttribute" /> class.
            </summary>
      <param name="enabled">if set to <c>true</c>, the class will be loaded automatically; otherwise, <c>false</c>.</param>
    </member>
    <member name="P:GrapeCity.Core.AutoLoadAttribute.Enabled">
      <summary>
            Gets a value indicating whether the class will be loaded automatically.
            </summary>
      <value>
        <c>true</c> if the class will be loaded automatically; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:GrapeCity.Core.ChunkedMemoryStream">
      <summary>
            Creates a stream whose backing store is memory.
            </summary>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Core.ChunkedMemoryStream" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Core.ChunkedMemoryStream" /> class.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
    </member>
    <member name="P:GrapeCity.Core.ChunkedMemoryStream.CanRead">
      <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
      <returns>true if the stream supports reading; otherwise, false.</returns>
    </member>
    <member name="P:GrapeCity.Core.ChunkedMemoryStream.CanSeek">
      <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
      <returns>true if the stream supports seeking; otherwise, false.</returns>
    </member>
    <member name="P:GrapeCity.Core.ChunkedMemoryStream.CanWrite">
      <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
      <returns>true if the stream supports writing; otherwise, false.</returns>
    </member>
    <member name="P:GrapeCity.Core.ChunkedMemoryStream.Length">
      <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
      <returns>A long value representing the length of the stream in bytes.</returns>
    </member>
    <member name="P:GrapeCity.Core.ChunkedMemoryStream.Position">
      <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
      <returns>The current position within the stream.</returns>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.Flush">
      <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
      <param name="offset">A byte offset relative to the <paramref name="origin" /> parameter.</param>
      <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</param>
      <returns>
            The new position within the current stream.
            </returns>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.SetLength(System.Int64)">
      <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
      <param name="value">The desired length of the current stream in bytes.</param>
      <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
      <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1) replaced by the bytes read from the current source.</param>
      <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</param>
      <param name="count">The maximum number of bytes to be read from the current stream.</param>
      <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
      <param name="buffer">An array of bytes. This method copies <paramref name="count" /> bytes from <paramref name="buffer" /> to the current stream.</param>
      <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</param>
      <param name="count">The number of bytes to be written to the current stream.</param>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.WriteByte(System.Byte)">
      <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
      <param name="value">The byte to write to the stream.</param>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.ReadByte">
      <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
      <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.WriteTo(System.IO.Stream)">
      <summary>
            Writes to.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:GrapeCity.Core.ChunkedMemoryStream.ToArray">
      <summary>
            Toes the array.
            </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Core.ReturnEventArgs`1">
      <summary>
            Provides data for the Return event.
            </summary>
      <typeparam name="T">The type of the return value.</typeparam>
    </member>
    <member name="M:GrapeCity.Core.ReturnEventArgs`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Core.ReturnEventArgs`1" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Core.ReturnEventArgs`1.#ctor(`0)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Core.ReturnEventArgs`1" /> class with the return value.
            </summary>
      <param name="result">The value to be returned.</param>
    </member>
    <member name="P:GrapeCity.Core.ReturnEventArgs`1.Result">
      <summary>
            Gets or sets the value that is returned by the function.
            </summary>
      <value>
            The value that is returned by the function.
            </value>
    </member>
    <member name="T:GrapeCity.Drawing.Image">
      <summary>
            Represents an embedded image in the workbook.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Image.Dispose">
      <summary>
            Releases all allocated resources.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.AlternateData`1">
      <summary>
            Represents an object which allows the stored data to be overriden by other object.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.AlternateData`1.Data">
      <summary>
            Gets the raw data of this picture.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.AlternateData`1.Data2">
      <summary>
            Gets or sets the tag object of this picture.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.Brush">
      <summary>
            Represents an abstract brush.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Brush.Visible">
      <summary>
            Returns or sets an Boolean value that determines whether the object is visible. Read/write.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Brush.Transparency">
      <summary>
            Returns or sets the degree of transparency of the specified brush as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Brush.ResetTransparency">
      <summary>
            Resets transparency from the brush.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Brush.GetColor">
      <summary>
            Gets the solid color from this brush.
            </summary>
      <returns>The solid color from this brush</returns>
    </member>
    <member name="P:GrapeCity.Drawing.Brush.RotateWithShape">
      <summary>
            Gets or sets a value indicating whether the fill style should rotate with the shape.
            </summary>
      <value>
        <c>true</c> if the fill style should rotate with the shape; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Drawing.Brush.ApplyColorTransform(GrapeCity.Core.ColorTransform)">
      <summary>
            Creates new brush from the current brush with the specified <see cref="T:GrapeCity.Core.ColorTransform" /> effect.
            </summary>
      <param name="colorTransform">The color transform that apply to the current brush.</param>
    </member>
    <member name="M:GrapeCity.Drawing.Brush.Clone">
      <summary>
            Creates a new <see cref="T:GrapeCity.Drawing.Brush" /> instance with the same value as an existing brush.
            </summary>
      <returns>The cloned brush.</returns>
    </member>
    <member name="T:GrapeCity.Drawing.SolidColorBrush">
      <summary>
            Paints an area with a solid color.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.SolidColorBrush.#ctor(GrapeCity.Core.SchemeColor)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.SolidColorBrush" /> struct.
            </summary>
      <param name="color">Color of the theme.</param>
    </member>
    <member name="P:GrapeCity.Drawing.SolidColorBrush.Transparency">
      <summary>
            Returns or sets the degree of transparency of the specified brush as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.SolidColorBrush.GetColor">
      <summary>
            Gets the solid color from this brush.
            </summary>
      <returns>The solid color from this brush</returns>
    </member>
    <member name="P:GrapeCity.Drawing.SolidColorBrush.Color">
      <summary>
            Gets the color of this solid color brush.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.SolidColorBrush.ApplyColorTransform(GrapeCity.Core.ColorTransform)">
      <summary>
            Creates new brush from the current brush with the specified <see cref="T:GrapeCity.Core.ColorTransform" /> effect.
            </summary>
      <param name="colorTransform">The color transform that apply to the current brush.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Drawing.SolidColorBrush.Clone">
      <summary>
            Creates a new <see cref="T:GrapeCity.Drawing.Brush" /> instance with the same value as an existing brush.
            </summary>
      <returns>The cloned brush.</returns>
    </member>
    <member name="T:GrapeCity.Drawing.GradientBrush">
      <summary>
            Represents a gradient composed of gradient stops.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.GradientBrush.ApplyColorTransform(GrapeCity.Core.ColorTransform)">
      <summary>
            Creates new brush from the current brush with the specified <see cref="T:GrapeCity.Core.ColorTransform" /> effect.
            </summary>
      <param name="colorTransform">The color transform that apply to the current brush.</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.GradientStops">
      <summary>
            Get the an array of gradient stops.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.Angle">
      <summary>
            Gets the angle of this <see cref="T:GrapeCity.Drawing.GradientBrush" />.
            </summary>
      <value>The angle of this <see cref="T:GrapeCity.Drawing.GradientBrush" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.Scaled">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Drawing.GradientBrush" /> is scaled.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Drawing.GradientBrush" /> is scaled; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.PathShadeType">
      <summary>
            Defines the PathShadeTypeValues enumeration.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.FillToRect">
      <summary>
            Returns a rectangle that guides gradient brush through drawing.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.TiteRect">
      <summary>
            Returns the Tile Rectangle of gradient brush.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.TileFlipMode">
      <summary>
            Returns the Tile Flip Mode of gradient brush.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.Transparency">
      <summary>
            Returns or sets the degree of transparency of the specified brush as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.GradientColorType">
      <summary>
            Returns specifies the type of gradient used in a shape's fill.
            </summary>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.PresetGradientType">
      <summary>
            Returns specifies the PresetGradientType type of gradient used in a shape's fill.
            </summary>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.GradientStyle">
      <summary>
            Get gradient style from this brush.
            </summary>
      <returns>return gradient Style from this brush.</returns>
    </member>
    <member name="P:GrapeCity.Drawing.GradientBrush.Variant">
      <summary>
            Get gradient variant from this brush.
            </summary>
      <returns>return gradient variant from this brush.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.GradientBrush.GetColor">
      <summary>
            Gets the solid color from this brush.
            </summary>
      <returns>The solid color from this brush</returns>
    </member>
    <member name="M:GrapeCity.Drawing.GradientBrush.Clone">
      <summary>
            Creates a new <see cref="T:GrapeCity.Drawing.Brush" /> instance with the same value as an existing brush.
            </summary>
      <returns>The cloned brush.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.GradientBrush.ApplyTransparent(System.Double,System.Double)">
      <summary>
            Applies transparent for gradient stops.
            </summary>
      <param name="fromTransparent">The start transparent value.</param>
      <param name="toTransparent">The end transparent value.</param>
    </member>
    <member name="T:GrapeCity.Drawing.ImageBrush">
      <summary>
            This element specifies the type of picture fill that the picture object has
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.ImageBrush.Transparency">
      <summary>
            Returns or sets the degree of transparency of the specified brush as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.ImageBrush.Alignment">
      <summary>
            Gets or sets the texture alignment.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.ImageBrush.Aspect">
      <summary>
            Gets or set an <see cref="T:GrapeCity.Drawing.AspectRatio" /> value indicating how the fill image aspect ratio will be preserved.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.ImageBrush.TileFlipMode">
      <summary>
            Gets or sets the tile flip mode indicates how to flip the picture of a tile region when using it to fill a larger fill region.
            </summary>
      <value>The tile flip mode.</value>
    </member>
    <member name="P:GrapeCity.Drawing.ImageBrush.TitlePictureAsTexture">
      <summary>
            Gets a boolean value indicating whether the brush is texture.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.ImageBrush.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.ImageBrush" /> class.
            </summary>
      <param name="file">The full path to image file.</param>
    </member>
    <member name="M:GrapeCity.Drawing.ImageBrush.#ctor(System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.ImageBrush" /> class.
            </summary>
      <param name="stream">The image data.</param>
      <param name="contentType">The content type of the image data.</param>
    </member>
    <member name="P:GrapeCity.Drawing.ImageBrush.Tag">
      <summary>
            Gets or sets the object that contains data about the image brush.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.ImageBrush.Data">
      <summary>
            Gets the binary data of the image.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.ImageBrush.ContentType">
      <summary>
            Gets the content type of the image.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.ImageBrush.Link">
      <summary>
            Gets the linked file name.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.ImageBrush.Clone">
      <summary>
            Creates a new <see cref="T:GrapeCity.Drawing.Brush" /> instance with the same value as an existing brush.
            </summary>
      <returns>The cloned brush.</returns>
    </member>
    <member name="T:GrapeCity.Drawing.GroupBrush">
      <summary>
            This element specifies a group fill. When specified, this setting indicates that the parent element is part of a group and should inherit the fill properties of the group.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.GroupBrush.Clone">
      <summary>
            Creates a new <see cref="T:GrapeCity.Drawing.Brush" /> instance with the same value as an existing brush.
            </summary>
      <returns>The cloned brush.</returns>
    </member>
    <member name="T:GrapeCity.Drawing.PatternBrush">
      <summary>
            Represents a pattern brush.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.PatternBrush.GetColor">
      <summary>
            Gets the solid color from this brush.
            </summary>
      <returns>The solid color from this brush</returns>
    </member>
    <member name="M:GrapeCity.Drawing.PatternBrush.ApplyColorTransform(GrapeCity.Core.ColorTransform)">
      <summary>
            Creates new brush from the current brush with the specified <see cref="T:GrapeCity.Core.ColorTransform" /> effect.
            </summary>
      <param name="colorTransform">The color transform that apply to the current brush.</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Drawing.PatternBrush.Transparency">
      <summary>
            Returns or sets the degree of transparency of the specified brush as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.PatternBrush.BackgroundThemeColor">
      <summary>
            Gets the background color of this pattern brush.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.PatternBrush.ForegroundThemeColor">
      <summary>
            Gets the foreground color of this pattern brush.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.PatternBrush.Clone">
      <summary>
            Creates a new <see cref="T:GrapeCity.Drawing.Brush" /> instance with the same value as an existing brush.
            </summary>
      <returns>The cloned brush.</returns>
    </member>
    <member name="T:GrapeCity.Drawing.SchemeGradientStop">
      <summary>
            Represents a gradient stop.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.SchemeGradientStop.Color">
      <summary>
            Get the color of the gradient stop.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.SchemeGradientStop.Position">
      <summary>
            Get or set the position of the gradient stop.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.SchemeGradientStop.#ctor(GrapeCity.Core.SchemeColor,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.SchemeGradientStop" /> struct.
            </summary>
      <param name="color">The color of the gradient stop.</param>
      <param name="postion">The position of the gradient stop.</param>
    </member>
    <member name="M:GrapeCity.Drawing.SchemeGradientStop.Equals(GrapeCity.Drawing.SchemeGradientStop)">
      <summary>
            Indicates whether the current value is equal to another value of the same type.
            </summary>
      <param name="other">An <see cref="T:GrapeCity.Drawing.SchemeGradientStop" /> value to compare with this value.</param>
      <returns>
        <c>true</c> if the current value is equal to the other parameter; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Drawing.PatternType">
      <summary>
            Specifies the fill pattern used in a shape.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent5">
      <summary>
            5% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent10">
      <summary>
            10% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent20">
      <summary>
            20% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent25">
      <summary>
            25% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent30">
      <summary>
            30% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent40">
      <summary>
            40% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent50">
      <summary>
            50% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent60">
      <summary>
            60% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent70">
      <summary>
            70% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent75">
      <summary>
            75% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent80">
      <summary>
            80% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Percent90">
      <summary>
            90% of the foreground color
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Horizontal">
      <summary>
            The horizontal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Vertical">
      <summary>
            The vertical
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.LightHorizontal">
      <summary>
            The light horizontal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.LightVertical">
      <summary>
            The light vertical
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DarkHorizontal">
      <summary>
            The dark horizontal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DarkVertical">
      <summary>
            The dark vertical
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.NarrowHorizontal">
      <summary>
            The narrow horizontal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.NarrowVertical">
      <summary>
            The narrow vertical
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Cross">
      <summary>
            The cross
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DownwardDiagonal">
      <summary>
            The downward diagonal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.UpwardDiagonal">
      <summary>
            The upward diagonal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.LightDownwardDiagonal">
      <summary>
            The light downward diagonal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.LightUpwardDiagonal">
      <summary>
            The light upward diagonal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DarkDownwardDiagonal">
      <summary>
            The dark downward diagonal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DarkUpwardDiagonal">
      <summary>
            The dark upward diagonal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.WideDownwardDiagonal">
      <summary>
            The wide downward diagonal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.WideUpwardDiagonal">
      <summary>
            The wide upward diagonal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DashedHorizontal">
      <summary>
            The dashed horizontal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DashedVertical">
      <summary>
            The dashed vertical
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DashedDownwardDiagonal">
      <summary>
            The dashed downward diagonal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DashedUpwardDiagonal">
      <summary>
            The dashed upward diagonal
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DiagonalCross">
      <summary>
            The diagonal cross
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.SmallCheck">
      <summary>
            The small check
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.LargeCheck">
      <summary>
            The large check
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.SmallGrid">
      <summary>
            The small grid
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.LargeGrid">
      <summary>
            The large grid
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DotGrid">
      <summary>
            The dot grid
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.SmallConfetti">
      <summary>
            The small confetti
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.LargeConfetti">
      <summary>
            The large confetti
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.HorizontalBrick">
      <summary>
            The horizontal brick
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DiagonalBrick">
      <summary>
            The diagonal brick
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.SolidDiamond">
      <summary>
            The solid diamond
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.OpenDiamond">
      <summary>
            The open diamond
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.DottedDiamond">
      <summary>
            The dotted diamond
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Plaid">
      <summary>
            The plaid
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Sphere">
      <summary>
            The sphere
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Weave">
      <summary>
            The weave
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Divot">
      <summary>
            The divot
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Shingle">
      <summary>
            The shingle
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Wave">
      <summary>
            The wave
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Trellis">
      <summary>
            The trellis
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.ZigZag">
      <summary>
            The zig zag
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PatternType.Unspecified">
      <summary>
            The unspecified pattern
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.TileFlipMode">
      <summary>
            Represents how to flip the contents of a tile region when using it to fill a larger fill region.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.TileFlipMode.None">
      <summary>
            Tiles are not flipped.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.TileFlipMode.Horizontal">
      <summary>
            Tiles are flipped horizontally.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.TileFlipMode.Vertical">
      <summary>
            Tiles are flipped vertically.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.TileFlipMode.HorizontalAndVertical">
      <summary>
            Tiles are flipped both horizontally and vertically.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.PathShadeType">
      <summary>
            Represents the shape of path to follow for a path gradient shade.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PathShadeType.Rectangle">
      <summary>
            Gradient follows a rectangular path.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PathShadeType.Circle">
      <summary>
            Gradient follows a circular path.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PathShadeType.Shape">
      <summary>
            Gradient follows the shape.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.RectAlignment">
      <summary>
            Specifies the alignment (the origin of the coordinate grid) for the tiling of the content (ex. texture fill).
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.RectAlignment.Bottom">
      <summary>
            Bottom alignment
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.RectAlignment.BottomLeft">
      <summary>
            Bottom-left alignment
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.RectAlignment.BottomRight">
      <summary>
            Bottom-right alignment
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.RectAlignment.Center">
      <summary>
            Center alignment
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.RectAlignment.Left">
      <summary>
            Left alignment
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.RectAlignment.Right">
      <summary>
            Right alignment
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.RectAlignment.Top">
      <summary>
            Top alignment
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.RectAlignment.TopLeft">
      <summary>
            Top-left alignment
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.RectAlignment.TopRight">
      <summary>
            Top-right alignment
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.RectAlignment.Unspecified">
      <summary>
            Return value only; indicates a combination of the other states.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.DrawingTextFormat">
      <summary>
            Specifies the format of a text string relative to its layout rectangle.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DrawingTextFormat.None">
      <summary>
            Specifies to clear DrawingTextFormat.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DrawingTextFormat.VertialCenter">
      <summary>
            Specifies that text is vertical-aligned in the center of the layout rectangle.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DrawingTextFormat.Ellipsis">
      <summary>
            Specifies that the text is trimmed to the nearest character, and an ellipsis is inserted at the end of a trimmed line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DrawingTextFormat.Wrap">
      <summary>
            Text wrapping between lines when formatting within a rectangle is enable.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DrawingTextFormat.HorizontalCenter">
      <summary>
            Specifies that text is horizontal-aligned in the center of the layout rectangle.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DrawingTextFormat.HorizontalRight">
      <summary>
            Text will be draw with right alignment.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DrawingTextFormat.VerticalBottom">
      <summary>
            Text will be aligned from bottom to top in the layout rectangle.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.AspectRatio">
      <summary>
            Specifies how the filled image aspect ratio will be preserved.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.AspectRatio.Stretch">
      <summary>
            The new size is increased or decreased to fit the original size (the aspect ratio is not preserved).
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.AspectRatio.AtLeast">
      <summary>
            The new size is scaled to fit the largest dimension (width or height) of the original size. The other dimension is calculated based on the original aspect ratio.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.AspectRatio.AtMost">
      <summary>
            The new size is scaled to fit the smallest dimension (width or height) of the original size. The other dimension is calculated based on the original aspect ratio.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.AspectRatio.ActualSize">
      <summary>
            Uses the new size.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.Effects.BlurEffect">
      <summary>
            Represents a blur effect that is applied to the entire shape, including its fill. All color channels, including alpha, are affected.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.BlurEffect.GrowBounds">
      <summary>
            Gets or sets a value indicating whether the bounds of the object should be grown as a result of the blurring.
            </summary>
      <value>
        <c>true</c> if the bounds of the object should be grown as a result of the blurring; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.BlurEffect.Radius">
      <summary>
            Gets or sets the radius of blur.
            </summary>
      <value>The radius of blur.</value>
    </member>
    <member name="T:GrapeCity.Drawing.Effects.Effect">
      <summary>
            Represents the base class for effect which is applied to the shape by the rendering engine.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Effects.Effect.Clone">
      <summary>
            Creates a new effect that is a copy of the current effect.
            </summary>
      <returns>A new effect that is a copy of the current effect.</returns>
    </member>
    <member name="T:GrapeCity.Drawing.Effects.FillOverlayEffect">
      <summary>
            Represents a fill overlay effect. A fill overlay can be used to specify an additional fill for an object and blend the two fills together.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.FillOverlayEffect.Blend">
      <summary>
            Gets or sets a <see cref="T:GrapeCity.Drawing.Effects.BlendMode" /> value indicating how to blend the fill with the base effect.
            </summary>
      <value>How to blend the fill with the base effect.</value>
    </member>
    <member name="T:GrapeCity.Drawing.Effects.BlendMode">
      <summary>
            Represents how to render effects one on top of another.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.Effects.GlowEffect">
      <summary>
            Represents a glow effect, in which a color blurred outline is added outside the edges of the object.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.GlowEffect.Color">
      <summary>
            Gets or sets the glow color.
            </summary>
      <value>The color of the glow.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.GlowEffect.Radius">
      <summary>
            Gets or sets the radius of the glow.
            </summary>
      <value>The radius of the glow.</value>
    </member>
    <member name="T:GrapeCity.Drawing.Effects.InnerShadowEffect">
      <summary>
            Represents an inner shadow effect. A shadow is applied within the edges of the object according to the parameters given by the attributes.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.InnerShadowEffect.Visible">
      <summary>
            Gets or sets the state visible or hide effect.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.InnerShadowEffect.Color">
      <summary>
            Gets or sets the shadow color.
            </summary>
      <value>The color of the shadow.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.InnerShadowEffect.Radius">
      <summary>
            Gets or sets the blur radius of the shadow.
            </summary>
      <value>The blur radius of the shadow.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.InnerShadowEffect.Direction">
      <summary>
            Gets or sets the direction to offset the shadow.
            </summary>
      <value>The direction to offset the shadow.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.InnerShadowEffect.Distance">
      <summary>
            Gets or sets how far to offset the shadow.
            </summary>
      <value>How far to offset the shadow.</value>
    </member>
    <member name="T:GrapeCity.Drawing.Effects.OuterShadowEffect">
      <summary>
            Represents an outer shadow effect.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.OuterShadowEffect.Alignment">
      <summary>
            Gets or sets the shadow alignment; alignment happens first, effectively setting the origin for scale, skew, and offset.
            </summary>
      <value>The shadow alignment.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.OuterShadowEffect.HorizontalSkew">
      <summary>
            Gets or sets the horizontal skew angle.
            </summary>
      <value>The horizontal skew angle.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.OuterShadowEffect.VerticalSkew">
      <summary>
            Gets or sets the vertical skew angle.
            </summary>
      <value>The vertical skew angle.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.OuterShadowEffect.HorizontalScalingFactor">
      <summary>
            Gets or sets the horizontal scaling factor; negative scaling causes a flip.
            </summary>
      <value>The horizontal scaling factor.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.OuterShadowEffect.VerticalScalingFactor">
      <summary>
            Gets or sets the vertical scaling factor; negative scaling causes a flip.
            </summary>
      <value>The vertical scaling factor.</value>
    </member>
    <member name="T:GrapeCity.Drawing.Effects.PresetShadowEffect">
      <summary>
            Represents a preset shadow which is equivalent to a specific outer shadow effect.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.PresetShadowEffect.PresetShadow">
      <summary>
            Gets or sets the preset shadow.
            </summary>
      <value>The preset shadow.</value>
    </member>
    <member name="T:GrapeCity.Drawing.Effects.PresetShadow">
      <summary>
            Represents preset shadow types.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.TopLeft">
      <summary>
            The top left drop shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.TopLeftLarge">
      <summary>
            The top left large drop shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.BackLeftLongPerspective">
      <summary>
            The back left long perspective shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.BackRightLongPerspective">
      <summary>
            The back right long perspective shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.TopLeftDouble">
      <summary>
            The top left double drop shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.BottomRightSmall">
      <summary>
            The bottom right small drop shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.FrontLeftLongPerspective">
      <summary>
            The front left long perspective shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.FrontRightLongPerspective">
      <summary>
            The front right long perspective shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.OuterBox3D">
      <summary>
            The 3D outer box shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.InnerBox3D">
      <summary>
            The 3D inner box shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.BackCenterPerspective">
      <summary>
            The back center perspective shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.TopRight">
      <summary>
            The top right drop shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.FrontBottom">
      <summary>
            The front bottom drop shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.BackLeftPerspective">
      <summary>
            The back left perspective shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.BackRightPerspective">
      <summary>
            The back right perspective shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.BottomLeft">
      <summary>
            The bottom left drop shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.BottomRight">
      <summary>
            The bottom right drop shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.FrontLeftPerspective">
      <summary>
            The front left perspective shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.FrontRightPerspective">
      <summary>
            The front right perspective shadow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Effects.PresetShadow.TopLeftSmall">
      <summary>
            The top left small drop shadow
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.Effects.ReflectionEffect">
      <summary>
            Represents a reflection effect.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.ReflectionEffect.EndAlpha">
      <summary>
            Gets or sets the ending reflection opacity.
            </summary>
      <value>The ending reflection opacity.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.ReflectionEffect.EndAlphaPosition">
      <summary>
            Gets or sets the end position (along the alpha gradient ramp) of the end alpha value.
            </summary>
      <value>The end position of the end alpha value.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.ReflectionEffect.StartAlpha">
      <summary>
            Gets or sets the starting reflection opacity.
            </summary>
      <value>The starting reflection opacity.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.ReflectionEffect.StartAlphaPosition">
      <summary>
            Gets or sets the start position (along the alpha gradient ramp) of the start alpha value.
            </summary>
      <value>The start position of the start alpha value.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.ReflectionEffect.FadeDirection">
      <summary>
            Gets or sets the direction to offset the reflection.
            </summary>
      <value>The direction to offset the reflection.</value>
    </member>
    <member name="T:GrapeCity.Drawing.Effects.SoftEdgeEffect">
      <summary>
            Represents  a soft edge effect. The edges of the shape are blurred, while the fill is not affected.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Effects.SoftEdgeEffect.Radius">
      <summary>
            Gets or sets the radius of blur to apply to the edges.
            </summary>
      <value>The radius of blur to apply to the edges.</value>
    </member>
    <member name="T:GrapeCity.Drawing.IDrawingContext">
      <summary>
            Describes visual content using draw commands.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.IDrawingContext.AntiAlias">
      <summary>
            Gets or sets a value indicating whether the anti-aliasing technique is used.
            </summary>
      <value>
        <c>true</c> if the anti-aliasing technique is used; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Drawing.IDrawingContext.Stateless">
      <summary>
            Gets or sets a boolean value indicating whether the painting process ignores state of controls.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.IDrawingContext.ExcludeExtendArea">
      <summary>
            Gets or sets a value indicating whether extended area is painted.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.DrawRectangle(GrapeCity.Drawing.Brush,GrapeCity.Drawing.Pen,GrapeCity.Drawing.Rectangle)">
      <summary>
            Draws a rectangle with the specified <see cref="T:GrapeCity.Drawing.Brush" /> and <see cref="T:GrapeCity.Drawing.Pen" />. The pen and the brush can be null.
            </summary>
      <param name="brush">The brush with which to fill the rectangle. This is optional, and can be null. If the brush is null, no fill is drawn.</param>
      <param name="pen">The pen with which to stroke the rectangle. This is optional, and can be null. If the pen is null, no stroke is drawn.</param>
      <param name="rect">The rectangle to draw.</param>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.DrawRoundedRectangle(GrapeCity.Drawing.Brush,GrapeCity.Drawing.Pen,GrapeCity.Drawing.Rectangle,System.Double,System.Double)">
      <summary>
            Draws a rounded rectangle with the specified Brush and Pen.
            </summary>
      <param name="brush">The brush used to fill the rectangle.</param>
      <param name="pen">The pen used to stroke the rectangle.</param>
      <param name="rect">The rectangle to draw.</param>
      <param name="radiusX">The radius in the X dimension of the rounded corners. This value will be clamped to the range of 0 to <see cref="P:GrapeCity.Drawing.Rect.Width" />/2.</param>
      <param name="radiusY">The radius in the Y dimension of the rounded corners. This value will be clamped to a value between 0 to <see cref="P:GrapeCity.Drawing.Rect.Height" />/2.</param>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.DrawEllipse(GrapeCity.Drawing.Brush,GrapeCity.Drawing.Pen,GrapeCity.Drawing.Point,System.Double,System.Double)">
      <summary>
            Draws an ellipse with the specified Brush and Pen.
            </summary>
      <param name="brush">The brush with which to fill the ellipse. This is optional, and can be null. If the brush is null, no fill is drawn.</param>
      <param name="pen">The pen with which to stroke the ellipse. This is optional, and can be null. If the pen is null, no stroke is drawn.</param>
      <param name="center">The location of the center of the ellipse.</param>
      <param name="radiusX">The horizontal radius of the ellipse.</param>
      <param name="radiusY">The vertical radius of the ellipse.</param>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.DrawLine(GrapeCity.Drawing.Pen,GrapeCity.Drawing.Point,GrapeCity.Drawing.Point)">
      <summary>
            Draws a line between the specified points using the specified Pen.
            </summary>
      <param name="pen">The pen with which to stroke the line.</param>
      <param name="point1">The start point of the line.</param>
      <param name="point2">The end point of the line.</param>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.DrawGeometry(GrapeCity.Drawing.GeometryDrawing,GrapeCity.Drawing.Rectangle)">
      <summary>
            Draws the specified <see cref="T:GrapeCity.Drawing.GeometryDrawing" /> object.
            </summary>
      <param name="geometryDrawing">The geometry shape.</param>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.MeasureGeometryDrawing(GrapeCity.Drawing.GeometryDrawing)">
      <summary>
            Measures the boundary of the specified <see cref="T:GrapeCity.Drawing.GeometryDrawing" /> object.
            </summary>
      <param name="geometryDrawing">The geometry shape.</param>
      <returns>The boundary of the geometry drawing.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.DrawImage(GrapeCity.Drawing.ImageDrawing,GrapeCity.Drawing.Rectangle)">
      <summary>
            Draws the specified <see cref="T:GrapeCity.Drawing.ImageDrawing" /> object.
            </summary>
      <param name="imageDrawing">The image geometry shape.</param>
      <param name="rect">The rectangle to draw.</param>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.DrawImage(GrapeCity.Spreadsheet.Imaging.WriteableBitmap,GrapeCity.Drawing.Rectangle)">
      <summary>
            Draws the specified <see cref="T:GrapeCity.Drawing.ImageDrawing" /> object.
            </summary>
      <param name="bitmap">The bitmap to paint.</param>
      <param name="rect">The rectangle to draw.</param>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.DrawText(System.String,GrapeCity.Spreadsheet.Font,GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.DrawingTextFormat)">
      <summary>
            Draws the specified text string in the specified rectangle with the specified <see cref="T:GrapeCity.Drawing.Brush" /> and <see cref="T:GrapeCity.Spreadsheet.Font" /> objects.
            </summary>
      <param name="value">String to draw.</param>
      <param name="font">
        <see cref="T:GrapeCity.Spreadsheet.Font" /> that defines the text format of the string.</param>
      <param name="rect">
        <see cref="T:GrapeCity.Drawing.Rectangle" /> structure that specifies the boundary of the drawn text.</param>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.DrawIcon(GrapeCity.Spreadsheet.Drawing.BuiltInIcons,GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.RectAlignment,System.Boolean,System.Boolean)">
      <summary>
            Draws the built-in icon.
            </summary>
      <param name="builtInIcon">The built-in icon to paint.</param>
      <param name="rect">
        <see cref="T:GrapeCity.Drawing.Rectangle" /> structure that specifies the boundary of the icon.</param>
      <param name="alignment">Where the icon is placed.</param>
      <param name="disabled">
        <c>true</c> to paint the disabled icon.</param>
      <param name="scale">
        <c>true</c> if paint this icon fit to rect, otherwise painting icon with the default size.</param>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.GetIcon(GrapeCity.Spreadsheet.Drawing.BuiltInIcons,System.Boolean)">
      <summary>
            Gets the bitmap data of the specified built-in icon.
            </summary>
      <param name="builtInIcon">The built-in icon to get data.</param>
      <param name="modifiable">
        <c>true</c> to get a modifiable <see cref="T:GrapeCity.Spreadsheet.Imaging.WriteableBitmap" /> object; otherwise, the <see cref="T:GrapeCity.Spreadsheet.Imaging.WriteableBitmap" /> is for painting only.</param>
      <returns>The bitmap data of the built-in icon</returns>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.MeasureIcon(GrapeCity.Spreadsheet.Drawing.BuiltInIcons)">
      <summary>
            Measures the size of the icon.
            </summary>
      <param name="builtInIcon">The built in icon.</param>
      <returns>The size of the icon.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.DrawCamera(GrapeCity.Spreadsheet.Drawing.Camera,System.Int32,System.Int32)">
      <summary>
            Draws the camera object.
            </summary>
      <param name="camera">The camera object.</param>
      <param name="width">The width of the target picture.</param>
      <param name="height">The height of the target picture.</param>
      <returns>An <see cref="T:GrapeCity.Drawing.ImageBrush" /> object represents the picture of the camera object.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.Dispose">
      <summary>
            Disposes this instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingContext.DrawFocusRectangle(GrapeCity.Drawing.Rectangle)">
      <summary>
            Draw focus rectangle
            </summary>
      <param name="rect"></param>
      <param name="numLayer"></param>
    </member>
    <member name="P:GrapeCity.Drawing.IDrawingContext.Clip">
      <summary>
            Gets or sets a rectangle that limits the drawing region of this drawing context.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.IDrawingContext.IsPrinting">
      <summary>
            Gets a boolean value indicates whether the process is printing.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.IDrawingContext.IsMeasuring">
      <summary>
            Gets a boolean value indicates whether the process is measuring.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.IDrawingContext.ShowColor">
      <summary>
            Gets or sets a value that indicates whether to show the color.
            </summary>
      <value>
        <c>true</c> to show color; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Drawing.IDrawingContext.ZoomScale">
      <summary>
            Gets or sets the zoom magnification for current view representing percent values.
            </summary>
      <value>An integer value represents the zoom magnification for current view representing percent values.</value>
    </member>
    <member name="P:GrapeCity.Drawing.IDrawingContext.ScaleFactor">
      <summary>
            Gets or sets the scaling factor of the control.
            </summary>
      <value>An integer value represents the scaling factor of the control.</value>
    </member>
    <member name="P:GrapeCity.Drawing.IDrawingContext.Graphics">
      <summary>
            Gets the context graphics.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.IDrawingContext.RightToLeft">
      <summary>
            Gets or sets a value that indicates whether the drawing object was painted RTL.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.Drawing">
      <summary>
            Represents the drawing object.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Drawing.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.Drawing" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Drawing.IsDisposed">
      <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
      <value>
        <c>true</c> if this instance is disposed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Drawing.BitmapCacheable">
      <summary>
            Gets or sets a value indicating whether the painting bitmap is cacheable.
            </summary>
      <value>
        <c>true</c> if the painting bitmap is cacheable; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Drawing.EffectSupported">
      <summary>
            Gets or sets a value indicating whether the painting bitmap is cacheable.
            </summary>
      <value>
        <c>true</c> if the painting bitmap is cacheable; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:GrapeCity.Drawing.Drawing.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:GrapeCity.Drawing.Drawing.Finalize">
      <summary>
            Finalizes an instance of the <see cref="T:GrapeCity.Drawing.Drawing" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Drawing.ApplyTransform(GrapeCity.Spreadsheet.Drawing.IShape,GrapeCity.Drawing.Rectangle)">
      <summary>
            Applies the transform of shape to the drawing.
            </summary>
      <param name="shape">A <see cref="T:GrapeCity.Spreadsheet.Drawing.IShape" /> object represents the shape.</param>
      <param name="rect">The rectangle to draw.</param>
    </member>
    <member name="M:GrapeCity.Drawing.Drawing.RotateTransform(System.Double,GrapeCity.Drawing.Point)">
      <summary>
            Applies the rotate transform to the geometry drawing.
            </summary>
      <param name="angle">The angle to applied.</param>
      <param name="origin">The point that geometry drawing rotated around.</param>
    </member>
    <member name="M:GrapeCity.Drawing.Drawing.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.IDrawingCacheable">
      <summary>
            Represents the cache manager of the geometry drawing
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingCacheable.GetGeometryDrawing(GrapeCity.Drawing.Size,System.Boolean,System.Double)">
      <summary>
            Gets the geometry drawing related to the shape.
            </summary>
      <param name="rectSize">The size of the shape</param>
      <param name="cacheOnly">if set to <c>true</c>, the cached object must be returned.</param>
      <param name="zoomScale">The current zoom scale.</param>
      <returns>The geometry drawing related to the shape.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingCacheable.GetImageDrawing(System.IO.Stream,System.String,System.String,GrapeCity.Drawing.Size,System.Double,System.Boolean)">
      <summary>
            Get the image drawing for the image shape.
            </summary>
      <param name="mediaData">The image data.</param>
      <param name="url">The image link.</param>
      <param name="contentType">The content type of the image data.</param>
      <param name="rectSize">The size of the shape</param>
      <param name="zoomScale">The current zoom scale.</param>
      <param name="cacheOnly">if set to <c>true</c>, the cached object must be returned.</param>
      <returns>The image drawing that related to the shape.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingCacheable.GetPaintingBounds">
      <summary>
            Get the painting boundary of the shape
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingCacheable.Reset">
      <summary>
            Resets the caching data.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.IDrawingCacheable.Clone">
      <summary>
            Clone this <see cref="T:GrapeCity.Drawing.IDrawingCacheable" /> to a new one.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.GeometryDrawing">
      <summary>
            Represents the drawing of a geometry shape.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.GeometryDrawing" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.IsTextBlock">
      <summary>
            Gets a boolean value indicating whether the geometry represents a text block.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.HorizontalClipped">
      <summary>
            Gets a boolean value indicating whether the geometry is clipped horizontally by its parent's boundaries.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.VerticalClipped">
      <summary>
            Gets a boolean value indicating whether the geometry is clipped vertically by its parent's boundaries.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.Effects">
      <summary>
            Gets the effects of this geometry drawing.
            </summary>
      <value>The effect list of this geometry drawing.</value>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.PaintEffectsOnly">
      <summary>
            Gets a boolean value indicating whether the child aren't painted.
            </summary>
      <value>
        <c>true</c> if the background of the shape is painted only; otherwise, <c>false</c> if child shapes are painted too.</value>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.AntiAlias">
      <summary>
            Gets a value indicating whether the anti-aliasing technique is used.
            </summary>
      <value>
        <c>true</c> if the anti-aliasing technique is used; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.Extrusion3D">
      <summary>
            Gets a value indicating whether the use of 3D extrusions are possible on this path.
            </summary>
      <value>
        <c>true</c> if the use of 3D extrusions are possible on this path; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.FillMode">
      <summary>
            Gets the fill mode of this <see cref="T:GrapeCity.Drawing.GeometryDrawing" />.
            </summary>
      <value>The fill mode of this <see cref="T:GrapeCity.Drawing.GeometryDrawing" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.IsStrokeAvailable">
      <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Drawing.GeometryDrawing" /> has stroke.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Drawing.GeometryDrawing" /> has stroke; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.IsClosedPath">
      <summary>
             Gets a value indicating whether this <see cref="T:GrapeCity.Drawing.GeometryDrawing" /> is closed path.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:GrapeCity.Drawing.GeometryDrawing" /> is closed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.SiblingCount">
      <summary>
            Gets the total number of sibling geometry drawings.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.Item(System.Int32)">
      <summary>
            Gets the child gemometry drawing at the specified position.
            </summary>
      <param name="index">An integer value indicates the position of the child geometry drawing.</param>
      <returns>The child geometry drawing at the specified position</returns>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.GetSibling(System.Int32)">
      <summary>
            Gets the sibling gemometry drawing at the specified position.
            </summary>
      <param name="index">An integer value indicates the position of the child geometry drawing.</param>
      <returns>The sibling geometry drawing at the specified position</returns>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.ChildCount">
      <summary>
            Gets the total number of child geometry drawings.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.Bounds">
      <summary>
            Gets the boundary of the geometry drawing. The boundary is defined by the rectangle of the geometry inside its parent.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.Fill">
      <summary>
            Gets the <see cref="T:GrapeCity.Drawing.Brush" /> object to fill the surface of the geometry drawing.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.Stroke">
      <summary>
            Gets the <see cref="T:GrapeCity.Drawing.Pen" /> object to draw the outline of the geometry drawing.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.Parent">
      <summary>
            Gets the parent geometry drawing.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.HitTest(System.Double,System.Double,GrapeCity.Spreadsheet.Drawing.Shape,GrapeCity.Drawing.Rectangle)">
      <summary>
            Gets the hit test information at the position of a control.
            </summary>
      <param name="x">The x-coordinate at which to retrieve hit test information.</param>
      <param name="y">The y-coordinate at which to retrieve hit test information.</param>
      <param name="shape">The behind shape.</param>
      <param name="shapeRect">The painting rectangle of the shape.</param>
      <returns>The hit test information at the position of a control.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.ResetCachedBitmap">
      <summary>
            Reset cache of CachedBitmap
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.DisposeCore(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.MoveTo(GrapeCity.Drawing.Point)">
      <summary>
            Updates the current position to the specified point.
            </summary>
      <param name="point">The new position.</param>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.LineTo(GrapeCity.Drawing.Point)">
      <summary>
            Draws a line from the current position to the specified point.
            </summary>
      <param name="point">The line's ending point.</param>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.ArcTo(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Draws an arc with the specified parameters from the current pen position to the new point specified
            </summary>
      <param name="radiusX">The width radius of the supposed circle being used to draw the arc.</param>
      <param name="radiusY">The height radius of the supposed circle being used to draw the arc.</param>
      <param name="startAngle">The start angle for an arc.</param>
      <param name="swingAngle">The swing angle for an arc.</param>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.Close">
      <summary>
            Ends the series of lines and curves in the creation path of a custom geometric shape.
            </summary>
      <remarks>When this element is encountered, the generating application should consider the corresponding path closed.
            That is, any further lines or curves that follow this element should be ignored.</remarks>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.CubicBezierTo(GrapeCity.Drawing.Point,GrapeCity.Drawing.Point,GrapeCity.Drawing.Point)">
      <summary>
            Draw a cubic bezier curve along the specified points.
            </summary>
      <param name="point1">The first control point of the cubic bezier curve.</param>
      <param name="point2">The second control point of the cubic bezier curve.</param>
      <param name="point3">The end point of the cubic bezier curve.</param>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.QuadraticBezierTo(GrapeCity.Drawing.Point,GrapeCity.Drawing.Point)">
      <summary>
            Draw a quadratic bezier curve along the specified points.
            </summary>
      <param name="point1">The control point of the cubic bezier curve.</param>
      <param name="point2">The end point of the cubic bezier curve.</param>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryDrawing.TextOut(System.String,GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.TextFormat,System.Boolean,GrapeCity.Drawing.TextAlign,GrapeCity.Spreadsheet.Drawing.VerticalAnchor,System.Double,GrapeCity.Drawing.TextOverflowType,GrapeCity.Drawing.TextOverflowType,GrapeCity.Core.Theme)">
      <summary>
            Draw a text string to this geometry drawing.
            </summary>
      <param name="text">The text to paint.</param>
      <param name="textRect">The painting rectangle of the text.</param>
      <param name="format">The paint settings of the text.</param>
      <param name="wordWrap">if set to <c>true</c>, the text break lines within the <paramref name="textRect" /> boundaries.</param>
      <param name="textAlign">The horizontal text alignment.</param>
      <param name="verticalAnchor">The text vertical anchor.</param>
      <param name="rotation">A <see cref="T:System.Double" /> value indicates the rotation of text.</param>
      <param name="horizontalOverflow">The horizontal overflow setting for the specified text.</param>
      <param name="verticalOverflow">The vertical overflow setting for the specified text.</param>
      <param name="theme">The current theme of the workbook.</param>
    </member>
    <member name="P:GrapeCity.Drawing.GeometryDrawing.ShowOutline">
      <summary>
            Checking whether this <see cref="T:GrapeCity.Drawing.GeometryDrawing" /> has outline.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.ImageDrawing">
      <summary>
            Represents the drawing of an image.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.ImageDrawing.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.ImageDrawing" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.ImageDrawing.Width">
      <summary>
            Gets the width of the image drawing.
            </summary>
      <value>The width of the image drawing.</value>
    </member>
    <member name="P:GrapeCity.Drawing.ImageDrawing.Height">
      <summary>
            Gets the height of the image drawing.
            </summary>
      <value>The height of the image drawing.</value>
    </member>
    <member name="P:GrapeCity.Drawing.ImageDrawing.SourceRect">
      <summary>
            as percentage
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.ImageDrawing.CreateDrawingContext(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Creates the drawing context.
            </summary>
      <param name="workbook">The workbook.</param>
      <returns>The drawing context.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.ImageDrawing.GetEnhanceMetafileHandle">
      <summary>
            Gets the enhance metafile handle.
            </summary>
      <returns>A Windows handle to the enhanced Metafile.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.ImageDrawing.GetCompatibleBitmapHandle">
      <summary>
            Gets the compatible bitmap handle.
            </summary>
      <returns>The compatible bitmap handle.</returns>
    </member>
    <member name="P:GrapeCity.Drawing.ImageDrawing.RotateWithShape">
      <summary>
            The value determined that these effects are rotate with shape or not.
            </summary>
      <value>
        <c>true</c> if these effects are rotate with shape; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.Drawing.ImageDrawing.Transparency">
      <summary>
            Returns or sets the degree of transparency of the specified brush as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.Pen">
      <summary>
            Defines an object used to draw lines and curves.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.Visible">
      <summary>
            Returns or sets an Boolean value that determines whether the object is visible. Read/write.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Pen.#ctor(GrapeCity.Drawing.Brush,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.Pen" /> class with the specified brush and width.
            </summary>
      <param name="brush">A <see cref="T:GrapeCity.Drawing.Brush" /> that determines the characteristics of this <see cref="T:GrapeCity.Drawing.Pen" />.</param>
      <param name="width">The width of the new <see cref="T:GrapeCity.Drawing.Pen" />.</param>
    </member>
    <member name="M:GrapeCity.Drawing.Pen.#ctor(GrapeCity.Core.SchemeColor,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.Pen" /> class with the specified color and width.
            </summary>
      <param name="color">A <see cref="T:GrapeCity.Core.SchemeColor" /> that determines the characteristics of this <see cref="T:GrapeCity.Drawing.Pen" />.</param>
      <param name="width">The width of the new <see cref="T:GrapeCity.Drawing.Pen" />.</param>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.Brush">
      <summary>
            Gets the <see cref="P:GrapeCity.Drawing.Pen.Brush" /> that determines attributes of this <see cref="T:GrapeCity.Drawing.Pen" />.
            </summary>
      <value>A <see cref="P:GrapeCity.Drawing.Pen.Brush" /> that determines attributes of this <see cref="T:GrapeCity.Drawing.Pen" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.MitterLimit">
      <summary>
            Gets the limit of the thickness of the join on a mitered corner.
            </summary>
      <value>The limit of the thickness of the join on a mitered corner.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.DashStyle">
      <summary>
            Gets the style used for dashed lines drawn with this <see cref="T:GrapeCity.Drawing.Pen" />.
            </summary>
      <value>A <see cref="P:GrapeCity.Drawing.Pen.DashStyle" /> that represents the style used for dashed lines drawn with this <see cref="T:GrapeCity.Drawing.Pen" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.DashPattern">
      <summary>
            Gets an array of custom dashes and spaces.
            </summary>
      <value>An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.Alignment">
      <summary>
            Gets the alignment for this <see cref="T:GrapeCity.Drawing.Pen" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Drawing.PenAlignment" /> that represents the alignment for this <see cref="T:GrapeCity.Drawing.Pen" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.LineJoin">
      <summary>
            Gets the join style for the ends of two consecutive lines drawn with this <see cref="T:GrapeCity.Drawing.Pen" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Drawing.LineJoin" /> that represents the join style for the ends of two consecutive lines drawn with this <see cref="T:GrapeCity.Drawing.Pen" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.LineCap">
      <summary>
            Gets the line cap style used at the end of lines drawn with this <see cref="T:GrapeCity.Drawing.Pen" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Drawing.LineCap" /> that represents the line cap style used at the end of lines drawn with this <see cref="T:GrapeCity.Drawing.Pen" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.LineEndHead">
      <summary>
            Gets a custom cap to use at the beginning of lines drawn with this <see cref="T:GrapeCity.Drawing.Pen" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Drawing.CustomLineEnd" /> that represents the cap used at the beginning of lines drawn with this <see cref="T:GrapeCity.Drawing.Pen" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.LineEndTail">
      <summary>
            Gets a custom cap to use at the end of lines drawn with this <see cref="T:GrapeCity.Drawing.Pen" />.
            </summary>
      <value>A <see cref="T:GrapeCity.Drawing.CustomLineEnd" /> that represents the cap used at the end of lines drawn with this <see cref="T:GrapeCity.Drawing.Pen" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.Style">
      <summary>
            Gets a <see cref="T:GrapeCity.Drawing.LineStyle" /> value that specifies a compound pen. A compound pen draws a compound line made up of parallel lines and spaces.
            </summary>
      <value>A <see cref="T:GrapeCity.Drawing.LineStyle" /> value that specifies a compound pen.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Pen.Width">
      <summary>
            Gets or sets the width of this <see cref="T:GrapeCity.Drawing.Pen" /> in pixels.
            </summary>
      <value>The width of this <see cref="T:GrapeCity.Drawing.Pen" />.</value>
    </member>
    <member name="T:GrapeCity.Drawing.PenAlignment">
      <summary>
            Specifies the alignment of a <see cref="T:GrapeCity.Drawing.Pen" /> object in relation to the theoretical, zero-width line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PenAlignment.Center">
      <summary>
            Specifies that the <see cref="T:GrapeCity.Drawing.Pen" /> object is centered over the theoretical line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PenAlignment.Inset">
      <summary>
            Specifies that the <see cref="T:GrapeCity.Drawing.Pen" /> is positioned on the inside of the theoretical line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.PenAlignment.Outset">
      <summary>
            Specifies the <see cref="T:GrapeCity.Drawing.Pen" /> is positioned on the outside of the theoretical line.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.LineCap">
      <summary>
            Specifies the available cap styles with which a <see cref="T:GrapeCity.Drawing.Pen" /> object can end a line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.LineCap.Flat">
      <summary>
            Specifies a flat line cap.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.LineCap.Round">
      <summary>
            Specifies a round line cap.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.LineCap.Square">
      <summary>
            Specifies a square line cap.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.LineStyle">
      <summary>
            Specifies the style for a line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.LineStyle.Single">
      <summary>
            Single line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.LineStyle.ThinThin">
      <summary>
            Two thin lines.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.LineStyle.ThickThin">
      <summary>
            Thick line next to thin line. For horizontal lines, the thick line is above the thin line. For vertical lines, the thick line is to the left of the thin line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.LineStyle.ThinThick">
      <summary>
            Thick line next to thin line. For horizontal lines, the thick line is below the thin line. For vertical lines, the thick line is to the right of the thin line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.LineStyle.ThickBetweenThin">
      <summary>
            Thick line with a thin line on each side.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.DashStop">
      <summary>
            Represents a dash stop primitive. Dashing schemes are built by specifying an ordered list of dash stop primitive. A dash stop primitive consists of a dash and a space.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.DashStop.DashLength">
      <summary>
            Gets the length of the dash relative to the line width.
            </summary>
      <value>The length of the dash relative to the line width.</value>
    </member>
    <member name="P:GrapeCity.Drawing.DashStop.SpaceLength">
      <summary>
            Gets the length of the space relative to the line width.
            </summary>
      <value>The length of the space relative to the line width.</value>
    </member>
    <member name="T:GrapeCity.Drawing.CustomLineEnd">
      <summary>
            Represents decorations which can be added to the head or tail of a line.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.CustomLineEnd.Length">
      <summary>
            Gets the length of the custom line head of the specified line
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.CustomLineEnd.Width">
      <summary>
            Gets the width of the custom line head of the specified line
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.CustomLineEnd.Type">
      <summary>
            Gets the line end decoration of the specified line, such as a triangle or arrowhead.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.CustomLineEnd.LineCapScale">
      <summary>
            Gets the scale factor of the custom line head.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.DashStyle">
      <summary>
            Represents line dash values.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.Solid">
      <summary>
            Line is made up of solid line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.Dot">
      <summary>
            Line is made up of dots.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.Dash">
      <summary>
            Line is made up of dashes.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.LargeDash">
      <summary>
            Line is made up of large dashes.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.DashDot">
      <summary>
            Line is made up of dash-dots.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.LargeDashDot">
      <summary>
            Line is made up of large dash-dots.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.LargeDashDotDot">
      <summary>
            Line is made up of large dash-dot-dots.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.RoundDash">
      <summary>
            Line is made up of round dashes.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.RoundDot">
      <summary>
            Line is made up of round dots.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.RoundDashDot">
      <summary>
            Line is made up of round dash-dots.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.RoundDashDotDot">
      <summary>
            Line is made up of round dash-dot-dots.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.DashStyle.Custom">
      <summary>
            Specifies a user-defined custom dash style.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.ArrowheadLength">
      <summary>
            Specifies the length of the arrowhead at the end of a line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadLength.Medium">
      <summary>
            Medium
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadLength.Short">
      <summary>
            Short
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadLength.Long">
      <summary>
            Long
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.ArrowheadWidth">
      <summary>
            Specifies the width of the arrowhead at the end of a line.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadWidth.Medium">
      <summary>
            Medium
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadWidth.Narrow">
      <summary>
            Narrow
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadWidth.Wide">
      <summary>
            Wide
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.ArrowheadStyle">
      <summary>
            Represents the shape decoration that appears at the ends of lines.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadStyle.None">
      <summary>
            No line end.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadStyle.Triangle">
      <summary>
            The triangle arrow head.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadStyle.Stealth">
      <summary>
            The stealth arrow head.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadStyle.Diamond">
      <summary>
            The diamond.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadStyle.Oval">
      <summary>
            The oval.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.ArrowheadStyle.Arrow">
      <summary>
            The line arrow head.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.LineJoin">
      <summary>
            Represents how lines join together.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.LineJoin.Round">
      <summary>
            Lines joined together have a round join.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.LineJoin.Bevel">
      <summary>
            An angle joint is used to connect lines.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.LineJoin.Miter">
      <summary>
            Line join is mitered.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.Rect">
      <summary>
            Stores a set of four integers that represent the coordinates of a rectangle.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Rect.Empty">
      <summary>
            Represents a <see cref="T:GrapeCity.Drawing.Rect" /> structure with its properties left uninitialized.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.Rect" /> struct with the specified coordinates.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="top">The y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="right">The x-coordinate of the lower-right corner of the rectangle.</param>
      <param name="bottom">The y-coordinate of the lower-right corner of the rectangle.</param>
    </member>
    <member name="P:GrapeCity.Drawing.Rect.Height">
      <summary>
            Gets or sets the height of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The height of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rect.Width">
      <summary>
            Gets or sets the width of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The width of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rect.Left">
      <summary>
            Gets the x-coordinate of the left edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The x-coordinate of the left edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rect.Top">
      <summary>
            Gets the y-coordinate of the top edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The y-coordinate of the top edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rect.X">
      <summary>
            Gets or sets the x-coordinate of the left edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The x-coordinate of the left edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rect.Y">
      <summary>
            Gets or sets the y-coordinate of the top edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The y-coordinate of the top edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rect.Right">
      <summary>
            Gets the x-coordinate that is the sum of <see cref="P:GrapeCity.Drawing.Rect.Left" /> and <see cref="P:GrapeCity.Drawing.Rect.Width" /> property values of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The x-coordinate that is the sum of <see cref="P:GrapeCity.Drawing.Rect.Left" /> and <see cref="P:GrapeCity.Drawing.Rect.Width" /> of this <see cref="T:GrapeCity.Drawing.Rect" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rect.Bottom">
      <summary>
            Gets the y-coordinate that is the sum of <see cref="P:GrapeCity.Drawing.Rect.Top" /> and <see cref="P:GrapeCity.Drawing.Rect.Height" /> property values of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The y-coordinate that is the sum of <see cref="P:GrapeCity.Drawing.Rect.Top" /> and <see cref="P:GrapeCity.Drawing.Rect.Height" /> of this <see cref="T:GrapeCity.Drawing.Rect" />.</value>
    </member>
    <member name="M:GrapeCity.Drawing.Rect.Contains(System.Int32,System.Int32)">
      <summary>
            Determines if the specified point is contained within this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>This method returns <c>true</c> if the point defined by <paramref name="x" /> and <paramref name="y" /> is contained within this <see cref="T:GrapeCity.Drawing.Rect" /> structure; otherwise <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.Rect.Offset(System.Int32,System.Int32)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="x">The horizontal offset.</param>
      <param name="y">The vertical offset</param>
    </member>
    <member name="M:GrapeCity.Drawing.Rect.Union(GrapeCity.Drawing.Rect,GrapeCity.Drawing.Rect)">
      <summary>
            Gets a <see cref="T:GrapeCity.Drawing.Rect" /> structure that contains the union of two <see cref="T:GrapeCity.Drawing.Rect" /> structures.
            </summary>
      <param name="r1">A rectangle to union.</param>
      <param name="r2">A rectangle to union.</param>
      <returns>A <see cref="T:GrapeCity.Drawing.Rect" /> structure that bounds the union of the two <see cref="T:GrapeCity.Drawing.Rect" /> structures.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.Rect.Inflate(System.Int32,System.Int32)">
      <summary>
            Enlarges a Rectangle structure by the specified amount.
            </summary>
      <param name="width">The amount to inflate this <see cref="T:GrapeCity.Drawing.Rect" /> horizontally.</param>
      <param name="height">The amount to inflate this <see cref="T:GrapeCity.Drawing.Rect" /> vertically.</param>
    </member>
    <member name="M:GrapeCity.Drawing.Rect.IntersectsWith(GrapeCity.Drawing.Rect)">
      <summary>
            Determines if this rectangle intersects with <paramref name="rect" />.
            </summary>
      <param name="rect">The rectangle to test.</param>
      <returns>This method returns <c>true</c> if there is any intersection, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.Rect.Intersect(GrapeCity.Drawing.Rect,GrapeCity.Drawing.Rect)">
      <summary>
            Creates a rectangle that represents the intersetion between a and
            b. If there is no intersection, null is returned.
            </summary>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Drawing.Rectangle">
      <summary>
            Stores a set of four integers that represent the coordinates of a rectangle.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Rectangle.Empty">
      <summary>
            Represents a <see cref="T:GrapeCity.Drawing.Rect" /> structure with its properties left uninitialized.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.Rect" /> struct with the specified coordinates.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="top">The y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="right">The x-coordinate of the lower-right corner of the rectangle.</param>
      <param name="bottom">The y-coordinate of the lower-right corner of the rectangle.</param>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.#ctor(GrapeCity.Drawing.Point,GrapeCity.Drawing.Size)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.Rect" /> struct with the specified coordinates and size.
            </summary>
      <param name="location">The coordinates of the upper-left corner of the rectangle.</param>
      <param name="size">The size of the rectangle.</param>
    </member>
    <member name="P:GrapeCity.Drawing.Rectangle.Height">
      <summary>
            Gets or sets the height of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The height of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rectangle.Width">
      <summary>
            Gets or sets the width of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The width of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rectangle.Left">
      <summary>
            Gets the x-coordinate of the left edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The x-coordinate of the left edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rectangle.Top">
      <summary>
            Gets the y-coordinate of the top edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The y-coordinate of the top edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rectangle.X">
      <summary>
            Gets or sets the x-coordinate of the left edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The x-coordinate of the left edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rectangle.Y">
      <summary>
            Gets or sets the y-coordinate of the top edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The y-coordinate of the top edge of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rectangle.IsEmpty">
      <summary>
            Determines whether this <see cref="T:GrapeCity.Drawing.Rectangle" /> is empty.
            </summary>
      <returns>
        <c>true</c> if this  <see cref="T:GrapeCity.Drawing.Rectangle" /> is empty; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Drawing.Rectangle.IsInvalid">
      <summary>
            Determines whether this  <see cref="T:GrapeCity.Drawing.Rectangle" /> is invalid.
            </summary>
      <returns>
        <c>true</c> if this  <see cref="T:GrapeCity.Drawing.Rectangle" /> is invalid; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:GrapeCity.Drawing.Rectangle.Right">
      <summary>
            Gets the x-coordinate that is the sum of <see cref="P:GrapeCity.Drawing.Rectangle.Left" /> and <see cref="P:GrapeCity.Drawing.Rectangle.Width" /> property values of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The x-coordinate that is the sum of <see cref="P:GrapeCity.Drawing.Rectangle.Left" /> and <see cref="P:GrapeCity.Drawing.Rectangle.Width" /> of this <see cref="T:GrapeCity.Drawing.Rect" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rectangle.Bottom">
      <summary>
            Gets the y-coordinate that is the sum of <see cref="P:GrapeCity.Drawing.Rectangle.Top" /> and <see cref="P:GrapeCity.Drawing.Rectangle.Height" /> property values of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <value>The y-coordinate that is the sum of <see cref="P:GrapeCity.Drawing.Rectangle.Top" /> and <see cref="P:GrapeCity.Drawing.Rectangle.Height" /> of this <see cref="T:GrapeCity.Drawing.Rect" />.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Rectangle.Location">
      <summary>
            Gets or sets the coordinates of the upper-left corner of this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.Contains(System.Double,System.Double)">
      <summary>
            Determines if the specified point is contained within this <see cref="T:GrapeCity.Drawing.Rect" /> structure.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>This method returns <c>true</c> if the point defined by <paramref name="x" /> and <paramref name="y" /> is contained within this <see cref="T:GrapeCity.Drawing.Rect" /> structure; otherwise <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.Offset(System.Double,System.Double)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="x">The horizontal offset.</param>
      <param name="y">The vertical offset</param>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.Offset(GrapeCity.Drawing.Point)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="location">The horizontal and vertical offset.</param>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.Union(GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.Rectangle)">
      <summary>
            Gets a <see cref="T:GrapeCity.Drawing.Rectangle" /> structure that contains the union of two <see cref="T:GrapeCity.Drawing.Rectangle" /> structures.
            </summary>
      <param name="r1">A rectangle to union.</param>
      <param name="r2">A rectangle to union.</param>
      <returns>A <see cref="T:GrapeCity.Drawing.Rectangle" /> structure that bounds the union of the two <see cref="T:GrapeCity.Drawing.Rectangle" /> structures.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.Union(GrapeCity.Drawing.Rectangle)">
      <summary>
            Unions the specified <see cref="T:GrapeCity.Drawing.Rectangle" /> value with this <see cref="T:GrapeCity.Drawing.Rectangle" /> value.
            </summary>
      <param name="r">A rectangle to union.</param>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.Inflate(System.Double,System.Double)">
      <summary>
            Enlarges a Rectangle structure by the specified amount.
            </summary>
      <param name="width">The amount to inflate this <see cref="T:GrapeCity.Drawing.Rect" /> horizontally.</param>
      <param name="height">The amount to inflate this <see cref="T:GrapeCity.Drawing.Rect" /> vertically.</param>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.Intersect(GrapeCity.Drawing.Rectangle,GrapeCity.Drawing.Rectangle)">
      <summary>
            Creates a rectangle that represents the intersetion between a and
            b. If there is no intersection, null is returned.
            </summary>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.IntersectsWith(GrapeCity.Drawing.Rectangle)">
      <summary>
            Determines if this rectangle intersects with <paramref name="rect" />.
            </summary>
      <param name="rect">The rectangle to test.</param>
      <returns>This method returns <c>true</c> if there is any intersection, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.GetAlignRectangle(System.Double,System.Double,GrapeCity.Drawing.RectAlignment)">
      <summary>
            Gets the aligned rectangle.
            </summary>
      <param name="width">The width of new aligned rectangle.</param>
      <param name="height">The height of new aligned rectangle.</param>
      <param name="alignment">How the new rectangle is aligned.</param>
      <returns>The new aligned rectangle.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.Rectangle.Scale(System.Double,System.Double)">
      <summary>
            Scales this <see cref="T:GrapeCity.Drawing.Rectangle" /> value by the specified <paramref name="scaleX" /> and <paramref name="scaleY" /> values.
            </summary>
      <param name="scaleX">The horizontal scaling factor.</param>
      <param name="scaleY">The vertical scaling factor.</param>
    </member>
    <member name="T:GrapeCity.Drawing.Point">
      <summary>
            Represents an ordered pair of x- and y-coordinates that defines a point in a two-dimensional plane.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Point.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.Point" /> struct with the specified coordinates.
            </summary>
      <param name="x">The horizontal position of the point.</param>
      <param name="y">The vertical position of the point.</param>
    </member>
    <member name="P:GrapeCity.Drawing.Point.X">
      <summary>
            Gets or sets the x-coordinate of this <see cref="T:GrapeCity.Drawing.Point" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Drawing.Point.Y">
      <summary>
            Gets or sets the y-coordinate of this <see cref="T:GrapeCity.Drawing.Point" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Point.Offset(GrapeCity.Drawing.Point)">
      <summary>
            Translates this <see cref="T:GrapeCity.Drawing.Point" /> by the specified amount.
            </summary>
      <param name="location">The <see cref="T:GrapeCity.Drawing.Point" /> used offset this <see cref="T:GrapeCity.Drawing.Point" />.</param>
    </member>
    <member name="M:GrapeCity.Drawing.Point.Offset(System.Double,System.Double)">
      <summary>
            Translates this <see cref="T:GrapeCity.Drawing.Point" /> by the specified amount.
            </summary>
      <param name="x">The amount to offset the x-coordinate.</param>
      <param name="y">The amount to offset the y-coordinate.</param>
    </member>
    <member name="T:GrapeCity.Drawing.Size">
      <summary>
            Stores an ordered pair of integers, which specify a <see cref="P:GrapeCity.Drawing.Size.Height" /> and <see cref="P:GrapeCity.Drawing.Size.Width" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.Size.Empty">
      <summary>
            Gets a <see cref="T:GrapeCity.Drawing.Size" /> structure that has a <see cref="P:GrapeCity.Drawing.Size.Height" /> and <see cref="P:GrapeCity.Drawing.Size.Width" /> value of 0.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.Size.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.Size" /> class with the specified dimensions.
            </summary>
      <param name="width">The width component of the new <see cref="T:GrapeCity.Drawing.Size" />.</param>
      <param name="height">The height component of the new <see cref="T:GrapeCity.Drawing.Size" />.</param>
    </member>
    <member name="P:GrapeCity.Drawing.Size.Width">
      <summary>
            Gets or sets the horizontal component of this <see cref="T:GrapeCity.Drawing.Size" /> structure.
            </summary>
      <value>The horizontal component of this <see cref="T:GrapeCity.Drawing.Size" /> structure, typically measured in pixels.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Size.Height">
      <summary>
            Gets or sets the vertical component of this <see cref="T:GrapeCity.Drawing.Size" /> structure.
            </summary>
      <value>The vertical component of this <see cref="T:GrapeCity.Drawing.Size" /> structure, typically measured in pixels.</value>
    </member>
    <member name="P:GrapeCity.Drawing.Size.IsEmpty">
      <summary>
            Checks whether this <see cref="T:GrapeCity.Drawing.Size" /> structure has width and height of 0.
            This property returns true when this <see cref="T:GrapeCity.Drawing.Size" /> structure has both a width and height of 0; otherwise, false.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.SizeInt">
      <summary>
            Stores an ordered pair of integers, which specify a <see cref="P:GrapeCity.Drawing.SizeInt.Height" /> and <see cref="P:GrapeCity.Drawing.SizeInt.Width" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.SizeInt.Empty">
      <summary>
            Gets a <see cref="T:GrapeCity.Drawing.SizeInt" /> structure that has a <see cref="P:GrapeCity.Drawing.SizeInt.Height" /> and <see cref="P:GrapeCity.Drawing.SizeInt.Width" /> value of 0.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.SizeInt.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Drawing.SizeInt" /> class with the specified dimensions.
            </summary>
      <param name="width">The width component of the new <see cref="T:GrapeCity.Drawing.SizeInt" />.</param>
      <param name="height">The height component of the new <see cref="T:GrapeCity.Drawing.SizeInt" />.</param>
    </member>
    <member name="P:GrapeCity.Drawing.SizeInt.Width">
      <summary>
            Gets or sets the horizontal component of this <see cref="T:GrapeCity.Drawing.SizeInt" /> structure.
            </summary>
      <value>The horizontal component of this <see cref="T:GrapeCity.Drawing.SizeInt" /> structure, typically measured in pixels.</value>
    </member>
    <member name="P:GrapeCity.Drawing.SizeInt.Height">
      <summary>
            Gets or sets the vertical component of this <see cref="T:GrapeCity.Drawing.SizeInt" /> structure.
            </summary>
      <value>The vertical component of this <see cref="T:GrapeCity.Drawing.SizeInt" /> structure, typically measured in pixels.</value>
    </member>
    <member name="P:GrapeCity.Drawing.SizeInt.IsEmpty">
      <summary>
            Checks whether this <see cref="T:GrapeCity.Drawing.SizeInt" /> structure has width and height of 0.
            This property returns true when this <see cref="T:GrapeCity.Drawing.SizeInt" /> structure has both a width and height of 0; otherwise, false.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.SizeInt.Equals(System.Object)">
      <summary>
            Indicates whether this value and a specified value are equal.
            </summary>
      <param name="obj">The value to compare with the current value.</param>
      <returns>
        <c>true</c> if <paramref name="obj" /> and this value are the same type and represent the same value; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.SizeInt.GetHashCode">
      <summary>
            Returns the hash code for this value.
            </summary>
      <returns>A 32-bit signed integer that is the hash code for this value.</returns>
    </member>
    <member name="M:GrapeCity.Drawing.SizeInt.Equals(GrapeCity.Drawing.SizeInt)">
      <summary>
            Indicates whether this value and a specified value are equal.
            </summary>
      <param name="obj">The value to compare with the current value.</param>
      <returns>
        <c>true</c> if <paramref name="obj" /> and this value represent the same value; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:GrapeCity.Drawing.TextOverflowType">
      <summary>
            Specifies the overflow setting for a text frame.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.TextOverflowType.Overflow">
      <summary>
            Allow text to overflow the text frame.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.TextOverflowType.Ellipsis">
      <summary>
            Display text with ellipsis if the text overflow the text frame.
            </summary>
    </member>
    <member name="F:GrapeCity.Drawing.TextOverflowType.Clip">
      <summary>
            Hide text that does not fit in the text frame.
            </summary>
    </member>
    <member name="T:GrapeCity.Drawing.TextFormat">
      <summary>
            Represents the text format.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.TextFormat.GetRenderFontName(GrapeCity.Core.Theme,GrapeCity.Spreadsheet.ThemeFont@)">
      <summary>
            Gets the render font name of this <see cref="T:GrapeCity.Drawing.TextFormat" /> object.
            </summary>
      <param name="theme">The current theme.</param>
      <returns>The actual font name to paint text.</returns>
    </member>
    <member name="T:GrapeCity.Drawing.TextUnderline">
      <summary>
            Represents the tyep of text underline.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryHelper.ToPositiveDegree(System.Double)">
      <summary>
            Correct the angle to positive value in degrees.
            </summary>
      <param name="angle"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryHelper.Rotate90(GrapeCity.Drawing.Rectangle@)">
      <summary>
            Rotate the <see cref="T:GrapeCity.Drawing.Rectangle" /> 90 degrees.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryHelper.CalculateAngle(GrapeCity.Drawing.Point,GrapeCity.Drawing.Point)">
      <summary>
            Calculates the rotation of the line.
            </summary>
      <param name="firstPoint">The first point of the line.</param>
      <param name="secondPoint">The second point of the line.</param>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryHelper.Distance(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Computes the distance from A to B.
            </summary>
    </member>
    <member name="M:GrapeCity.Drawing.GeometryHelper.LineToPointDistance(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Compute the distance from AB to C.
            </summary>
      <param name="isSegment">
        <c>true</c> if AB is a segment; otherwise, AB is a line.</param>
      <returns></returns>
    </member>
    <!-- Badly formed XML comment ignored for member "F:GrapeCity.Olap.PivotValueAttributes.UnusedItem" -->
    <member name="T:GrapeCity.Native.WindowsGraphics">
      <summary>
            Wrapper for GDI text rendering functions.
            This class is not thread-safe as GDI function should be called from the UI thread.
            </summary>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.LayoutRichText(GrapeCity.Spreadsheet.Workbook,GrapeCity.Spreadsheet.RichText,GrapeCity.Drawing.Rect,GrapeCity.Native.WindowsGraphics.TextPaintingData@,GrapeCity.Native.TextFormatFlags,System.Boolean)">
      <summary>
            Gets the layout data for painting rich text in a rectangle.
            </summary>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Native.WindowsGraphics" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Native.WindowsGraphics.PreserveTransform">
      <summary>
            Gets or sets a boolean value indicating whether the transform of the device context will be preserved.
            </summary>
    </member>
    <member name="P:GrapeCity.Native.WindowsGraphics.DeviceDpi">
      <summary>
            Gets the DPI value for the display device.
            </summary>
      <value>The DPI value of the display device.</value>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.GetMeasuringGraphics(GrapeCity.Spreadsheet.Workbook)">
      <summary>
            Gets the measuring windows graphics.
            </summary>
      <returns>The measuring windows graphics.</returns>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.GetWindowsFont(GrapeCity.Spreadsheet.Font,System.Int32,System.Boolean)">
      <summary>
            Gets the device context.
            </summary>
      <value>The device context.</value>
      <summary>
            Gets the windows font.
            </summary>
      <param name="font">The font data structure.</param>
      <param name="angle">The angle represents text rotation.</param>
      <param name="roundingSize">if set to <c>true</c>, the native font size will be rounded; otherwise, the native font size will be floor.</param>
      <returns>The windows font.</returns>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.Delete(GrapeCity.Native.WindowsFont)">
      <summary>
            Deletes the specified font.
            </summary>
      <param name="font">The font to delete.</param>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.MeasureText(GrapeCity.Spreadsheet.Workbook,GrapeCity.Spreadsheet.FormatResult@,GrapeCity.Drawing.SizeInt,GrapeCity.Native.WindowsGraphics.TextPaintingData@,GrapeCity.Native.TextFormatFlags)">
      <summary>
            Measure the width and height of the string when drawn on the device context using the given font.
            </summary>
      <param name="workbook">The workbook.</param>
      <param name="content">The text content.</param>
      <param name="size">The current boundary size.</param>
      <param name="textPainting">The text painting information.</param>
      <param name="textFormatFlags">The text format flags.</param>
      <returns>The measured size of the string (already zoomed).</returns>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.DrawText(GrapeCity.Spreadsheet.IWorkbook,System.String,GrapeCity.Drawing.Rect,GrapeCity.Native.WindowsGraphics.TextPaintingData@,GrapeCity.Native.TextFormatFlags)">
      <summary>
            Draws the text.
            </summary>
      <param name="workbook">The workbook.</param>
      <param name="text">The text.</param>
      <param name="rect">The rectangle to paint.</param>
      <param name="textPainting">The text painting information.</param>
      <param name="textFormatFlags">The text format flags.</param>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.DrawText(GrapeCity.Spreadsheet.Workbook,GrapeCity.Spreadsheet.FormatResult@,GrapeCity.Drawing.Rect@,GrapeCity.Native.WindowsGraphics.TextPaintingData@,GrapeCity.Native.TextFormatFlags)">
      <summary>
            Draws the text.
            </summary>
      <param name="workbook">The workbook.</param>
      <param name="content">The text content.</param>
      <param name="rectangle">The rectangle to paint.</param>
      <param name="textPainting">The text painting information.</param>
      <param name="textFormatFlags">The text format flags.</param>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.Dispose">
      <summary>
            Release current HDC to be able to use <see cref="!:Graphics" /> methods.
            </summary>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.ZoomFontSize(System.Double,System.Double)">
      <summary>
            Calculates the zoomed font size.
            </summary>
      <param name="fontSize">The origin font size.</param>
      <param name="zoomFactor">The zoom factor.</param>
      <returns>An double value represents the zoomed font size.</returns>
    </member>
    <member name="M:GrapeCity.Native.WindowsGraphics.GetAutoNumberFormatText(System.Object,System.Double)">
      <summary>
            Gets the displayed text of a numeric value that fits to the specified width.
            </summary>
      <param name="value">The original value.</param>
      <param name="renderWidth">The width to display numeric value.</param>
      <returns>The auto formatted text of the numeric value. <c>null</c> if normal formatted text should be displayed.</returns>
    </member>
    <member name="T:GrapeCity.Native.WindowsGraphics.TextPaintingData">
      <summary>
            Represents the painting data.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.WindowsGraphics.TextPaintingData.Empty">
      <summary>
            Gets the empty value.
            </summary>
    </member>
    <member name="P:GrapeCity.Native.WindowsGraphics.TextPaintingData.Value">
      <summary>
            Gets or sets the original value.
            </summary>
    </member>
    <member name="T:GrapeCity.Native.OUTLINETEXTMETRIC">
      <summary>
            The OUTLINETEXTMETRIC structure contains metrics describing a TrueType font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmSize">
      <summary>
            The size, in bytes, of the OUTLINETEXTMETRIC structure.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmTextMetrics">
      <summary>
            A TEXTMETRIC structure containing further information about the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmFiller">
      <summary>
            A value that causes the structure to be byte-aligned.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmPanoseNumber">
      <summary>
            The PANOSE number for this font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmfsSelection">
      <summary>
            The nature of the font pattern. This member can be a combination of the following bits.
            0 	Italic
            1 	Underscore
            2 	Negative
            3 	Outline
            4 	Strikeout
            5 	Bold
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmfsType">
      <summary>
            Indicates whether the font is licensed. Licensed fonts must not be modified or exchanged.
            If bit 1 is set, the font may not be embedded in a document. If bit 1 is clear, the font can be embedded.
            If bit 2 is set, the embedding is read-only.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsCharSlopeRise">
      <summary>
            The slope of the cursor. This value is 1 if the slope is vertical.
            Applications can use this value and the value of the otmsCharSlopeRun member to create an italic cursor that has the same slope as the main italic angle
            (specified by the otmItalicAngle member).
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsCharSlopeRun">
      <summary>
            The slope of the cursor. This value is zero if the slope is vertical.
            Applications can use this value and the value of the otmsCharSlopeRise member to create an italic cursor that has the same slope as the main italic angle
            (specified by the otmItalicAngle member).
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmItalicAngle">
      <summary>
            The main italic angle of the font, in tenths of a degree counterclockwise from vertical.
            Regular (roman) fonts have a value of zero. Italic fonts typically have a negative italic angle (that is, they lean to the right).
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmEMSquare">
      <summary>
            The number of logical units defining the x- or y-dimension of the em square for this font.
            (The number of units in the x- and y-directions are always the same for an em square.)
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmAscent">
      <summary>
            The maximum distance characters in this font extend above the base line. This is the typographic ascent for the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmDescent">
      <summary>
            The maximum distance characters in this font extend below the base line. This is the typographic descent for the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmLineGap">
      <summary>
            The typographic line spacing.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsCapEmHeight">
      <summary>
            Not supported.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsXHeight">
      <summary>
            Not supported.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmrcFontBox">
      <summary>
            The bounding box for the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmMacAscent">
      <summary>
            The maximum distance characters in this font extend above the base line for the Macintosh computer.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmMacDescent">
      <summary>
            The maximum distance characters in this font extend below the base line for the Macintosh computer.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmMacLineGap">
      <summary>
            The line-spacing information for the Macintosh computer.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmusMinimumPPEM">
      <summary>
            The smallest recommended size for this font, in pixels per em-square.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmptSubscriptSize">
      <summary>
            The recommended horizontal and vertical size for subscripts in this font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmptSubscriptOffset">
      <summary>
            The recommended horizontal and vertical offset for subscripts in this font.
            The subscript offset is measured from the character origin to the origin of the subscript character.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmptSuperscriptSize">
      <summary>
            The recommended horizontal and vertical size for superscripts in this font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmptSuperscriptOffset">
      <summary>
            The recommended horizontal and vertical offset for superscripts in this font.
            The superscript offset is measured from the character base line to the base line of the superscript character.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsStrikeoutSize">
      <summary>
            The width of the strikeout stroke for this font. Typically, this is the width of the em dash for the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsStrikeoutPosition">
      <summary>
            The position of the strikeout stroke relative to the base line for this font. Positive values are above the base line and negative values are below.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsUnderscoreSize">
      <summary>
            The thickness of the underscore character for this font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmsUnderscorePosition">
      <summary>
            The position of the underscore character for this font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmpFamilyName">
      <summary>
            The offset from the beginning of the structure to a string specifying the family name for the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmpFaceName">
      <summary>
            The offset from the beginning of the structure to a string specifying the typeface name for the font.
            (This typeface name corresponds to the name specified in the LOGFONT structure.)
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmpStyleName">
      <summary>
            The offset from the beginning of the structure to a string specifying the style name for the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmpFullName">
      <summary>
            The offset from the beginning of the structure to a string specifying the full name for the font.
            This name is unique for the font and often contains a version number or other identifying information.
            </summary>
    </member>
    <member name="T:GrapeCity.Native.TEXTMETRIC">
      <summary>
            The TEXTMETRIC structure contains basic information about a physical font.
            All sizes are specified in logical units; that is, they depend on the current mapping mode of the display context.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmHeight">
      <summary>
            The height (ascent + descent) of characters.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmAscent">
      <summary>
            The ascent (units above the base line) of characters.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmDescent">
      <summary>
            The descent (units below the base line) of characters.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmInternalLeading">
      <summary>
            The amount of leading (space) inside the bounds set by the tmHeight member.
            Accent marks and other diacritical characters may occur in this area.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmExternalLeading">
      <summary>
            The amount of extra leading (space) that the application adds between rows.
            Since this area is outside the font, it contains no marks and is not altered by text output calls in either OPAQUE or TRANSPARENT mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmAveCharWidth">
      <summary>
            The average width of characters in the font (generally defined as the width of the letter x ).
            This value does not include the overhang required for bold or italic characters.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmMaxCharWidth">
      <summary>
            The width of the widest character in the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmWeight">
      <summary>
            The weight of the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmOverhang">
      <summary>
            The extra width per string that may be added to some synthesized fonts.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmDigitizedAspectX">
      <summary>
            The horizontal aspect of the device for which the font was designed.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmDigitizedAspectY">
      <summary>
            The vertical aspect of the device for which the font was designed.
            The ratio of the tmDigitizedAspectX and tmDigitizedAspectY members is the aspect ratio of the device for which the font was designed.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmFirstChar">
      <summary>
            The value of the first character defined in the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmLastChar">
      <summary>
            The value of the last character defined in the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmDefaultChar">
      <summary>
            The value of the character to be substituted for characters not in the font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmBreakChar">
      <summary>
            The value of the character that will be used to define word breaks for text justification.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmItalic">
      <summary>
            Specifies an italic font if it is nonzero.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmUnderlined">
      <summary>
            Specifies an underlined font if it is nonzero.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmStruckOut">
      <summary>
            A strikeout font if it is nonzero.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmPitchAndFamily">
      <summary>
            Specifies information about the pitch, the technology, and the family of a physical font.
            The four low-order bits of this member specify information about the pitch and the technology of the font.
            A constant is defined for each of the four bits.
            TMPF_FIXED_PITCH  0x01  If this bit is set the font is a variable pitch font. If this bit is clear the font is a fixed pitch font.
            TMPF_VECTOR       0x02  If this bit is set the font is a vector font.
            TMPF_TRUETYPE     0x04  If this bit is set the font is a TrueType font.
            TMPF_DEVICE       0x08  If this bit is set the font is a device font.
            </summary>
    </member>
    <member name="F:GrapeCity.Native.TEXTMETRIC.tmCharSet">
      <summary>
            The character set of the font.
            </summary>
    </member>
    <member name="T:GrapeCity.Native.PANOSE">
      <summary>
            The PANOSE structure describes the PANOSE font-classification values for a TrueType font.
            These characteristics are then used to associate the font with other fonts of similar appearance but different names.
            </summary>
    </member>
    <member name="T:GrapeCity.Native.TextFormatFlags">
      <summary>
            Specifies the display and layout information for text strings.
            </summary>
    </member>
    <member name="M:GrapeCity.Native.WindowsFont.GetOutlineTextMetric">
      <summary>
            Get the <see cref="T:GrapeCity.Native.OUTLINETEXTMETRIC" /> structure contains basic information about a physical font.
            </summary>
      <returns>The metrics contains basic information about a physical font.</returns>
      <remarks>In case the font is not True Type font, only <see cref="F:GrapeCity.Native.OUTLINETEXTMETRIC.otmTextMetrics" /> returns correct value.</remarks>
    </member>
    <member name="M:GrapeCity.Native.WindowsFont.GetLineHeight">
      <summary>
            Gets the line height of this font.
            </summary>
      <returns>An integer value represents the line height of this font.</returns>
    </member>
    <member name="M:GrapeCity.Native.WindowsFont.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:GrapeCity.IO.CompoundFile.CompoundFile.AppendData(GrapeCity.IO.CompoundFile.CFItem,System.Byte[])" -->
    <member name="T:GrapeCity.IO.Packaging.Package">
      <summary>
            Abstract Base class for the Package.
            This is a part of the Packaging Layer APIs
            </summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>
            Protected constructor for the abstract Base class.
            This is the current contract between the subclass and the base class
            If we decide some registration mechanism then this might change
            </summary>
      <param name="openFileAccess"></param>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileAccess enumeration does not have one of the valid values</exception>
    </member>
    <member name="P:GrapeCity.IO.Packaging.Package.FileOpenAccess">
      <summary>
            Gets the FileAccess with which the package was opened. This is a read only property.
            This property gets set when the package is opened.
            </summary>
      <value>FileAccess</value>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
    </member>
    <member name="P:GrapeCity.IO.Packaging.Package.PackageProperties">
      <summary>
            The package properties are a subset of the standard OLE property sets
            SummaryInformation and DocumentSummaryInformation, and include such properties
            as Title and Subject.
            </summary>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.String)">
      <summary>
            Opens a package at the specified Path. This method calls the overload which accepts all the parameters
            with the following defaults -
            FileMode - FileMode.OpenOrCreate,
            FileAccess - FileAccess.ReadWrite
            FileShare  - FileShare.None
            </summary>
      <param name="path">Path to the package</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If path parameter is null</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>
            Opens a package at the specified Path in the given mode. This method calls the overload which
            accepts all the parameters with the following defaults -
            FileAccess - FileAccess.ReadWrite
            FileShare  - FileShare.None
            </summary>
      <param name="path">Path to the package</param>
      <param name="packageMode">FileMode in which the package should be opened</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If path parameter is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [packageMode] does not have one of the valid values</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>
            Opens a package at the specified Path in the given mode with the specified access. This method calls
            the overload which accepts all the parameters with the following defaults -
            FileShare  - FileShare.None
            </summary>
      <param name="path">Path to the package</param>
      <param name="packageMode">FileMode in which the package should be opened</param>
      <param name="packageAccess">FileAccess with which the package should be opened</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If path parameter is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [packageMode] does not have one of the valid values</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileAccess enumeration [packageAccess] does not have one of the valid values</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>
            Open a package on this stream. This method calls the overload which accepts all the parameters
            with the following defaults -
            FileMode - FileMode.Open
            FileAccess - FileAccess.Read
            </summary>
      <param name="stream">Stream on which the package is to be opened</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If stream parameter is null</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/read access and underlying stream is write only</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/write access and underlying stream is read only</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>
            Open a package on this stream. This method calls the overload which accepts all the parameters
            with the following defaults -
            FileAccess - FileAccess.ReadWrite
            </summary>
      <param name="stream">Stream on which the package is to be opened</param>
      <param name="packageMode">FileMode in which the package should be opened.</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If stream parameter is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [packageMode] does not have one of the valid values</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/read access and underlying stream is write only</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/write access and underlying stream is read only</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>
            Creates a new part in the package. An empty stream corresponding to this part will be created in the
            package. If a part with the specified uri already exists then we throw an exception.
            This methods will call the CreatePartCore method which will create the actual PackagePart in the package.
            </summary>
      <param name="partUri">Uri of the PackagePart that is to be added</param>
      <param name="contentType">ContentType of the stream to be added</param>
      <returns></returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentNullException">If contentType parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
      <exception cref="T:System.InvalidOperationException">If a PackagePart with the given partUri already exists in the Package</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.CreatePart(System.Uri,System.String,GrapeCity.IO.Packaging.CompressionOption)">
      <summary>
            Creates a new part in the package. An empty stream corresponding to this part will be created in the
            package. If a part with the specified uri already exists then we throw an exception.
            This methods will call the CreatePartCore method which will create the actual PackagePart in the package.
            </summary>
      <param name="partUri">Uri of the PackagePart that is to be added</param>
      <param name="contentType">ContentType of the stream to be added</param>
      <param name="compressionOption">CompressionOption  describing compression configuration
            for the new part. This compression apply only to the part, it doesn't affect relationship parts or related parts.
            This parameter is optional. </param>
      <returns></returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentNullException">If contentType parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If CompressionOption enumeration [compressionOption] does not have one of the valid values</exception>
      <exception cref="T:System.InvalidOperationException">If a PackagePart with the given partUri already exists in the Package</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>
            Returns a part that already exists in the package. If the part
            Corresponding to the URI does not exist in the package then an exception is
            thrown. The method calls the GetPartCore method which actually fetches the part.
            </summary>
      <param name="partUri"></param>
      <returns></returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, information cannot be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
      <exception cref="T:System.InvalidOperationException">If the requested part does not exists in the Package</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>
            This is a convenient method to check whether a given part exists in the
            package. This will have a default implementation that will try to retrieve
            the part and then if successful, it will return true.
            If the custom file format has an easier way to do this, they can override this method
            to get this information in a more efficient way.
            </summary>
      <param name="partUri"></param>
      <returns></returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, information cannot be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>
            This method will do all the house keeping required when a part is deleted
            Then the DeletePartCore method will be called which will have the actual logic to
            do the work specific to the underlying file format and will actually delete the
            stream corresponding to this part. This method does not throw if the specified
            part does not exist. This is in conformance with the FileInfo.Delete call.
            </summary>
      <param name="partUri"></param>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetParts">
      <summary>
            This returns a collection of all the Parts within the package.
            </summary>
      <returns></returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is writeonly, no information can be retrieved from it</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Close">
      <summary>
            Closes the package and all the underlying parts and relationships.
            Calls the Dispose Method, since they have the same semantics
            </summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Flush">
      <summary>
            Flushes the contents of the parts and the relationships to the package.
            This method will call the FlushCore method which will do the actual flushing of contents.
            </summary>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.CreateRelationship(System.String,GrapeCity.IO.Packaging.TargetMode,System.String)">
      <summary>
            Creates a relationship at the Package level with the Target PackagePart specified as the Uri
            </summary>
      <param name="targetUri">Target's URI</param>
      <param name="targetMode">Enumeration indicating the base uri for the target uri</param>
      <param name="relationshipType">PackageRelationship type, having uri like syntax that is used to
            uniquely identify the role of the relationship</param>
      <returns></returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "targetUri" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If parameter "targetMode" enumeration does not have a valid value</exception>
      <exception cref="T:System.ArgumentException">If TargetMode is TargetMode.Internal and the targetUri is an absolute Uri </exception>
      <exception cref="T:System.ArgumentException">If relationship is being targeted to a relationship part</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.CreateRelationship(System.String,GrapeCity.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>
            Creates a relationship at the Package level with the Target PackagePart specified as the Uri
            </summary>
      <param name="targetUri">Target's URI</param>
      <param name="targetMode">Enumeration indicating the base uri for the target uri</param>
      <param name="relationshipType">PackageRelationship type, having uri like syntax that is used to
            uniquely identify the role of the relationship</param>
      <param name="id">String that conforms to the xsd:ID datatype. Unique across the source's
            relationships. Null is OK (ID will be generated). An empty string is an invalid XML ID.</param>
      <returns></returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "targetUri" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If parameter "targetMode" enumeration does not have a valid value</exception>
      <exception cref="T:System.ArgumentException">If TargetMode is TargetMode.Internal and the targetUri is an absolute Uri </exception>
      <exception cref="T:System.ArgumentException">If relationship is being targeted to a relationship part</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
      <exception cref="T:System.Xml.XmlException">If an id is provided in the method, and its not unique</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>
            Deletes a relationship from the Package. This is done based on the
            relationship's ID. The target PackagePart is not affected by this operation.
            </summary>
      <param name="id">The ID of the relationship to delete. An invalid ID will not
            throw an exception, but nothing will be deleted.</param>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetRelationships">
      <summary>
            Returns a collection of all the Relationships that are
            owned by the package
            </summary>
      <returns></returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>
            Returns a collection of filtered Relationships that are
            owned by the package
            The filter string is compared with the type of the relationships
            in a case sensitive and culture ignorant manner.
            </summary>
      <returns></returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentException">If parameter "relationshipType" is an empty string</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>
            Retrieve a relationship per ID.
            </summary>
      <param name="id">The relationship ID.</param>
      <returns>The relationship with ID 'id' or throw an exception if not found.</returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
      <exception cref="T:System.InvalidOperationException">If the requested relationship does not exist in the Package</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>
            Returns whether there is a relationship with the specified ID.
            </summary>
      <param name="id">The relationship ID.</param>
      <returns>true iff a relationship with ID 'id' is defined on this source.</returns>
      <exception cref="T:System.ObjectDisposedException">If this Package object has been disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,GrapeCity.IO.Packaging.CompressionOption)">
      <summary>
            This method is for custom implementation corresponding to the underlying file format.
            This method will actually add a new part to the package. An empty part should be
            created as a result of this call.
            </summary>
      <param name="partUri"></param>
      <param name="contentType"></param>
      <param name="compressionOption"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>
            This method is for custom implementation corresponding to the underlying file format.
            This method will actually return the part after reading the actual physical bits.
            If the PackagePart does not exists in the underlying package then this method should return a null.
            This method must not throw an exception if a part does not exist.
            </summary>
      <param name="partUri"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>
            This method is for custom implementation corresponding to the underlying file format.
            This method will actually delete the part from the underlying package.
            This method should not throw if the specified part does not exist.
            This is in conformance with the FileInfo.Delete call.
            </summary>
      <param name="partUri"></param>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.GetPartsCore">
      <summary>
            This method is for custom implementation corresponding to the underlying file format.
            This is the method that knows how to get the actual parts. If there are no parts,
            this method should return an empty array.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>
            This method is for custom implementation corresponding to the underlying file format.
            This method should be used to dispose the resources that are specific to the file format.
            Also everything should be flushed to the disc before closing the package.
            </summary>
      <remarks>Subclasses that manage non-memory resources should override this method and free these resources.
            Any override should be careful to always call base.Dispose(disposing) to ensure orderly cleanup.</remarks>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.FlushCore">
      <summary>
            This method is for custom implementation corresponding to the underlying file format.
            This method flushes the contents of the package to the disc.
            </summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary></summary>
      <param name="path">Path to the package.</param>
      <param name="packageMode">FileMode in which the package should be opened.</param>
      <param name="packageAccess">FileAccess with which the package should be opened.</param>
      <param name="packageShare">FileShare with which the package is opened.</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If path parameter is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileAccess enumeration [packageAccess] does not have one of the valid values</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [packageMode] does not have one of the valid values</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary></summary>
      <param name="stream">Stream on which the package is created</param>
      <param name="packageMode">FileMode in which the package is to be opened</param>
      <param name="packageAccess">FileAccess on the package that is opened</param>
      <returns>Package</returns>
      <exception cref="T:System.ArgumentNullException">If stream parameter is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [packageMode] does not have one of the valid values</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileAccess enumeration [packageAccess] does not have one of the valid values</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/read access and underlying stream is write only</exception>
      <exception cref="T:System.IO.IOException">If package to be created should have readwrite/write access and underlying stream is read only</exception>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackagePart">
      <summary>
            This class represents the a PackagePart within a container.
            This is a part of the Packaging Layer APIs
            </summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.#ctor(GrapeCity.IO.Packaging.Package,System.Uri)">
      <summary>
            Protected constructor for the abstract Base class. 
            This is the current contract between the subclass and the base class
            If we decide some registration mechanism then this might change
            
            You should use this constructor in the rare case when you do not have
            the content type information related to this part and would prefer to 
            obtain it later as required. 
            
            These parts have the CompressionOption as NotCompressed by default.
            
            NOTE : If you are using this constructor from your subclass or passing a null
            for the content type parameter, be sure to implement the GetContentTypeCore 
            method, as that will be called to get the content type value. This is provided 
            to enable lazy initialization of the ContentType property.
            
            </summary>
      <param name="package">Package in which this part is being created</param>
      <param name="partUri">uri of the part</param>
      <exception cref="T:System.ArgumentNullException">If parameter "package" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "partUri" is null</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.#ctor(GrapeCity.IO.Packaging.Package,System.Uri,System.String)">
      <summary>
            Protected constructor for the abstract Base class. 
            This is the current contract between the subclass and the base class
            If we decide some registration mechanism then this might change
            
            These parts have the CompressionOption as NotCompressed by default.
            
            NOTE : If you are using this constructor from your subclass or passing a null
            for the content type parameter, be sure to implement the GetContentTypeCore 
            method, as that will be called to get the content type value. This is provided 
            to enable lazy initialization of the ContentType property.
            
            </summary>
      <param name="package">Package in which this part is being created</param>
      <param name="partUri">uri of the part</param>
      <param name="contentType">Content Type of the part, can be null if the value
            is unknown at the time of construction. However the value has to be made 
            available anytime the ContentType property is called. A null value only indicates
            that the value will be provided later. Every PackagePart must have a valid 
            Content Type</param>
      <exception cref="T:System.ArgumentNullException">If parameter "package" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "partUri" is null</exception>
      <exception cref="T:System.ArgumentException">If parameter "partUri" does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.#ctor(GrapeCity.IO.Packaging.Package,System.Uri,System.String,GrapeCity.IO.Packaging.CompressionOption)">
      <summary>
            Protected constructor for the abstract Base class. 
            This is the current contract between the subclass and the base class
            If we decide some registration mechanism then this might change
            
            NOTE : If you are using this constructor from your subclass or passing a null
            for the content type parameter, be sure to implement the GetContentTypeCore 
            method, as that will be called to get the content type value. This is provided 
            to enable lazy initialization of the ContentType property.
            
            </summary>
      <param name="package">Package in which this part is being created</param>
      <param name="partUri">uri of the part</param>
      <param name="contentType">Content Type of the part, can be null if the value
            is unknown at the time of construction. However the value has to be made 
            available anytime the ContentType property is called. A null value only indicates
            that the value will be provided later. Every PackagePart must have a valid 
            Content Type</param>
      <param name="compressionOption">compression option for this part</param>
      <exception cref="T:System.ArgumentNullException">If parameter "package" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "partUri" is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If CompressionOption enumeration [compressionOption] does not have one of the valid values</exception>
      <exception cref="T:System.ArgumentException">If parameter "partUri" does not conform to the valid partUri syntax</exception>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackagePart.Uri">
      <summary>
            The Uri for this PackagePart. It is always relative to the Package Root
            The PackagePart properties can not be accessed if the parent container is closed.
            </summary>
      <value></value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackagePart.ContentType">
      <summary>
            The Content type of the stream that is represented by this part.
            The PackagePart properties can not be accessed if the parent container is closed.
            The content type value can be provided by the underlying physical format 
            implementation at the time of creation of the Part object ( constructor ) or 
            We can initialize it in a lazy manner when the ContentType property is called 
            called for the first time by calling the GetContentTypeCore method.  
            Note: This method GetContentTypeCore() is only for lazy initialization of the Content 
            type value and will only be called once. There is no way to change the content type of 
            the part once it has been assigned. 
            </summary>
      <value>Content Type of the Part [can never return null] </value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackagePart.Package">
      <summary>
            The parent container for this PackagePart
            The PackagePart properties can not be accessed if the parent container is closed.
            </summary>
      <value></value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackagePart.CompressionOption">
      <summary>
            CompressionOption class that was provided as a parameter during the original CreatePart call.
            The PackagePart properties can not be accessed if the parent container is closed.
            </summary>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>
            Custom Implementation for the GetContentType Method
            This method should only be implemented by those physical format implementors where
            the value for the content type cannot be provided at the time of construction of 
            Part object and if calculating the content type value is a non-trivial or costly 
            operation. The return value has to be a valid ContentType. This method will be used in 
            real corner cases. The most common usage should be to provide the content type in the 
            constructor.
            This method is only for lazy initialization of the Content type value and will only
            be called once. There is no way to change the content type of the part once it is 
            assigned. 
            </summary>
      <returns>Content type for the Part</returns>
      <exception cref="T:System.NotSupportedException">By default, this method throws a NotSupportedException. If a subclass wants to 
            initialize the content type for a PackagePart in a lazy manner they must override this method.</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetStream">
      <summary>
            Returns the underlying stream that is represented by this part
            with the default FileMode and FileAccess
            Note: If you are requesting a stream for a relationship part and 
            at the same time using relationship APIs to manipulate relationships,
            the final persisted data will depend on which data gets flushed last.
            </summary>
      <returns></returns>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the subclass fails to provide a non-null stream object</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>
            Returns the underlying stream in the specified mode and the 
            default FileAccess
            Note: If you are requesting a stream for a relationship part for editing 
            and at the same time using relationship APIs to manipulate relationships,
            the final persisted data will depend on which data gets flushed last.
            </summary>
      <param name="mode"></param>
      <returns></returns>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [mode] does not have one of the valid values</exception>
      <exception cref="T:System.IO.IOException">If FileAccess.Read is provided and FileMode values are any of the following - 
            FileMode.Create, FileMode.CreateNew, FileMode.Truncate, FileMode.Append</exception>
      <exception cref="T:System.IO.IOException">If the mode and access for the Package and the Stream are not compatible</exception>
      <exception cref="T:System.IO.IOException">If the subclass fails to provide a non-null stream object</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>
            Returns the underlying stream that is represented by this part 
            in the specified mode with the access.
            Note: If you are requesting a stream for a relationship part and 
            at the same time using relationship APIs to manipulate relationships,
            the final persisted data will depend on which data gets flushed last.
            </summary>
      <param name="mode"></param>
      <param name="access"></param>
      <returns></returns>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileMode enumeration [mode] does not have one of the valid values</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If FileAccess enumeration [access] does not have one of the valid values</exception>
      <exception cref="T:System.IO.IOException">If FileAccess.Read is provided and FileMode values are any of the following - 
            FileMode.Create, FileMode.CreateNew, FileMode.Truncate, FileMode.Append</exception>
      <exception cref="T:System.IO.IOException">If the mode and access for the Package and the Stream are not compatible</exception>
      <exception cref="T:System.IO.IOException">If the subclass fails to provide a non-null stream object</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>
            Custom Implementation for the GetSream Method
            </summary>
      <param name="mode"></param>
      <param name="access"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.CreateRelationship(System.String,GrapeCity.IO.Packaging.TargetMode,System.String)">
      <summary>
            Adds a relationship to this PackagePart with the Target PackagePart specified as the Uri
            Initial and trailing spaces in the name of the PackageRelationship are trimmed.
            </summary>
      <param name="targetUri"></param>
      <param name="targetMode">Enumeration indicating the base uri for the target uri</param>
      <param name="relationshipType">PackageRelationship type, having uri like syntax that is used to 
            uniquely identify the role of the relationship</param>
      <returns></returns>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "targetUri" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If parameter "targetMode" enumeration does not have a valid value</exception>
      <exception cref="T:System.ArgumentException">If TargetMode is TargetMode.Internal and the targetUri is an absolute Uri </exception>
      <exception cref="T:System.ArgumentException">If relationship is being targeted to a relationship part</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.CreateRelationship(System.String,GrapeCity.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>
            Adds a relationship to this PackagePart with the Target PackagePart specified as the Uri
            Initial and trailing spaces in the name of the PackageRelationship are trimmed.
            </summary>
      <param name="targetUri"></param>
      <param name="targetMode">Enumeration indicating the base uri for the target uri</param>
      <param name="relationshipType">PackageRelationship type, having uri like syntax that is used to 
            uniquely identify the role of the relationship</param>
      <param name="id">String that conforms to the xsd:ID datatype. Unique across the source's
            relationships. Null is OK (ID will be generated). An empty string is an invalid XML ID.</param>
      <returns></returns>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "targetUri" is null</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">If parameter "targetMode" enumeration does not have a valid value</exception>
      <exception cref="T:System.ArgumentException">If TargetMode is TargetMode.Internal and the targetUri is an absolute Uri </exception>
      <exception cref="T:System.ArgumentException">If relationship is being targeted to a relationship part</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
      <exception cref="T:System.Xml.XmlException">If an id is provided in the method, and its not unique</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>
            Deletes a relationship from the PackagePart. This is done based on the 
            relationship's ID. The target PackagePart is not affected by this operation.
            </summary>
      <param name="id">The ID of the relationship to delete. An invalid ID will not
            throw an exception, but nothing will be deleted.</param>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is readonly, it cannot be modified</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetRelationships">
      <summary>
            Returns a collection of all the Relationships that are
            owned by this PackagePart
            </summary>
      <returns></returns>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>
            Returns a collection of filtered Relationships that are
            owned by this PackagePart
            The relationshipType string is compared with the type of the relationships
            in a case sensitive and culture ignorant manner. 
            </summary>
      <returns></returns>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "relationshipType" is null</exception>
      <exception cref="T:System.ArgumentException">If parameter "relationshipType" is an empty string</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>
            Retrieve a relationship per ID.
            </summary>
      <param name="id">The relationship ID.</param>
      <returns>The relationship with ID 'id' or throw an exception if not found.</returns>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
      <exception cref="T:System.InvalidOperationException">If the requested relationship does not exist in the Package</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>
            Returns whether there is a relationship with the specified ID.
            </summary>
      <param name="id">The relationship ID.</param>
      <returns>true iff a relationship with ID 'id' is defined on this source.</returns>
      <exception cref="T:System.InvalidOperationException">If this part has been deleted</exception>
      <exception cref="T:System.InvalidOperationException">If the parent package has been closed or disposed</exception>
      <exception cref="T:System.IO.IOException">If the package is write only, no information can be retrieved from it</exception>
      <exception cref="T:System.ArgumentNullException">If parameter "id" is null</exception>
      <exception cref="T:System.Xml.XmlException">If parameter "id" is not a valid Xsd Id</exception>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackagePartCollection">
      <summary>
            This class is used to get an enumerator for the Parts in a container. 
            This is a part of the MMCF Packaging Layer APIs
            </summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>
            Returns an enumerator over all the Parts in the Container
            </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackageProperties">
      <summary>
            This class provides access to the "core properties", such as Title and
            Subject, of an RM-protected Metro package. These properties are a subset of
            of the standard OLE property sets SummaryInformation and
            DocumentSummaryInformation.
            </summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackageProperties.Dispose">
      <summary>
            Allow the object to clean up all resources it holds (both managed and
            unmanaged), and ensure that the resources won't be released a
            second time by removing it from the finalization queue.
            </summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>
            This default implementation is provided for subclasses that do not
            make use of the IDisposable functionality.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Title">
      <summary>
            The title.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Subject">
      <summary>
            The topic of the contents.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Creator">
      <summary>
            The primary creator. The identification is environment-specific and
            can consist of a name, email address, employee ID, etc. It is
            recommended that this value be only as verbose as necessary to
            identify the individual.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Keywords">
      <summary>
            A delimited set of keywords to support searching and indexing. This
            is typically a list of terms that are not available elsewhere in the
            properties.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Description">
      <summary>
            The description or abstract of the contents.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>
            The user who performed the last modification. The identification is
            environment-specific and can consist of a name, email address,
            employee ID, etc. It is recommended that this value be only as
            verbose as necessary to identify the individual.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Revision">
      <summary>
            The revision number. This value indicates the number of saves or
            revisions. The application is responsible for updating this value
            after each revision.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.LastPrinted">
      <summary>
            The date and time of the last printing.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Created">
      <summary>
            The creation date and time.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Modified">
      <summary>
            The date and time of the last modification.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Category">
      <summary>
            The category. This value is typically used by UI applications to create navigation
            controls.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.identifier">
      <summary>
            A unique identifier.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.ContentType">
      <summary>
            The type of content represented, generally defined by a specific
            use and intended audience. Example values include "Whitepaper",
            "Security Bulletin", and "Exam". (This property is distinct from
            MIME content types as defined in RFC 2045.) 
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Language">
      <summary>
            The primary language of the package content. The language tag is
            composed of one or more parts: A primary language subtag and a
            (possibly empty) series of subsequent subtags, for example, "EN-US".
            These values MUST follow the convention specified in RFC 3066.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.Version">
      <summary>
            The version number. This value is set by the user or by the application.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageProperties.ContentStatus">
      <summary>
            The status of the content. Example values include "Draft",
            "Reviewed", and "Final".
            </summary>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackageRelationship">
      <summary>
            This class is used to express a relationship between a source and a target part. 
            The only way to create a PackageRelationship, is to call the PackagePart.CreateRelationship()
            or Package.CreateRelationship(). A relationship is owned by a part or by the package itself. 
            If the source part is deleted all the relationships it owns are also deleted. 
            A target of the relationship need not be present.
            This class is part of the MMCF Packaging layer.
            </summary>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.SourceUri">
      <summary>
            This is a reference to the parent PackagePart to which this relationship belongs.
            </summary>
      <value>Uri</value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.TargetUri">
      <summary>
            Uri of the TargetPart, that this relationship points to.
            </summary>
      <value></value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>
            Type of the relationship - used to uniquely define the role of the relationship
            </summary>
      <value></value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.TargetMode">
      <summary>
            Enumeration value indicating the interpretations of the "base" of the target uri.
            </summary>
      <value></value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.Id">
      <summary>
            PackageRelationship's identifier. Unique across relationships for the given source.
            </summary>
      <value>String</value>
    </member>
    <member name="P:GrapeCity.IO.Packaging.PackageRelationship.Package">
      <summary>
            PackageRelationship's owning Package object.
            </summary>
      <value>Package</value>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackageRelationshipCollection">
      <summary>
            Collection of all the relationships corresponding to a given source PackagePart.
            This class is part of the MMCF Packaging Layer. It handles serialization to/from
            relationship parts, creation of those parts and offers methods to create, delete 
            and enumerate relationships.
            </summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>
            Returns an enumerator over all the relationships for a PackagePart
            </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.IO.Packaging.PackUriHelper">
      <summary>
            This class has the utility methods for composing and parsing an Uri of pack:// scheme
            </summary>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>
            This method is used to create a valid part Uri given a relative URI
            Makes sure that the URI -  
            1. Relative 
            2. Begins with '/'
            3. Does not begin with two "//"
            4. Does not end with "/"
            5. Does not have a fragment component
            6. Does the correct escaping 
            7. And is refined correctly
            </summary>
      <param name="partUri">The relative uri that represents the part within a package</param>
      <returns>Returns a relative URI with an absolute path that points to a part within a package</returns>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter is an absolute Uri</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter is empty</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter ends with "/"</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter starts with two "/"</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter has a fragment</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>
            This method is used to resolve part Uris
            Constructs resolved relative URI from two relative URIs
            This method should be used in places where we have a 
            a target URI in the PackageRelationship and we want to get the 
            name of the part it targets with respect to the source part
            </summary>
      <param name="sourcePartUri">This should be a valid partName. 
            The only exception to this rule is an Uri of the form "/". This uri 
            will only be used to resolve package level relationships. This Uri
            indicates that the relative Uri is being resolved against the root of the
            package.</param>
      <param name="targetUri">This URI can be any relative URI</param>
      <returns></returns>
      <exception cref="T:System.ArgumentNullException">If either sourcePartUri or targetUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If either sourcePartUri or targetUri parameter is an absolute Uri</exception>
      <exception cref="T:System.ArgumentException">If sourcePartUri parameter does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>
            This method returns the relative uri between two given parts
            </summary>
      <param name="sourcePartUri"></param>
      <param name="targetPartUri"></param>
      <returns>The relative path between two parts</returns>
      <exception cref="T:System.ArgumentNullException">If either the sourcePartUri or targetPartUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If either sourcePartUri or targetPartUri parameter does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>
            Returns the normalized form of the part URI
            </summary>
      <param name="partUri">Part Uri</param>
      <returns>Normalized Part Uri</returns>
      <exception cref="T:System.ArgumentNullException">If partUri is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>
            This method compares two part uris and returns an int to indicate the equivalence
            Null values are allowed
            </summary>
      <param name="firstPartUri">First part Uri to be compared</param>
      <param name="secondPartUri">Second part Uri to be compared</param>
      <returns>A 32-bit signed integer indicating the lexical relationship between the compared Uri components.
            Value - Less than zero means firstUri is less than secondUri
            Value - Equal to zero means both the Uris are equal</returns>
            Value - Greater than zero means firstUri is greater than secondUri
            <exception cref="T:System.ArgumentException">If firstPartUri or secondPartUri parameter does not conform to the valid partUri syntax</exception></member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>
            IsRelationshipPartUri method returns a boolean indicating whether the
            Uri given is a relationship part Uri or not.
            </summary>
      <param name="partUri">uri of part to evaluate</param>
      <returns>true if the given part is a PackageRelationship part</returns>
      <remarks>Does not inspect the part contents - this is based solely on the name</remarks>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter is an absolute Uri</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri Syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>
            This method returns a relationship part Uri given a part Uri
            Example Input - partUri - /files/document.xaml
            Return  - Relationship Uri  - /files/_rels/document.xaml.rels
            If the input to the method is Uri - "/", then we will return /_rels/.rels as the
            relationship part Uri for the Package level relationships
            </summary>
      <param name="partUri">Part Uri for which the relationship part Uri is wanted</param>
      <returns>returns a Uri that conforms to the relationship part Uri syntax</returns>
      <exception cref="T:System.ArgumentException">If the input Uri is a relationship part Uri itself</exception>
      <exception cref="T:System.ArgumentNullException">If partUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter is an absolute Uri</exception>
      <exception cref="T:System.ArgumentException">If partUri parameter does not conform to the valid partUri Syntax</exception>
    </member>
    <member name="M:GrapeCity.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>
            Given a valid relationship Part Uri, this method returns the source Part Uri for 
            this relationship Part Uri. 
            If the relationship part name is for the Package Level relationships [/_rels/.rels],
            we return a relative Uri of the form "/" indicating that it has no part as the parent, 
            but is at the package level
            Example Input - Relationship Uri  - /files/_rels/document.xaml.rels
            Returns -Source Part Uri - /files/document.xaml
            </summary>
      <param name="relationshipPartUri">relationship part Uri</param>
      <returns>A uri that is a valid source part Uri for the relationship Uri provided</returns>
      <exception cref="T:System.ArgumentNullException">If relationshipPartUri parameter is null</exception>
      <exception cref="T:System.ArgumentException">If relationshipPartUri parameter is an absolute Uri</exception>
      <exception cref="T:System.ArgumentException">If relationshipPartUri parameter does not conform to the valid partUri Syntax</exception>
      <exception cref="T:System.ArgumentException">If the relationshipPartUri is not a relationship part Uri itself</exception>
      <exception cref="T:System.ArgumentException">If the resultant Uri obtained is a relationship part Uri</exception>
    </member>
    <member name="F:GrapeCity.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>
            pack scheme name
            </summary>
    </member>
  </members>
</doc>