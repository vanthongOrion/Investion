<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>GrapeCity.Win.PluginInputMan</name>
  </assembly>
  <members>
    <member name="T:GrapeCity.Framework.Spread.InputMan.CellType.Forms.ControlBase">
      <summary>
              Implements common basic windows control functionalities to view system.
            </summary>
      <remarks>
              The class is a base of all windows control object in view system.
            </remarks>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Forms.ControlBase.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
              Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
      <param name="keyData">
              One of the System.Windows.Forms.Keys values.
            </param>
      <returns>
              true if the specified key is a regular input key; otherwise, false.
            </returns>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Forms.ControlBase.IsInputChar(System.Char)">
      <summary>
              Determines if a character is an input character that the control recognizes.
            </summary>
      <param name="charCode">
              The character to test.
            </param>
      <returns>
              true if the character should be sent directly to the control and not preprocessed;
              otherwise, false.
            </returns>
    </member>
    <member name="T:GrapeCity.Framework.Spread.InputMan.CellType.Forms.FrameworkControl">
      <summary>
              Represents a enchanged control that provides some fitted functions on the Control.
            </summary>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Forms.FrameworkControl.WndProc(System.Windows.Forms.Message@)">
      <summary>
              Processes Windows messages.
            </summary>
      <param name="m">
              The Windows System.Windows.Forms.Message to process.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Forms.FrameworkControl.CreateAccessibilityInstance">
      <summary>
            Creates a new accessibility object for the control.
            </summary>
      <returns>
            A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.
            </returns>
    </member>
    <member name="T:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl">
      <summary>
              Represents a control that can bear the logcial tree.
            </summary>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.DesignMode">
      <summary>
              Gets a value that indicates whether the System.ComponentModel.Component is currently in design mode.
            </summary>
      <value>
              true if the System.ComponentModel.Component is in design mode; otherwise, false.
            </value>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
              Raises the MouseWheel event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
              Raises the MouseDown event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
              Raises the MouseMove event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseEnter(System.EventArgs)">
      <summary>
              Raises the MouseEnter event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseLeave(System.EventArgs)">
      <summary>
              Raises the MouseLeave event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseHover(System.EventArgs)">
      <summary>
              Raises the MouseHover event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
              Raises the MouseUp event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
      <summary>
              Raises the MouseClick event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>
              Raises the MouseDoubleClick event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseCaptureChanged(System.EventArgs)">
      <summary>
              Raises the MouseCaptureChanged event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnCursorChanged(System.EventArgs)">
      <summary>
              Raises the System.Windows.Forms.Control.CursorChanged event.
            </summary>
      <param name="e">
              An System.EventArgs that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
              Raises the KeyDown event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
              Raises the KeyPress event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
              Raises the KeyUp event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="P:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.Focused">
      <summary>
              Gets a value indicating whether the control has input focus.
            </summary>
      <value></value>
      <returns>
              true if the control has focus; otherwise, false.
            </returns>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnGotFocus(System.EventArgs)">
      <summary>
              Raise the GotFocus event
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnLostFocus(System.EventArgs)">
      <summary>
              Raise the LostFocus event
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.DestroyHandle">
      <summary>
              Destroys the handle associated with the control.
            </summary>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.WndProc(System.Windows.Forms.Message@)">
      <summary>
              Processes Windows messages.
            </summary>
      <param name="m">
              The Windows System.Windows.Forms.Message to process.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
              Raises the Painted event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.PaintEventArgs" /> contains the event arguments.
            </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the ElementContainerControl and and its child controls or elements
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
              True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
    </member>
    <member name="P:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.DefaultImeMode">
      <summary>
              Gets the default Input Method Editor (IME) mode supported by the control.   
            </summary>
      <value>
              One of the System.Windows.Forms.ImeMode values.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask">
      <summary>
              Represents a <b>GcCharMask</b> control.
            </summary>
      <remarks>
        <para>
                The GcCharMask control allows you to design a functional text input interface 
                quickly and efficiently.
              </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CreateAccessibilityInstance">
      <summary>
              Creates a new accessibility object for the control.
            </summary>
      <returns>
             A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.#ctor(System.ComponentModel.IContainer)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask" /> class.
            </summary>
      <param name="container">The container.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the Control and optionally releases the managed resources.
            </summary>
      <param name="disposing">
              true to release both managed and unmanaged resources; false to release only unmanaged resources. 
            </param>
      <remarks>
              Call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Dispose(System.Boolean)" /> when you are finished using the <see cref="T:System.Windows.Forms.Control" />. 
              The <b>Dispose</b> method leaves the <see cref="T:System.Windows.Forms.Control" /> in an unusable state. 
              After calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Dispose(System.Boolean)" />, you must release all references to the <see cref="T:System.Windows.Forms.Control" /> 
              so the garbage collector can reclaim the memory that the <see cref="T:System.Windows.Forms.Control" /> was occupying.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AcceptsCrLf">
      <summary>
            Gets or sets a value indicating how to process the CrLf chars when copy, cut or paste string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration indicates which mode that the CrLf chars will be used when copy, cut and paste string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting make the <b>GcCharMask</b> same with the standard <b>TextBox</b> when copy, cut and paste string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> isn't a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoSize">
      <summary>
            Gets or sets a value indicating whether control is auto size to show context completely in vertical direction.
            </summary>
      <value>
        <see langword="true" /> if enabled; otherwise, <see langword="false" />.
            </value>
      <remarks>
              When this property is set to <see langword="true" />, the <b>GcCharMask</b> adjusts its width to display its entire contents.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.UseSystemPasswordChar">
      <summary>
              Gets or sets a value indicating whether use system password char.
            </summary>
      <value>
        <see langword="true" /> if use system password char; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The <b>UseSystemPasswordChar</b> property has precedence over the <b>PasswordChar</b> property. 
              Whenever the <b>UseSystemPasswordChar</b> is set to <see langword="true" />, 
              the default system password character is used and any character set by <b>PasswordChar</b>is ignored.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.PasswordChar">
      <summary>
              Gets or sets the character used to mask characters of a password in the control.
            </summary>
      <value>
              The character used to mask characters entered in the control. 
              Sets the value of this property to 0 (character value) if you do not want the control to mask characters as they are typed. Equals 0 (character value) by default.
            </value>
      <remarks>
        <para>
              The <b>PasswordChar</b> can be used to create a password field in a dialog box. Although you 
              can use any SBCS character, most Windows-based applications use the asterisk (*) (Chr(42)).
              </para>
        <para>
              This property doesn't affect the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Text" /> property. 
              The <b>Text</b> contains exactly what the user types or what 
              was set from code. Setting the <b>PasswordChar</b> to 0, which is the default, will display 
              the actual text in the control.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert">
      <summary>
              Gets or sets whether to automatically convert the entered characters 
              according to the input mask.
            </summary>
      <value>
        <see langword="true" /> if characters are automatically converted according to the input mask; 
              otherwise, <see langword="false" />. The default is <see langword="true" />.
            </value>
      <remarks>
        <para>
                If set the <b>AutoConvert</b> property to <see langword="true" />, all convertible characters will be 
                automatically converted accordingly to the input mask. For example, if set 
                the input mask to "A", by hitting a lower case character the control automatically 
                converts the character into an upper case. 
              </para>
        <para>
                If SBCS is entered in a DBCS mask input, the entered character will be automatically 
                converted to DBCS. Also a DBCS space will be automatically converted to a SBCS space 
                when the control allows only SBCS. 
              </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace">
      <summary>
              Gets or sets whether to allow space input.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace" /> values.
              <br />
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Both" />.
              </value>
      <remarks>
        <para>
              Use the <b>AllowSpace</b> property to specify which kind of space will be allowed in the text.
              </para>
        <para></para>
        <para>
              If the <b>AllowSpace</b> is <b>None</b> mode, this <b>GcCharMask</b> will not accept space.
              The <b>AllowSpace.Narrow</b> means the SBCS space will be allowed.
              The <b>AllowSpace.Wide</b> means the DBCS space will be allowed.
              And the <b>AllowSpace.Both</b> means all kinds of space will be allowed.
              </para>
        <para></para>
        <note>
                If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert" /> propety is <see langword="true" /> and the <b>AllowSpace</b> is <b>AllowSpace.Wide</b>, the control
                will auto convert the SBCS space to DBCS space when user input a SBCS space char. It's the same to other settings.
                And the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" /> property always be used with this AllowSpace property.
              </note>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.BackColor">
      <summary>
              Gets or sets the background color for the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the text control to blend into the color scheme of your forms.
              <para />
              To change the color of the text within the control, use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ForeColor" /> property. When setting the <b>BackColor</b> property of your text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <b>BackColor</b> and <b>ForeColor</b> properties are both set to <b>Color.Black</b>, the text within your textbox control will not be visible.
              <para />
              This property might be over ridden if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> property of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> is set to <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.BackgroundImage">
      <summary>
              Gets or sets the background image displayed in the control.
            </summary>
      <value>
              An <see cref="T:System.Drawing.Image" /> that represents the image to display in the
              background of the control.
            </value>
      <remarks>
              Use the <b>BackgroundImage</b> property to place a graphic image onto a control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.BorderStyle">
      <summary>
              Gets or sets the border style of the control.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.BorderStyle" /> that represents the border type of the control.
              <br /> The default is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.
            </value>
      <remarks>
              You can use the <b>BorderStyle</b> property to create borderless and flat style controls, in addition to the default three-dimensional control.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              A value that is not within the range of valid values for the enumeration was assigned to the property. 
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CharBoxes">
      <summary>
              Gets the char box collection.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" /> indicates the collection saving the char box.
            </value>
      <remarks>
              The <b>CharBoxes</b> can be added or removed some char boxes. Includes <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBox" />,<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LiteralBox" /> and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBox" />.
            </remarks>
      <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CharBoxSpacing" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CharBoxSpacing">
      <summary>
              Gets or sets a value indicating the spacing between char boxes.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicating the spacing between char boxes.
              <br /> The default is -1.
            </value>
      <remarks>
              The <b>CharBoxSpacing</b> property determines the space between every two nearly char boxs.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CharBoxes" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ClipContent">
      <summary>
              Gets or sets how data should be copied to the clipboard.
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ClipContent" /> enumeration values that specifies 
              how data is copied to the clipboard. 
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" />.
            </value>
      <remarks>
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" /> value means all text displayed will be copied when set data to <see cref="T:System.Windows.Forms.Clipboard" /> by methods or UI behaviors. 
              And the  <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.ExcludeLiterals" /> value means the displayed text excepts literal fields' text will be copied.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.PreferredHeight">
      <summary>
              Gets the preferred height.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates preferred height of the control.
            </value>
      <remarks>
              This property just as the height of  <see cref="P:System.Windows.Forms.Control.PreferredSize" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.DefaultSize">
      <summary>
              Gets the default size of the control.
            </summary>
      <value>
              The default <see cref="T:System.Drawing.Size" /> of the control.
            </value>
      <remarks>
              The <b>DefaultSize</b> property represents the <see cref="T:System.Drawing.Size" /> of the control when it is initially created. You can adjust the size of the control by setting its <see cref="T:System.Drawing.Size" /> property value.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format">
      <summary>
              Gets or sets the input format to use in the control.
            </summary>
      <value>
                The string that used to control how text can be input.
              </value>
      <remarks>
              The format is specified by creating a mask using keywords and literals.
              <note>
                This input mask must NOT exist only with literals.
              </note></remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.HighlightText">
      <summary>
              Gets or sets whether to highlight text in the control.
            </summary>
      <value>
        <see langword="true" /> when control got focus select all the text; otherwise <see langword="false" />. 
              The default value is <see langword="false" />.
            </value>
      <remarks>
        <para>
                This property allows you to highlight all text in the control upon receiving focus.
              </para>
        <para>
                If True, the entire contents will be selected.
              </para>
        <para>
                If False (the default), the contents will not be selected and the caret will be positioned 
                according to the settings of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" /> properties.
              </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.SelectionStart" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.SelectionLength" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.InputDirection">
      <summary>
              Gets or sets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection" /> indicating the input direction.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection" /> indicates the input direction.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection.LeftToRight" /></value>
      <remarks>
              Use the <b>InputDirection</b> property to determine the direction and order when user input data.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.SingleBorderColor">
      <summary>
              Gets or sets color for single line border in the control.
            </summary>
      <value>
              The default value is the <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The color only takes effect when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Text">
      <summary>
              Gets or sets the current text in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask" /> control.
            </summary>
      <remarks>
              The <b>Text</b> property include all literals and all chars in inputable char boxes.
            </remarks>
      <value>
              The text displayed in the control.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Value">
      <summary>
              Gets or sets the underlying value assigned to the control.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the value of the control.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              A string that made of all chars in fields and exclude literals. No matter what fields this control has, this <b>Value</b> is always same. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ValueIsFull">
      <summary>
              Gets whether the control is entirely filled.
            </summary>
      <value>
        <see langword="true" /> if the control is entirely filled; otherwise, <see langword="false" />.
            </value>
      <remarks>
              This property indicates whether every inputable charbox has value all not.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.FlatStyle">
      <summary>
              Gets or sets the flat style of the edit control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx" /> enumeration indicates the flat style of the edit control.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Standard" />.
            </value>
      <remarks>
              The <b>FlatStyle</b> property determines the display style of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShowRecommendedValue">
      <summary>
              Gets or sets a value indicating whether show the recommended value.
            </summary>
      <value>
        <see langword="true" /> if show the recommended value; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.RecommendedValue" /> property will shown when this <b>ShowRecommendedValue</b>
              is <see langword="true" /> and value is not fully inputted. Otherwise, the value of <b>RecommendedValue</b> property will not shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the recommended value.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property makes a hint for user that shown when value is not fully inputted.
              When some value is being inputed,
              pressing some special shortcut key or key combination can accept the recommendatory value. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AboutBox">
      <summary>
              Shows the product information window.
            </summary>
      <remarks>
              A window which contains the product informations could be shown, after this method is called.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.IsInputChar(System.Char)">
      <summary>
            Determines if a character is an input character that the control recognizes.
            </summary>
      <param name="charCode">The character to test.</param>
      <returns>true if the character should be sent directly to the control and not preprocessed; otherwise, false.</returns>
      <remarks>
              Call the <b>IsInputChar</b> method to determine whether the character specified by the charCode parameter is an input character that the control wants. This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control. If <b>IsInputChar</b> returns true, the specified character is sent directly to the control. If <b>IsInputChar</b> returns <see langword="false" />, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. The preprocessing of a character includes checking whether the character is a mnemonic of another control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetBackColor">
      <summary>
              Resets the <b>BackColor</b> property to its default value.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetCursor">
      <summary>
              Resets the <b>Cursor</b> property to its default value.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetDisabledBackColor">
      <summary>
              Resets the <b>DisabledBackColor</b> property to its default value.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetDisabledForeColor">
      <summary>
              Resets the <b>DisabledForeColor</b> property to its default value.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetForeColor">
      <summary>
              Resets the <b>ForeColor</b> property to its default value.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetFormat">
      <summary>
              Resets the <b>Format</b> property to its default value.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeFormat">
      <summary>
              Indicates whether the <b>Format</b> property should 
              be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeBackColor">
      <summary>
              Indicates whether the <b>BackColor</b> property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeDisabledBackColor">
      <summary>
              Indicates whether the <b>DisabledBackColor</b> property should be persisted.
            </summary>
      <returns>
        <see langword="true" />, if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeDisabledForeColor">
      <summary>
              Indicates whether the <b>DisabledForeColor</b> property should be persisted.
            </summary>
      <returns>
        <see langword="true" />, if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeForeColor">
      <summary>
              Indicates whether the <b>ForeColor</b> property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetSingleBorderColor">
      <summary>
              Resets the <b>SingleBorderColor</b> property to its default value.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeSingleBorderColor">
      <summary>
              Indicates whether the <b>SingleBorderColor</b> property should be persisted.
            </summary>
      <returns>
              true if the property value has changed from its default; otherwise, false.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnGotFocus(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate.
              <para />
              The <b>OnGotFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnGotFocus</b> in a derived class, be sure to call the base class's <b>OnGotFocus</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnEnabledChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged"></see> event.
            </summary>
      <param name="e">
              An <see cref="T:System.EventArgs"></see> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate.
              <para />
              The <b>OnEnabledChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnEnabledChanged</b> in a derived class, be sure to call the base class's <b>OnEnabledChanged</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.GetPreferredSize(System.Drawing.Size)">
      <summary>
              Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
      <param name="proposedSize">The custom-sized area for a control.</param>
      <returns>
              An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.
            </returns>
      <remarks>
              This method gets a minimum size which can just display all contents.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ApplyRecommendedValue">
      <summary>
              Applies the recommended value to control.
            </summary>
      <remarks>
              This method mainly used for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoSizeChanged">
      <summary>
              Ocuurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoSize" /> property changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoSize" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnFontChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.
            </summary>
      <param name="e">
              An <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate.
              <para />
              The <b>OnFontChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnFontChanged</b> in a derived class, be sure to call the base class's <b>OnFontChanged</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnForeColorChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event.
            </summary>
      <param name="e">
              An <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate.
              <para />
              The <b>OnForeColorChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnForeColorChanged</b> in a derived class, be sure to call the base class's <b>OnForeColorChanged</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnContextMenuStripChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /> event.
            </summary>
      <param name="e">
              An <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate.
              <para />
              The <b>OnContextMenuStripChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnContextMenuStripChanged</b> in a derived class, be sure to call the base class's <b>OnContextMenuStripChanged</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnValueChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ValueChanged" /> event.
            </summary>
      <param name="e">
              An <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate.
              <para />
              The <b>OnValueChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnValueChanged</b> in a derived class, be sure to call the base class's <b>OnValueChanged</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ValueChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Value" /> property changes.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Value" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.WndProc(System.Windows.Forms.Message@)">
      <summary>
              Processes Windows messages.
            </summary>
      <param name="m">
              The Windows System.Windows.Forms.Message to process.
            </param>
      <remarks>
        <para>
             All messages are sent to the <b>WndProc</b> method after getting filtered through the <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> method.
             </para>
        <para></para>
        <para>
             The <b>WndProc</b> method corresponds exactly to the Windows WindowProc function. For more information about processing Windows messages, see the WindowProc function documentation in the Windows Platform SDK reference located in the MSDN library at http://msdn.microsoft.com/library.
             </para>
        <para></para>
        <para>
          <br />
          <b>Notes to Inheritors:</b> Inheriting controls should call the base class's <b>WndProc</b> method to process any messages that they do not handle. 
             </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
      <param name="x">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</param>
      <param name="y">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</param>
      <param name="width">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</param>
      <param name="height">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</param>
      <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</param>
      <remarks>
             Typically, the parameters that correspond to the bounds not included in the specified parameter are passed in with their current values. For example, the <see cref="P:System.Windows.Forms.Control.Height" />, <see cref="P:System.Windows.Forms.Control.Width" />, or the <see cref="P:System.Drawing.Point.X" /> or <see cref="P:System.Drawing.Point.Y" /> properties of the <see cref="P:System.Windows.Forms.Control.Location" /> property can be passed in with a reference to the current instance of the control. However all values passed in are honored and applied to the control.
             <para />
             The specified parameter represents the elements of the controls <see cref="P:System.Windows.Forms.Control.Bounds" /> changed by your application. For example, if you change the <see cref="T:System.Drawing.Size" /> of the control, the specified parameter value is the <b>Size</b> value of <see cref="T:System.Windows.Forms.BoundsSpecified" />. However, if the <b>Size</b> is adjusted in response to the <see cref="P:System.Windows.Forms.Control.Dock" /> property being set, the specified parameter value is the None value of <b>BoundsSpecified</b>.
             <para /><b>Notes to Inheritors:</b><para />
             When overriding SetBoundsCore in a derived class, be sure to call the base class's SetBoundsCore method to force the bounds of the control to change. Derived classes can add size restrictions to the SetBoundsCore method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.GetDefaultCharBoxes">
      <summary>
              Gets the default charboxes.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> array contains all default charboxes for inputting.
            </returns>
      <remarks>
              The <b>GetDefaultCharBoxes</b> method allows derived classes to customize default char boxes when
              the control is created.
              If return <see langword="null" />, no field would be added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the control is created.
              If return <see langword="null" />, no shortcuts would be added to the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.TouchDropDownScale">
      <summary>
            Gets or sets the factor applies to dropdown item while opening dropdown by touch behavior.
            </summary>
      <value>
            The factor applies to dropdown item while opening dropdown by touch behavior. The default is 1.5f.
            </value>
      <remarks>
              This property is not relevant for this class.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox">
      <summary>
             Represents the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> class
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.CreateAccessibilityInstance">
      <summary>
              Creates a new accessibility object for the control.
            </summary>
      <returns>
             A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.
            </returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyleChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyle" /> property is changed. 
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyle" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDropDownStyleChanged(System.Object,System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyleChanged" /> event.
            </summary>
      <param name="sender">
              A <see cref="T:System.Object" /> instance indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnDropDownStyleChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnDropDownStyleChanged</b> in a derived class, be sure to call the base class's <b>OnDropDownStyleChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpening">
      <summary>
              Occurs before dropdown window pop up.
            </summary>
      <remarks>
              This event is raised if the drop-down window is been opening by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpening" /> event.
            </summary>
      <param name="e">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnDropDownOpening</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnDropDownOpening</b> in a derived class, be sure to call the base class's <b>OnDropDownOpening</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpened">
      <summary>
             Occurs when the dropdown window poped up.
            </summary>
      <remarks>
              This event is raised if the drop-down window is opened by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDropDownOpened(System.Object,System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpened" /> event.
            </summary>
      <param name="sender">
              A <see cref="T:System.Object" /> instance indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnDropDownOpened</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnDropDownOpened</b> in a derived class, be sure to call the base class's <b>OnDropDownOpened</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownClosing">
      <summary>
              Occurs before the dropdown window to close.
            </summary>
      <remarks>
              This event is raised if the drop-down window is been closing by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDropDownClosing(GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownClosing" /> event.
            </summary>
      <param name="e">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnDropDownClosing</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnDropDownClosing</b> in a derived class, be sure to call the base class's <b>OnDropDownClosing</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownClosed">
      <summary>
              Occurs when the dropdown window to close.
            </summary>
      <remarks>
              This event is raised if the drop-down window is closed by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDropDownClosed(System.Object,System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownClosed" /> event.
            </summary>
      <param name="sender">
              A <see cref="T:System.Object" /> instance indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnDropDownClosed</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnDropDownClosed</b> in a derived class, be sure to call the base class's <b>OnDropDownClosed</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndexChanged">
      <summary>         
              Occurs when the <b>SelectedIndex</b> property is changed.	
            </summary>
      <remarks>
              You can create an event handler for this event to determine when the selected index in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> has been changed. 
              This can be useful when you need to display information in other controls based on the current selection in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. 
              You can use the event handler for this event to load the information in the other controls.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnSelectedIndexChanged(System.Object,System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndexChanged" /> event.
            </summary>
      <param name="sender">
              A <see cref="T:System.Object" /> instance indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnSelectedIndexChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnSelectedIndexChanged</b> in a derived class, be sure to call the base class's <b>OnSelectedIndexChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListSelectedItemIndexChanged">
      <summary>         
              Occurs when the <b>ListSelectedItemIndex</b> property is changed.	
            </summary>
      <remarks>
              You can create an event handler for this event to determine when the selected index in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> has been changed. 
              This can be useful when you need to display information in other controls based on the current selection in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. 
              You can use the event handler for this event to load the information in the other controls.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnListSelectedItemIndexChanged(System.Object,System.EventArgs)">
      <summary>
              Raises the ListSelectedItemIndexChanged event.
            </summary>
      <param name="sender">
              A <see cref="T:System.Object" /> instance indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnListSelectedItemIndexChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnListSelectedItemIndexChanged</b> in a derived class, be sure to call the base class's <b>OnListSelectedItemIndexChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SpinDown">
      <summary>
              Occurs when the spin down action performed.
            </summary>
      <remarks>
              This event is raised when spin down behavior happened.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnSpinDown(System.Object,System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SpinDown" /> event.
            </summary>
      <param name="sender">
              A <see cref="T:System.Object" /> instance indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnSpinDown</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnSpinDown</b> in a derived class, be sure to call the base class's <b>OnSpinDown</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SpinUp">
      <summary>
              Occurs when the spin up action performed.
            </summary>
      <remarks>
              This event is raised when spin up behavior happened.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnSpinUp(System.Object,System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SpinUp" /> event.
            </summary>
      <param name="sender">
              A <see cref="T:System.Object" /> instance indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnSpinUp</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnSpinUp</b> in a derived class, be sure to call the base class's <b>OnSpinUp</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSourceChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource" /> property is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDataSourceChanged(System.Object,System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSourceChanged" /> event.
            </summary>
      <param name="sender">
              A <see cref="T:System.Object" /> instance indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnDataSourceChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnDataSourceChanged</b> in a derived class, be sure to call the base class's <b>OnDataSourceChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMemberChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" /> property is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDataMemberChanged(System.Object,System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMemberChanged" /> event.
            </summary>
      <param name="sender">
              A <see cref="T:System.Object" /> instance indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnDataMemberChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnDataMemberChanged</b> in a derived class, be sure to call the base class's <b>OnDataMemberChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataPropertyNameChanged">
      <summary>
              Occurs when name of binding field in current binding data source is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataPropertyName" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDataPropertyNameChanged(System.Object,System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataPropertyNameChanged" /> event.
            </summary>
      <param name="sender">
              A <see cref="T:System.Object" /> instance indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnDataPropertyNameChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnDataPropertyNameChanged</b> in a derived class, be sure to call the base class's <b>OnDataPropertyNameChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoGenerateColumnsChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoGenerateColumns" /> property is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoGenerateColumns" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnAutoGenerateColumnsChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoGenerateColumnsChanged" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnAutoGenerateColumnsChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnAutoGenerateColumnsChanged</b> in a derived class, be sure to call the base class's <b>OnAutoGenerateColumnsChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> class with a container type parameter.
            </summary>
      <param name="container">The container.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; 
              <see langword="false" /> to release only unmanaged resources.
            </param>
      <remarks>
              Call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Dispose(System.Boolean)" /> when you are finished using the <see cref="T:System.Windows.Forms.Control" />. 
              The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Dispose(System.Boolean)" /> method leaves the <see cref="T:System.Windows.Forms.Control" /> in an unusable state. 
              After calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Dispose(System.Boolean)" />, you must release all references to the <see cref="T:System.Windows.Forms.Control" /> 
              so the garbage collector can reclaim the memory that the <see cref="T:System.Windows.Forms.Control" /> was occupying.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AcceptsCrLf">
      <summary>
            Gets or sets a value indicating how to process the CrLf chars when copy, cut or paste string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration indicates which mode that the CrLf chars will be used when copy, cut and paste string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting make the <b>GcComboBox</b> same with the standard <b>TextBox</b> when copy, cut and paste string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> isn't a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AcceptsTabChar">
      <summary>
            Gets or sets a value indicating how to process the Tab chars when copy, cut or paste string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> enumeration indicates which mode that the Tab chars will be used when copy, cut and paste string.
            <br />The default is <b>TabCharMode.NoControl</b>.
            </value>
      <remarks>
              The <b>TabCharMode.Cut</b> setting make the <b>GcComboBox</b> same with the standard <b>TextBox</b> when copy, cut and paste string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> isn't a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteCustomSource">
      <summary>
              Gets or sets a custom <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> to use 
              when the AutoCompleteSource property is set to CustomSource.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> to use with <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteSource" />.
              <br /> The default is <see langword="null" />.
            </value>
      <remarks>
        <para>
              Use the <b>AutoCompleteCustomSource</b>, <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteMode" />, 
              and <b>AutoCompleteSource</b> properties to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />
              that automatically completes input string by comparing the prefix being entered to the
              prefixes of all strings in a maintained source. This is useful for TextBox controls in which 
              URLs, addresses, file names, or commands will be frequently entered.
              <para></para><para>
              The use of the <b>AutoCompleteCustomSource</b> property is optional, but you must
              set the <b>AutoCompleteSource</b> property to CustomSource in order to use 
              <b>AutoCompleteCustomSource</b>.
              </para><para></para><para>
              You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b> properties together.
                </para></para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteMode">
      <summary>
              Gets or sets an option that controls how automatic completion works for 
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />.
            </summary>
      <value>
              One of the values of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteMode" />. 
              The values are <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" /> and 
              <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />. 
              The default is <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />.
            </value>
      <remarks>
        <para>
              Use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteCustomSource" />, <b>AutoCompleteMode</b>, 
              and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteSource" /> properties to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> that automatically 
              completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source. 
              This is useful for <b>GcTextBox</b> controls in which URLs, addresses, file names, or commands will be frequently entered.
              </para>
        <para></para>
        <para>
              The use of the <b>AutoCompleteCustomSource</b> property is optional, 
              but you must set the <b>AutoCompleteSource</b> property to <b>CustomSource</b>
              in order to use <b>AutoCompleteCustomSource</b>.
              </para>
        <para></para>
        <para>
              You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b>
              properties together.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteSource">
      <summary>
              Gets or sets a value specifying the source of complete strings used for automatic completion.
            </summary>
      <value>
              One of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />. The options
              are <see cref="F:System.Windows.Forms.AutoCompleteSource.AllSystemSources" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteSource.AllUrl" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteSource.FileSystem" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteSource.HistoryList" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteSource.RecentlyUsedList" />,
              <see cref="F:System.Windows.Forms.AutoCompleteSource.CustomSource" />, 
              and <see cref="F:System.Windows.Forms.AutoCompleteSource.None" />. 
              <br /> The default is <see cref="F:System.Windows.Forms.AutoCompleteSource.None" />.
            </value>
      <remarks>
        <para>
              Use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteCustomSource" />,<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteMode" />,
              and <b>AutoCompleteSource</b> properties to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> 
              that automatically completes input strings by comparing the prefix being entered to the 
              prefixes of all strings in a maintained source. This is useful for <b>GcTextBox</b> controls 
              in which URLs, addresses, file names, or commands will be frequently entered.
              </para>
        <para></para>
        <para>
              The use of the <b>AutoCompleteCustomSource</b> property is optional, but you must set the 
              <b>AutoCompleteSource</b> property to <b>CustomSource</b> in order to use 
              <b>AutoCompleteCustomSource</b>.
              </para>
        <para></para>
        <para>
              You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b> properties together.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoComplete">
      <summary>
              Gets the auto complete related settings.
            </summary>
      <value>
              The auto complete.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoGenerateColumns">
      <summary>
              Gets or sets a value indicating whether columns are created automatically when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource" /> 
              or <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" /> is set.
            </summary>
      <value>
              A<see langword="bool" /> value, <see langword="true" /> if the columns should be created automatically; otherwise,<see langword="false" /> . 
              <br />The default is <see langword="true" />.
            </value>
      <remarks>
              When user binds a source to the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" />, the drop-down list of this control can auto generate columns according the data source.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoConvert">
      <summary>
             Gets or sets a <see langword="bool" /> value indicates whether auto convert the inputted characters.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> if  auto convert the inputted characters according to 
             the input, otherwise, <see langword="false" />.
             <br /> The defalut is <see langword="true" />.
            </value>
      <remarks>
        <para>
              If set the <b>AutoConvert</b> property to <see langword="true" />, all convertible characters will be 
              automatically converted accordingly to the input mask. For example, if set 
              the input mask to "A", by hitting a lower case character the control automatically 
              converts the character into an upper case. 
              </para>
        <para>
              If SBCS is entered in a DBCS mask input, the entered character will be automatically 
              converted to DBCS. Also a DBCS space will be automatically converted to a SBCS space 
              when the control allows only SBCS. 
              </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoSelect">
      <summary>
              Gets or sets a <see langword="bool" /> value indicates whether auto selects the item in the List that matches the
              input in the Editor.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> if auto match the inputted characters according to 
             the input, otherwise, <see langword="false" />.
             <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoSize">
      <summary>
              Gets or sets a <see langword="bool" /> value indicates whether this control can 
              adjust its size according to its contents.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if this control can 
              adjust its size according to its contents, otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              When this property is set to <see langword="true" />, the <b>EditBase</b> adjusts its width to display its entire contents.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackColor">
      <summary>
              Gets or sets the background color for the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the background color for the control.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of your forms.
              <para />
              To change the color of the text within the control, use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ForeColor" /> property. 
              When setting the <b>BackColor</b> property of your control, ensure that the color you choose does not cause the text of the control to disappear. 
              For example, if the <b>BackColor</b> and <b>ForeColor</b> properties are both set to <b>Color.Black</b>, the text within your control will not be visible.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ForeColor">
      <summary>
              Gets or sets the foreground color for the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the foreground color for the control.
            </value>
      <remarks>
              You can use the <b>ForeColor</b> property to change the color of the text within the control to match the text of other controls on your form. 
              You can also use this property to highlight a specific control that contains an invalid value.
              <para />
              To change the background color of the control, use the <b>BackColor</b> property. 
              When setting the <b>ForeColor</b> property of your text control, ensure that the color you choose does not cause the text of the control to disappear. 
              For example, if the <b>ForeColor</b> and <b>BackColor</b> properties are both set to <b>Color.Black</b>, the text within your textbox control will not be visible.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DisabledForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackgroundImage">
      <summary>
              Gets or sets the background image displayed in the control.
            </summary>
      <value>
              An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background
              of the control.
            </value>
      <remarks>
              Use the <b>BackgroundImage</b> property to place a graphic image onto a control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackgroundImageLayout">
      <summary>
              Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.
            </summary>
      <value>
              One of the values of <see cref="T:System.Windows.Forms.ImageLayout" /> (<see cref="F:System.Windows.Forms.ImageLayout.Center" />, <see cref="F:System.Windows.Forms.ImageLayout.None" />, 
              <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, <see cref="F:System.Windows.Forms.ImageLayout.Tile" />, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />). 
              <br />The default is <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.
            </value>
      <remarks>
              Use the <b>BackgroundImageLayout</b> property to specify the position and behavior of an image you have placed onto a control. 
              <b>BackgroundImageLayout</b> takes effect only if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackgroundImage" /> property is set.
              <pare />
              You can increase performance for large images if you set <b>BackgroundImageLayout</b> to something other than <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle">
      <summary>
              Gets or sets the type of border that is drawn around the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle" /> enumeration indicates the border style.
             <br />
              The default is <b>BorderStyle.Fixed3D</b>.
            </value>
      <remarks>
              You can use the <b>BorderStyle</b> property to create borderless and flat style controls, in addition to the default three-dimensional control.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              A value that is not within the range of valid values for the enumeration was assigned to the property. 
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SingleBorderColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.CanUndo">
      <summary>
              Gets a value indicating whether the control can undo the previous operation in a control.
            </summary>
      <value>
        <see langword="true" /> if this instance can undo; otherwise, <see langword="false" />.
             <br /> The default is <see langword="true" />.
            </value>
      <remarks>
              If this method returns <see langword="true" />, 
              you can call the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" /> method to undo the last operation in a control. 
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AllowSpace">
      <summary>
              Gets or sets an <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AllowSpace" /> value indicates which type of the space character is allowed.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace" /> value.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Both" />.
            </value>
      <remarks>
        <para>
              Use the <b>AllowSpace</b> property to specify which kind of space will be allowed in the text.
              </para>
        <para></para>
        <para>
                If the <b>AllowSpace</b> is <b>None</b> mode, this <b>GcComboBox</b> will not accept space.
                The <b>AllowSpace.Narrow</b> means the SBCS space will be allowed.
                The <b>AllowSpace.Wide</b> means the DBCS space will be allowed.
                And the <b>AllowSpace.Both</b> means all kinds of space will be allowed.
              </para>
        <para></para>
        <note>
                If the AutoConvert propety is <see langword="true" /> and the AllowSpace is <b>AllowSpace.Wide</b>, the control
                will auto convert the SBCS space to DBCS space when user input a SBCS space char. It's the same to other settings.
                And the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Format" /> property always be used with this <b>AllowSpace</b> property.
              </note>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource">
      <summary>
              Gets or sets the data source.
            </summary>
      <value>
              An <b>object</b> indicating the data source.
             <br /> The default is <see langword="null" />.
            </value>
      <remarks>
              A data source can be a database, a Web service, or an object that can later be used to generate data-bound controls. 
              When the <b>DataSource</b> property is set, the items collection cannot be modified.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLength">
      <summary>
              Gets or sets the max length the user can input in the editable region.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value.
              <br /> The defalut is 0.
            </value>
      <remarks>
              This property related with the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLengthUnit" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLengthUnit">
      <summary>
              Gets or sets the calculational methods of the <b>MaxLength</b> (based on byte or character).
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the calculational methods of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLength" /> based on byte,
              <see langword="false" /> means based on character.
              <br /> The defalut is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit.Char" />.
            </value>
      <remarks>
              This property related with the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLength" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLengthCodePage">
      <summary>
            Gets or sets the code page for the encoding that used to count the max length in byte.
            </summary>
      <value>
            An <see cref="T:System.Int32" /> value indictes the code page for the encoding. <b />
            The default is -1, indicates using the built-in byte length counting method instead of using encoding.
            </value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLengthUnit" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDown">
      <summary>
              Gets the settings about drop-down function.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown" /> instance indicates the settings about drop-down function.
            </value>
      <remarks>
              The dropdown behavior and the window appearance can be customized by setting this <b>DropDown</b> property.
              Includes enable shown or not, resizeable, the diriction of dowpdown windown shown, the 
              shadow of dropdown window and animations when opening and closing.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownMaxHeight" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownMaxHeight">
      <summary>
             Gets or sets the max height of the drop down window, if the user doesn't customize the Size 
             of drop-down window, otherwise, the function of this property will not take effect.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value indicates the max height of the drop down window.
             <br /> The default is 150.
            </value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDown" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxDropDownItems">
      <summary>
            Gets or sets the maximum number of items to be shown in the drop-down portion of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />.
            </summary>
      <value>
            The maximum number of items of in the drop-down portion. The minimum for this property is 1 and the maximum is 100.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The maximum number is set less than one or greater than 100.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DroppedDown">
      <summary>
              Gets or sets a value indicating whether the dropdown window is dropped down.
            </summary>
      <value>
        <see langword="true" /> if dropped down; otherwise, <see langword="false" />.
            	<br /> The defalut is <see langword="false" />.
            </value>
      <remarks>
              Seting this property to <see langword="true" /> sames as call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Drop" /> method.
            <note>
              If the <b>GcComboBox</b> is disable or invisible, this property can't take effect.
              Either, when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> property is false,
              this property can't take effect.
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember">
      <summary>
              Gets or sets a value that represents a string of binding member.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the binding member.
             <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DisabledBackColor">
      <summary>
              Gets or sets the disabled background color of the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the disabled background color.
            </value>
      <remarks>
              If this control is disabled, the background is displayed by following the value of this property.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DisabledForeColor">
      <summary>
              Gets or sets the disabled foreground color of the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the disabled foreground color.
            </value>
      <remarks>
              If this control is disabled, the foreground is displayed by following the value of this property.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyle">
      <summary>
              Gets or sets the dropdown style.
            </summary>
      <value>
             A <see cref="T:System.Windows.Forms.ComboBoxStyle" /> value.
             <br /> The default is <see langword="System.Windows.Forms.ComboBoxStyle.DropDown" />.
            </value>
      <remarks>
              The <b>DropDownStyle</b> property controls the interface that is presented to the user. 
              You can enter a value that provides a simple drop-down list box, where the list always displays, a drop-down list box, 
              where the text portion is not editable and you must select an arrow to view the drop-down, or the default drop-down list box, 
              where the text portion is editable and the user must press the arrow key to view the list. 
              <para />
              If you set the <b>DropDownStyle</b> property to <b>DropDownList</b>, 
              you can select only valid values from the list. If you set the <b>DropDownStyle</b> property to <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDown" />, 
              you can type any value in the editable area of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. In this case, 
              the <b>Append</b> value of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteMode" /> works 
              the same as the <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" /> value of <b>AutoCompleteMode</b>.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FlatStyle">
      <summary>
              Gets or sets the appearance of this control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx" /> enumeration indicates the flat style.
            </value>
      <remarks>
              Use the <b>FlatStyle</b> property to get or set the display of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Format">
      <summary>
              Gets or sets a format string used to filter or convert the input string.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates a format string used to filter or convert the input string.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              This property specified what kind of chars and symbols is allowed to input.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.HighlightText">
      <summary>
              Gets or sets a value indicates whether to highlight text in the control.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> when control got focus select all the text, otherwise, <see langword="false" />. 
              The default value is <see langword="false" />.
            </value>
      <remarks>
        <para>
                This property allows you to highlight all text in the control upon receiving focus.
              </para>
        <para>
                If <see langword="true" />, the entire contents will be selected.
              </para>
        <para>
                If <see langword="false" /> (the default), the contents will not be selected and the caret will be positioned 
                according to the settings of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionLength" /> properties.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageAlign">
      <summary>
              Gets or sets the alignment of the image of this control.
            </summary>
      <value>
              A  <see cref="T:System.Windows.Forms.HorizontalAlignment" /> value indicates
              the alignment of the image of Editor and List.
            </value>
      <remarks>
              This property determines what position the image of an item to anchor. If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage" /> value is false, this property will not take effects.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageWidth" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageList">
      <summary>
              Gets or sets a value indicates <b>ImageList</b> of this control.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageList" /> that user add a lots of <b>Image</b> object.
              <br /> The default is <see langword="null" />.
            </value>
      <remarks>
              The <b>Image</b> property of item in <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Items" /> can load images form this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageWidth">
      <summary>
              Gets ore sets the width of image of this control.
            </summary>
      <value>
             A <see cref="T:System.Int32" /> value indicates the width of image area.
             <br /> The default is 16.
            </value>
      <remarks>
              This property determines the width of image area which is used for displaying item image.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageAlign" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Items">
      <summary>
              Gets the collection of the items.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection" /> representing the collection of the combo items.
            </value>
      <remarks>
              This property enables you to obtain a reference to the list of items that are currently stored in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. 
              With this reference, you can add items, remove items, and obtain a count of the items in the collection. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListColumns">
      <summary>
             Gets the collection of the columns.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection" /> object.
            </value>
      <remarks>
              By using the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection" /> returned by this property, 
              you can add columns, remove columns, and obtain a count of the columns contained in the drop-down list of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> control. 
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDefaultColumn" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDefaultColumn">
      <summary>
             Gets or sets <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn" /> a value that represents default ListColumn of List.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn" /> value.
            </value>
      <remarks>
              This property used to make up a default setting of columns. 
              If user add a column without any changes about appearance, the column will displayed as default column settings.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListColumns" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionSubItemIndex">
      <summary>
             Gets or sets the index of a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> relating with the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" /> display.
            </summary>
      <value>
             An <see cref="T:System.Int32" /> value indicates the index of a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> relating with the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" /> display.
             <br /> The default is 0.
            </value>
      <remarks>
              When the status bar is shown, this property can determine which text of subitem is displayed in the status bar of the drop-down window.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionFormat" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDisabledItemStyle">
      <summary>
              Gets an <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle" /> value indicates color style of the disabled item.
            </summary>
      <value>
             An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle" /> value.
            </value>
      <remarks>
              The backcolor, the forecolor and the gradient effect can be costumized by this property for disabled item in the drop-down list.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListGradientEffect">
      <summary>
              Gets or sets a value that indicates background gradient effect of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" /> value that indicates background gradient effect of the control. 
              <br /> The default is <see langword="null" />.
            </value>
      <remarks>
              The value of this property is drawn in the background of the drop-down list window. But the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackgroundImage" /> will cover it.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListGridLines">
      <summary>
              Gets or sets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListGridLines" /> value that indicates the grid lines of control.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListGridLines" /> value.
            </value>
      <remarks>
              The value of this property determines the appearance of gridlines. 
              Include the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Color" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Style" /> of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListHeaderPane">
      <summary>
              Gets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListHeaderPane" /> value indicates the header pane of control.
            </summary>
      <value>
              A  <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListHeaderPane" /> value.
            </value>
      <remarks>
              The property determines the appearance of the header panel of the drop-down list.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListItemTemplates">
      <summary>
              Gets or sets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection" /> value that indicates a template of items.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection" /> value.
            </value>
      <remarks>
              This property used to make up a default setting of the list items. 
              If user add an item without any changes about appearance, the item will display as the template settings.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListSelectedItemStyle">
      <summary>
              Gets an <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle" /> value indicates color style of the selected Item of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle" /> value.
            </value>
      <remarks>
              This property used to customize the appearance of selected item.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListSelectedItemIndex">
      <summary>
              Gets an int value indicates the index of the selected item in the combo box list.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value.
              <br /> The defalut is -1.
            </value>
      <remarks>
              This property indicates the zero-based index of the currently selected item index in the combo box list. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextSubItemIndex">
      <summary>
              Gets or sets a int value that represents index of <b>SubItem</b> use to display for Text property.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value.
              <br /> The default is 0.
            </value>
      <remarks>
              If the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" /> property is <see cref="F:System.String.Empty" />, 
              the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" /> property equals the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> which in the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" /> collection of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem" />  and located by the index value of this property.
            </remarks>
      <exception cref="T:System.ArgumentException">The value isn't valid.</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedText" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ScrollBarMode">
      <summary>
              Gets or sets how to display the scroll bars in drop-down window.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ScrollBarMode" /> enumerations indicating how to display the scroll bars.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Automatic" />.
            </value>
      <remarks>
              If set to <b>ScrollBarMode.Fixed</b>, the scroll bars will be displayed at all time. 
              If set to <b>ScrollBarMode.Automatic</b>, the scroll bars will be visible only when the contents in the control exceed the length of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ScrollBars">
      <summary>
              Gets or sets which scroll bars will be visible on this control.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ScrollBars" /> enumeration specifying which scroll bars will be visible.
              <br /> The defalut is <see cref="F:System.Windows.Forms.ScrollBars.Vertical" />.
            </value>
      <remarks>
              This property determines which srollbar should be displayed.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndex">
      <summary>
              Gets or sets an int value indicates the zero-based index of selected item in the dropdown list.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value.
              <br /> The defalut is -1.
            </value>
      <remarks>
              This property indicates the zero-based index of the currently selected item in the combo box list. Setting a new index raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndexChanged" /> event.
            <note>
              To deselect the currently selected item, 
              set the <b>SelectedIndex</b> to -1. 
              You cannot set the <b>SelectedIndex</b> of a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> item to -1 if the item is a data-bound item.
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem">
      <summary>
              Gets or sets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> value indicates the selected item in the dropdown list.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> object.
              <br /> The default is <see langword="null" />.
            </value>
      <remarks>
              When you set the <b>SelectedItem</b> property to an object, 
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> attempts to make that object the currently selected one in the list. 
              If the object is found in the list, it is displayed in the edit portion of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> 
              and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndex" /> property is set to the corresponding index. 
              If the object does not exist in the list, the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndex" /> property is left at its current value.
              <note>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> class searches for the specified object by using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" /> method. 
              </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedText">
      <summary>
              Gets or sets the selected text.
            </summary>
      <value>
              A <see cref="T:System.String" /> value.
            </value>
      <remarks>
              You can assign text to this property to highlight specified text or change only the currently selected text in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. 
              If no text is currently selected in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />, this property returns a zero-length string.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionLength">
      <summary>
              Gets or sets the number of characters selected in the control.
            </summary>
      <value>
              The number of characters selected in the control.
            </value>
      <remarks>
              You can use this property to determine if any characters are currently selected in the control before performing operations on the selected text. 
              When the value of the <b>SelectionLength</b> property is set to a value that is larger than the number of characters within the text of the control, 
              the value of the <b>SelectionLength</b> property is set to the entire length of text within the control minus the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart" /> property
              (if any value is specified for the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart" /> property).
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The assigned value is less than zero.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart">
      <summary>
            Gets or sets the selection start.
            </summary>
      <value>
              The selection start.
            </value>
      <remarks>
              If no text is selected in the control, 
              this property indicates the insertion point for new text. 
              If you set this property to a location beyond the length of the text in the control, 
              the selection start position will be placed after the last character. 
              When text is selected in the control, changing this property might decrease the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionLength" /> property. 
              If the remaining text in the control after the position indicated by the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart" /> property is less than the value of the <b>SelectionLength</b> property, 
              the value of the <b>SelectionLength</b> property is automatically decreased. The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart" /> property never causes an increase in the <b>SelectionLength</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowItemTip">
      <summary>
              Gets or set a value indicating whether to show item tooltip.
            </summary>
      <value>
        <see langword="true" /> to show tooltip when mouse hovers on item; 
              otherwise, <see langword="false" />. <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              When mouse hover on an item in the drop-down list, a tooltip will be shown if this property is <see langword="true" />.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowOverflowTip" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage">
      <summary>
              Gets or sets a bool value indicates whether show the images of the 
              dropdown list.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the show images, otherwise, <see langword="false" /> .
             <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              An image will be shown if this property is <see langword="true" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Image" /> property is not <see langword="null" />.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageWidth" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageAlign" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowOverflowTip">
      <summary>
              Gets or sets whether to show the overflow tip.
            </summary>
      <value>
              A <see langword="bool" /> value indicates whether to show the overflow tip.
              <br /> The defalut is <see langword="false" />.
            </value>
      <remarks>
              When mouse hover on an item in the drop-down list, a tooltip will be shown if this property is <see langword="true" /> and the item text is longger than the column width.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowItemTip" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SingleBorderColor">
      <summary>
              Gets or sets the color when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the border color when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
              <br />
              The default is <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The <see cref="T:System.Drawing.Color" /> only takes effect when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListSortColumnIndex">
      <summary>
              Gets or sets a value that represents user specify index of column will be sorted.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value.
              <br /> The defalut is -1.
            </value>
      <remarks>
              When user sort the drop-down list, this property determines the index of column to sort.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar">
      <summary>
              Gets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" /> object indicates statusbar info.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" /> object.
            </value>
      <remarks>
              This property determines the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Text" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Visible" /> properties.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SideButtons">
      <summary>
              Gets or the <b>SideButton</b> collection.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> instance indicates the SideButtonBase collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed more commend buttons.
              Includs the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />,
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Spin">
      <summary>
             Gets or sets the spin action data package
            </summary>
      <value>
             A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Spin" /> indicates the spin data package.
            </value>
      <remarks>
              The spin behaviors can be customized by setting this <b>Spin</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextBoxStyle">
      <summary>
              Gets or sets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle" /> value indicates the appearance style of the Editor.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle" /> value.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.TextOnly" />.
            </value>
      <remarks>
              The property determines only text, only image or both can be displayed in the edit area of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> control.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.UnSelectedImageIndex">
      <summary>
              Gets or sets the index of image which will be shown on the editor area when user doesn't select any item in the drop down list.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value indicates the index of image.
             <br /> The default is -1.
            </value>
      <remarks>
              When the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem" /> is <see langword="null" /> and 
              the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextBoxStyle" /> property is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.ImageOnly" /> or <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.Both" />, 
              a image will displayed in the edit area following this index value.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.PreferredHeight">
      <summary>
              Gets the preferred height.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates preferred height of the control.
            </value>
      <remarks>
              This property just as the height of  <see cref="P:System.Windows.Forms.Control.PreferredSize" /> property.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.GetPreferredSize(System.Drawing.Size)">
      <summary>
              Retrieves the size of a rectangular area into which a control can be fitted.
            </summary>
      <param name="proposedSize">
              The custom-sized area for a control.
            </param>
      <returns>
              An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.
            </returns>
      <remarks>
              This method gets a minimun size which can just display all contents.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text">
      <summary>
              Gets or sets the text associated with this control.
            </summary>
      <value>
              The text associated with this control.
            </value>
      <remarks>
              This property related with the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" /> property. 
              If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem" /> contains a few of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />, 
              the value of this property can display one or more subitems' text following the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" /> property.  
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Ellipsis">
      <summary>
              Gets or sets how show ellipsis when width of text is longer than control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" /> enumeration,
              <b>None</b>, means no ellipsis string is shown.
              <b>EllipsisEnd</b>, Trim the end of string with charactor.
              <b>EllipsisPath</b>, Trim the center of string with charactor.
              <b>EllipsisWord</b>, Trim the end of string with word.
              <br />The default is <b>EllipsisMode.None</b>.
            </value>
      <remarks>
              When the text is longer than this control's width and this control doesn't focused, 
              the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.EllipsisString" /> property is displayed.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> isn't a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.EllipsisString">
      <summary>
              Gets or sets what is shown as ellipsis when width of text is longer than control
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the string used as ellipsis.
              <br />The default is <b>(...)</b>.
            </value>
      <remarks>
              This property specifies the string that used when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Ellipsis" /> is set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisEnd" />
               or <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisPath" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AlternateText">
      <summary>
              Gets the alternate text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateText" /> value indicates the alternate text.
            </value>
      <remarks>
              If current value is <see cref="F:System.String.Empty" /> and this control contain input focus, this <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" /> property equals the 
              <see cref="P:ComboBoxAlternateText.Null" /> settings, which is not null. And the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" /> property
              equals the <see cref="P:ComboBoxAlternateText.DisplayNull" /> settings if current value is <see langword="null" />
              and this control doesn't contain the input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowRecommendedValue">
      <summary>
              Gets or sets a value indicating whether show the recommended value.
            </summary>
      <value>
        <see langword="true" /> if show the recommended value; otherwise, <see langword="false" />.
             <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.RecommendedValue" /> property will shown when this <b>ShowRecommendedValue</b> is <see langword="true" /> and value is not fully inputted. Otherwise, the value of <b>RecommendedValue</b> property will not shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the recommended value.
             <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property makes a hint for user that shown when value is not fully inputted. 
              When some value is being inputed, pressing some special shortcut key or key combination can accept the recommendatory value. 
            </remarks>
      <exception cref="T:System.ArgumentException">The value isn't valid.</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AboutBox">
      <summary>
              Shows the product information window.
            </summary>
      <remarks>
              A window which contains the product informations could be shown, after this method is called.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BeginUpdate">
      <summary>
              Maintains performance when items are added to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> one at a time.
            </summary>
      <remarks>
             This method prevents the control from painting until the EndUpdate method is called.
             The preferred way to add items to the <b>GcComboBox</b> is to use the AddRange method of the <b>ListItemCollection</b> 
            class (through the Items property of the <b>GcComboBox</b>). This enables you to add an array of items to the list at one time.
            However, if you want to add items one at a time using the Add method of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection" /> class, you
            can use the BeginUpdate method to prevent the control from repainting the <b>GcComboBox</b> each time an item is added to 
            the list. Once you have completed the task of adding items to the list, call the EndUpdate method to enable the <b>GcComboBox</b> 
            to repaint. This way of adding items can prevent flicker during the drawing of the <b>GcComboBox</b> when a large number of items
            are being added to the list.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.EndUpdate">
      <summary>
              Resumes painting the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> control after painting is suspended by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BeginUpdate" /> method.
            </summary>
      <remarks>
            The preferred way to add items to the <b>GcComboBox</b> is to use the AddRange method of the <b>ListItemCollection</b>  
            class (through the Items property of the <b>GcComboBox</b>). This enables you to add an array of items to the list at one time. 
            However, if you want to add items one at a time using the Add method of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection" /> class, you
            can use the BeginUpdate method to prevent the control from repainting the <b>GcComboBox</b> each time an item is added to the
            list. Once you have completed the task of adding items to the list, call the EndUpdate method to enable the <b>GcComboBox</b> 
            to repaint. This way of adding items can prevent flickered drawing of the <b>GcComboBox</b> when a large number of items
            are being added to the list.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32)">
      <summary>
              Finds all items in the list that starts with the specified string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection" /> containing the matched items.
            </returns>
      <remarks>
              The search performed by this method is not case-sensitive. 
              The s parameter is a substring to compare against the text associated with the items in the combo box list. 
              The search performs a partial match starting from the beginning of the text, and returning the first item in the column located by findTargetColumnIndex of the list 
              that matches the specified substring. 
              You can then perform tasks, such as removing the item that contains the search text using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" /> method 
              or changing the item's text. 
              Once you have found the specified text, if you want to search for other instances of the text in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />, 
              you must use the version of the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)" /> method that provides a parameter for specifying a starting index 
              within the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. 
              If you want to perform a search for an exact word match instead of a partial match, use the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32)" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)">
      <summary>
              Finds the first item after the given index which starts with the given string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              The zero-based index of the first item found; returns -1 if no match is found.
            </returns>
      <remarks>
              The search performed by this method is not case-sensitive. 
              The s parameter is a substring to compare against the text associated with the items in the combo box list. 
              The search performs a partial match starting from the beginning of the text, 
              returning all of the items in the column located by findTargetColumnIndex of the list that matches the specified substring. 
              You can then perform tasks, such as removing the item that contains the search text using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" /> method 
              or changing the item's text. 
              This method is typically used after a call has been made using the version of this method that does not specify a starting index. 
              Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position 
              in the startIndex parameter of the item after the first found instance of the search text. 
              If you want to perform a search for an exact word match instead of a partial match, use the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.Int32)" /> method.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
               The <b>startIndex</b> is out of range.
             </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
               The <b>findTargetColumnIndex</b> is out of range.
             </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32)">
      <summary>
              Finds all items in the list that matches the specified string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" /> containing the matched items.
            </returns>
      <remarks>
              The search performed by this method is case-sensitive. 
              The s parameter is a string to compare against the text associated with the items in the combo box list. 
              The search looks for a match starting from the beginning of the text, 
              returning the first item in the column located by findTargetColumnIndex of the list that matches the specified substring. 
              You can then perform tasks, such as removing the item that contains the search text using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" /> method or 
              changing the item's text. 
              Once you have found the specified text, if you want to search for other instances of the text in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />, 
              you must use the version of the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.Int32)" /> method that provides a parameter for specifying a starting index 
              within the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. If you want to perform partial word search instead of an exact word match, use the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32)" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.Int32)">
      <summary>
              Finds the first item after the specified index that matches the specified string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              The zero-based index of the first item found; returns -1 if no match is found.
            </returns>
      <remarks>
              The search performed by this method is case-sensitive. 
              The s parameter is a string to compare against the text associated with the items in the combo box list. 
              The search looks for a match starting from the beginning of the text, .
              returning the first item in the column located by findTargetColumnIndex of the list that matches the specified substring. 
              You can then perform tasks, such as removing the item that contains the search text using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" /> method or 
              changing the item's text. This method is typically used after a call has been made using the version of this method that does not specify a starting index. 
              Once an initial item has been found in the list, 
              this method is typically used to find further instances of the search text by specifying the index position in the startIndex parameter of the item 
              after the first found instance of the search text. 
              If you want to perform partial word search instead of an exact word match, use the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)" /> method.
              <para />
              The search performed by this method is not circular. 
              If the startIndex parameter itself is equal to the last index in the collection, an exception is thrown.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
               The <b>startIndex</b> is out of range.
             </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
               The <b>findTargetColumnIndex</b> is out of range.
             </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindObject(System.Object,System.Int32)">
      <summary>
              Finds all items in the list that matches the specified object.
            </summary>
      <param name="obj">
              The object to search for.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" /> containing the matched items.
            </returns>
      <remarks>
              The obj parameter is an object to compare against the object associated with the items in the combo box list. 
              The search performs a partial match starting from the beginning of the object, 
              and returning all of the items in the column located by findTargetColumnIndex of the list that matches the specified substring. 
              You can then perform tasks, 
              such as removing the item that contains the search object using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" /> method or changing the item's text. 
              Once you have found the specified object, if you want to search for other instances of the object in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />, 
              you must use the version of the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)" /> method that provides a parameter for specifying a starting index within the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. 
              If you want to perform a search for an exact word match instead of a partial match, use the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32)" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindObject(System.Object,System.Int32,System.Int32)">
      <summary>
              Finds the first item after specifed index that matches the specified object.
            </summary>
      <param name="obj">
              The object to search for.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              The zero-based index of the first item found.
            </returns>
      <remarks>
              The obj parameter is a object to compare against the object associated with the items in the combo box list. 
              The search performs a partial match starting from the beginning of the object, 
              returning the first item in the column located by findTargetColumnIndex of the combo box list that matches the object. 
              You can then perform tasks, such as removing the item that contains the search object using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" /> method or 
              changing the object. 
              This method is typically used after a call has been made using the version of this method that does not specify a starting index. 
              Once an initial item has been found in the list, this method is typically used to find further instances of the search object 
              by specifying the index position in the startIndex parameter of the item after the first found instance of the search object. 
              If you want to perform a search for an exact word match instead of a partial match, use the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.Int32)" /> method.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
               The <b>startIndex</b> is out of range.
             </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
               The <b>findTargetColumnIndex</b> is out of range.
             </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.String)">
      <summary>
              Finds all items in the list that starts with the specified string
              based on the specific text format.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="textFormat">
              The <see cref="T:System.String" /> refer to the TextForamt.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection" /> containing the matched items.
            </returns>
      <remarks>
              The search performed by this method is not case-sensitive. 
              The s parameter is a substring to compare against the text associated with the items in the combo box list. 
              The search performs a partial match starting from the beginning of the text, and returning the items in the combo box list that matches the specified substring. 
              You can then perform tasks, 
              such as removing the item that contains the search text using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" /> method 
              or changing the item's text. 
              Once you have found the specified text, 
              if you want to search for other instances of the text in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />, 
              you must use the version of the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)" /> method that provides a parameter for specifying a starting index 
              within the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. 
              If you want to perform a search for an exact word match instead of a partial match, use the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.String)" /> method.
            </remarks>
      <exception cref="T:System.ArgumentException">
              The <b>textFormat</b> isn't a valid text format.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.String)">
      <summary>
              Finds the first item after the given index which starts with the given string based on the specific TextFormat.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="textFormat">
              The <see cref="T:System.String" /> refer to the TextForamt.
            </param>
      <returns>
              The zero-based index of the first item found; returns -1 if no match is found.
            </returns>
      <remarks>
              The search performed by this method is not case-sensitive. 
              The s parameter is a substring to compare against the text associated with the items in the combo box list. 
              The search performs a partial match starting from the beginning of the text, and returning the first item in the combo box list that matches the specified substring. 
              You can then perform tasks, 
              such as removing the item that contains the search text using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" /> method 
              or changing the item's text. 
              Once you have found the specified text, 
              if you want to search for other instances of the text in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />, 
              you must use the version of the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)" /> method that provides a parameter for specifying a starting index 
              within the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. 
              If you want to perform a search for an exact word match instead of a partial match, use the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.String)" /> method.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
             The <b>startIndex</b> is out of range.
            </exception>
      <exception cref="T:System.ArgumentException">
             The <b>textFormat</b> isn't a valid TextFormat.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.String)">
      <summary>
              Finds all items in the list that matches the specified string based on the specific text format.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="textFormat">
              The <see cref="T:System.String" /> refer to the text foramt.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" /> containing the matched items.
            </returns>
      <exception cref="T:System.ArgumentException">
             The <b>textFormat</b> isn't a valid text format.
            </exception>
      <remarks>
              The search performed by this method is case-sensitive. 
              The s parameter is a string to compare against the text associated with the items in the combo box list. 
              The search looks for a match starting from the beginning of the text, 
              returning the items in the list that matches the specified substring. 
              You can then perform tasks, such as removing the item that contains the search text using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" /> method 
              or changing the item's text. 
              Once you have found the specified text, if you want to search for other instances of the text in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />, 
              you must use the version of the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.String)" /> method that provides a parameter for specifying a starting index 
              within the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. 
              If you want to perform partial word search instead of an exact word match, use the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.String)" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.String)">
      <summary>
              Finds the first item after the specified index that matches the specified string based on the specific TextFormat..
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="textFormat">
              The <see cref="T:System.String" /> refer to the text foramt.
            </param>
      <returns>
              The zero-based index of the first item found; returns -1 if no match is found.
            </returns>
      <remarks>
              The search performed by this method is case-sensitive. 
              The s parameter is a string to compare against the text associated with the items in the combo box list. 
              The search looks for a match starting from the beginning of the text, .
              returning the first item in the list that matches the specified substring.
              You can then perform tasks, such as removing the item that contains the search text using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" /> method or 
              changing the item's text. This method is typically used after a call has been made using the version of this method that does not specify a starting index. 
              Once an initial item has been found in the list, 
              this method is typically used to find further instances of the search text by specifying the index position in the startIndex parameter of the item 
              after the first found instance of the search text. 
              If you want to perform partial word search instead of an exact word match, use the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.String)" /> method.
              <para />
              The search performed by this method is not circular. 
              If the startIndex parameter itself is equal to the last index in the collection, an exception is thrown.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
             The <b>startIndex</b> is out of range.
            </exception>
      <exception cref="T:System.ArgumentException">
             The <b>textFormat</b> isn't a valid TextFormat.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShortcutSpinUp">
      <summary>
              Performs spin up for shortcut key.
            </summary>
      <remarks>
              This method mainly used for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />. The behavior is same with the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinUp" /> method.
              And <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.AllowSpin" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.SpinOnKeys" /> properties will take effect on this method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinUp">
      <summary>
              Performs the spin up action.
            </summary>
      <remarks>
              Calling this method is equivalent to pressing up key when control has focus.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinDown" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinUp(System.Int32)">
      <summary>
              Performs the spin up action by the increment.
            </summary>
      <param name="increment">
              An <see cref="T:System.Int32" /> value indicates the specified increment value.
            </param>
      <remarks>
              This method can spin the value of this control up according the increment parameter.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinDown">
      <summary>
              Performs the spin down action.
            </summary>
      <remarks>
              Calling this method is equivalent to pressing down key when control has focus.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinUp" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShortcutSpinDown">
      <summary>
            Perform spin down for shortcut key.
            </summary>
      <remarks>
              This method mainly used for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />. The behavior is same with the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinDown" /> method.
              And <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.AllowSpin" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.SpinOnKeys" /> properties will take effect on this method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinDown(System.Int32)">
      <summary>
              Performs the spin down action by the increment.
            </summary>
      <param name="increment">
              An <see cref="T:System.Int32" /> value indicates the specified increment value.
            </param>
      <remarks>
              This method can spin the value of this control down according the increment parameter. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Drop">
      <summary>
              Show the drop down window.
            </summary>
      <remarks>
        <para>
              This method presents the user with the drop-down editor to assist in data entry.  
              If the control is disabled or the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> property is false, a call to this method will be ignored.
            </para>
        <para>
              When the drop-down editor is just about to display, the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpening" /> and <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpened" /> events will be triggered.
            </para>
        <note>
              This method will not try to seize focus when control does not have the input focus.
            </note>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SwitchDropDown">
      <summary>
              Switches the drop down.
            </summary>
      <remarks>
              This method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. The drop-down window will be opened by call this method if the drop-down window is closed. And it will be closed by call this method when it's opened. 
              But this method will be usless when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> property is <see langword="false" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ApplyRecommendedValue">
      <summary>
              Applies the recommended value to control.
            </summary>
      <remarks>
              This <b>ApplyRecommendedValue</b> method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
              It can accept the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.RecommendedValue" /> when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowRecommendedValue" /> property is <see langword="true" />. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnEnter(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
            </summary>
      <param name="e">
              An <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnEnter</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnEnter</b> in a derived class, be sure to call the base class's <b>OnEnter</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnLeave(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.
            </summary>
      <param name="e">
              An <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnLeave</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnLeave</b> in a derived class, be sure to call the base class's <b>OnLeave</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnMouseDown</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnMouseDown</b> in a derived class, be sure to call the base class's <b>OnMouseDown</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnMouseUp</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnMouseUp</b> in a derived class, be sure to call the base class's <b>OnMouseUp</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnEnabledChanged(System.EventArgs)">
      <summary>
               Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnEnabledChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnEnabledChanged</b> in a derived class, be sure to call the base class's <b>OnEnabledChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnBindingContextChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event.
            </summary>
      <param name="e">
              An <see cref="T:System.EventArgs" /> object contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnBindingContextChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnBindingContextChanged</b> in a derived class, be sure to call the base class's <b>OnBindingContextChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnVisibleChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.
            </summary>
      <param name="e">
              An <see cref="T:System.EventArgs" /> object contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnVisibleChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnVisibleChanged</b> in a derived class, be sure to call the base class's <b>OnVisibleChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnFontChanged(System.EventArgs)">
      <summary>
              Raised the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> object contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnFontChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnFontChanged</b> in a derived class, be sure to call the base class's <b>OnFontChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnPaddingChanged(System.EventArgs)">
      <summary>
              Raised the <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> object contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnPaddingChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnPaddingChanged</b> in a derived class, be sure to call the base class's <b>OnPaddingChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.PaintEventArgs" /> contains the event arguments.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnPaint</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnPaint</b> in a derived class, be sure to call the base class's <b>OnPaint</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.WndProc(System.Windows.Forms.Message@)">
      <summary>
              Processes Windows messages.
            </summary>
      <param name="m">
              The Windows <see cref="T:System.Windows.Forms.Message" /> to process.
            </param>
      <remarks>
              All messages are sent to the <b>WndProc</b> method after getting filtered through the <see cref="T:GrapeCity.Framework.Spread.InputMan.CellType.Forms.PreProcessMessage" /> method.
              <para />
              The <b>WndProc</b> method corresponds exactly to the Windows <b>WindowProc</b> function. For more information about processing Windows messages, see the <b>WindowProc</b> function documentation in the Windows Platform SDK reference located in the MSDN library at http://msdn.microsoft.com/library.
              <para /><b>Notes to Inheritors:</b><para />
              Inheriting controls should call the base class's <b>WndProc</b> method to process any messages that they do not handle.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValue">
      <summary>
              Gets or sets an <b>object</b> value indicating the selected value.
            </summary>
      <value>
             An <b>object</b> value, which could be <see cref="F:System.String.Empty" />.
             <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              This property equals the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> which in the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" /> collection of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem" />  and 
              located by the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ValueSubItemIndex" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ValueSubItemIndex">
      <summary>
              Gets or sets an <see cref="T:System.Int32" /> value indicating the selected value subitem index.
            </summary>
      <value>
             A <see cref="T:System.Int32" /> value.
             <br /> The default is 0.
            </value>
      <remarks>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValue" /> property equals the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> which in the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" /> collection of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem" />  and located by the index value of this property.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is out of range.</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValue" />
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValueChanged">
      <summary>         
            Occurs when the <b>SelectedValue</b> property is changed.	
            </summary>
      <remarks>
              When you create a delegate, you identify the method that will handle the event. 
              To associate the event with your event handler, add an instance of the delegate to the event. 
              The event handler is called whenever the event occurs, unless you remove the delegate. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnSelectedValueChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValueChanged" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnSelectedValueChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnSelectedValueChanged</b> in a derived class, be sure to call the base class's <b>OnSelectedValueChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
      <summary>
            Processes a key message and generates the appropriate control events.
            </summary>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</param>
      <returns>
        <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.
            </returns>
      <remarks>
              This method is called when a control receives a keyboard message. 
              The method is responsible for generating the appropriate key events for the message 
              by calling the <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />, <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />, 
              or <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> methods. 
              The m parameter contains the window message that must be processed. 
              Possible values for the <see cref="P:System.Windows.Forms.Message.Msg" /> property are <b>WM_CHAR</b>, <b>WM_KEYDOWN</b>, <b>WM_SYSKEYDOWN</b>, <b>WM_KEYUP</b>, 
              <b>WM_SYSKEYUP</b>, and <b>WM_IME_CHAR</b>.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding the <b>ProcessKeyEventArgs</b> method in a derived class, a control should return true to indicate that it has processed the key. For keys that are not processed by the control, the result of calling the base class's <b>ProcessKeyEventArgs</b> method should be returned. Controls will seldom, if ever, need to override this method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnLostFocus(System.EventArgs)">
      <summary>
            Raise the LostFocus event
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnLostFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnLostFocus</b> in a derived class, be sure to call the base class's <b>OnLostFocus</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnGotFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnGotFocus</b> in a derived class, be sure to call the base class's <b>OnGotFocus</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnValidating</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnValidating</b> in a derived class, be sure to call the base class's <b>OnValidating</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat">
      <summary>
              Gets or sets a format string used to customize text.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates a format string used to customize text.
            </value>
      <remarks>
              This property can customize a format to display the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" /> of this control.
            </remarks>
      <exception cref="T:System.ArgumentException">
              The <b>value</b> isn't a valid <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" />.
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextBoxStyle" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionFormat">
      <summary>
              Gets or sets a format string used to customize description which is shown in <b>StatusBar</b>.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates a format string used to customize description which is shown in <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              This property can customize a format to display the description of this control.
            </remarks>
      <exception cref="T:System.ArgumentException">
              The <b>value</b> isn't a valid <b>DescriptionFormat</b>.
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionSubItemIndex" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>.
              A <see cref="T:System.Type" /> list contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method allows derived classes to customize default side buttons when
              the control is created.
              If return <see langword="null" />, no side buttons would be added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">The default side buttons for initializing.</param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the control is created.
              If return <see langword="null" />, no shortcuts would be added to the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.UseCompatibleDrawing">
      <summary>
            Gets or sets a value indicates if <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> use compatible drawing when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyle" /> is <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList" />.
            </summary>
      <value>
        <see langword="true" /> if <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> use compatible drawing; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Clear">
      <summary>
            Clear all text of the control.
            </summary>
      <remarks>
            You can use this method to clear the contents of
            the control instead of assigning the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" /> property an empty string.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoFilter">
      <summary>
              Gets the auto filter related settings.
            </summary>
      <value>
              The auto filter settings.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime">
      <summary>
              Represents a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
      <remarks>
              The GcDateTime control allows you to design a functional date-time input interface 
              quickly and efficiently.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.CreateAccessibilityInstance">
      <summary>
              Creates a new accessibility object for the control.
            </summary>
      <returns>
             A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the ElementContainerControl and and its child controls or elements
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.
            </param>
      <remarks>
              Call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Dispose(System.Boolean)" /> when you are finished using the <see cref="T:System.Windows.Forms.Control" />. 
              The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Dispose(System.Boolean)" /> method leaves the <see cref="T:System.Windows.Forms.Control" /> in an unusable state. 
              After calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Dispose(System.Boolean)" />, you must release all references to the <see cref="T:System.Windows.Forms.Control" /> 
              so the garbage collector can reclaim the memory that the <see cref="T:System.Windows.Forms.Control" /> was occupying.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ValueChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> property value changes.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnValueChanged(System.EventArgs)">
      <summary>
               Called when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> property value changes.
             </summary>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnValueChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnValueChanged</b> in a derived class, be sure to call the base class's <b>OnValueChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.NumberChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Number" /> property value changes.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Number" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnNumberChanged(System.EventArgs)">
      <summary>
               Called when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Number" /> property value changes.
             </summary>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnNumberChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnNumberChanged</b> in a derived class, be sure to call the base class's <b>OnNumberChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpening">
      <summary>
              Occurs before the drop-down calendar opens.
            </summary>
      <remarks>
              This event is raised if the drop-down window is being opened by either a programmatic modification or a user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpening" /> event.
             </summary>
      <param name="e">
               A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnDropDownOpening</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnDropDownOpening</b> in a derived class, be sure to call the base class's <b>OnDropDownOpening</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpened">
      <summary>
              Occurs when the drop-down calendar is opened.
            </summary>
      <remarks>
              This event is raised if the drop-down window is opened by either a programmatic modification or a user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnDropDownOpened(System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpened" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnDropDownOpened</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnDropDownOpened</b> in a derived class, be sure to call the base class's <b>OnDropDownOpened</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownClosing">
      <summary>
              Occurs before the drop-down calendar is closed.
            </summary>
      <remarks>
              This event is raised if the drop-down window is being closed by either a programmatic modification or a user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnDropDownClosing(GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownClosing" /> event.
             </summary>
      <param name="e">
               A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnDropDownClosing</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnDropDownClosing</b> in a derived class, be sure to call the base class's <b>OnDropDownClosing</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownClosed">
      <summary>
              Occurs when the drop-down calendar is closed.
            </summary>
      <remarks>
              This event is raised if the drop-down window is closed by either a programmatic modification or a user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnDropDownClosed(System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownClosed" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnDropDownClosed</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnDropDownClosed</b> in a derived class, be sure to call the base class's <b>OnDropDownClosed</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Fields">
      <summary>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeFieldCollection" /> that represents the items in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> object.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeFieldCollection" /> that represents the items in <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />.
            </value>
      <remarks>
              This property determines how to display and edit the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> of this control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DisplayFields">
      <summary>
              Gets the display fields of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeDisplayFieldCollection" />
              object that indicates the collection of the display fields.
            </value>
      <remarks>
              This property determines how to display the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> of this control when the control does not have input focus. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.AlternateText">
      <summary>
              Gets the alternate text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText" /> value that indicates the alternate text.
            </value>
      <remarks>
              This property shows alternative text when the value of the control is empty era or <b>null</b> in edit mode and display mode.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Text">
      <summary>
              Gets or sets the text associated with this control.
            </summary>
      <value>The text associated with this control.</value>
      <remarks>
              The <b>Text</b> property includes all literals and all characters in fields that have input focus.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.SideButtons">
      <summary>
              Gets a collection of side buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> value that indicates the collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed. 
              Includes the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />, 
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />, and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownCalendar">
      <summary>
              Gets the settings for the drop-down calendar.
            </summary>
      <value>
             A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> instance that indicates the settings for the drop-down calendar.
            </value>
      <remarks>
              The drop-down calendar control can be customized by setting this <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownCalendar" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.PreferredHeight">
      <summary>
              Gets the preferred height.
            </summary>
      <value>
              An <b>int</b> value that indicates the preferred height of the control.
            </value>
      <remarks>
              This property is similar to the height of  the <see cref="P:System.Windows.Forms.Control.PreferredSize" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownPicker">
      <summary>
              Gets the settings for the drop-down picker.
            </summary>
      <value>
             A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker" /> instance that indicates the settings for the drop-down picker.
            </value>
      <remarks>
              The drop-down picker control can be customized by setting this <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownPicker" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value">
      <summary>
              Gets or sets the <see cref="T:System.Nullable`1" /> value assigned to the control.
            </summary>
      <value>
              The <see cref="T:System.Nullable`1" /> value assign to the control.  The default 
              is the current date-time (<see cref="P:System.DateTime.Now" />).
            </value>
      <exception cref="T:System.FormatException">The value is not a valid format string.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" /> or greater than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A nullable <see cref="T:System.DateTime" /> value that indicates the default value of the editor.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property provides a hint for the user that is shown when the value is not fully entered. 
              When a value is being entered, pressing a special shortcut key or key combination accepts the recommended value. 
            </remarks>
      <exception cref="T:System.ArgumentException">The value isn't valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Number">
      <summary>
              Gets or sets the underlying value in long integer format.
            </summary>
      <value>
              A date-time value in long integer format (yyyyMMddHHmmss).
            </value>
      <remarks>
        <para>
                This property can be set to 0 to clear the underlying value to <see langword="null" />.  Changing
                this property effects the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Text" /> 
                and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> properties.
              </para>
      </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.AcceptsCrLf">
      <summary>
            Gets or sets a value that indicates how to process the CrLf characters when copying, cutting, or pasting the string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration that indicates which mode the CrLf characters use when copying, cutting, and pasting the string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting causes the <b>GcDateTime</b> to be similar to the standard <b>TextBox</b> when copying, cutting, and pasting a string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ValidateMode">
      <summary>
              Gets or sets the validation mode during input for the control.
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" /> enumeration values.  The default 
              is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" />.
            </value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              A value that is not within the range of valid values for the enumeration was assigned to 
              the property.
            </exception>
      <remarks>
        <para>
                If setting the <b>ValidateMode</b> property to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" />, 
                the control will perform strict validation such as checking for leap-years and non-existing 
                date values.  Also, automatic character filtering and field adjustments will be made as the 
                user enters data. For example, in the case of leap years, when the input mask is set to 
                'yyyy.MM.dd', the user will not be able to enter February 29th, 2003. If the input mask 
                is set to 'dd.MM.yyyy', entering February 29th, 2003 will automatically adjust the 29th 
                to the 28th as soon as the last 3 is entered for the year.
              </para>
        <para>
                If setting this property to ValidateModeEx.Validate, the control
                will perform loose validation causing all fields to behave independently and not rely on 
                each other.  For example, if the input mask is set to 'yyyy.MM.dd', the control allows 
                you to enter a date such as February 31st, 2003 which normally cannot exist as a date-time 
                value.  The following table shows the valid range for the fields when the mode is ValidateModeEx.Validate.
              </para>
        <list type="table">
          <listheader>
            <term>Fields</term>
            <description>Valid Range</description>
          </listheader>
          <item>
            <term>yyyy</term>
            <description>1 - 9999</description>
          </item>
          <item>
            <term>yy</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>ee</term>
            <description>1 - 99</description>
          </item>
          <item>
            <term>MM</term>
            <description>1 - 12</description>
          </item>
          <item>
            <term>dd</term>
            <description>1 - 31</description>
          </item>
          <item>
            <term>HH</term>
            <description>0 - 23</description>
          </item>
          <item>
            <term>mm</term>
            <description>0 - 59</description>
          </item>
          <item>
            <term>ss</term>
            <description>0 - 59</description>
          </item>
        </list>
        <para>
                If setting this property to <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" />, the 
                control does not perform validation.  The fields behave independently just as 
                when set to <see cref="T:ValidateModeEx.Validate" />.  For example, if the 
                input mask is set to 'yyyy.MM.dd', the control allows you to enter '0000.00.00' which 
                is not a date-time value.  The following table shows the valid range for 
                the fields when using <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" />:
              </para>
        <list type="table">
          <listheader>
            <term>Fields</term>
            <description>Valid Range</description>
          </listheader>
          <item>
            <term>yyyy</term>
            <description>0 - 9999</description>
          </item>
          <item>
            <term>yy</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>ee</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>MM</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>dd</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>HH</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>mm</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>ss</term>
            <description>0 - 99</description>
          </item>
        </list>
        <para>
                This property takes effect only when entering data in the control.  The date-time value
                is validated as soon as focus moves away from the control.
              </para>
        <para>
                During input, if the entered data is incomplete, such as '2003.__.01', or a non date-time 
                value such as '2002.02.31' is entered, the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> 
                property returns null.
              </para>
        <note type="cnotes">
                Performing spin actions causes date-time values to change in any mode of the 
                <b>ValidateMode</b> property.  The valid range for the spin actions is equivalent 
                to entering data as shown in the tables above.
              </note>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.FieldsEditMode">
      <summary>
              Gets or sets the fields edit mode.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.FieldsEditMode" /> enumeration value that indicates the fields edit mode.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditMode.LeftSide" />.
            </value>
      <remarks>
              The <b>FieldsEditMode</b> property determines how to edit fields when the user inputs data.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ActiveField">
      <summary>
              Gets the current active field of the control.
            </summary>
      <value>
               A <see cref="T:GrapeCity.Win.Views.Field" /> value that indicates the active field.
            </value>
      <remarks>
              This property indicates the field that is active. This means the caret is in the field.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DefaultActiveField">
      <summary>
              Gets or sets the default active field of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Views.Field" /> value that indicates the default active field.
            </value>
      <remarks>
              When the control gets focus, the default active field gets the focus and caret first.
            </remarks>
      <exception cref="T:System.ArithmeticException">
              The specified field does not exist in the FieldCollection.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ShowRecommendedValue">
      <summary>
              Gets or sets a value that indicates whether to show the recommended value.
            </summary>
      <value>
        <see langword="true" /> to show the recommended value; otherwise, <see langword="false" />.
            	<br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.RecommendedValue" /> property is shown when the <b>ShowRecommendedValue</b> property is <see langword="true" /> and the value is not fully entered; otherwise, the value of the <b>RecommendedValue</b> property is not shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DroppedDown">
      <summary>
              Gets or sets a value that indicates whether the drop-down window has dropped down.
            </summary>
      <value>
        <see langword="true" /> if dropped down; otherwise, <see langword="false" />.
            	<br /> The defalut is <see langword="false" />.
            </value>
      <remarks>
              Setting this property to <see langword="true" /> is the same as using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Drop" /> method.
            <note>
              If the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> object is disabled or invisible, this property cannot take effect.
              Also, if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> property is false,
              this property canot take effect.
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDown">
      <summary>
              Gets the drop-down settings for the drop-down function.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDown" /> instance that indicates the drop-down settings for the drop-down function.
            </value>
      <remarks>
              The drop-down behavior and the window appearance can be customized by setting this <b>DropDown</b> property.
              This includes enabling the display, resizing, specifying the direction of the drop-down window, specifying the 
              shadow of the drop-down window, and specifying the animation when opening and closing.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Spin">
      <summary>
              Gets the settings for the spin function.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin" /> value that indicates the settings for the spin function.
            </value>
      <remarks>
              The spin behaviors can be customized by setting this <b>Spin</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.IsInvalidText">
      <summary>
              Gets a <see langword="bool" /> value that indicates whether the text is invalid.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether the text is invalid.
            </value>
      <remarks>
              This propety retrieves whether the text is valid.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Font">
      <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
        <para>
              The <b>Font</b> property is an ambient property. An ambient property is a control property that, 
              if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
              <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. For more information about 
              ambient properties, see the <see cref="T:System.Windows.Forms.AmbientProperties" /> class or the <see cref="T:System.Windows.Forms.Control" /> class overview.
            </para>
        <para></para>
        <para>
              Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>; 
              however, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.AboutBox">
      <summary>
              Shows the product information window.
            </summary>
      <remarks>
              A window which contains the product information is shown, after this method is called.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.PreviousField">
      <summary>
              Moves to the previous field.
            </summary>
      <remarks>
              This method is mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors.  
              If the current field which the caret is in, is the first editable field, the caret does not move. 
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" /> events are raised when the caret is moved successfully.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.NextField">
      <summary>
              Moves to the next field.
            </summary>
      <remarks>
              This method is mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors.  
              If the current field which the caret is in, is the last editable field, the caret does not move. 
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> and 
              the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" /> events are raised when the caret is moved successfully.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.PreviousFieldThenControl">
      <summary>
             Moves to the previous field, but if the caret is in the starting edit field, moves to the previous control.
            </summary>
      <remarks>
              This method is mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" /> events are raised when the caret is moved successfully. 
              If the caret is moved to another control, the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit" /> event is raised.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.NextFieldThenControl">
      <summary>
             Moves to the next field, but if the caret is in the last editable field, moves to the next control.
            </summary>
      <remarks>
              This method is mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" /> events are raised when the caret is moved successfully.
              If the caret is moved to another control, the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit" /> event is raised.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.SetNow">
      <summary>
              Resets the value to <see cref="P:System.DateTime.Now" />.
            </summary>
      <remarks>
              This method is mainly used for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />. 
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> property effects this method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ApplyRecommendedValue">
      <summary>
              Applies the recommended value to the control.
            </summary>
      <remarks>
              This <b>ApplyRecommendedValue</b> method is mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
              It can accept the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.RecommendedValue" /> when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ShowRecommendedValue" /> property is <see langword="true" />. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Drop">
      <summary>
              Shows the drop-down window.
            </summary>
      <remarks>
        <para>
              This method presents the user with the drop-down editor to assist in data entry.  
              If the control is disabled or the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> property is false, a call to this method is ignored.
            </para>
        <para>
              When the drop-down editor is just about to display, the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpening" /> and <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpened" /> events are triggered.
            </para>
        <note>
              This method does not try to seize focus when the control does not have the input focus.
            </note>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.SwitchDropDown">
      <summary>
              Switches the state of the drop-down window.
            </summary>
      <remarks>
              This method is mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
              The drop-down window is opened when using this method if the drop-down window is closed. 
              The window is closed when using this method, if it is currently open. 
              This method does nothing if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> property is <see langword="false" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnEnter(System.EventArgs)">
      <summary>
               Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnEnter</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnEnter</b> in a derived class, be sure to call the base class's <b>OnEnter</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnLeave(System.EventArgs)">
      <summary>
               Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnLeave</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnLeave</b> in a derived class, be sure to call the base class's <b>OnLeave</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DoSpinUp(System.TimeSpan)">
      <summary>
              Performs the up spin action.
            </summary>
      <param name="increment">
              The <b>TimeSpan</b> value that indicates the increment.
            </param>
      <remarks>
              This method has the same behavior as pressing the Up key.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DoSpinDown(System.TimeSpan)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DoSpinDown(System.TimeSpan)">
      <summary>
              Performs the down spin action.
            </summary>
      <param name="increment">
              The <see cref="T:System.TimeSpan" /> value that indicates the increment.
            </param>
      <remarks>
              This method has the same behavior as pressing the Down key.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DoSpinUp(System.TimeSpan)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.GetDefaultFields">
      <summary>
              Gets the default fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField" /> array that contains all default fields used for input.
            </returns>
      <remarks>
              The <b>GetDefaultFields</b> method allows derived classes to customize default fields when
              the control is created.The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldsBuilder.BuildFields(System.String)" /> 
              can be used to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField" /> array following a string format.
              If the return value is <see langword="null" />, no field is added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.GetDefaultDisplayFields">
      <summary>
              Gets the default display fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayField" /> array that contains all default fields used for display.
            </returns>
      <remarks>
              The <b>GetDefaultDisplayFields</b> method allows derived classes to customize default display fields when
              the control is created.The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldsBuilder.BuildFields(System.String)" />
              can be used to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayField" /> array following a string format.
              If the return value is <see langword="null" />, no display field is added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>.
              A <see cref="T:System.Type" /> list that contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method allows derived classes to customize default side buttons when
              the control is created.
              If the return value is <see langword="null" />, no side buttons are added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">The default side buttons for initializing.</param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
               A dictionary contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the control is created.
              If the return value is <see langword="null" />, no shortcuts are added to the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate">
      <summary>
              Gets or sets the maximum allowable value when spinning the control by field or value.
            </summary>
      <value>
              A <see cref="T:System.DateTime" /> value that indicates the maximum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate">
      <summary>
              Gets or sets the minimum allowable value when spinning the control by field or value.
            </summary>
      <value>
               A <see cref="T:System.DateTime" /> value that indicates the minimum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is greater than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxMinBehavior">
      <summary>
            Gets or sets the behavior when the new input value is not between <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxMinBehavior" /> enumeration value that indicates the behavior when the new input value is outside the range specified by <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" />.
              <br />
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" />.
            </value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The <b>value</b> is not a valid <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxMinBehavior" /> item.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnTextChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.
            </summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnValidating</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnValidating</b> in a derived class, be sure to call the base class's <b>OnValidating</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask">
      <summary>
              Represents a <b>GcMask</b> control
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.CreateAccessibilityInstance">
      <summary>
              Creates a new accessibility object for the control.
            </summary>
      <returns>
             A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the ElementContainerControl and and its child controls or elements
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
              True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
      <remarks>
              Call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Dispose(System.Boolean)" /> when you are finished using the <see cref="T:System.Windows.Forms.Control" />. 
              The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Dispose(System.Boolean)" /> method leaves the <see cref="T:System.Windows.Forms.Control" /> in an unusable state. 
              After calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Dispose(System.Boolean)" />, you must release all references to the <see cref="T:System.Windows.Forms.Control" /> 
              so the garbage collector can reclaim the memory that the <see cref="T:System.Windows.Forms.Control" /> was occupying.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ValueChanged">
      <summary>
              Occurs when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Value" /> property is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Value" /> Property is changed by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.OnValueChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ValueChanged" /> event.
            </summary>
      <param name="e">
              The <see cref="T:System.EventArgs" /> instance containing the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The <b>OnValueChanged</b> method also enables derived classes to handle the event without attaching a delegate. 
              This is the preferred technique for handling the event in a derived class.
            <note>
              When overriding <b>OnValueChanged</b> in a derived class, be sure to call the base class's <b>OnValueChanged</b> method so that registered delegates receive the event. 
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.AlternateText">
      <summary>
              Gets a value indicates alternate text settings.
            </summary>
      <value>
               A <b>MaskAlternateText</b> value indicates the alternate text settings.
            </value>
      <remarks>
              This property determins the text and text's color when the control's value is <see cref="F:System.String.Empty" /> and input focus is contained or not.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.SideButtons">
      <summary>
              Gets a collection of side buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> indicates the collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed more commend buttons.
              Includs the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />,
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.AcceptsCrLf">
      <summary>
            Gets or sets a value indicating how to process the CrLf chars when copy, cut or paste string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration indicates which mode that the CrLf chars will be used when copy, cut and paste string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting make the <b>GcMask</b> same with the standard <b>TextBox</b> when copy, cut and paste string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> isn't a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.AcceptsTabChar">
      <summary>
            Gets or sets a value indicating how to process the Tab chars when copy, cut or paste string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> enumeration indicates which mode that the Tab chars will be used when copy, cut and paste string.
            <br />The default is <b>TabCharMode.NoControl</b>.
            </value>
      <remarks>
              The <b>TabCharMode.Cut</b> setting make the <b>GcMask</b> same with the standard <b>TextBox</b> when copy, cut and paste string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> isn't a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.PasswordRevelationMode">
      <summary>
              Gets or sets the password revelation mode.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.PasswordRevelationMode" /> value, indicates the password revelation mode.
              <br />
              Default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.None">None</see>, indicates never reveal the typed password.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.AutoConvert">
      <summary>
              Gets or sets whether to automatically convert the entered characters according to
              the input control.
            </summary>
      <value>
        <see langword="true" /> if characters are automatically converted according to the input control;
              otherwise, <see langword="false" />. 
              <br />
              The default is <see langword="true" />.
            </value>
      <remarks>
              If set the <b>AutoConvert</b> property to <see langword="true" />, all convertible characters will be automatically converted accordingly to the input mask. For example, if set the input mask to "A", by hitting a lower case character the control automatically converts the character into an upper case. 
              <para />
              If SBCS is entered in a DBCS mask input, the entered character will be automatically converted to DBCS. Also a DBCS space will be automatically converted to a SBCS space when the control allows only SBCS. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Fields">
      <summary>
              Gets the fields of the <see cref="T:MaskFieldCollection"></see>.
            </summary>
      <value>
              A <see cref="T:FieldCollection"></see> representing the items in the <see cref="T:GcMask"></see>.
            </value>
      <remarks>
              This property determines how to display the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Value" /> of this control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ActiveField">
      <summary>
              Gets the active field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField" /> value indicates the actived field.
            </value>
      <remarks>
              This property indicates the field which is actived. 
              That means the caret is in the field when the control contains the input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.DefaultActiveField">
      <summary>
              Gets or sets the default active field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Views.Field" /> value indicates the default active field.
              <br /> The default is <see langword="null" />.
            </value>
      <remarks>
              When the control got focus, the default active field will got the focus and caret firstly.
            </remarks>
      <exception cref="T:System.ArithmeticException">
              The specified field don't exist in the FieldCollection.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Spin">
      <summary>
              Gets data pack of the spin function.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Spin" /> object indicates the spin behavior.
            </value>
      <remarks>
              The spin behaviors can be customized by setting this <b>Spin</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.PreferredHeight">
      <summary>
              Gets the preferred height.
            </summary>
      <value>
              An <b>int</b> value indicates preferred height of the control.
            </value>
      <remarks>
              This property just as the Height of  <see cref="P:GrapeCity.Win.Forms.Control.PreferredSize" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ShowRecommendedValue">
      <summary>
              Gets or sets a value indicating whether show the recommended value.
            </summary>
      <value>
        <see langword="true" /> if show the recommended value; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.RecommendedValue" /> property will shown when this <b>ShowRecommendedValue</b>
              is <see langword="true" /> and value is not fully inputted. Otherwise, the value of <b>RecommendedValue</b> property will not shown.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.RecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the recommended value.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property makes a hint for user that shown when value is not fully inputted.
              When some value is being inputed,
              pressing some special shortcut key or key combination can accept the recommendatory value. 
            </remarks>
      <exception cref="T:System.ArgumentException">
              Occurs when invalid value that does not match current pattern
              will set to the <b>RecommendedValue</b> property.
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ShowRecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Value">
      <summary>
              Gets or sets the underlying value assigned to the control.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the value of the mask contorl.
            </value>
      <remarks>
              A string that made of all chars in fields and exclude literals. No matter what fields this control has, this <b>Value</b> is always same. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Text">
      <summary>
              Gets or sets the text associated with this control.
            </summary>
      <value>
               The text associated with this control.
            </value>
      <remarks>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Value" /> property and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Fields" /> property both can take effect.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.AboutBox">
      <summary>
              Shows the product information window.
            </summary>
      <remarks>
            A window which contains the product informations could be shown, after this method is called.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.PreviousField">
      <summary>
              Moves the caret to the next field in the left of the current one.
            </summary>
      <remarks>
              If the current field which the caret is in is the first editable field, the caret will not move. 
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" /> events will be raised when the caret is moved successfully.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.NextField">
      <summary>
              Moves the caret to the next field in the right of the current one.
            </summary>
      <remarks>
              If the current field which the caret is in is the last editable field, the caret will not move. 
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.FieldLeave" /> events will be raised when the caret is moved successfully.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.PreviousFieldThenControl">
      <summary>
             Moves the caret to the previous field. But if the caret is already in the beginning editable field, it will be moved to the previous control back in the tab order.
            </summary>
      <remarks>
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.FieldLeave" /> events will be raised when the caret is moved successfully.
             If the caret is moved to other control, the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.KeyExit" /> event will be raised."
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.NextFieldThenControl">
      <summary>
              Moves the caret to the next field. But if the caret is already in the end editable field, it will be moved to the next control forward in the tab order.
            </summary>
      <remarks>
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.FieldEnter" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.FieldLeave" /> events will be raised when the caret is moved successfully.
              If the caret is moved to other control, the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.KeyExit" /> event will be raised.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ApplyRecommendedValue">
      <summary>
              Applies the recommended value to control.
            </summary>
      <remarks>
              This method mainly used for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask" /> class with a container type parameter.
            </summary>
      <param name="container">The container.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.GetDefaultFields">
      <summary>
              Gets the default fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField" /> array contains all default fields for inputting.
            </returns>
      <remarks>
              The <b>GetDefaultFields</b> method allows derived classes to customize default fields when
              the control is created.The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldsBuilder.BuildFields(System.String)" /> 
              can be used to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField" /> array following a string format.
              If return <see langword="null" />, no field would be added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>
              A <see cref="T:System.Type" /> list contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method allows derived classes to customize default side buttons when
              the control is created.
              If return <see langword="null" />, no side buttons would be added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">
              The default side buttons for initializing.
            </param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the control is created.
              If return <see langword="null" />, no shortcuts would be added to the control.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber">
      <summary>
              Represents a <b>GcNumber</b> control
            </summary>
      <remarks>
              The GcNumber control provides number input for positive and negative values and 
              allows you to design a functional numeric input interface quickly and efficiently. 
              During data entry, the user can press the minus sign ("-") at any time to toggle 
              the value between positive and negative.  Also, the plus sign ("+") will change 
              a negative value to positive.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.CreateAccessibilityInstance">
      <summary>
              Creates a new accessibility object for the control.
            </summary>
      <returns>
             A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.
            </returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ValueChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /> property value changes.
            </summary>
      <value>
              A <see cref="T:System.EventHandler" /> indicates the <b>ValueChanged</b> event.
            </value>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnValueChanged(System.EventArgs)">
      <summary>
               Called when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /> property value changes.
             </summary>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance containing the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnValueChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnValueChanged</b> in a derived class, be sure to call the base class's <b>OnValueChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpening">
      <summary>
              Occurs before the drop-down calculator open.
            </summary>
      <remarks>
              This event is raised if the drop-down window is been opening by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpening" /> event.
             </summary>
      <param name="e">
               A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" /> instance contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnDropDownOpening</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnDropDownOpening</b> in a derived class, be sure to call the base class's <b>OnDropDownOpening</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpened">
      <summary>
              Occurs when the drop-down calculator has opened.
            </summary>
      <remarks>
              This event is raised if the drop-down window is opened by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnDropDownOpened(System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpened" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> instance contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnDropDownOpened</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnDropDownOpened</b> in a derived class, be sure to call the base class's <b>OnDropDownOpened</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownClosing">
      <summary>
              Occurs before the drop-down calculator is closing.
            </summary>
      <remarks>
              This event is raised if the drop-down window is been closing by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnDropDownClosing(GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownClosing" /> event.
             </summary>
      <param name="e">
               A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" /> instance contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnDropDownClosing</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnDropDownClosing</b> in a derived class, be sure to call the base class's <b>OnDropDownClosing</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownClosed">
      <summary>
              Occurs when the drop-down calculator has closed.
            </summary>
      <remarks>
              This event is raised if the drop-down window is closed by either a programmatic modification or user interaction.  
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnDropDownClosed(System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownClosed" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> instance contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnDropDownClosed</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnDropDownClosed</b> in a derived class, be sure to call the base class's <b>OnDropDownClosed</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpening">
      <summary>
              Occurs before the popup calculator open.
            </summary>
      <remarks>
              This event is raised if the pop-up window is been opening by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnPopUpOpening(GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpening" /> event.
             </summary>
      <param name="e">
               A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs" /> instance contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnPopUpOpening</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnPopUpOpening</b> in a derived class, be sure to call the base class's <b>OnPopUpOpening</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpened">
      <summary>
              Occurs when the popup calculator has opened.
            </summary>
      <remarks>
              This event is raised if the pop-up window is opened by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnPopUpOpened(System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpened" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> instance contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnPopUpOpened</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnPopUpOpened</b> in a derived class, be sure to call the base class's <b>OnPopUpOpened</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpClosing">
      <summary>
              Occurs when the popup calculator is closing.
            </summary>
      <remarks>
              This event is raised if the pop-up window is been closing by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnPopUpClosing(GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpClosing" /> event.
             </summary>
      <param name="e">
               A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs" /> instance contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnPopUpClosing</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnPopUpClosing</b> in a derived class, be sure to call the base class's <b>OnPopUpClosing</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpClosed">
      <summary>
              Occurs when the popup calculator has closed.
            </summary>
      <remarks>
              This event is raised if the pop-up window is closed by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnPopUpClosed(System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpClosed" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> instance contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnPopUpClosed</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnPopUpClosed</b> in a derived class, be sure to call the base class's <b>OnPopUpClosed</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the ElementContainerControl and and its child controls or elements
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
              True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
      <remarks>
              Call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Dispose(System.Boolean)" /> when you are finished using the <see cref="T:System.Windows.Forms.Control" />. 
              The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Dispose(System.Boolean)" /> method leaves the <see cref="T:System.Windows.Forms.Control" /> in an unusable state. 
              After calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Dispose(System.Boolean)" />, you must release all references to the <see cref="T:System.Windows.Forms.Control" /> 
              so the garbage collector can reclaim the memory that the <see cref="T:System.Windows.Forms.Control" /> was occupying.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Fields">
      <summary>
              Gets the fields of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields" /> representing the items in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />.
            </value>
      <remarks>
              This property determines how to display the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /> of this control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DisplayFields">
      <summary>
              Gets the display fields of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldCollection" />
              object indicates collection of the display fields.
            </value>
      <remarks>
              This property determines how to display the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /> of this control without input focus. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.AlternateText">
      <summary>
              Gets the alternate text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
      <value>
              A <b>NumberAlternateText</b> value indicates the NumberAlternateText.
            </value>
      <remarks>
              This property is set to show an alternative text when value of the control is Zero or Null in edit mode and display mode.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PreferredHeight">
      <summary>
              Gets the preferred height.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates preferred height of the control.
            </value>
      <remarks>
              This property just as the <b>Height</b> of  <see cref="P:GrapeCity.Win.Forms.Control.PreferredSize" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.NegativeColor">
      <summary>
              Gets or sets the color when the value's sign of this control is negative.
            </summary>
      <value>
              The color of the negative value.
            </value>
      <remarks>
              If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /> property is smaller than zero and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.UseNegativeColor" /> property is <see langword="true" />, the color of text follows this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.UseNegativeColor">
      <summary>
              Gets or sets a value indicating whether use <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.NegativeColor" /> to render negative or not.
            </summary>
      <value>
        <see langword="true" /> means use <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.NegativeColor" /> to render negative; 
              <see langword="false" /> means use <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ForeColor" /> to render negative.
              <br /> The default is <see langword="true" />.
            </value>
      <remarks>
              If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /> property is smaller than zero and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.UseNegativeColor" /> property is <see langword="true" />, 
              the color of text follows this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Text">
      <summary>
              Gets or sets the text associated with this control.
            </summary>
      <value>
              The text associated with this control.
            </value>
      <remarks>
              The <b>Text</b> property include all literals and all chars in fields with input focus or in display fields without input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ContentAlignment">
      <summary>
              Gets or sets the content alignment.
            </summary>
      <value>
              The value indicates the alignment of the content of this control.
              <br />
              The default is <see cref="F:System.Drawing.ContentAlignment.TopLeft" />.
            </value>
      <remarks>
              There're nine kinds of alignments for content to display. Every type can setting by using this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.SideButtons">
      <summary>
              Gets the side buttons of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> indicates the collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed more commend buttons.
              Includs the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />,
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpCalculator">
      <summary>
              Gets the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpCalculator" /> instance which the user can custom the pop up calculator.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpCalculator" /> instance.
            </value>
      <remarks>
              The pop-up calculator control can be customized by setting this <b>PopUpCalculator</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownCalculator">
      <summary>
              Gets the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownCalculator" /> instance which the user can custom the drop down calculator.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" /> instance.
            </value>
      <remarks>
              The dropdown calculator control can be customized by setting this <b>DropDownCalculator</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DroppedDown">
      <summary>
              Gets or sets a value indicating whether the dropdown window dropped down.
            </summary>
      <value>
        <see langword="true" /> if dropped down; otherwise, <see langword="false" />.
            </value>
      <remarks>
              Seting this property to true sames as call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Drop" /> method.
            <note>
              If the <b>GcNumber</b> is disable or invisible, this property can't take effect.
              Either, when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> property is false,
              this property can't take effect.
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PoppedUp">
      <summary>
              Gets or sets a value indicating whether the popup window is showing.
            </summary>
      <value>
              A <see langword="bool" /> value <see langword="true" /> if the opup window is showing; otherwise, <see langword="false" />.
            </value>
      <remarks>
              Setting this property to true sames as calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUp" /> method.
            <note>
              If the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> is disable or invisible, this property can't take effect. 
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value">
      <summary>
              Gets or sets the decimal value assigned to the control.
            </summary>
      <value>
              A <see cref="T:System.Nullable`1" /> value indicates the value.
              <br /> The default is <see cref="F:System.Decimal.Zero" />.
            </value>
      <remarks>
              A string that made of all chars in fields and exclude literals. No matter what fields this control has, this <b>Value</b> is always same. 
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MinValue" /> or greater than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxValue" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RoundPattern">
      <summary>
              Gets or sets the round pattern of the value.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RoundPattern" /> value indicates the round pattern of the value.
            </value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              value is not defined in the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RoundPattern" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ValueSign">
      <summary>
              Gets or sets the value sign of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" /> value indicates the value sign.
              <br /> The defalut is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />.
            </value>
      <remarks>
              The <b>ValueSign</b> property determines what value can be accepted. 
              If the value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Positive" />, only number which not smaller than zero is allowed. 
              If the value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Negative" />, only number which not bigger than zero is allowed. 
              And <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" /> means all number is allowed.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              value is not defined in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Integer">
      <summary>
              Gets the integer value of the entered number.
            <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /><seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /><seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Decimal" /></summary>
      <value>
              A nullable decimal value indicates the integer part of the entered number.
            </value>
      <remarks>
              This property allows you to retrieve the integer portion of the current value at run time. You can also retrieve the decimal portion using the Integer property. For example: 
                number1.Value = -1234.120
              With the example above the Integer will return -1234 and the Decimal property -0.12.
                number1.Value = 1234
              With the example above the Integer will return 1234 and the Decimal property 0.
              If the underlying value is set to null, this property will return a null.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Decimal">
      <summary>
              Gets the decimal value of the entered number.
            <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /><seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /><seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Integer" /></summary>
      <value>
              A nullable decimal value indicates the decimal part of the entered number.
            </value>
      <remarks>
              This property allows you to retrieve the decimal portion of the current value at run time. You can also retrieve the integer portion using the Integer property. For example: 
                number1.Value = -1234.120
              With the example above the Decimal will return -0.12 and the Integer property -1234.
                number1.Value = 1234
              With the example above the Decimal will return 0 and the Integer property 1234.
              If the underlying value is set to null, this property will return a null.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.AcceptsCrLf">
      <summary>
            Gets or sets a value indicating how to process the CrLf chars when copy, cut or paste string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration indicates which mode that the CrLf chars will be used when copy, cut and paste string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting make the <b>GcNumber</b> same with the standard <b>TextBox</b> when copy, cut and paste string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> isn't a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.AcceptsDecimal">
      <summary>
            Gets or sets a value indicating if accepts decimal part when paste value include decimal part with the decimal part is forbidded by format setting.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode" /> enumeration indicating if accepts decimal part when paste value include decimal part with the decimal part is forbidded by format setting.
            <br />The default is <b>DecimalMode.Filter</b>.
            </value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> isn't a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ActiveField">
      <summary>
              Gets the current active field of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Views.Field" /> value indicates the active field.
            </value>
      <remarks>
              This property indicates the field which is actived. That means the caret is in the field when the control has the input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.HighlightText">
      <summary>
              Gets or sets a value indicates whether highlight text when control got focus.
            </summary>
      <value>
              A <see langword="bool" /> value indicates whether highlight text.
              <br /> The defalut is <see langword="false" />.
            </value>
      <remarks>
        <para>
                This property allows you to highlight all text in the control upon receiving focus.
              </para>
        <para>
                If <see langword="true" />, the entire contents will be selected.
              </para>
        <para>
                If <see langword="false" /> (the default), the contents will not be selected and the caret will be positioned 
                according to the settings of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" /> properties.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Spin">
      <summary>
              Gets the spin pack for the spin function.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberSpin" /> value indicates the settings about spin function.
            </value>
      <remarks>
              The spin behaviors can be customized by setting this <b>Spin</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDown">
      <summary>
             Gets the drop-down pack for drop-down function.
            </summary>
      <value>
             A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDown" /> instance.
            </value>
      <remarks>
              The dropdown behavior and the window appearance can be customized by setting this <b>DropDown</b> property.
              Includes enable shown or not, resizeable, the diriction of dowpdown windown shown, the 
              shadow of dropdown window and animations when opening and closing.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ShowRecommendedValue">
      <summary>
              Gets or sets a value indicating whether show the recommended value.
            </summary>
      <value>
        <see langword="true" /> if show the recommended value; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RecommendedValue" /> property will shown when this <b>ShowRecommendedValue</b> is <see langword="true" /> and value is not fully inputted. Otherwise, the value of <b>RecommendedValue</b> property will not shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the recommended value.
              <br /> The default is <see cref="F:System.Decimal.Zero" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property makes a hint for user that shown when value is not fully inputted. 
              When some value is being inputed, pressing some special shortcut key or key combination can accept the recommendatory value. 
            </remarks>
      <exception cref="T:System.ArgumentException">
              Occurs when invalid value that does not match current pattern
              will set to the RecommendedValue property.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PromptChar">
      <summary>
              Gets or sets the prompt char of the field.
            </summary>
      <value>
              A <b>char</b> value used for prompt empty bits of the field when inputting.
            </value>
      <remarks>
              The <b>PromptChar</b> property determins the display text when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /> is none and one or more inputable fields or display fields existed.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ShowLiterals">
      <summary>
              Gets or sets whether to display the literals during user entry.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ShowLiterals" /> enumeration values.  The default
              is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always" />.
            </value>
      <remarks>
              This property is not relevant for this class
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.TabAction">
      <summary>
              Gets or sets to determine whether the tab key moves the focus between controls or between
              fields within the control.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.TabAction" /> enumeration values.  The default is
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control" />.
            </value>
      <remarks>
              This property is not relevant for this class
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Font">
      <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control. 
              The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.
            </value>
      <remarks>
        <para>
              The <b>Font</b> property is an ambient property. An ambient property is a control property that, 
              if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
              <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. For more information about 
              ambient properties, see the <see cref="T:System.Windows.Forms.AmbientProperties" /> class or the <see cref="T:System.Windows.Forms.Control" /> class overview.
            </para>
        <para></para>
        <para>
              Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>. 
              However, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.AboutBox">
      <summary>
              Shows the product information window.
            </summary>
      <remarks>
              A window which contains the product informations could be shown, after this method is called.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Drop">
      <summary>
              Performs drop down function.
            </summary>
      <remarks>
        <para>
              This method presents the user with the drop-down editor to assist in data entry.  
              If the control is disabled or the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> property is false, a call to this method will be ignored.
            </para>
        <para>
              When the drop-down editor is just about to display, the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpening" /> and <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpened" /> events 
              will be triggered.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.SwitchDropDown">
      <summary>
            Switches the drop down.
            </summary>
      <remarks>
               This method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
               The drop-down window will be opened by call this method if the drop-down window is closed. 
               And it will be closed by call this method when it's opened. 
               But this method will be usless when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> property is <see langword="false" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.SwitchPopUp">
      <summary>
            Switches the drop down.
            </summary>
      <remarks>
              This method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
              The pop-up window will be opened by call this method if the pop-up window is closed. And it will be closed by call this method when it's opened. 
              But this method will be useless when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> property is <see langword="false" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUp">
      <summary>
             Performs pop up function.
            </summary>
      <remarks>
        <para>
              This method presents the user with the pop-up editor to assist in data entry.  If the control is disabled, a call to this method will be ignored.
            </para>
        <para>
              When the drop-down editor is just about to display, the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpening" /> and <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpened" /> events will be triggered.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DoSpinUp(System.Decimal)">
      <summary>
              Performs spin up.
            </summary>
      <param name="increment">
              The <see cref="T:System.Decimal" /> value that indicates the increment when spin up.
            </param>
      <remarks>
              This method has the same behavior with the Up key pressed.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DoSpinDown(System.Decimal)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DoSpinDown(System.Decimal)">
      <summary>
              Performs spin down.
            </summary>
      <param name="increment">
              The <see cref="T:System.Decimal" /> value that indicates the increment when spin down.
            </param>
      <remarks>
              This method has the same behavior with the Down key pressed.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DoSpinUp(System.Decimal)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.SetZero">
      <summary>
             Reset the value to <see cref="F:System.Decimal.Zero" />.
            </summary>
      <remarks>
              This method mainly used for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />. 
              And the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> property takes effect about this method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ThreeZero">
      <summary>
              The method used to append three zero to thecurrent value.
            </summary>
      <remarks>
              This method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
              And the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> property takes effect about this method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.SwitchSign">
      <summary>
              Switches the sign of value.
            </summary>
      <remarks>
              This method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ApplyRecommendedValue">
      <summary>
              Applies the recommended value to control.
            </summary>
      <remarks>
              This <b>ApplyRecommendedValue</b> method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
              It can accept the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RecommendedValue" /> when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ShowRecommendedValue" /> property is <see langword="true" />. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnEnter(System.EventArgs)">
      <summary>
               Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
             </summary>
      <param name="e">
               An <see cref="T:System.EventArgs" /> that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnEnter</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnEnter</b> in a derived class, be sure to call the base class's <b>OnEnter</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnVisibleChanged(System.EventArgs)">
      <summary>
                 Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged"></see> event.
             </summary>
      <param name="e">
                 An <see cref="T:System.EventArgs"></see> that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnVisibleChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnVisibleChanged</b> in a derived class, be sure to call the base class's <b>OnVisibleChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnEnabledChanged(System.EventArgs)">
      <summary>
                 Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged"></see> event.
             </summary>
      <param name="e">
                 An <see cref="T:System.EventArgs"></see> that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnEnabledChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnEnabledChanged</b> in a derived class, be sure to call the base class's <b>OnEnabledChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnLeave(System.EventArgs)">
      <summary>
               Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.
             </summary>
      <param name="e">
               An <see cref="T:System.EventArgs" /> that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnLeave</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnLeave</b> in a derived class, be sure to call the base class's <b>OnLeave</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.InitializeDefaultFields(GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields)">
      <summary>
              Initializes the default fields.
            </summary>
      <param name="defaultFields">
              The default fields which can be customize by users.
            </param>
      <remarks>
              The <b>InitializeDefaultFields</b> method allows derived classes to customize default fields when
              the control is created.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.GetDefaultDisplayFields">
      <summary>
              Gets the default display fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayField" /> array contains all default fields for displaying.
            </returns>
      <remarks>
              The <b>GetDefaultDisplayFields</b> method allows derived classes to customize default display fields when
              the control is created.The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldsBuilder.BuildFields(System.String)" />
              can be used to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayField" /> array following a string format.
              If return <see langword="null" />, no display field would be added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>.
              A <see cref="T:System.Type" /> list contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method allows derived classes to customize default side buttons when
              the control is created.
              If return <see langword="null" />, no side buttons would be added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">The default side buttons for initializing.</param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the control is created.
              If return <see langword="null" />, no shortcuts would be added to the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.AllowDeleteToNull">
      <summary>
              Gets or sets a value indicating whether allow to delete the value to null.
            </summary>
      <value>
        <see langword="true" /> if allows to delete the value to null; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxValue">
      <summary>
              Gets or sets the maximum allowable value when spin the control by field or value.
            </summary>
      <value>
              A <see cref="T:System.Decimal" /> value indicates the maximum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MinValue" /> or greater than the defalut value.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MinValue">
      <summary>
              Gets or sets the minimum allowable value when spin the control by field or value.
            </summary>
      <value>
              A <see cref="T:System.Decimal" /> value indicates the minimum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is greater than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxValue" /> or less than the default value.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxMinBehavior">
      <summary>
            Gets or sets the behavior when the new input value is out of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MinValue" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxValue" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxMinBehavior" /> enumeration value indicates the behavior when the new input value is out of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MinValue" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxValue" />.
              <br />
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" />.
            </value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The <b>value</b> isn't a valid <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxMinBehavior" /> item.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnTextChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.
            </summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnValidating</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnValidating</b> in a derived class, be sure to call the base class's <b>OnValidating</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox">
      <summary>
              Represents a text box control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CreateAccessibilityInstance">
      <summary>
              Creates a new accessibility object for the control.
            </summary>
      <returns>
             A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.
            </returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpening">
      <summary>
              Occurs before the drop-down window opens.
            </summary>
      <remarks>
              This event is raised if the drop-down window is being opened by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpening" /> event.
            </summary>
      <param name="e">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" /> instance that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The OnDropDownOpening method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <br /><b>Notes to Inheritors:</b> When overriding OnDropDownOpening in a derived class, be sure to call the base class's OnDropDownOpening method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Performs the work of setting the specified boundary of this control.
            </summary>
      <param name="x">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</param>
      <param name="y">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</param>
      <param name="width">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</param>
      <param name="height">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</param>
      <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</param>
      <remarks>
              Typically, the parameters that correspond to the boundary, not included in the specified parameter, are passed in with their current values. For example, the Height, Width, or the X or Y properties of the Location property can be passed in with a reference to the current instance of the control; however, all values passed in are honored and applied to the control.
              The boundsSpecified parameter represents the elements of the controls boundary changed by your application. For example, if you change the Size of the control, the boundsSpecified parameter value is the Size value of BoundsSpecified; however, if the Size is adjusted in response to the Dock property being set, the boundsSpecified parameter value is the None value of BoundsSpecified.
              <br /><b>Notes to Inheritors:</b> When overriding SetBoundsCore in a derived class, be sure to call the base class's SetBoundsCore method to force the boundary of the control to change. Derived classes can add size restrictions to the SetBoundsCore method. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MultilineChanged">
      <summary>
              Occurs when the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> property has changed.
            </summary>
      <remarks>
              This event is raised if the <b>Multiline</b> property is changed by a programmatic modification.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpened">
      <summary>
              Occurs when a drop-down window is opened.
            </summary>
      <remarks>
              This event is raised if the drop-down window is opened by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnDropDownOpened(System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpened" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The OnDropDownOpened method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <br /><b>Notes to Inheritors:</b> When overriding OnDropDownOpened in a derived class, be sure to call the base class's OnDropDownOpened method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTabChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" /> property has changed.
            </summary>
      <remarks>
              This event is raised if the <b>AcceptsTab</b> property is changed by programmatic modification.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownClosing">
      <summary>
              Occurs before a drop-down window is closed.
            </summary>
      <remarks>
              This event is raised if the drop-down window is being closed by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnDropDownClosing(GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownClosing" /> event.
            </summary>
      <param name="e">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" /> instance that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The OnDropDownClosing method also allows derived classes to handle the event without attaching a delegate. 
              This is the preferred technique for handling the event in a derived class.
              <br /><b>Notes to Inheritors:</b> When overriding OnDropDownClosing in a derived class, 
              be sure to call the base class's OnDropDownClosing method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownClosed">
      <summary>
              Occurs when a drop-down window is closed.
            </summary>
      <remarks>
              This event is raised if the drop-down window is closed by either a programmatic modification or user interaction.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnDropDownClosed(System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownClosed" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The OnDropDownClosed method also allows derived classes to handle the event without attaching a delegate. 
              This is the preferred technique for handling the event in a derived class.
              <br /><b>Notes to Inheritors:</b> When overriding OnDropDownClosed in a derived class, 
              be sure to call the base class's OnDropDownClosed method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnMultilineChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MultilineChanged" /> event.
            </summary>
      <param name="e">
              An <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The OnMultilineChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <br /><b>Notes to Inheritors:</b> When overriding OnMultilineChanged in a derived class, be sure to call the base class's OnMultilineChanged method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the ElementContainerControl and and its child controls or elements
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
              True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
      <remarks>
              Call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Dispose(System.Boolean)" /> when you are finished using the <see cref="T:System.Windows.Forms.Control" />. 
              The <b>Dispose</b> method leaves the <see cref="T:System.Windows.Forms.Control" /> in an unusable state. 
              After calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Dispose(System.Boolean)" />, you must release all references to the <see cref="T:System.Windows.Forms.Control" /> 
              so the garbage collector can reclaim the memory that the <see cref="T:System.Windows.Forms.Control" /> was occupying.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DroppedDown">
      <summary>
              Gets or sets a value that indicates whether the drop-down window is dropped down.
            </summary>
      <value>
        <see langword="true" /> if dropped down; otherwise, <see langword="false" />.
            	<br />The default is <see langword="false" />.
            </value>
      <remarks>
               Setting this property to true is similar to using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Drop" /> method.
               <note>
               If the <b>GcTextBox</b> is disabled or invisible, this property cannot take effect.
              If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDown" />.<see cref="P:GrapeCtiy.Win.Editors.DropDown.AllowDrop" />
              property is false, this property cannot take effect.
               </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle">
      <summary>
              Gets or sets the border style.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle" /> enumeration that indicates the border style.
              <br />The default is <b>BorderStyle.Fixed3D</b>.
            </value>
      <remarks>
              You can use the <b>BorderStyle</b> property to create borderless and flat style controls, 
              in addition to the default three-dimensional control. The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.SingleBorderColor" />
              property can change the border color if this <b>BorderStyle</b> is BorderStyle.FixedSingle.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.FlatStyle">
      <summary>
              Gets or sets the flat style of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx" /> enumeration that indicates the flat appearance of the GcTextBox control.
              <br />The default is <b>FlatStyleEx.Standard</b></value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.SingleBorderColor">
      <summary>
              Gets or sets the color when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the border color when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
              <br />
              The default is <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The <see cref="T:System.Drawing.Color" /> only takes effect when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsCrLf">
      <summary>
            Gets or sets a value that indicates how to process the CrLf characters when copying, cutting, or pasting the string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration that indicates which mode the CrLf characters use when copying, cutting, and pasting the string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting causes the <b>GcTextBox</b> to be similar to the standard <b>TextBox</b> when copying, cutting, and pasting the string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> isn't a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn">
      <summary>
              Gets or sets a value that indicates whether pressing ENTER in a multiline Text control creates a 
              new line of text in the control.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if it creates a new line of text in the control; otherwise, <see langword="false" />.
              <br />The default is <see langword="false" />.
            </value>
      <remarks>
              If the value of this property is false, the user must press CTRL+ENTER to 
              create a new line in a multiline <see cref="T:GrapeCity.Win.Input.Edit" /> 
              control. If there is no default button for the form, then the ENTER key 
              will always create a new line of text in the control, no matter what 
              the value of this property.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab">
      <summary>
              Gets or sets a value that indicates whether pressing the TAB key in a multiline Text control
              types a TAB character in the control instead of moving the focus to the next control in the tab order.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to type a TAB character in the control; otherwise, <see langword="false" />.
              <br />The default is <see langword="false" />.
            </value>
      <remarks>
              If the <b>AcceptsTab</b> property is set to true, the user must press CTRL+TAB to 
              move the focus to the next control in the tab order.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTabChar">
      <summary>
            Gets or sets a value that indicates how to process the Tab characters when copying, cutting, or pasting the string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> enumeration that indicates which mode the Tab characters use when copying, cutting, and pasting the string.
            <br />The default is <b>TabCharMode.NoControl</b>.
            </value>
      <remarks>
              The <b>TabCharMode.Cut</b> setting causes the <b>GcTextBox</b> to be similar to the standard <b>TextBox</b> when copying, cutting, and pasting the string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace">
      <summary>
              Gets or sets the allow space settings.
            </summary>
      <value>
              An <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace" /> enumeration that indicates which type of space character can be accepted.
              <br />The default is <b>AllowSpace.Both</b>.
            </value>
      <remarks>
        <para>
              Use the <b>AllowSpace</b> property to specify which kind of space is allowed in the text.
              </para>
        <para></para>
        <para>
                If the <b>AllowSpace</b> enumeration is <b>None</b>, this <b>GcTextBox</b> does not accept a space.
                The <b>AllowSpace.Narrow</b> option means the SBCS space is allowed.
                The <b>AllowSpace.Wide</b> option means the DBCS space is allowed.
                The <b>AllowSpace.Both</b> option means all kinds of spaces are allowed.
              </para>
        <para></para>
        <note>
                If the AutoConvert propety is <see langword="true" /> and the AllowSpace is <b>AllowSpace.Wide</b>, the control
                automatically converts the SBCS space to DBCS space when the user enters a SBCS space character. The other settings behave the same way.
                The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Format" /> property can always be used with the <b>AllowSpace</b> property.
              </note>
      </remarks>
      <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Format" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteCustomSource">
      <summary>
              Gets or sets a custom <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> to use 
              when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" /> property is set to CustomSource.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> to use with <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" />.
              <br />The default is <see langword="null" />.
            </value>
      <remarks>
        <para>
                Use the <b>AutoCompleteCustomSource</b>, <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" />, 
                and <b>AutoCompleteSource</b> properties to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />
                that automatically completes the input string by comparing the prefix being entered to the
                prefixes of all strings in a maintained source. This is useful for TextBox controls in which 
                URLs, addresses, file names, or commands are frequently entered.
                <para></para><para>
                  The use of the <b>AutoCompleteCustomSource</b> property is optional, but you must
                  set the <b>AutoCompleteSource</b> property to CustomSource in order to use 
                  <b>AutoCompleteCustomSource</b>.
                </para><para></para><para>
                    You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b> 
                    properties together.
                </para></para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode">
      <summary>
              Gets or sets an option that controls how automatic completion works for 
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" /> values. 
              The values are AutoAppend, AutoSuggest, AutoSuggestAppend, and None. 
              <br />The default is <b>None</b>.
            </value>
      <remarks>
        <para>
                Use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteCustomSource" />, <b>AutoCompleteMode</b>, 
                and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" /> properties to create a <b>GcTextBox</b> that automatically 
                completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source. 
                This is useful for <b>GcTextBox</b> controls in which URLs, addresses, file names, or commands are frequently entered.
              </para>
        <para></para>
        <para>
                The use of the <b>AutoCompleteCustomSource</b> property is optional, 
                but you must set the <b>AutoCompleteSource</b> property to <b>CustomSource</b>
                in order to use <b>AutoCompleteCustomSource</b>.
              </para>
        <para></para>
        <para>
                You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b>
                properties together.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource">
      <summary>
              Gets or sets a value that specifies the source of complete strings used for automatic completion.
            </summary>
      <value>
              One of the System.Windows.Forms.AutoCompleteSource values. The options
              are AllSystemSources, AllUrl, FileSystem, HistoryList, RecentlyUsedList,
              CustomSource, and None. <br />The default is <b>None</b>.
            </value>
      <remarks>
        <para>
                    Use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteCustomSource" />, <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" />,
                    and <b>AutoCompleteSource</b> properties to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> 
                    that automatically completes input strings by comparing the prefix being entered to the 
                    prefixes of all strings in a maintained source. This is useful for <b>GcTextBox</b> controls 
                    in which URLs, addresses, file names, or commands are frequently entered.
                </para>
        <para></para>
        <para>
                    The use of the <b>AutoCompleteCustomSource</b> property is optional, but you must set the 
                    <b>AutoCompleteSource</b> property to <b>CustomSource</b> in order to use 
                    <b>AutoCompleteCustomSource</b>.
                </para>
        <para></para>
        <para>
                    You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b> properties together.
                </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoComplete">
      <summary>
              Gets the automatic complete related settings.
            </summary>
      <value>
              The auto complete.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoConvert">
      <summary>
              Gets or sets whether to automatically convert the entered characters 
              according to the input mask.
            </summary>
      <value>
              true if characters are automatically converted according to the input mask; 
              otherwise, false. <br />The default is <see langword="true" />.
            </value>
      <remarks>
        <para>
                If you set the <b>AutoConvert</b> property to True, all convertible characters are 
                automatically converted accordingly to the input mask. For example, set 
                the input mask to "A". Enter a lower case character and the control automatically 
                converts the character into upper case. 
              </para>
        <para>
                If SBCS is entered in a DBCS mask, the entered character is automatically 
                converted to DBCS. Also a DBCS space is automatically converted to a SBCS space 
                when the control allows only SBCS. 
              </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Format" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CountWrappedLine">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether to count the wrapped lines 
              when limiting the number of lines allowed by the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLineCount" /> property.
            </summary>
      <value>
              A <see langword="bool" /> that indicates whether to count the wrapped lines.
              <br />The default is <see langword="false" />.
            </value>
      <remarks>
              If the <b>CountWrappedLine</b> property is <see langword="true" />, set the 
              <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> property to <see langword="true" />, 
              and set the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLineCount" />
              property to a non-zero value. This <b>GcTextBox</b> only accepts text with lines that are less than
              the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLineCount" /> value.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLineCount" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Ellipsis">
      <summary>
              Gets or sets a value that indicates how the ellipsis character (...) appears, 
              denoting that the <b>GcTextBox</b> text extends beyond the specified length of the <b>GcTextBox</b>. 
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" /> enumeration,
              <b>None</b>, means no ellipsis string is shown.
              <b>EllipsisEnd</b> puts the character at the end of the string.
              <b>EllipsisPath</b> puts the character in the center of the string.
              <b>EllipsisWord</b> puts a word at the end of the string.
              <br />The default is <b>EllipsisMode.None</b>.
            </value>
      <remarks>
              The <b>Ellipsis</b> property only takes effect with <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />.
              When the text is longer than the control's width and the control does not have focus, 
              the ellipsis string, specified by the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.EllipsisString" /> 
              property, is displayed.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.EllipsisString">
      <summary>
              Gets or sets what is shown as an ellipsis when the width of the text is longer than the control.
            </summary>
      <value>
              A <b>string</b> value that indicates the string used as an ellipsis.
              <br />The default is <b>(...)</b>.
            </value>
      <remarks>
              This property specifies the string that is used when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Ellipsis" /> is set to <b>EllipsisMode.EllipsisEnd</b>
               or <b>EllipsisMode.EllipsisPath</b></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.LineSpace">
      <summary>
              Gets or sets the line space between two adjacent lines.
            </summary>
      <value>
              The <b>int</b> value that indicates the line space between two lines.
              <br />The default is <b>0</b>.
            </value>
      <remarks>
              The <b>LineSpace</b> property indicates the spaces between every text line.
              <note>
                This property only takes effect when the Multiline property is true.
              </note></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
               If value is less than zero, an ArgumentOutOfRangeException is thrown.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Format">
      <summary>
              Gets or sets the input format to use in the control.
            </summary>
      <value>
              The string that is used to control how text can be entered.
              <br />The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              This property specifies what kind of characters and symbols are allowed.  
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DisplayAlignment">
      <summary>
              Gets or sets the text alignment displayed in the horizontal axis when the control does not have input focus.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DisplayAlignment" /> enumeration values that specifies 
              how text is aligned in the control. <br />The default is <b>DisplayAlignment.None</b>. 
            </value>
      <remarks>
              This property is used to display text with different character spacing settings.
               <note>
                 If the text of this <b>GcTextBox</b> is longer than this control's width, the character spacing effect disappears.
               </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GridLine">
      <summary>
              Gets or sets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> that indicates the grid line style for each line.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> that indicates the grid line style for each line.
            </value>
      <remarks>
              This property is used when grid lines are needed between each text line.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.IntegralHeight">
      <summary>
              Gets or sets a value that indicates whether the <b>GcTextBox</b> should 
              resize to avoid showing partial lines.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether editing should resize to avoid showing partial lines.
              <br />The default is <see langword="false" />.
            </value>
      <remarks>
              When this property is set to <see langword="true" />, the control automatically resizes to ensure that a text line is not partially displayed. 
              If you want to maintain the original size of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> based on the space requirements of your form, 
              set this property to false. 
              <note>
              This property only takes effect when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> property is <see langword="true" />.
              </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLengthUnit">
      <summary>
              Gets or sets whether the maximum number of characters that fit in the control 
              are handled based on bytes, characters, or text elements.
            </summary>
      <value>
              true if the <b>MaxLength</b> is based on byte; 
              otherwise, based on character.
              <br />The default is <b>LengthUnit.Char</b>.
            </value>
      <remarks>
              Determines the unit for counting for the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLength" /> property. 
              The value <b>LengthUnit.Byte</b> means the MaxLength is counted by Byte.
              The value <b>LengthUnit.Char</b> means the MaxLength is counted by Char.
              The value <b>LengthUnit.TextElement</b> means the MaxLength is counted by TextElement.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLengthCodePage">
      <summary>
            Gets or sets the code page for the encoding that used to count the max length in byte.
            </summary>
      <value>
            An <see cref="T:System.Int32" /> value indictes the code page for the encoding. <b />
            The default is -1, indicates using the built-in byte length counting method instead of using encoding.
            </value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLengthUnit" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Lines">
      <summary>
              Gets or sets the lines of text in a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> control.
            </summary>
      <value>
              An array of strings that contains the text in the control.
            </value>
      <remarks>
              Each element in the array becomes a line of text in the text box control. If the 
            <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> property of the edit 
            control is set to true and a newline character appears in the text, the text 
            following the newline character is added to a new element in the array and 
            displayed on a separate line.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text">
      <summary>
              Gets or sets the text associated with this control.
            </summary>
      <value>
              The text associated with this control.
              <br />The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              To display multiple lines of text in a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />, 
              set the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> property to true. 
              To read or set the text of a multiline <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />, 
              use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Lines" /> property. The amount of text 
              that can be entered in the control is limited only by available system memory.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLength">
      <summary>
              Gets or sets the maximum number of characters or bytes that the control can hold.
            </summary>
      <value>
              The number of characters or bytes (determined by the 
              <b>LengthAsByte</b> property) 
              that can be entered into the control. <br />The default is <b>zero</b>.
            </value>
      <remarks>
              The <b>MaxLength</b> property allows you to limit the number of characters 
              a user can enter in the control. The default value is 0, 
              which does not limit the number of characters. Any number greater than 0 indicates 
              the maximum number of characters.
               The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLengthUnit" /> effects the displayed result along with the <b>MaxLength</b> property.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
              If value is less than zero, an ArgumentOutOfRangeException is thrown.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLineCount">
      <summary>
              Gets or sets the maximum number of lines.
            </summary>
      <value>
              An <b>int</b> value that indicates the maximum number of lines.
              <br />The default is <b>zero</b>.
            </value>
      <remarks>
        <b>MaxLineCount</b> limits the acceptable lines of text when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CountWrappedLine" />
              property is <see langword="true" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Muilitline" /> property is <see langword="true" /> as well.
              The default value of this property, zero, means no limit.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CountWrappedLine" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline">
      <summary>
              Gets or sets whether the control can accept and display multiple lines of text.
            </summary>
      <value>
              True if the control is a multiline control; otherwise, false. 
              <br />The default is <see langword="false" />.
            </value>
      <remarks>
        <para>
                A multiple-line control wraps text as the user types text, extending beyond the text box.
              </para>
        <para>
                You can also add scroll bars to larger controls using the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" /> property. 
                If no horizontal scroll bar is specified, the text in a multiple-line control automatically wraps.
              </para>
        <note type="cnotes">
                On a form with no default buttons, pressing Enter will cause the focus to move to 
                the next line in a multiple-line control. If a default button exists, you must press 
                Ctrl+Enter to move to the next line. Also to insert a tab, you must press Ctrl+Tab.
            </note>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ShowOverflowTip">
      <summary>
              Gets or sets whether to show the overflow tooltip.
            </summary>
      <value>
        <see langword="true" /> means to show overflow tooltips when the mouse hovers over a control with overflow text; 
              otherwise, false. <br />The default is <see langword="false" />.
            </value>
      <remarks>
              The overflow tooltip is shown when both of the following conditions are satisfied. 
              <br />The <b>Focused</b> property of this control is false.
              <br />A mouse pointer is on the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PasswordRevelationMode">
      <summary>
              Gets or sets the password revelation mode.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PasswordRevelationMode" /> value, indicates the password revelation mode.
              <br />
              Default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.None">None</see>, indicates never reveal the typed password.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PasswordChar">
      <summary>
              Gets or sets the character used as a placeholder for the characters typed by the user.
            </summary>
      <value>
              The character used to mask characters entered in a single-line control. 
              Set the value of this property to 0 (character value) if you do not want the control to 
              mask characters as they are typed. The default value is 0 (character value).
            </value>
      <remarks>
        <para>
                The <b>PasswordChar</b> can be used to create a password field in a dialog box. Although you 
                can use any SBCS character, most Windows-based applications use the asterisk (*) (Chr(42)).
              </para>
        <para>
                This property does not affect the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" /> property. 
                <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" /> contains exactly what the user types or what 
                was set from code. Setting the <b>PasswordChar</b> to 0, which is the default, displays 
                the actual text in the control.
            </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PreferredHeight">
      <summary>
              Gets the preferred height.
            </summary>
      <value>
              An <b>int</b> value that indicates the preferred height of the control.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars">
      <summary>
              Gets or sets which scroll bars should appear in a multiline 
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> control.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" /> enumeration values 
              that indicates whether a multiline <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> 
              control appears with no scroll bars, a horizontal scroll bar, a vertical 
              scroll bar, or both. <br />The default is <b>None</b>.
            </value>
      <remarks>
              The horizontal scroll bars are not shown if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" /> property 
              is set to <b>WrapMode.WordWrap</b> or <b>WrapMode.CharWrap</b>,
              regardless of the value of the <b>ScrollBars</b> property.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBarMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBarMode">
      <summary>
              Gets or sets how to display the scroll bars.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBarMode" /> enumeration values 
              that indicates whether a multiple-line edit displays the scroll bars as soon as 
              the contents exceed the length of the control.
              <br />The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed" />.
            </value>
      <remarks>
              To display the scroll bars, you must have the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> property set to <see langword="true" />. 
              If set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed" />, the scroll bars 
              are displayed all the time. If set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Automatic" />, 
              the scroll bars are visible only when the contents in the control exceed 
              the length of the control.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.UseSystemPasswordChar">
      <summary>
              Gets or sets a value that indicates whether to use the system password character.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to use the system password character.
              If the value is <see langword="true" />, this control uses the character for displaying the password from system settings;
              otherwise, the control does not use the system password character.
              <br />The default is <see langword="false" />.
            </value>
      <remarks>
              The <b>UseSystemPasswordChar</b> property has precedence over the 
              <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PasswordChar" /> property. Whenever the <b>UseSystemPasswordChar</b>
              is set to <see langword="true" />, the default system password character is used and any character set by 
              <b>PasswordChar</b>is ignored.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode">
      <summary>
              Gets or sets the wrap rule when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> control is multiline.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" /> enumeration that indicates the rule for wrapping the text.
              <br />The default is <b>WrapMode.WordWrap</b>.
            </value>
      <remarks>
              The <b>WrapMode</b> property can take effect for text wrap behaviors.
              The <b>WrapMode.WordWrap</b> value means wrap the text by word.
              The <b>WrapMode.CharWrap</b> value means wrap the text by character.
              <note>
                This property only takes effect when MultiLine is true.
              </note></remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ItemHeight">
      <summary>
              Gets the height of a line.
            </summary>
      <value>
              An <b>int</b> value that indicates the height of a line.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.HighlightText">
      <summary>
              Gets or sets whether to highlight text in the control.
            </summary>
      <value>
        <see langword="true" /> when the control gets focus and all the text is selected; otherwise, <see langword="false" />. 
              <br />The default is <see langword="false" />.
            </value>
      <remarks>
        <para>
                This property allows you to highlight all text in the control upon receiving focus.
              </para>
        <para>
                If <see langword="true" />, the contents are selected.
              </para>
        <para>
                If <see langword="false" /> (the default), the contents are not selected and the caret is positioned 
                according to the settings of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" /> properties.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDown">
      <summary>
             Gets the drop-down settings used to customize the drop-down function.
            </summary>
      <value>
             A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDown" /> instance that contains drop-down window settings.
            </value>
      <remarks>
              The drop-down behavior and the window appearance can be customized by setting this <b>DropDown</b> property.
              This includes whether to enable the display, resize options, the direction of the displayed drop-down windown, the 
              shadow of the drop-down window, and opening and closing animations.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.SideButtons">
      <summary>
              Gets the sideButtons of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> value that indicates the collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed.
              This includes the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />,
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />, and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownEditor">
      <summary>
             Gets the settings for the drop-down editor.
            </summary>
      <value>
             A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownEditor" /> instance that indicates the settings for the drop-down editor.
            </value>
      <remarks>
              The drop-down window can be customized by setting this <b>DropDownEditor</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AlternateText">
      <summary>
              Gets the alternate text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText" /> value that indicates the alternate text.
            </value>
      <remarks>
              If the current value is <see cref="F:System.String.Empty" /> and this control has input focus, the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" /> property equals the 
              <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.Null" /> setting, which is not null. The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" /> property
              equals the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.DisplayNull" /> setting if the current value is <see langword="null" />
              and this control does not contain the input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ShowRecommendedValue">
      <summary>
              Gets or sets a value that indicates whether to show the recommended value.
            </summary>
      <value>
        <see langword="true" /> to show the recommended value; otherwise, <see langword="false" />.
              <br />The default is <see langword="false" />.
            </value>
      <remarks>
              The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.RecommendedValue" /> property is shown when the <b>ShowRecommendedValue</b>
              is <see langword="true" /> and value is not fully entered; otherwise, the value of the <b>RecommendedValue</b> property is shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <b>string</b> value that indicates the recommended value.
              <br />The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property provides a hint for the user that is shown when the value is not fully entered.
              When a value is being entered,
              pressing a special shortcut key or key combination accepts the recommended value. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Font">
      <summary>
              Gets or sets the font of the text displayed by the control.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.
              <br />The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
        <para>
                The <b>Font</b> property is an ambient property. An ambient property is a control property that, 
                if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
                <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. For more information about 
                ambient properties, see the <see cref="T:System.Windows.Forms.AmbientProperties" /> class or the <see cref="T:System.Windows.Forms.Control" /> class overview.
              </para>
        <para></para>
        <para>
                Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>; 
                however, you can base the new font on the existing font.
              </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AboutBox">
      <summary>
              Shows the product information window.
            </summary>
      <remarks>
              A window which contains the product information can be shown, after this method is called.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Drop">
      <summary>
              Shows the drop-down window.
            </summary>
      <remarks>
        <para>
              This method presents the user with the drop-down editor to assist in data entry.  If the 
              control is disabled or the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDown" />.<see cref="P:GrapeCtiy.Win.Editors.DropDown.AllowDrop" />
              property is false, a call to this method is ignored.
            </para>
        <para>
              When the drop-down editor is just about to display, the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpening" /> and <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpened" /> events are triggered.
            </para>
        <note>
              This method will try to seize focus when the control does not have the input focus.
            </note>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.SwitchDropDown">
      <summary>
              Switches the state of the drop-down window.
            </summary>
      <remarks>
              This method is mainly used by GcShortcut's behaviors. The drop-down window is opened when using this method if the drop-down window is closed. The window is closed when using this method if the window is open. This method does nothing when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> property is <see langword="false" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnEnter(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The OnEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <br /><b>Notes to Inheritors:</b> When overriding OnEnter in a derived class, be sure to call the base class's OnEnter method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnLeave(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The OnLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <br /><b>Notes to Inheritors:</b> When overriding OnLeave in a derived class, be sure to call the base class's OnLeave method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the GotFocus event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The OnGotFocus method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <br /><b>Notes to Inheritors:</b> When overriding OnGotFocus in a derived class, be sure to call the base class's OnGotFocus method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetCharFromPosition(System.Drawing.Point)">
      <summary>
             Retrieves the character that is closest to the specified location within the control.
            </summary>
      <param name="point">
             The location from which to seek the nearest character
            </param>
      <returns>
             The character at the specified location
            </returns>
      <remarks>
             If the location specified in the point parameter is outside the client area of the control,
             the character '\0'is returned. You can use this method to determine which characters
             are located near a specific point within the control. 
             You can then use this value to perform operations on the text at that location.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetCharIndexFromPosition(System.Drawing.Point)">
      <summary>
             Retrieves the index of the character nearest to the specified location.
            </summary>
      <param name="point">The location to search</param>
      <returns>The zero-based character index at the specified location</returns>
      <remarks>
             This method returns the character index that is closest to the position specified in the point parameter.
             The character index is a zero-based index of text in the control, including spaces. 
             You can use this method to determine where in the text the user has the mouse
             by passing the mouse coordinates to this method. This can be useful if you want to perform
             tasks when the user hovers the mouse pointer over a word in the text of the control. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetPositionFromCharIndex(System.Int32)">
      <summary>
             Retrieves the location within the control at the specified character index.
            </summary>
      <param name="index">The index of the character for which to retrieve the location</param>
      <returns>The location of the specified character</returns>
      <remarks>
              If the parameter is less than zero or bigger than the count of all characters, this method returns <b>-1</b>.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetFirstCharIndexFromLine(System.Int32)">
      <summary>
            Retrieves the index of the first character of a given line.
            </summary>
      <param name="lineNumber">The line number for which to retrieve the first character index</param>
      <returns>The zero-based character index in the specified line</returns>
      <remarks>
              If the parameter is equal to or bigger than the count of this control's <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetLineCount" /> method, this method  returns -1.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the parameter is less than zero.</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetFirstCharIndexOfCurrentLine">
      <summary>
              Retrieves the index of the first character of the current line.
            </summary>
      <returns>The zero-based character index in the current line</returns>
      <remarks>
              If the <b>Text</b> property is string.Empty, this method returns zero; 
              otherwise, it returns the number of lines.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetLineFromCharIndex(System.Int32)">
      <summary>
             Retrieves the line number from the specified character position within the text of the control.
            </summary>
      <param name="index">The character index position to search</param>
      <returns>The zero-based line number in which the character index is located</returns>
      <remarks>
        <para>
             This method enables you to determine the line number based on the character index
             specified in the index parameter of the method. The first line of text in the control
             returns the value zero. The GetLineFromCharIndex method returns the physical line number
             where the indexed character is located within the control.
             </para>
        <para></para>
        <para>
             For example, if a portion of the first logical line of text in the control wraps to the next line,
             the GetLineFromCharIndex method returns 1 if the character at the specified character index
             has wrapped to the second physical line. If WordWrap is set to false, no portion of the line wraps
             to the next, and the method returns 0 for the specified character index. 
             </para>
        <para></para>
        <para>
             You can use this method to determine which line a specific character index is located within. 
             For example, after calling the Find method to search for text, you can obtain the character index
             to where the search results are found. You can call this method with the character index
             returned by the Find method to determine which line the word was found. 
             </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetLineCount">
      <summary>
              Retrieves the number of lines in a multiple-line edit control.
            </summary>
      <returns>
              An <see cref="T:System.Int32" /> value that indicates the number of lines in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> control.
            </returns>
      <remarks>
              If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" /> property is <see cref="F:System.String.Empty" />, this method returns zero; otherwise, it returns the number of lines.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetPreferredSize(System.Drawing.Size)">
      <summary>
              Retrieves the size of a rectangular area into which a control can fit.
            </summary>
      <param name="proposedSize">
              The custom-sized area for a control.
            </param>
      <returns>
              An ordered pair of type <see cref="T:System.Drawing.Size" /> objects that represents the width and height of a rectangle.
            </returns>
      <remarks>
              The behavior of GetPreferredSize differs by control. The LayoutEngine might be unable to assign the returned 
              size to the control. You can return a size larger than the constraints indicated in the proposedSize parameter, 
              but proposedSize should decrease as the constraint decreases. For example, GetPreferredSize(new Size(100, 0)) 
              should not be wider than GetPreferredSize(new Size(200, 0)). The exception is a proposedSize of 0 or Size.Empty, 
              which is defined as unconstrained.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>
            Moves the focus using the key exit event.
            </summary>
      <param name="e">The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> instance that contains the event data.</param>
      <remarks>
              When the <b>MoveFocusByKeyExit</b> method is called, the focus moves.
              ExitKeys.CharInput, ExitKeys.CtrlRight, ExitKeys.NextControl, and ExitKeys.Right are exit keys.
              Tab moves the focus forward, but other ExitKeys move the focus backward.
              <br /><b>Notes for Inheritors: </b>
                The base method must be invoked when overridden in the inherited class; 
                otherwise, the focus does not move.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnImeModeChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.ImeModeChanged" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The OnImeModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <br /><b>Notes to Inheritors:</b> When overriding OnImeModeChanged in a derived class, be sure to call the base class's OnImeModeChanged method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnEnabledChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged"></see> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs"></see> that contains the event data.</param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The OnEnabledChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <br /><b>Notes to Inheritors:</b> When overriding OnEnabledChanged in a derived class, be sure to call the base class's OnEnabledChanged method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnVisibleChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged"></see> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs"></see> that contains the event data.</param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              The OnVisibleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <br /><b>Notes to Inheritors:</b> When overriding OnVisibleChanged in a derived class, be sure to call the base class's OnVisibleChanged method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ApplyRecommendedValue">
      <summary>
              Applies the recommended value to the control.
            </summary>
      <remarks>
              The <b>ApplyRecommendedValue</b> method is mainly used by GcShortcut's behaviors. 
              It can accept the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.RecommendedValue" /> when
              the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ShowRecommendedValue" /> property is <see langword="true" />. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.InputNewLine">
      <summary>
              Insert a line feed char at the current caret position.
            </summary>
      <remarks>
              You can use this method to add line feed to the existing text.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WndProc(System.Windows.Forms.Message@)">
      <summary>
              Processes Windows messages.
            </summary>
      <param name="m">
              The Windows System.Windows.Forms.Message to process.
            </param>
      <remarks>
        <para>
             All messages are sent to the <b>WndProc</b> method after getting filtered through the <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> method.
             </para>
        <para></para>
        <para>
             The <b>WndProc</b> method corresponds exactly to the Windows WindowProc function. For more information about processing Windows messages, see the WindowProc function documentation in the Windows Platform SDK reference located in the MSDN library at http://msdn.microsoft.com/library.
             </para>
        <para></para>
        <para>
          <br />
          <b>Notes to Inheritors:</b> Inheriting controls should call the base class's <b>WndProc</b> method to process any messages that they do not handle. 
             </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>.
              A <see cref="T:System.Type" /> list that contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method allows derived classes to customize default side buttons when
              the control is created.
              If the return value is <see langword="null" />, no side buttons are added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">The default side buttons for initializing.</param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the control is created.
              If return <see langword="null" />, no shortcuts would be added to the control.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan">
      <summary>
              Represents a <b>GcTimeSpan</b> control class.
            </summary>
      <remarks>
        <para>
                The <b>GcTimeSpan</b> control allows you to design a functional time span input interface 
                quickly and efficiently.
              </para>
        <para>
                Using the <b>GcTimeSpan</b> control will limit the need for much data validation of time span values.
              </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.CreateAccessibilityInstance">
      <summary>
              Creates a new accessibility object for the control.
            </summary>
      <returns>
             A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.#ctor(System.ComponentModel.IContainer)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" /> class.
            </summary>
      <param name="container">
              The container.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the ElementContainerControl and and its child controls or elements
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
              True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
      <remarks>
              Call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Dispose(System.Boolean)" /> when you are finished using the <see cref="T:System.Windows.Forms.Control" />. 
              The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Dispose(System.Boolean)" /> method leaves the <see cref="T:System.Windows.Forms.Control" /> in an unusable state. 
              After calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Dispose(System.Boolean)" />, you must release all references to the <see cref="T:System.Windows.Forms.Control" /> 
              so the garbage collector can reclaim the memory that the <see cref="T:System.Windows.Forms.Control" /> was occupying.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ValueChanged">
      <summary>
              Occurs when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" /> property is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.OnValueChanged(System.EventArgs)">
      <summary>
               Called when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" /> property is changed.
             </summary>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance containing the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnValueChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnValueChanged</b> in a derived class, be sure to call the base class's <b>OnValueChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Fields">
      <summary>
              Gets the fields of the control.
            </summary>
      <value>An <see cref="T:GrapeCity.Win.Views.TimeSpanFieldCollection" /> representing the items in the GcTimeSpan.</value>
      <remarks>
              This property determines how to display the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" /> of this control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DisplayFields">
      <summary>
              Gets the display fields of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection" />
              object indicates collection of the display fields.
            </value>
      <remarks>
              This property determines how to display the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" /> of this control without input focus. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.AlternateText">
      <summary>
              Gets the alternate text setting of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText" /> value indicates the alternate-text.
            </value>
      <remarks>
              This property is set to show an alternative text when value of the control is <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Zero" /> 
              or <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Null" /> in edit mode and display mode.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.SideButtons">
      <summary>
              Gets a collection of side buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> value indicates the collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed more commend buttons. 
              Includs the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />, 
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.AcceptsCrLf">
      <summary>
            Gets or sets a value indicating how to process the CrLf chars when copy, cut or paste string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration indicates which mode that the CrLf chars will be used when copy, cut and paste string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting make the <b>GcTimeSpan</b> same with the standard <b>TextBox</b> when copy, cut and paste string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> isn't a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ActiveField">
      <summary>
              Gets the active field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Views.Field" /> value indicates the active field.
            </value>
      <remarks>
              This property indicates the field which is actived, that means the caret is in the field.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DefaultActiveField">
      <summary>
              Gets or sets the default active field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Views.Field" /> value indicates the default active field.
              <br /> The defalut is <see langword="null" />.
            </value>
      <remarks>
              When the control got focus, the default active field will got the focus.
              And if the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.HighlightText" /> property is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.Field" />, all of the text in the field will be selected. 
              Otherwise, caret will only move to the first input position.
            </remarks>
      <exception cref="T:System.ArithmeticException">
              The specified field don't exist in the <see cref="T:GrapeCity.Win.Views.FieldCollection" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Spin">
      <summary>
              Gets the settings about spin function.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin" /> value indicates the settings about spin function.
            </value>
      <remarks>
              The spin behaviors can be customized by setting this <b>Spin</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.PreferredHeight">
      <summary>
              Gets the preferred height.
            </summary>
      <value>
              An <b>int</b> value indicates preferred height of the control.
            </value>
      <remarks>
              This property just as the height of  <see cref="P:System.Windows.Forms.Control.PreferredSize" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ShowRecommendedValue">
      <summary>
              Gets or sets a value indicating whether show the recommended value.
            </summary>
      <value>
        <see langword="true" /> if show the recommended value; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.RecommendedValue" /> property will shown when this <b>ShowRecommendedValue</b> is <see langword="true" /> and value is not fully inputted. 
              Otherwise, the value of <b>RecommendedValue</b> property will not shown.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.RecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <see cref="T:System.TimeSpan" /> value indicates the recommended value.
              <br /> The default is <see cref="F:System.TimeSpan.Zero" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property makes a hint for user that shown when value is not fully inputted. 
              When some value is being inputed, pressing some special shortcut key or key combination can accept the recommendatory value. 
            </remarks>
      <exception cref="T:System.ArgumentException">
              Occurs when invalid value that does not match current pattern
              will set to the <b>RecommendedValue</b> property.
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ShowRecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Text">
      <summary>
              Gets or sets the text associated with this control.
            </summary>
      <value>The text associated with this control.</value>
      <remarks>
              The <b>Text</b> property include all literals and all chars in fields with input focus or in display fields without input focus.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value">
      <summary>
              Gets or sets the <see cref="T:System.Nullable`1" /> value assigned to the control.
            </summary>
      <value>
              The <see cref="T:System.Nullable`1" /> value assign to the control.  The default is zero.
            </value>
      <remarks>
              This property retrieves the value that made of all chars in fields and exclude literals. 
              No matter what fields this control has, this <b>Value</b> is always same. 
            </remarks>
      <exception cref="T:System.FormatException">The value is not a valid format string.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MinValue" /> or greater than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxValue" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ValidateMode">
      <summary>
              Gets or sets the validate mode.
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" /> enumeration values.  The default 
              is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" />.
            </value>
      <remarks>
              The property retrieves the validate mode.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              A value that is not within the range of valid values for the enumeration was assigned to 
              the property.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.IsInvalidText">
      <summary>
              Gets a <see langword="bool" /> value indicates whether the text is invalid.
            </summary>
      <value>
              A <see langword="bool" /> value indicates whether the text is invalid.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ValueSign">
      <summary>
              Gets or sets the value sign of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" /> value indicates the value sign.
              <br /> The defalut is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />.
            </value>
      <remarks>
              The <b>ValueSign</b> property determines what value can be accepted. 
              If the value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Positive" />, only value which not smaller than <see cref="F:System.TimeSpan.Zero" /> is allowed. 
              If the value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Negative" />, only value which not bigger than <see cref="F:System.TimeSpan.Zero" /> is allowed. 
              And <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" /> means all value is allowed.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              value is not defined in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NegativeColor">
      <summary>
              Gets or sets the color when the value's sign of this control is negative.
            </summary>
      <value>
              The color of the negative value.
            </value>
      <remarks>
              If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" /> property is smaller than <see cref="F:System.TimeSpan.Zero" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.UseNegativeColor" /> property is <see langword="true" />, the color of text follows this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.UseNegativeColor">
      <summary>
              Gets or sets a value indicating whether use <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NegativeColor" /> to render negative or not.
            </summary>
      <value>
        <see langword="true" /> means use <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NegativeColor" /> to render negative; 
              <see langword="false" /> means use <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ForeColor" /> to render negative.
              <br /> The default is <see langword="true" />.
            </value>
      <remarks>
              If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" /> property is smaller than <see cref="F:System.TimeSpan.Zero" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.UseNegativeColor" /> property is <see langword="true" />, 
              the color of text follows this property.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.AboutBox">
      <summary>
              Shows the product information window.
            </summary>
      <remarks>
              A window which contains the product informations could be shown, after this method is called.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.PreviousField">
      <summary>
              Jump to the previous field.
            </summary>
      <remarks>
              This method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors.  
              If the current field which the caret is in is the first editable field, the caret will not move. 
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" /> events will be raised when the caret is moved successfully.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NextField">
      <summary>
              Jump to the next field.
            </summary>
      <remarks>
              This method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors.  
              If the current field which the caret is in is the last editable field, the caret will not move. 
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" /> events will be raised when the caret is moved successfully.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.PreviousFieldThenControl">
      <summary>
             Jump to the previous field, but if caret is in the start editable field, it will jump to the previous control.
            </summary>
      <remarks>
              This method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" /> events will be raised when the caret is moved successfully. 
              If the caret is moved to other control, the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit" /> event will be raised.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NextFieldThenControl">
      <summary>
             Jump to the next field, but if caret is in the end editable field, it will jump to the next control.
            </summary>
      <remarks>
              This method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
              The <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" /> events will be raised when the caret is moved successfully.
              If the caret is moved to other control, the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit" /> event will be raised.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.SetZero">
      <summary>
              Reset the value to <see cref="F:System.TimeSpan.Zero" />.
            </summary>
      <remarks>
              This method mainly used for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.SwitchSign">
      <summary>
              Switches the sign of value.
            </summary>
      <remarks>
              This method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ApplyRecommendedValue">
      <summary>
              Applies the recommended value to control.
            </summary>
      <remarks>
              This <b>ApplyRecommendedValue</b> method mainly used by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />'s behaviors. 
              It can accept the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.RecommendedValue" /> when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ShowRecommendedValue" /> property is <see langword="true" />. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DoSpinUp(System.TimeSpan)">
      <summary>
              Performs spin up.
            </summary>
      <param name="increment">
              The <see cref="T:System.Decimal" /> value that indicates the increment when spin up.
            </param>
      <remarks>
              This method can spin the value of this control up according the increment parameter.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DoSpinDown(System.TimeSpan)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DoSpinDown(System.TimeSpan)">
      <summary>
              Performs spin down.
            </summary>
      <param name="increment">
              The <see cref="T:System.Decimal" /> value that indicates the increment when spin down.
            </param>
      <remarks>
              This method can spin the value of this control down according the increment parameter. 
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DoSpinUp(System.TimeSpan)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.GetDefaultFields">
      <summary>
              Gets the default fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField" /> array contains all default fields for inputting.
            </returns>
      <remarks>
              The <b>GetDefaultFields</b> method allows derived classes to customize default fields when
              the control is created.The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldsBuilder.BuildFields(System.String)" /> 
              can be used to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField" /> array following a string format.
              If return <see langword="null" />, no field would be added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.GetDefaultDisplayFields">
      <summary>
              Gets the default display fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayField" /> array contains all default fields for displaying.
            </returns>
      <remarks>
              The <b>GetDefaultDisplayFields</b> method allows derived classes to customize default display fields when
              the control is created.The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldsBuilder.BuildFields(System.String)" />
              can be used to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayField" /> array following a string format.
              If return <see langword="null" />, no display field would be added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>
              A <see cref="T:System.Type" /> list contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method allows derived classes to customize default side buttons when
              the control is created.
              If return <see langword="null" />, no side buttons would be added to the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">The default side buttons for initializing.</param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the control is created.
              If return <see langword="null" />, no shortcuts would be added to the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxValue">
      <summary>
              Gets or sets the maximum allowable value when spin the control by field or value.
            </summary>
      <value>
              A <see cref="T:System.TimeSpan" /> value indicates the maximum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MinValue" /> or greater than the default value.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MinValue">
      <summary>
              Gets or sets the minimum allowable value when spin the control by field or value.
            </summary>
      <value>
              A <see cref="T:System.TimeSpan" /> value indicates the minimum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is greater than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxValue" /> or less than the default value.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxMinBehavior">
      <summary>
            Gets or sets the behavior when the new input value is out of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MinValue" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxValue" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxMinBehavior" /> enumeration value indicates the behavior when the new input value is out of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MinValue" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxValue" />.
              <br />
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" />.
            </value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The <b>value</b> isn't a valid <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxMinBehavior" /> item.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.OnTextChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.OnEnter(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnEnter</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnEnter</b> in a derived class, be sure to call the base class's <b>OnEnter</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.
            </summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnValidating</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnValidating</b> in a derived class, be sure to call the base class's <b>OnValidating</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.TouchDropDownScale">
      <summary>
            Gets or sets the factor applies to dropdown item while opening dropdown by touch behavior.
            </summary>
      <value>
            The factor applies to dropdown item while opening dropdown by touch behavior. The default is 1.5f.
            </value>
      <remarks>
              This property is not relevant for this class.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText">
      <summary>
              Represents an alternate text setting.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AlternateText.Text">
      <summary>
              Gets or sets the alternate text.
            </summary>
      <value>
              A <b>string</b> value that indicates the text.
            </value>
      <remarks>
              This property retrieves the text displayed when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AlternateText.ForeColor">
      <summary>
              Gets or sets the ForeColor of the alternate text.
            </summary>
      <value>
              A <b>Color</b> value that indicates the ForeColor of the alternate text.
            </value>
      <remarks>
              This property retrieves the color of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.AlternateText.Text" /> when the alternate text is shown.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateText">
      <summary>
              Defines a <b>MaskAlternateText</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateText.Null">
      <summary>
              Gets the <b>Null</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Null</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateText.DisplayNull">
      <summary>
              Gets the <b>DisplayNull</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayNull</b> instance.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateText">
      <summary>
              Defines a <b>NumberAlternateText</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateText.Null">
      <summary>
              Gets the <b>Null</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Null</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateText.DisplayNull">
      <summary>
              Gets the <b>DisplayNull</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayNull</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateText.Zero">
      <summary>
              Gets the <b>Zero</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Zero</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateText.DisplayZero">
      <summary>
              Gets the <b>DisplayZero</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayZero</b> instance.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText">
      <summary>
              Defines a <b>TimeSpanAlternateText</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Null">
      <summary>
              Gets the <b>Null</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Null</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.DisplayNull">
      <summary>
              Gets the <b>DisplayNull</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayNull</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Zero">
      <summary>
              Gets the <b>Zero</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Zero</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.DisplayZero">
      <summary>
              Gets the <b>DisplayZero</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayZero</b> instance.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText">
      <summary>
              Defines a <b>DateAlternateText</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText.Null">
      <summary>
              Gets the <b>Null</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Null</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText.DisplayNull">
      <summary>
              Gets the <b>DisplayNull</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayNull</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText.EmptyEra">
      <summary>
              Gets the <b>EmptyEra</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>EmptyEra</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText.DisplayEmptyEra">
      <summary>
              Gets the <b>DisplayEmptyEra</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayEmptyEra</b> instance.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText">
      <summary>
              Defines a <b>TextBoxAlternateText</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.Null">
      <summary>
              Gets the <b>Null</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Null</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.DisplayNull">
      <summary>
              Gets the <b>DisplayNull</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayNull</b> instance.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateText">
      <summary>
              Defines a <b>ComboBoxAlternateText</b> class.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete">
      <summary>
              Defines the AutoComplete settings.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete.CandidateListItemFont">
      <summary>
              Gets or sets the font for the items in the automatic complete candidate list.
            </summary>
      <value>
              The candidate list item font.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete.HighlightMatchedText">
      <summary>
              Gets or sets a value that indicates whether to highlight matched text in the candidate list.
            </summary>
      <value>
              A <see cref="T:System.Boolean" /> value, <see langword="true" /> to highlight matched text in the candidate list; 
              otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete.MatchingMode">
      <summary>
              Gets or sets the matching mode for the automatic complete feature.
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode" /> values that indicates how to match
              the string in the automatic complete feature.
            </value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              value is not defined.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete.HighlightStyle">
      <summary>
              Gets or sets the style for highlighted matched text.
            </summary>
      <value>
              The highlight style.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyle">
      <summary>
              Defines the highlight style for automatic complete  matched strings.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyle.BackColor">
      <summary>
              Gets or sets the background color of the highlighted string.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color of the highlighted string.
              Default value is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>, which means do not paint the background
              of the highlighted string.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyle.ForeColor">
      <summary>
              Gets or sets the foreground color of the highlighted string.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground color of the highlighted string.
              The default value is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>, which means use the same forecolor
              as the candidate list items to render the highlighted string.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyle.Font">
      <summary>
              Gets or sets the font of the highlighted string.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the font of the highlighted string.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode">
      <summary>
              Indicates the string matching mode of automatic complete.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.MatchStartWith">
      <summary>
              Compares candidate strings that start with matching, ignores case.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.MatchAll">
      <summary>
              Finds all matched strings in the candidate string, ignores case.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.AmbiguousMatchStartWith">
      <summary>
              Compares candidate strings that start with matching, uses ambiguous character comparison.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.AmbiguousMatchAll">
      <summary>
              Finds all matched strings in the candidate string, uses ambiguous character comparison.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.ExactMatchStartWith">
      <summary>
              Compares candidate strings that start with matching, case-sensitive.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.ExactMatchAll">
      <summary>
              Finds all matched strings in the candidate string, case-sensitive.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter">
      <summary>
            Indicates related setting of filter.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.Enabled">
      <summary>
            Gets or sets a value indicating whether auto filter function is enabled or not.
            </summary>
      <value>
        <see langword="true" /> if auto filter function is enabled; otherwise, <see langword="false" />.
            	The default value is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MinimumPrefixLength">
      <summary>
            Gets or sets the minimum length of the filter prefix.
            </summary>
      <value>
            The length of the min prefix.
            The default value is 1.
            </value>
      <remarks>
            Only when the filter prefix length is greater than or equals the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MinimumPrefixLength" />, the filter can be preformed automatically.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> is less than or equals to 0.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MaxFilteredItems">
      <summary>
            Gets or sets the maximum items matched with filter condition will be shown in dropdown window.
            </summary>
      <value>
            The maximum shown filtered items.
            The default value is 0.
            </value>
      <remarks>
            Value equals to 0 means all matched items will be shown.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> is less than zero.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MatchingMode">
      <summary>
            Gets or sets the filter prefix how to match with <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MatchingSource" />.
            </summary>
      <value>
            The matching mode for filter prefix. The default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.MatchStartWith" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MatchingSource">
      <summary>
            Gets or sets what the filter prefix match with.
            </summary>
      <value>
            The source used for filter prefix to match with. 
            The default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FilterMatchingSource.AllSubItems" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.Interval">
      <summary>
            Gets or sets the interval at which to excute filter.
            </summary>
      <value>
            The time, in milliseconds, to excute filter. The default is 500 milliseconds.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The interval is less than or equals to zero.
            </exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FilterMatchingSource">
      <summary>
            Indicates the source to match when doing filter.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FilterMatchingSource.AllSubItems">
      <summary>
            The prefix of filter will match with all <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> in <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FilterMatchingSource.ControlText">
      <summary>
            The prefix of filter will match with <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" />.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection">
      <summary>
              Represents a base collection of key-and-value pairs.
            </summary>
      <remarks>
              The <b>BaseKeyCollection</b> class implements the <see cref="T:System.Collections.IEnumerable" /> and <see cref="T:System.Collections.ICollection" /> interfaces.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Dispose">
      <summary>
              Releases the resources used by the <b>BaseKeyCollection</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.AddRange(System.String[],System.Object[])">
      <summary>
              Adds the elements of key-and-value pairs in arrays to the end of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />.
            </summary>
      <param name="keys">The <see cref="T:System.String" /> array whose elements are used as the key of key-and-value pairs.</param>
      <param name="values">The <see cref="T:System.Object" /> array whose elements are used as the value of key-and-value pairs.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Add(System.String,System.Object)">
      <summary>
              Adds an element with the specified key and value to the end of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />.
            </summary>
      <param name="key">The key of the element to add. </param>
      <param name="value">The value of the element to add. </param>
      <returns>The index of the added item in <b>BaseKeyCollection</b>.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Insert(System.Int32,System.String,System.Object)">
      <summary>
              Inserts an element with the specified key and value at the specified index of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />.
            </summary>
      <param name="index">The zero-based index at which the element should be inserted.</param>
      <param name="key">The key of the element to insert.</param>
      <param name="value">The value of the element to insert.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.IndexOf(System.String)">
      <summary>
              Returns the zero-based index of the element with specified key in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />.
            </summary>
      <param name="key">The key of the element to locate in the <b>BaseKeyCollection</b>.</param>
      <returns>The zero-based index of the element with specified key within the <b>BaseKeyCollection</b>, if found; otherwise, -1.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.IndexOf(System.Object)">
      <summary>
              Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index within the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />.
            </summary>
      <param name="value">The <b>Object</b> to locate in the <b>BaseKeyCollection</b>.</param>
      <returns>The zero-based index of the element within the <b>BaseKeyCollection</b>, if found; otherwise, -1.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Contains(System.Object)">
      <summary>
              Determines whether an element is contained in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />.
            </summary>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <b>BaseKeyCollection</b>.</param>
      <returns>
        <see langword="true" /> if item is found in the <b>BaseKeyCollection</b>; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.ContainsKey(System.String)">
      <summary>
              Determines whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> contains a specific key.
            </summary>
      <param name="key">The key to locate in the <b>BaseKeyCollection</b>.</param>
      <returns>
        <see langword="true" /> if the <b>BaseKeyCollection</b> contains an element with the specified key; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.ContainsValue(System.Object)">
      <summary>
              Determines whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> contains a specific value.
            </summary>
      <param name="value">The value to locate in the <b>BaseKeyCollection</b>.</param>
      <returns>
        <see langword="true" /> if the <b>BaseKeyCollection</b> contains an element with the specified value; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Clear">
      <summary>
              Removes all elements from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.GetKey(System.Int32)">
      <summary>
              Gets the key of the element with the specified index in the collection.
            </summary>
      <param name="index">The zero-based index of the element.</param>
      <returns>The key of the element if the index is a valid one; otherwise, <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Remove(System.String)">
      <summary>
              Removes the element with the specified key from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />.
            </summary>
      <param name="key">The key of the element to remove.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.RemoveAt(System.Int32)">
      <summary>
              Removes the element at the specified index of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />.
            </summary>
      <param name="index">The zero-based index of the element to remove. </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Item(System.String)">
      <summary>
              Gets or sets the element with the specified key.
            </summary>
      <value>
              The <see cref="T:System.String" /> value that indicates the key of the specified element.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Item(System.Int32)">
      <summary>
              Gets or sets the element at the specified index.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value that indicates the index of the specified element.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.ItemList">
      <summary>
              Gets an <see cref="T:System.Collections.ICollection" /> that contains the list of elements in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> instance.
            </summary>
      <value>The <see cref="T:System.Collections.ICollection" /> value that indicates the item list.</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Count">
      <summary>
              Gets the number of key-and-value pairs contained in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />.
            </summary>
      <value>
              The number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Keys">
      <summary>
            Gets a <see cref="T:System.String" /> array that contains the keys in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel">
      <summary>
              This class represents the object that describes the 2D border for a rectangle.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Empty">
      <summary>
              Represents a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> object that has a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" /> value set to <see cref="F:System.Drawing.Color.Empty" />, and 
              <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Width" />, <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Lightness" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Darkness" /> values set to 0.
            </summary>
      <value>
              A <b>Bevel</b> value that indicates the empty value.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Default">
      <summary>
              Represents a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> object that has a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" /> value set to <see cref="P:System.Drawing.SystemColors.Control" />,
              a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Width" /> value set to zero, a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Lightness" /> value set to 25, and a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Darkness" /> value set to -25.
            </summary>
      <value>
              A <b>Bevel</b> value that indicates the default value.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color">
      <summary>
              Gets or sets the background color of the bevel.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" /> that represents the bevel background.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Control" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Lightness">
      <summary>
              Gets or sets the percentage used for calculating the color
              used for the light area of the bevel.
            </summary>
      <value>
              An integer value (between -100 through 100) that indicates
              the lighting percentage. <br /> The default is 25.
            </value>
      <remarks>
        <para>
                This property uses the color (<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" /> property)
                of the object to calculate the light color for the bevel in percentages.
              </para>
        <para>
                If set to 0, the same color as the color object is used. When a positive value is set, a brighter color
                is used, and when a negative value is set, a color darker than the background color 
                is used. 
              </para>
        <para>
                This property can be used with the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Darkness" /> 
                property to make detailed adjustments to the brightness of the bevel color.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Darkness">
      <summary>
              Gets or sets the percentage used for calculating the color
              used for the shaded area of the bevel.
            </summary>
      <value>
              An integer value (between -100 through 100) that indicates
              the shading percentage.<br /> The default is -25.
            </value>
      <remarks>
        <para>
                This property uses the color (<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" /> property)
                of the object to calculate the shaded color for the bevel in percentages.	
              </para>
        <para>
                If set to 0, the same color as the color object is used. When a positive value is set, 
                a brighter color is used, and when a negative value is set, a color darker than the color
                is used. 
              </para>
        <para>
                This property can be used with the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Lightness" /> 
                property to make detailed adjustments to the brightness of the bevel color.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Width">
      <summary>
              Gets or sets the width of the bevel.
            </summary>
      <value>
              An integer value that indicates the width of the bevel. 
              <br /> The default is 0.
            </value>
      <remarks>
              When a negative value is set to the <b>Width</b> property, the bevel 
              effect appears <b>Inset</b>, and when a positive value is set, the effect
              appears <b>Raised</b>.  A 2D effect can be achieved by setting the <b>Width</b>
              property to 0 (zero).
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.#ctor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)">
      <summary>
              Initializes a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> instance using the 
              specified attributes.
            </summary>
      <param name="color">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" /> that represents the bevel background.
            </param>
      <param name="width">
              An <see cref="T:System.Int32" /> value that indicates the width of the bevel.
            </param>
      <param name="lightness">
              An <see cref="T:System.Int32" /> value (between -100 through 100) that indicates
              the lighting percentage.
            </param>
      <param name="darkness">
              An <see cref="T:System.Int32" /> value (between -100 through 100) that indicates
              the shading percentage.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
              Draws a bevel using the specified <see cref="T:System.Drawing.Rectangle" />
              structure on the specified <see cref="T:System.Drawing.Graphics" /> surface.
            </summary>
      <param name="graphics">
              A <see cref="T:System.Drawing.Graphics" /> object.
            </param>
      <param name="rectangle">
              A <see cref="T:System.Drawing.Rectangle" /> structure that represents the dimensions 
              of the bevel.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Equals(System.Object)">
      <summary>
              Determines whether two <see cref="T:System.Object" /> instances are equal.
            </summary>
      <param name="value">The <see cref="T:System.Object" /> to compare with the current <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" />.</param>
      <returns>
        <see langword="true" /> if value is an instance of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> and equals the value of 
              this instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.GetHashCode">
      <summary>
              Serves as a hash function for a particular type, suitable for use in 
              hashing algorithms and data structures like a hash table.
            </summary>
      <returns>
              A hash code for the current object.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.op_Equality(GrapeCity.Win.Spread.InputMan.CellType.Bevel,GrapeCity.Win.Spread.InputMan.CellType.Bevel)">
      <summary>
              Determines whether two specified values of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> are equal.
            </summary>
      <param name="value1">The first <b>Bevel</b> value.</param>
      <param name="value2">The second <b>Bevel</b> value.</param>
      <returns>
        <see langword="true" /> if b1 and b2 represent the same bevel settings; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.op_Inequality(GrapeCity.Win.Spread.InputMan.CellType.Bevel,GrapeCity.Win.Spread.InputMan.CellType.Bevel)">
      <summary>
              Determines whether two specified values of Bevel are not equal.
            </summary>
      <param name="value1">The first <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> value.</param>
      <param name="value2">The second <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> value.</param>
      <returns>
        <see langword="true" /> if b1 and b2 do not represent the same value; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection">
      <summary>
              Represents the button text collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.#ctor">
      <summary>
              The constructor initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.#ctor(System.String[],System.String[])">
      <summary>
              The constructor initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" /> class.
            </summary>
      <param name="keys">
              A <see cref="T:System.String" /> array value indicates the key of the element.
            </param>
      <param name="values">
              A <see cref="T:System.String" /> array value indicates the value of the element.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.CopyTo(System.String[])">
      <summary>
              Copies the items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" /> to a compatible one-dimensional array of type <see cref="T:System.String" />, starting from the first index of the target array.
            </summary>
      <param name="array">A <see cref="T:System.String" /> array serving as the destination for the copy action. </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.CopyTo(System.String[],System.Int32)">
      <summary>
              Copies the items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" /> to a compatible one-dimensional array of type <see cref="T:System.String" />, starting at the specified zero-based index of the target array.
            </summary>
      <param name="array">A <see cref="T:System.String" /> array serving as the destination for the copy action. </param>
      <param name="arrayIndex">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Item(System.String)">
      <summary>
              Gets the value according to the special key.
            </summary>
      <value>
              The <see cref="T:System.String" /> value indicatest the key of the specified element.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Item(System.Int32)">
      <summary>
              Gets the value according to the special index.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicatest the index of the specified element.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Add(System.String,System.String)">
      <summary>
              Add an item to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />.
            </summary>
      <param name="key">The key value of the button.</param>
      <param name="value">The button text string.</param>
      <returns>The item index.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.AddRange(System.String[],System.String[])">
      <summary>
              Add items to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />.
            </summary>
      <param name="keys">The key values of buttons.</param>
      <param name="values">The button text strings.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Insert(System.Int32,System.String,System.String)">
      <summary>
              Inserts an item to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />.
            </summary>
      <param name="index">The index value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />.</param>
      <param name="key">The key value of the button.</param>
      <param name="value">The button text string.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Remove(System.String)">
      <summary>
              Remove the item of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />.
            </summary>
      <param name="key">the key value of the button.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.RemoveAt(System.Int32)">
      <summary>
              Remove the item according to the special index.
            </summary>
      <param name="index">The special index in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Clear">
      <summary>
              Clear all items in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.IsKeyValid(System.String)">
      <summary>
              Checks whether the key is valid.
            </summary>
      <param name="key">The key object of the button.</param>
      <returns>
        <see langword="true" />, if it is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection">
      <summary>
              Represents the collection class to manage "ButtonMapping" settings.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.#ctor">
      <summary>
              The constructor initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.#ctor(System.String[],System.String[])">
      <summary>
              The constructor initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" /> class using the specified data.
            </summary>
      <param name="keys">
              A <see cref="T:System.String" /> array value indicates the key of items.
            </param>
      <param name="buttonKeys">
              A <see cref="T:System.String" /> array value indicates the key of buttons.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.CopyTo(System.String[])">
      <summary>
              Copies the items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" /> to a compatible one-dimensional array of type <see cref="T:System.String" />, starting from the first index of the target array.
            </summary>
      <param name="array">
              A <see cref="T:System.String" /> array serving as the destination for the copy action. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.CopyTo(System.String[],System.Int32)">
      <summary>
              Copies the items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" /> to a compatible one-dimensional array of type <see cref="T:System.String" />, starting at the specified zero-based index of the target array.
            </summary>
      <param name="array">
              A <see cref="T:System.String" /> array serving as the destination for the copy action. 
            </param>
      <param name="arrayIndex">
              The zero-based index at which to start placing the copied collection. 
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Item(System.Windows.Forms.Keys)">
      <summary>
              Gets the key according to special key.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Keys" /> instance indicates the special key.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Item(System.Int32)">
      <summary>
              Gets the key according to the special index.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> instance indicates the special index.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Add(System.Windows.Forms.Keys,System.String)">
      <summary>
              Adds an item to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />.
            </summary>
      <param name="key">
              The <see cref="T:System.Windows.Forms.Keys" /> value indicates the special key.
            </param>
      <param name="buttonKey">
              The <see cref="T:System.String" /> value indicates thekey of the button.
            </param>
      <returns>
              The <see cref="T:System.Int32" /> value indicates the index of the item.
            </returns>
      <exception cref="T:System.ArgumentNullException">
              The <i>buttonKey</i> can't be <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </exception>
      <exception cref="T:System.ArgumentException">
              The <i>buttonKey</i> isn't a correct button key in the calculator, you can get all button keys from <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ButtonKeys" /> property.
            </exception>
      <exception cref="T:System.ArgumentException">
              There is a same <i>key</i> had been added before, please change another one.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.AddRange(System.Windows.Forms.Keys[],System.String[])">
      <summary>
              Adds some items the the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />.
            </summary>
      <param name="keys">
              The <see cref="T:System.Windows.Forms.Keys" /> array value indicates some special buttons.
            </param>
      <param name="buttonKeys">
              The <see cref="T:System.String" /> array value indicates the button keys.
            </param>
      <exception cref="T:System.ArgumentException">
              The length of <i>keys</i> and <i>buttonKeys</i> array must be the same.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Insert(System.Int32,System.Windows.Forms.Keys,System.String)">
      <summary>
              Inserts a item to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />.
            </summary>
      <param name="index">
              The index where the key is inserted.
            </param>
      <param name="key">
              The <see cref="T:System.Windows.Forms.Keys" /> value indicates the key of  a button.
            </param>
      <param name="buttonKey">
              The <see cref="T:System.String" /> value indicates the name of the button.
            </param>
      <exception cref="T:System.ArgumentNullException">
              The <i>buttonKey</i> can't be <see langword="null" /> or <b>string.Empty</b>.
            </exception>
      <exception cref="T:System.ArgumentException">
              The <i>buttonKey</i> isn't a correct Calculator Button Key, you can get all keys from <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ButtonKeys" /> property.
            </exception>
      <exception cref="T:System.ArgumentException">
              There is a same <i>key</i> had been added before, please change another one.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Remove(System.Windows.Forms.Keys)">
      <summary>
              Removes the key from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />.
            </summary>
      <param name="key">
              The key value to be removed.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Keys">
      <summary>
              Gets the keys object.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Keys" /> array value.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Clone">
      <summary>
              Creates a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" /> that is a copy of the current instance
            </summary>
      <returns>
              A new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" /> that is a copy of this instance.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle">
      <summary>
              Represents the style of the button that used in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCalculator" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.#ctor">
      <summary>
              Constrcutor of the CalculatorButtonStyle.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.#ctor(System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.TextEffect)">
      <summary>
              Constrcutor of the CalculatorButtonStyle.
            </summary>
      <param name="foreColor">
              The initialization of ForeColor.
            </param>
      <param name="backColor">
              The initialization of BackColor.
            </param>
      <param name="textEffect">
              The initialization of TextEffect.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Dispose">
      <summary>
              Releases the resources used by the CalculatorButtonStyle class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Normal">
      <summary>
              Gets the default <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> used for normal buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> value indicates the normal style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Memory">
      <summary>
              Gets the default <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> used for memory buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> value indicates the memory style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Math">
      <summary>
              Gets the default <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> used for math buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> value indicates the math style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Output">
      <summary>
              Gets the default <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> used for output window.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> value indicates the output style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.BackColor">
      <summary>
              Gets or sets the background color.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Color" /> used to draw the background.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.ForeColor">
      <summary>
              Gets or sets the foreground color.
            </summary>
      <value>
             The <see cref="T:System.Drawing.Color" /> used to draw the text.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.TextEffect">
      <summary>
              Gets or sets the text drawing effect.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.TextEffect" /> values.
            </value>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.PropertyChanged">
      <summary>
              Occurs when Properrty of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> object is changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.OnPropertyChanged(System.String)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.PropertyChanged" /> event.
            </summary>
      <param name="propName">
              The name of the property which value changed.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Equals(System.Object)">
      <summary>
              Tests whether the given object is equal to this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />.
            </summary>
      <param name="obj">
              The object to compare to this object. 
            </param>
      <returns>
        <see langword="true" /> if obj is an instance of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> and is equal to this object; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.GetHashCode">
      <summary>
              Returns the generated hash code for this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />.
            </summary>
      <returns>
              Returns the hash code for this instance.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Clone">
      <summary>
              The <b>Clone</b> method creates a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> object and initializes it with the contents of this <b>CalculatorButtonStyle</b> object.
            </summary>
      <returns>
              A shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> object.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ClickDateEventHandler">
      <summary>
              Represents the method that handles the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ClickDate" /> event of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ClickDateEventArgs">
      <summary>
              Provides the data for the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ClickDate" /> event.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ClickDateEventArgs.Date">
      <summary>
              Gets the clicked date.
            </summary>
      <value>
              A <see cref="T:System.Nullable`1" /> value that indicates the clicked date.
            </value>
      <remarks>
              This property retrieves the date clicked by the mouse. If the mouse does not click a date, the value is <see langword="null" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ClickDateEventArgs.#ctor(System.Nullable{System.DateTime})">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ClickDateEventArgs" /> class.
            </summary>
      <param name="date">
              A <see cref="T:System.Nullable`1" /> value that indicates the clicked date.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags">
      <summary>
              Specifies which part of the vertical line to draw.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags.HeaderOnly">
      <summary>
              Draws only the header area.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags.DayOnly">
      <summary>
              Draws only the days region area.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags.Both">
      <summary>
              Draws the entire line.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Grid">
      <summary>
             Represents grid settings in the <b>DropdownCalendar</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.#ctor">
      <summary>
              Initializes a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Grid" /> instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags)">
      <summary>
              Initializes a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Grid" /> instance using the
              specified attribute settings.
            </summary>
      <param name="left">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that represents the left border.
            </param>
      <param name="right">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that represents the right border.
            </param>
      <param name="top">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that represents the top border.
            </param>
      <param name="bottom">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that represents the bottom border.
            </param>
      <param name="separator">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that represents the separator.
            </param>
      <param name="horizontal">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that represents the horizontal lines.
            </param>
      <param name="vertical">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that represents the vertical lines.
            </param>
      <param name="verticalFlag">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.VerticalFlag" /> enumeration that represents which
              portions to draw the vertical lines.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Left">
      <summary>
              Gets or sets the left <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that indicates the left line of the grid.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Right">
      <summary>
              Gets or sets the right <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that indicates the right line of the grid.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Top">
      <summary>
              Gets or sets the top <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that indicates the top line of the grid.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Bottom">
      <summary>
              Gets or sets the bottom <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that indicates the bottom line of the grid.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Horizontal">
      <summary>
              Gets or sets the horizontal <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that indicates all horizontal lines of the grid.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Vertical">
      <summary>
              Gets or sets the vertical <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that indicates all vertical lines of the grid.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Separator">
      <summary>
              Gets or sets the header separator <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> structure that indicates the header separator.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.VerticalFlag">
      <summary>
              Gets or sets where to draw the vertical lines.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags" /> enumeration that specifies
              where to draw the line.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Raises the OnPropertyChanged event.
            </summary>
      <param name="e">
              The name of the property that was changed.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.OnPropertyChanged(System.String)">
      <summary>
            Raises the OnPropertyChanged event.
            </summary>
      <param name="propName"> The name of the property that was changed.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.ContentCalculate">
      <summary>
              Calculates the necessary information used, such as the size
              of each cell in the content region etc.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.IndexCalculate">
      <summary>
              Calculates the necessary information used, such as the size of each cells of week index region etc.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Grid.PropertyChanged">
      <summary>
              Occurs when properties changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.Clone">
      <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Style">
      <summary>
              Represents a <b>Style</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.#ctor(System.Drawing.Color,System.Drawing.Color)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> class with the specified initialization properties.
            </summary>
      <param name="backColor">
              The <see cref="T:System.Drawing.Color" /> of the background.
            </param>
      <param name="foreColor">
              The <see cref="T:System.Drawing.Color" /> of the foreground.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.#ctor(System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.Bevel,System.Drawing.Color,System.Windows.Forms.BorderStyle,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.TextEffect,System.Drawing.Color,System.Drawing.ContentAlignment)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> class.
            </summary>
      <param name="backColor">
              The <see cref="T:System.Drawing.Color" /> of the background.
            </param>
      <param name="bevel">
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Bevel" /> value that indicates the bevel effect.
            </param>
      <param name="borderColor">
              The <see cref="T:System.Drawing.Color" /> of the border.
            </param>
      <param name="borderStyle">
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.BorderStyle" /> value that indicates the border style.
            </param>
      <param name="font">
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Font" /> value that indicates the font.
            </param>
      <param name="textEffect">
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.TextEffect" /> value that indicates the text effect.
            </param>
      <param name="foreColor">
              The <see cref="T:System.Drawing.Color" /> value of the foreground.
            </param>
      <param name="contentAlignment">
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.ContentAlignment" /> value that indicates the content alignment.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.ContentAlignment">
      <summary>
              Gets or sets the content alignment of the text .
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.ContentAlignment" /> values.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.BackColor">
      <summary>
              Gets or sets the color of the background.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Color" /> value that indicates the color of the background.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Bevel">
      <summary>
              Gets or sets the bevel effect.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Bevel" /> value that indicates the bevel effect.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.BorderColor">
      <summary>
              Gets or sets the color of the border.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Color" /> of the border.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.BorderStyle">
      <summary>
              Gets or sets the border style.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.BorderStyle" /> value that indicates the border style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Font">
      <summary>
              Gets or sets the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Font" /> value that indicates the font.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.TextEffect">
      <summary>
              Gets or sets the text effect.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.TextEffect" /> value that indicates the text effect.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.ForeColor">
      <summary>
              Gets or sets the color of the foreground.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Color" /> value of the foreground.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.Clone">
      <summary>
              Creates an exact copy of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> object.
            </summary>
      <returns>
              Returns a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> object this method creates.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.Equals(System.Object)">
      <summary>
              Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
      <param name="obj">
              The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.
            </param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.
            </returns>
      <exception cref="T:System.NullReferenceException">
              The <paramref name="obj" /> parameter is <see langword="null" />.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.GetHashCode">
      <summary>
              Serves as a hash function for a particular type.
            </summary>
      <returns>
              A hash code for the current <see cref="T:System.Object" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection">
      <summary>
              Represents a collection of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> objects.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.#ctor(System.String[],GrapeCity.Win.Spread.InputMan.CellType.Style[])">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> class.
            </summary>
      <param name="keys">A Key array to be added to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.</param>
      <param name="styles">A Style array to be added to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.Style[])">
      <summary>
              Copies the items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> to a compatible one-dimensional array of type <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />, starting from the first index of the target array.
            </summary>
      <param name="array">
              An array of type <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> serving as the destination for the copy action.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.Style[],System.Int32)">
      <summary>
              Copies the items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> to a compatible one-dimensional array of type <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />, starting at the specified zero-based index of the target array.
            </summary>
      <param name="array">
              An array of type <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> serving as the destination for the copy action.
            </param>
      <param name="arrayIndex">
              The zero-based index at which to start placing the copied collection.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Item(System.Int32)">
      <summary>
              Gets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> at the specified index.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the specified index.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Item(System.String)">
      <summary>
              Gets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> with the specified key.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the specified key.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Add(System.String)">
      <summary>
              Adds a new Style with the specified key into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.
            </summary>
      <param name="key">
              The key of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />.
            </param>
      <returns>
              The index of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> in <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Add(System.String,GrapeCity.Win.Spread.InputMan.CellType.Style)">
      <summary>
              Adds an item with the specified key and value into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.
            </summary>
      <param name="key">The key of this item.</param>
      <param name="style">The value of this item (a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />).</param>
      <returns>The index of this item in <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.AddRange(System.String[],GrapeCity.Win.Spread.InputMan.CellType.Style[])">
      <summary>
              Adds the specified key array and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> array into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.
            </summary>
      <param name="keys">The key array.</param>
      <param name="styles">The style array.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Insert(System.Int32,System.String)">
      <summary>
              Inserts a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> with the specified key into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.
            </summary>
      <param name="index">The index of this inserted Style.</param>
      <param name="key">The key of this inserted Style.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Insert(System.Int32,System.String,GrapeCity.Win.Spread.InputMan.CellType.Style)">
      <summary>
              Inserts an item with the specified key and value into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.
            </summary>
      <param name="index">The index of this inserted Style.</param>
      <param name="key">The key of this inserted Style.</param>
      <param name="style">The inserted Style object.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Clear">
      <summary>
              Removes all elements from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Remove(System.String)">
      <summary>
              Removes the element with the specified key from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.
            </summary>
      <param name="key">The specified key string.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.RemoveAt(System.Int32)">
      <summary>
              Removes the element with the specified index from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />.
            </summary>
      <param name="index">The specified index integer.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
              Called when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> object has changed.
            </summary>
      <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection">
      <summary>
            Represents a collection of SubStyle objects.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.#ctor">
      <summary>
            Initializes a new instance of the <b>SubStyleCollection</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.#ctor(System.String[],GrapeCity.Win.Spread.InputMan.CellType.SubStyle[])">
      <summary>
            Initializes a new instance of the <b>SubStyleCollection</b> class.
            </summary>
      <param name="keys">A Key array to be added to <b>SubStyleCollection</b>.</param>
      <param name="subStyles">A <b>SubStyle</b> array to be added to <b>SubStyleCollection</b>.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.SubStyle[])">
      <summary>
            Copies the items of the <b>SubStyleCollection</b> to a compatible one-dimensional array of type <b>SubStyle</b>, starting from the first index of the target array.
            </summary>
      <param name="array">An array of type <b>SubStyle</b> serving as the destination for the copy action. </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.SubStyle[],System.Int32)">
      <summary>
            Copies the items of the <b>SubStyleCollection</b> to a compatible one-dimensional array of type <b>SubStyle</b>, starting at the specified zero-based index of the target array.
            </summary>
      <param name="array">An array of type <b>SubStyle</b> serving as the destination for the copy action. </param>
      <param name="arrayIndex">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Item(System.Int32)">
      <summary>
            Gets the <b>SubStyle</b> at the specified index.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Item(System.String)">
      <summary>
            Gets the <b>SubStyle</b> with the specified key.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Add(System.String)">
      <summary>
            Adds a new SubStyle with the specified key into the <b>SubStyleCollection</b>.
            </summary>
      <param name="key">The key of this <b>SubStyle</b> object.</param>
      <returns>The index of this item in <b>SubStyleCollection</b>.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Add(System.String,GrapeCity.Win.Spread.InputMan.CellType.SubStyle)">
      <summary>
            Adds an item with the specified key and value into the <b>SubStyleCollection</b>.
            </summary>
      <param name="key">The key of this item.</param>
      <param name="subStyle">The value of this item (a <b>SubStyle</b>).</param>
      <returns>The index of this item in <b>SubStyleCollection</b>.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.AddRange(System.String[],GrapeCity.Win.Spread.InputMan.CellType.SubStyle[])">
      <summary>
            Adds the specified key array and <b>SubStyle</b> array into the <b>SubStyleCollection</b>.
            </summary>
      <param name="keys">The key array.</param>
      <param name="subStyles">The <b>SubStyle</b> array.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Insert(System.Int32,System.String)">
      <summary>
            Inserts a new <b>SubStyle</b> with the specified key into the <b>SubStyleCollection</b>.
            </summary>
      <param name="index">The index of this inserted <b>SubStyle</b>.</param>
      <param name="key">The key of this inserted <b>SubStyle</b>.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Insert(System.Int32,System.String,GrapeCity.Win.Spread.InputMan.CellType.SubStyle)">
      <summary>
            Inserts an item with the specified key and value into the <b>SubStyleCollection</b>.
            </summary>
      <param name="index">The index of this inserted <b>SubStyle</b>.</param>
      <param name="key">The key of this inserted <b>SubStyle</b>.</param>
      <param name="subStyle">The inserted <b>SubStyle</b> object.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Clear">
      <summary>
            Removes all elements from the <b>SubStyleCollection</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Remove(System.String)">
      <summary>
            Removes the element with the specified key from the <b>SubStyleCollection</b>.
            </summary>
      <param name="key">The specified key string.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the element with the specified index from the <b>SubStyleCollection</b>.
            </summary>
      <param name="index">The specified index integer.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
            Raises CollectionChanged event.
            </summary>
      <param name="e">A <b>CollectionChangedEventArgs</b> that contains the event data.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle">
      <summary>
              Represents the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.Normal">
      <summary>
              A complete char box is displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.BottomHalf">
      <summary>
              Only bottom half part of char box is displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.BottomQuarter">
      <summary>
              Only bottom quater part of char box is displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.TopHalf">
      <summary>
              Only top half part of char box is displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.TopQuarter">
      <summary>
              Only top quater part of char box is displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.LeftRightSide">
      <summary>
              Only left and right side of box is displayed.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder">
      <summary>
              Represents the border of the char box.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Line)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" /> class.
            </summary>
      <param name="all">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates all border lines.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.#ctor(System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" /> class.
            </summary>
      <param name="lineColor">
              The <see cref="T:System.Drawing.Color" /> value indicates the color of the line.
            </param>
      <param name="lineStyle">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> value indicates the line style.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" /> class.
            </summary>
      <param name="left">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the left border line.
            </param>
      <param name="top">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the top border line.
            </param>
      <param name="right">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the right border line.
            </param>
      <param name="bottom">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the bottom border line.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.Left">
      <summary>
              Gets or sets the left border line.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the left border line.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.Top">
      <summary>
              Gets or sets the top border line.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the top border line.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.Bottom">
      <summary>
              Gets or sets the bottom border line.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the bottom border line.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.Right">
      <summary>
              Gets or sets the right border line.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the right border line.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.SetAllLines(System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
             Sets the <see cref="T:System.Drawing.Color" /> and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> settings to all lines.
            </summary>
      <param name="lineColor">
              The <see cref="T:System.Drawing.Color" /> value indicates the color of the line.
            </param>
      <param name="lineStyle">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> value indicates the style of the line.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.SetAllLines(System.Drawing.Color)">
      <summary>
              Sets the <see cref="T:System.Drawing.Color" /> settings to all lines.
            </summary>
      <param name="lineColor">
              The <see cref="T:System.Drawing.Color" /> value indicates the color of the line.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.SetAllLines(GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
              Sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> settings to all lines.
            </summary>
      <param name="lineStyle">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> value indicates the style of the line.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.Equals(System.Object)">
      <summary>
              Determines whether two <see cref="T:System.Object" /> instances equals or not.
            </summary>
      <param name="obj">
              The <see cref="T:System.Object" /> to compare with the current <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />.
            </param>
      <returns>
              The method returns <see langword="true" /> if <b>obj</b> is a <b>CharBoxBorder</b>
              object and it's <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line">Left</see>, and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line">Right</see>, 
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line">Top</see>,<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line">Border</see> properties are 
              equal to the corresponding properties of this <b>CharBoxBorder</b> 
              structure; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.GetHashCode">
      <summary>
              Serves as a hash function for a particular type, suitable for use in 
              hashing algorithms and data structures like a hash table.
            </summary>
      <returns>
              A hash code for the current <see cref="T:System.Object" />.
            </returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.PropertyChanged">
      <summary>
              Occurs when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" /> instance is changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.PropertyChanged" /> event.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox">
      <summary>
              Represents the CharBox settings.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> class.
            </summary>
      <param name="autoSize">
              A <see langword="bool" /> value if set to <see langword="true" /> indicates the 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(System.Boolean,System.Drawing.Size)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> class.
            </summary>
      <param name="autoSize">
              A <see langword="bool" /> value if set to <see langword="true" /> indicates the 
            </param>
      <param name="size">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Size" /> value indicates the actually size if autosize is false.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> class.
            </summary>
      <param name="style">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> enumeration indicates the style of the char box.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> class.
            </summary>
      <param name="border">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" /> object indicates the border setting of the char box.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> class.
            </summary>
      <param name="style">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> enumeration indicates the style of the char box.
            </param>
      <param name="border">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" /> object indicates the border setting of the char box.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> class.
            </summary>
      <param name="style">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> enumeration indicates the style of the char box.
            </param>
      <param name="border">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" /> object indicates the border setting of the char box.
            </param>
      <param name="backColor">
              A <see cref="T:System.Drawing.Color" /> value indicates Color of the background.
            </param>
      <param name="foreColor">
              A <see cref="T:System.Drawing.Color" /> value indicates Color of the foreground.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(System.Boolean,System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,System.Windows.Forms.Padding,System.Windows.Forms.Padding,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder,System.Drawing.Font,System.Drawing.ContentAlignment)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> class.
            </summary>
      <param name="autoSize">
              A <see langword="bool" /> value if set to <see langword="true" /> indicates the char box is auto size.
            </param>
      <param name="size">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Size" /> value indicates the actually size if autosize is false.
            <param name="style">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> enumeration indicates the style of the char box.
            </param><param name="backColor">
              A <see cref="T:System.Drawing.Color" /> value indicates Color of the background.
            </param><param name="foreColor">
              A <see cref="T:System.Drawing.Color" /> value indicates Color of the foreground.
            </param></param>
      <param name="margin">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Padding" /> value indicates the margin of the char box.
            </param>
      <param name="padding">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Padding" /> value indicates the padding of the char box.
            </param>
      <param name="border">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" /> object indicates the border setting of the char box.
            </param>
      <param name="font">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Font" /> object indicates font of the char box to render the char.
            </param>
      <param name="contentAlignment">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ContentAlignment" /> enumeration indicates the alignment of the content of the char box.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.AutoSize">
      <summary>
              Gets or sets a value indicating whether the height of the control automatically 
              adjusts when the font assigned to the control is changed.
            </summary>
      <value>
              A <see langword="bool" /> value indicating whether the height of the control automatically 
              adjusts when the font assigned to the control is changed.
              <br /> The default is <see langword="true" />.
            </value>
      <remarks>
              When this property is set to true, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> adjusts its width to display its entire contents. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.BackColor">
      <summary>
              Gets or sets the back color of the char box.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> indicates the back color.
              <br /> The default is <see cref="P:System.Drawing.Color.Transparent" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of your forms.
              <para />
              To change the color of the text within the control, use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ForeColor" /> property. When setting the <b>BackColor</b> property of your control, ensure that the color you choose does not cause the text of the control to disappear. 
              For example, if the <b>BackColor</b> and <b>ForeColor</b> properties are both set to <b>Color.Black</b>, the text within your control will not be visible.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Style">
      <summary>
              Gets or sets the style of the char box.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> indicates the char box style.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.Normal" />.
            </value>
      <remarks>
              This property determines how to display the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Border" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Margin">
      <summary>
              Gets or sets the margins around the border of the char box.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Padding" /> indicates the margins.
              <br /> The default is "0,0,0,0".
            </value>
      <remarks>
              This property determines the distance between one char box and it's neighbors.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Padding">
      <summary>
              Gets or sets the blank size between the border and the content within the char box.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Padding" /> indicates the paddings.
              <br /> The default is "1,1,1,1".
            </value>
      <remarks>
              This property determines the distance between the input area of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> and the border of it.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Border">
      <summary>
              Gets or sets border of the char box.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" /> indicates the border of the char box.
            </value>
      <remarks>
              This property retrieves the border style of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ContentAlignment">
      <summary>
              Gets or sets the content alignment of the char box.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ContentAlignment" /> value indicates the content alignment of the char box.
              <br /> The default is <see cref="F:System.Drawing.ContentAlignment.MiddleCenter" />.
            </value>
      <remarks>
              This property determines the text alignment of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ForeColor">
      <summary>
              Gets or sets the fore color of the char box.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> indicates the fore color.
            </value>
      <remarks>
              You can use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.BackColor" /> property to change the background color of the control to blend into the color scheme of your forms.
              <para />
              To change the color of the text within the control, use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ForeColor" /> property. When setting the <b>BackColor</b> property of your control, ensure that the color you choose does not cause the text of the control to disappear. 
              For example, if the <b>BackColor</b> and <b>ForeColor</b> properties are both set to <b>Color.Black</b>, the text within your control will not be visible.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Size">
      <summary>
              Gets or sets the size of the char box.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Size" /> indicates the size of the char box.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Font">
      <summary>
              Gets or sets font of the char box.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Font" /> indicates the text font of the char box.
            </value>
      <remarks>
        <para>
              The <b>Font</b> property is an ambient property. An ambient property is a control property that, 
              if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
              <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. 
            </para>
        <para></para>
        <para>
              Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>. 
              However, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.State">
      <summary>
              Gets or sets the state of the char box.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxState" /> enumeration indicates the state of the char box.
            </value>
      <remarks>
              This property retrieves the edit state of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ShouldSerializePadding">
      <summary>
              Indicates whether the Padding property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ResetPadding">
      <summary>
              Reset padding of the char box
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ShouldSerializeForeColor">
      <summary>
              Indicates whether the ForeColor property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ResetForeColor">
      <summary>
              Reset foreColor of the char box
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ShouldSerializeFont">
      <summary>
              Indicates whether the Font property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ResetFont">
      <summary>
              Reset font of the char box
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ShouldSerializeBorder">
      <summary>
              Indicates whether the Border property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ResetBorder">
      <summary>
              Reset border of the char box
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Called when any property of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> changed.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.SetSize(System.Drawing.Size)">
      <summary>
              Sets the size of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />.
            </summary>
      <param name="value">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Size" /> indicate the size.
            </param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Paint">
      <summary>
              Occurs after the char box is painted.
            </summary>
      <remarks>
              This event is raised when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> refreshed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Paint" /> event.
             </summary>
      <param name="e">
               The <see cref="T:System.Windows.Forms.PaintEventArgs" /> instance containing the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnPaint</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnPaint</b> in a derived class, be sure to call the base class's <b>OnPaint</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Clone">
      <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
      <returns>
              A new object that is a copy of this instance.
            </returns>
      <remarks>
              This method creates another <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance with the same settings as this one.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxState">
      <summary>
              An enumeration indicates the state of the a char box.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxState.Normal">
      <summary>
              Indicates that the char box is in normal state.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxState.Selected">
      <summary>
              Indicates that the char box is selected.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxState.Inactive">
      <summary>
              Indicates that the char box is inactive.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection">
      <summary>
              Defines a collection that indicates a set of char boxes.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.PostCode1">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> for postcode style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.PostCode2">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> for postcode style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.PostCode3">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> for postcode style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Number1">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> for number style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Number2">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> for number style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Number3">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> for number style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Number4">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> for number style.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.SetBorderColor(System.Drawing.Color)">
      <summary>
              Set the <see cref="T:System.Drawing.Color" /> of all <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder">Border</seealso>
              of each <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> in this collection
            </summary>
      <param name="color">
              A <see cref="T:System.Drawing.Color" /> indicate the color of line.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.SetBorderStyle(GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
              Set the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> of all <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />
              of each <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> in this collection
            </summary>
      <param name="lineStyle">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> indicate the style of line.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.CharBox)">
      <summary>
              Adds a char box to the collection.
            </summary>
      <param name="charBox">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> indicates the char box.
            </param>
      <returns>
              A <see cref="T:System.Int32" /> indicates the index of the char box.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.CharBox,System.Int32)">
      <summary>
              Adds a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> to the collection.
            </summary>
      <param name="templateCharBox">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> indicate the template <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> which would be added in current collection
            </param>
      <param name="count">
              An <see cref="T:System.Int32" /> indicate the total number of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> which be added
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.CharBox[])">
      <summary>
              Adds an array of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> to the current collection.
            </summary>
      <param name="charBoxes">
              An array of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> to load into this collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.CharBox)">
      <summary>
              Inserts a char box into the collection at the given index.
            </summary>
      <param name="index">
              An <see cref="T:System.Int32" /> indicates the index.
            </param>
      <param name="charBox">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> indicates the inserted char box.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.CharBox)">
      <summary>
              Removes a char box from the collection.
            </summary>
      <param name="charBox">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> indicates the char box.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.CharBox)">
      <summary>
              Gets the index of the special char box.
            </summary>
      <param name="charBox">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> indicates the char box.
            </param>
      <returns>
              A <see cref="T:System.Int32" /> indicates the index of the char box.
            </returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Item(System.Int32)">
      <summary>
              Get a char box according by the index
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the special index.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnClear">
      <summary>
              Performs additional custom processes when clearing the contents of the
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" /> instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnInsert(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes when clearing the contents of the
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" /> instance.
            </summary>
      <param name="index">
              An <see cref="T:System.Int32" /> indicate the index of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
      <param name="value">
              An <see cref="T:System.Object" /> indcate the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnRemove(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes when clearing the contents of the
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" /> instance.
            </summary>
      <param name="index">
              An <see cref="T:System.Int32" /> indicate the index of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
      <param name="value">
              An <see cref="T:System.Object" /> indcate the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes when clearing the contents of the
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" /> instance.
            </summary>
      <param name="index">
              An <see cref="T:System.Int32" /> indicate the index of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
      <param name="oldValue">
              An <see cref="T:System.Object" /> indcate the old <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
      <param name="newValue">
              An <see cref="T:System.Object" /> indcate the new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnClearComplete">
      <summary>
              Performs additional custom processes after clearing the contents of the
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" /> instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes when inserting the contents of the
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" /> instance.
            </summary>
      <param name="index">
              An <see cref="T:System.Int32" /> indicate the index of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
      <param name="value">
              An <see cref="T:System.Object" /> indcate the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes when removing the contents of the
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" /> instance.
            </summary>
      <param name="index">
              An <see cref="T:System.Int32" /> indicate the index of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
      <param name="value">
              An <see cref="T:System.Object" /> indcate the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes when setting the contents of the
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" /> instance.
            </summary>
      <param name="index">
              An <see cref="T:System.Int32" /> indicate the index of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
      <param name="oldValue">
              An <see cref="T:System.Object" /> indcate the old <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
      <param name="newValue">
              An <see cref="T:System.Object" /> indcate the new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /> instance
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Notify the property changed notification.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.
            </param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.CollectionChanged">
      <summary>
              Occurs when collection is changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.CollectionChanged" /> event.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> instance containing the event data.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection">
      <summary>
              Represents the input direction in <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection.LeftToRight">
      <summary>
              Indicates the input direction is left to right.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection.RightToLeft">
      <summary>
              Indicates the input direction is right to left.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1">
      <summary>
              Represents a <b>CollectionBase</b> class, which is a base class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CollectionBase{`0})">
      <summary>
              Initializes a new instance of the <see cref="T:CollectionEx&lt;T&gt;"></see> class 
              containing the elements of the specified source collection.
            </summary>
      <param name="value">
              A <see cref="T:CollectionEx&lt;T&gt;"></see> with which to initialize the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.#ctor(`0[])">
      <summary>
              Initializes a new instance of the <see cref="T:CollectionEx&lt;T&gt;"></see> class
              containing the specified array of <typeparamref name="T" /> objects.
            </summary>
      <param name="value">
              An array of <typeparamref name="T" /> objects with which to initialize the collection. 
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Item(System.Int32)">
      <summary>
              Gets or sets the <typeparamref name="T" /> at the specified index in the collection.
            </summary>
      <returns>
              A <typeparamref name="T" /> at each valid index.
            </returns>
      <param name="index">
              The zero-based index of the collection to access. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The index parameter is outside the valid range of indexes for the collection. 
            </exception>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.CollectionChanging">
      <summary>
              A <see cref="T:System.ComponentModel.CollectionChangeEventHandler" /> object that indicates the handler of CollectionChanging event.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.CollectionChanged">
      <summary>
              A <see cref="T:System.ComponentModel.CollectionChangeEventHandler" /> object that indicates the handler of the CollectionChanged event.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Add(`0)">
      <summary>
              Adds the specified <typeparamref name="T" /> to the collection.
            </summary>
      <returns>
              The index at which the new element was inserted.
            </returns>
      <param name="value">
              The <typeparamref name="T" /> to add. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.AddRange(`0[])">
      <summary>
              Copies the elements of the specified array to the end of the collection.
            </summary>
      <param name="value">
              An array of type <typeparamref name="T" /> containing the objects to add to the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.AddRange(System.Collections.Generic.IList{`0})">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;T&gt;"></see> to the end of the collection.
            </summary>
      <param name="value">
              A <see cref="T:IList&lt;T&gt;"></see> containing the objects to add to the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.AddRange(GrapeCity.Win.Spread.InputMan.CellType.CollectionBase{`0})">
      <summary>
              Adds the contents of another <see cref="T:CollectionEx&lt;T&gt;"></see> to the end of the collection.
            </summary>
      <param name="value">
              A <see cref="T:CollectionEx&lt;T&gt;"></see> containing the objects to add to the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Contains(`0)">
      <summary>
              Gets a value that indicates whether the collection contains the specified <typeparamref name="T" />.
            </summary>
      <returns>
              true if the collection contains the specified object; otherwise, false.
            </returns>
      <param name="value">
              The <typeparamref name="T" /> to search for in the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.CopyTo(`0[],System.Int32)">
      <summary>
              Copies the collection objects to a one-dimensional <see cref="T:System.Array"></see> instance beginning at the specified index.
            </summary>
      <param name="array">
              The one-dimensional <see cref="T:System.Array"></see> that is the destination of the values copied from the collection. 
            </param>
      <param name="index">
              The index of the array at which to begin inserting. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              The array parameter is null. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The index parameter is less than the target array's minimum index. 
            </exception>
      <exception cref="T:System.ArgumentException">
              The destination array is multidimensional.-or- The number of elements in the <see cref="T:Collection&lt;T&gt;"></see> is greater than
              the available space between the index of the target array specified by the index parameter and the end of the target array.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.IndexOf(`0)">
      <summary>
              Gets the index in the collection of the specified <typeparamref name="T" />, if it exists in the collection.
            </summary>
      <returns>
              The index in the collection of the specified object, if found; otherwise, -1.
            </returns>
      <param name="value">
              The <typeparamref name="T" /> to locate in the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Insert(System.Int32,`0)">
      <summary>
              Inserts the specified <typeparamref name="T" /> into the collection at the specified index.
            </summary>
      <param name="value">
              The <typeparamref name="T" /> to insert. 
            </param>
      <param name="index">
              The zero-based index where the specified object should be inserted. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Remove(`0)">
      <summary>
              Removes the specified <typeparamref name="T" /> from the collection.
            </summary>
      <param name="value">
              The <typeparamref name="T" /> to remove from the collection. 
            </param>
      <exception cref="T:System.ArgumentException">
              The specified object is not found in the collection. 
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.InnerAddRange(System.Object[])">
      <summary>
              Copies the elements of the specified array to the end of the collection.
            </summary>
      <param name="value">
              An array of type <see cref="T:object"></see> that contains the objects to add to the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnAddRange(System.Object[])">
      <summary>
              Performs additional custom processes before inserting a new element array into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="value">
              The new value of the element array.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnAddRangeComplete(System.Object[])">
      <summary>
              Performs additional custom processes after inserting a new element array into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="value">
              The new value of the element.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnInsert(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert the value.
            </param>
      <param name="value">
              The new value of the element at the index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnRemove(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which the value can be found.
            </param>
      <param name="value">
              The value of the element to remove from the index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
              The value to replace with newValue.
            </param>
      <param name="newValue">
              The new value of the element at the index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnClear">
      <summary>
              Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnInsertComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert the value.
            </param>
      <param name="value">
              The new value of the element at the index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which the value can be found.
            </param>
      <param name="value">
              The value of the element to remove from the index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
              The value to replace with newValue.
            </param>
      <param name="newValue">
              The new value of the element at the index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnClearComplete">
      <summary>
              Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.CollectionChanging" /> event.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> instance that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.CollectionChanged" /> event.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> instance that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnValidate(System.Object)">
      <summary>
              Performs additional custom processes when validating a value.
            </summary>
      <param name="value">
              The object to validate.
            </param>
      <exception cref="T:System.ArgumentNullException">value is null.</exception>
      <exception cref="T:InvalidOperationException">The collection is locked.</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.DefaultPredicate``1(``0)">
      <summary>
              Represents a default predicate.
            </summary>
      <returns>
              A <b>bool</b> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Exists``1">
      <summary>
              Determines whether the <see cref="T:System.Collections.Generic.List`1"></see> contains elements that
              match the conditions defined by the specified predicate.
            </summary>
      <returns>
              true if the <see cref="T:System.Collections.Generic.List`1"></see> contains one or more elements that
              match the conditions defined by the specified predicate; otherwise, false.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Exists``1(System.Predicate{``0})">
      <summary>
              Determines whether the <see cref="T:System.Collections.Generic.List`1"></see> contains elements that
              match the conditions defined by the specified predicate.
            </summary>
      <returns>
              true if the <see cref="T:System.Collections.Generic.List`1"></see> contains one or more elements that
              match the conditions defined by the specified predicate; otherwise, false.
            </returns>
      <param name="match">
              The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to search for.
            </param>
      <exception cref="T:System.ArgumentNullException">match is null.</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Find``1">
      <summary>
              Searches for a <typeparamref name="T" /> that matches the specified type TTarget,
              and returns the first occurrence within the entire collection.
            </summary>
      <returns>
              The first <typeparamref name="T" /> that matches the conditions defined by the specified predicate, if found;
              otherwise, the default value for type TTarget.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Find``1(System.Predicate{``0})">
      <summary>
              Searches for a <typeparamref name="T" /> that matches the specified type TTarget and matches the conditions defined by the specified predicate,
              and returns the first occurrence within the entire collection.
            </summary>
      <returns>
              The first <typeparamref name="T" /> that matches the conditions defined by the specified predicate, if found;
              otherwise, the default value for type TTarget.</returns>
      <param name="match">
              The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the <typeparamref name="T" /> to search for.
            </param>
      <exception cref="T:System.ArgumentNullException">
              match is null.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindAll``1">
      <summary>
              Retrieves all the <typeparamref name="T" /> that match the specified type TTarget.
            </summary>
      <returns>
              A <see cref="T:System.Collections.Generic.List`1"></see> that contains all the <typeparamref name="T" /> that
              match the specified type TTarget and match the conditions defined by the specified predicate, if found;
              otherwise, an empty <see cref="T:System.Collections.Generic.List`1"></see>.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindAll``1(System.Predicate{``0})">
      <summary>
              Retrieves all the <typeparamref name="T" /> that match the specified type TTarget and match the conditions defined by the specified predicate.
            </summary>
      <returns>
              A <see cref="T:System.Collections.Generic.List`1"></see> that contains all the <typeparamref name="T" /> that
              match the specified type TTarget and match the conditions defined by the specified predicate, if found;
              otherwise, an empty <see cref="T:System.Collections.Generic.List`1"></see>.
            </returns>
      <param name="match">
              The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the <typeparamref name="T" /> to search for.
            </param>
      <exception cref="T:System.ArgumentNullException">
              match is null.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLast``1">
      <summary>
              Searches for an <typeparamref name="T" /> that matches the specified type TTarget and  matches the conditions defined by the specified predicate, 
              and returns the last occurrence within the entire collection.
            </summary>
      <returns>
              The last <typeparamref name="T" /> that matches the conditions defined by the specified predicate, if found; 
              otherwise, the default value for type TTarget.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLast``1(System.Predicate{``0})">
      <summary>
              Searches for an <typeparamref name="T" /> that matches the specified type TTarget and  matches the conditions defined by the specified predicate, 
              and returns the last occurrence within the entire collection.
            </summary>
      <returns>
              The last <typeparamref name="T" /> that matches the conditions defined by the specified predicate, if found; 
              otherwise, the default value for type TTarget.
            </returns>
      <param name="match">
              The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the <typeparamref name="T" /> to search for.
            </param>
      <exception cref="T:System.ArgumentNullException">
              match is null.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindIndex``1">
      <summary>
              Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based
              index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.
            </summary>
      <returns>
              The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, false.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindIndex``1(System.Predicate{``0})">
      <summary>
              Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.
            </summary>
      <returns>
              The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, false.
            </returns>
      <param name="match">
              The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.
            </param>
      <exception cref="T:System.ArgumentNullException">match is null.</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindIndex``1(System.Int32,System.Predicate{``0})">
      <summary>
              Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the specified index to the last element.
            </summary>
      <returns>
              The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, false.
            </returns>
      <param name="startIndex">
              The zero-based starting index of the search.
            </param>
      <param name="match">
              The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              startIndex is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.
            </exception>
      <exception cref="T:System.ArgumentNullException">match is null.</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindIndex``1(System.Int32,System.Int32,System.Predicate{``0})">
      <summary>
              Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that starts at the specified index and contains the specified number of elements.
            </summary>
      <returns>
              The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, false.
            </returns>
      <param name="count">
              The number of elements in the section to search.
            </param>
      <param name="startIndex">
              The zero-based starting index of the search.
            </param>
      <param name="match">
              The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              count is less than 0.
            </exception>
      <exception cref="T:System.ArgumentNullException">match is null.</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLastIndex``1">
      <summary>
              Searches for an element that matches the conditions defined by the specified predicate, and returns 
              the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.
            </summary>
      <returns>
              The zero-based index of the last occurrence of an element that matches the conditions defined by match,
              if found; otherwise, false.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLastIndex``1(System.Predicate{``0})">
      <summary>
              Searches for an element that matches the conditions defined by the specified predicate, and returns the
              zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.
            </summary>
      <returns>
              The zero-based index of the last occurrence of an element that matches the conditions defined by match,
              if found; otherwise, false.
            </returns>
      <param name="match">
              The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.
            </param>
      <exception cref="T:System.ArgumentNullException">match is null.</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLastIndex``1(System.Int32,System.Predicate{``0})">
      <summary>
              Searches for an element that matches the conditions defined by the specified predicate,
              and returns the zero-based index of the last occurrence within the range of elements in
              the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the first 
              element to the specified index.
            </summary>
      <returns>
              The zero-based index of the last occurrence of an element that matches the conditions 
              defined by match, if found; otherwise, false.
            </returns>
      <param name="startIndex">
              The zero-based starting index of the backward search.
            </param>
      <param name="match">
              The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              startIndex is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.
            </exception>
      <exception cref="T:System.ArgumentNullException">match is null.</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLastIndex``1(System.Int32,System.Int32,System.Predicate{``0})">
      <summary>
              Searches for an element that matches the conditions defined by the specified predicate,
              and returns the zero-based index of the last occurrence within the range of elements in the 
              <see cref="T:System.Collections.Generic.List`1"></see> that contains the specified number of
              elements and ends at the specified index.</summary>
      <returns>
              The zero-based index of the last occurrence of an element that matches the conditions
              defined by match, if found; otherwise, false.
            </returns>
      <param name="count">
              The number of elements in the section to search.
            </param>
      <param name="startIndex">
              The zero-based starting index of the backward search.
            </param>
      <param name="match">
              The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              count is less than 0.
            </exception>
      <exception cref="T:System.ArgumentNullException">match is null.</exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat">
      <summary>
              Represents the supported format
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum1_G">
      <summary>
              Simplified Kanji number and unit.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum2_G">
      <summary>
              Traditional Kanji number and unit.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum3_G">
      <summary>
              Arabian digit and simplified Kanji unit.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum4_G">
      <summary>
              Simplified Kanji number and unit, support decimal number and unit display as kanji.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDown">
      <summary>
             Represents settings for the <b>DropDown</b> function.
            </summary>
      <remarks>
             This class provides settings for the drop-down function.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.Direction">
      <summary>
              Gets or sets the drop down direction.
            </summary>
      <value>
              The drop down direction.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Default" />.
            </value>
      <remarks>
              This property retrieves the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection" /> when the drop-down window is opening
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.OpeningAnimation">
      <summary>
              Gets or sets how to handle animation when opening the drop-down window.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation" /> value that indicates the animation when opening the drop-down window.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.None" />.
            </value>
      <remarks>
              This property retrieves the animation style that is displayed when the drop-down window is opening.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.ClosingAnimation">
      <summary>
              Gets or sets how to handle animation when closing the drop-down window.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation" /> value that indicates the animation when closing the drop-down window.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.None" />.
            </value>
      <remarks>
              This property retrieves the animation style that is displayed when the drop-down window is closing.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowResize">
      <summary>
              Gets or sets whether the user can change the size of the drop-down window with a size grip.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the drop-down window can be resized by a size grip; 
              otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AutoHideTouchKeyboard">
      <summary>
              Gets or sets the value that indicates how to manipulate the touch keyboard when the drop-down window is dropped.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AutoHideTouchKeyboard" /> value, indicates the action options of hide the touch keyboard when user open the drop-down window.
              <br />
              Default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard.AutoHide">AutoHide</see>. So the touch keyboard will be hidden after the drop-down window is shown.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.Size">
      <summary>
              Gets or sets the size of the drop-down window.
            </summary>
      <value>
             A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.Size" /> value that indicates the size of the drop-down window.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.ShowShadow">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether to show a shadow on the drop-down dialog.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to show a shadow on the drop-down dialog; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop">
      <summary>
              Gets or sets a value that indicates whether to allow a drop action.
            </summary>
      <value>
        <see langword="true" /> to allow a drop; otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AutoDropDown">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether the drop-down window is automatically shown when the control gets focus.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> if the drop-down window is automatically shown when the control gets focus; 
             otherwise, <see langword="false" />.
             <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The drop-down window is automatically shown when both <b>AutoDropDown</b> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" /> are <see langword="true" />.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown">
      <summary>
             Represents settings for <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDown" /> function.
            </summary>
      <remarks>
             This class provides settings for the drop-down function.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown.Size">
      <summary>
              Gets or sets the size of the drop-down window.
            </summary>
      <value>
             A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown.Size" /> value that indicates the size of the drop-down window.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown.Width">
      <summary>
            Gets or sets the width of drop down.
            </summary>
      <value>The width of drop down.</value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than zero.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown.Height">
      <summary>
            Gets or sets the height of drop down.
            </summary>
      <value>The height of drop down.</value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than zero.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown.AutoWidth">
      <summary>
              Gets or sets whether or not calculate the width for the drop down window when opening
              the drop down list.
            </summary>
      <value>
              A <see langword="true" /> if calculates the width for the drop down window, according 
              to the columns width and control width, when opening the drop down; 
              otherwise, <see langword="false" />.
              The default is <see langword="false" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator">
      <summary>
              Represents settings for <b>DropDownCalculator</b>.
            </summary>
      <remarks>
              This class offers a data pack for the drop down calculator of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BackColor">
      <summary>
              Gets or sets the background color of the drop-down window
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Control" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of your forms.
            </remarks>
      <exception cref="T:System.ArgumentException">The value isn't valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BackgroundImage">
      <summary>
              Gets or sets the background image displayed in the drop-down window.
            </summary>
      <value>
              An <see cref="T:System.Drawing.Image" /> that represents the image to display in the
              background of the drop-down window.
              <br /> The default is <see langword="null" />.
            </value>
      <remarks>
              Use the <b>BackgroundImage</b> property to place a graphic image onto a control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BackgroundImageLayout">
      <summary>
             Gets or sets the layout of the background image.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.ImageLayout" /> value indicates the layout of background image.
              <br />
              The default is <b>ImageLayout.Tile</b></value>
      <remarks>
              Use the <b>BackgroundImageLayout</b> property to specify the position and behavior of an image you have placed onto a control. <b>BackgroundImageLayout</b> takes effect only if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BackgroundImage" /> property is set.
             <pare />
              You can increase performance for large images if you set <b>BackgroundImageLayout</b> to something other than <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BorderStyle">
      <summary>
              Gets or sets style of border of drop-down window.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BorderStyle" /> enumeration indicates the border style.
              <br /> The default is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </value>
      <remarks>
              You can use the <b>BorderStyle</b> property to create borderless and flat style controls, in addition to the default three-dimensional control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ButtonKeys">
      <summary>
              Gets a fixedsize ArrayList include the name of the buttons in <b>DropDownCalculator</b>.
            </summary>
      <remarks>
              This property retrieve all keys of buttons in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ButtonMappings">
      <summary>
              Gets or sets the whether the shortcut key for the button item.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" /> object indicates the button mapping collection.
            </value>
      <remarks>
              User can add,remove a button mapping relation between the key and button.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ButtonText">
      <summary>
              Indicates the collection holding all of the text that replaces the standard caption.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" /> indicates the text collection of all the calculator buttons.
            </value>
      <remarks>
              User can modify every text string of buttons by this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Cursor">
      <summary>
             Gets or sets the cursor that is displayed when the mouse pointer is over the drop-down view.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Cursor" /> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Font">
      <summary>
             Gets or sets the font which used in the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Font" /> object indicates the Font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />.
            </value>
      <remarks>
              Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>. 
              However, you can base the new font on the existing font.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Padding">
      <summary>
             Gets or sets the padding of the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding" /> value.
              <br />
              The default is "5, 5, 5, 5"
            </value>
      <remarks>
              This property retrieves the distance between calculator area and the border of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ShouldSerializePadding">
      <summary>
              Indicates whether the Padding property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ResetPadding">
      <summary>
              Reset padding of the char box
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.SingleBorderColor">
      <summary>
              Gets or sets color for single line border in the drop-down window.
            </summary>
      <value>
              The default value is the <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The <see cref="T:System.Drawing.Color" /> only takes effect when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BorderStyle" /> is <b>FixedSingle</b>.
            </remarks>
      <exception cref="T:System.ArgumentException">The value isn't valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ContentAlignment">
      <summary>
             Gets or sets a <see cref="T:System.Drawing.ContentAlignment" /> value which indicates the alignment of the text.
            </summary>
      <value>
              A <see cref="T:System.Drawing.ContentAlignment" /> value.
              <br /> The default is <see cref="F:System.Drawing.ContentAlignment.MiddleRight" />.
            </value>
      <remarks>
              This property determines the text alignment of each button.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Text">
      <summary>
              Gets or sets the text of the <b>DropDownCalculator</b>.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the text.
              <br /> The default is "0.".
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.FlatStyle">
      <summary>
             Gets or sets the appearance style of the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.FlatStyle" /> value indicates the control appearance.
            </value>
      <remarks>
              The <b>FlatStyle</b> property determines the display style of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.OutputHeight">
      <summary>
              Gets or sets the height of the output region.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the height of the output region.
            </value>
      <remarks>
              The zero value of this property means the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" /> automatically calculate the height of the output area. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ShowOutput">
      <summary>
              Gets or sets a <see langword="bool" /> value indicates whether to show the output region.
            </summary>
      <value>
              A <see langword="bool" /> value indicates whether to show the output region.
            </value>
      <remarks>
              This property determines whether to show the output area or not. 
              When the value is <see langword="false" />, the output will shown on the EditBox of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.MemoryStatus">
      <summary>
              Gets or sets the button style of memory status.
            </summary>
      <value>
              A  <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> object that used to draw the MemoryCaption.
            </value>
      <remarks>
              This property retrieve the display style of the memory status button.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.EditButtons">
      <summary>
              Gets or sets the button style of button about edit.
            </summary>
      <value>A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> object that used to draw edit buttons.</value>
      <remarks>
              This property retrieve the display style of all edit buttons.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.MathButtons">
      <summary>
              Gets or sets the button style of button about math.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> object that used to draw math related buttons.
            </value>
      <remarks>
              This property retrieve the display style of all math buttons.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.MemoryButtons">
      <summary>
              Gets or sets the button style of button about memory.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> object that used to draw memory related buttons.
            </value>
      <remarks>
              This property retrieve the display style of all memory buttons.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.NumericButtons">
      <summary>
              Gets or sets the button style of button about numeric.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> object that used to draw numeric buttons.
            </value>
      <remarks>
              This property retrieve the display style of all numeric buttons.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Output">
      <summary>
              Gets or sets the button style of button about output.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> object that used to draw output result.
            </value>
      <remarks>
              This property retrieves the display style of the output area.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ResetButtons">
      <summary>
              Gets or sets the button style of button about reset.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> object that used to draw reset buttons.
            </value>
      <remarks>
              This property retrieve the display style of all reset buttons.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Value">
      <summary>
             Gets the value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />.
            </summary>
      <value>
             A <see cref="T:System.Nullable`1" /> value indicates the value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.SetButtonStyle(GrapeCity.Win.Spread.InputMan.CellType.KeyGroups,GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle)">
      <summary>
              Drawn the defined group with the style.
            </summary>
      <param name="groups">One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups" /> values.</param>
      <param name="style">A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> used to draw the given group.</param>
      <remarks>
              This method applies a special <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" /> settings to a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups" /> for displaying.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.SetButtonStyle(GrapeCity.Win.Spread.InputMan.CellType.KeyGroups,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.TextEffect)">
      <summary>
              Drawn the defined group with the given style elements.
            </summary>
      <param name="groups">One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups" /> values.</param>
      <param name="foreColor">The foreground color.</param>
      <param name="backColor">The background color.</param>
      <param name="textEffect">One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextEffect" /> values.</param>
      <remarks>
              This method applies the forecolor, the backcolor and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextEffect" /> settings to a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups" /> for displaying.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar">
      <summary>
              Represents the settings for the drop-down calendar.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ClickDate">
      <summary>
              Occurs when the date is clicked.
            </summary>
      <remarks>
              This event is raised if a date area is clicked.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Scrolled">
      <summary>
              Occurs when the drop-down calendar is scrolled.
            </summary>
      <remarks>
              This event occurs when the displayed month or year changes. For example, click a navigator button or select a different value in the navigator tip.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SelectedDateChanged">
      <summary>
             Occurs when the selected date is changed.
            </summary>
      <remarks>
              This event occurs if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SelectedDate" /> property is changed.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FocusDateChanged">
      <summary>
             Occurs when the focus date is changed.
            </summary>
      <remarks>
              This event occurs if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FocusDate" /> property is changed.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ActiveHolidayStyles">
      <summary>
              Gets or sets active holiday styles for the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.String" /> array that indicates the active holiday styles.
            </value>
      <remarks>
              This property determines which <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HolidayStyles" /> object is active. If more than one  <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HolidayStyles" /> object is active and overlaps, the last one takes effect.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BackColor">
      <summary>
             Gets or sets the background color of the drop-down calendar.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Color" /> of the background.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of your forms.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BackgroundImage">
      <summary>
              Gets or sets the background image displayed in the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Image" /> that represents the image to display in the
              background of the drop-down window.
            </value>
      <remarks>
              Use the <b>BackgroundImage</b> property to place a graphic image on a control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BackgroundImageLayout">
      <summary>
              Gets or sets the layout of the background image of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.ImageLayout" /> value that indicates the layout of the background image.
              <br />
              The default is <b>ImageLayout.Tile</b></value>
      <remarks>
              Use the <b>BackgroundImageLayout</b> property to specify the position and behavior of an image you have placed on a control. <b>BackgroundImageLayout</b> takes effect only if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BackgroundImage" /> property is set.
             <pare />
              You can increase performance for large images if you set <b>BackgroundImageLayout</b> to something other than <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BorderStyle">
      <summary>
              Gets or sets the border style of the drop-down calendar.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BorderStyle" /> enumeration that indicates the border style.
              <br /> The default is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </value>
      <remarks>
              You can use the <b>BorderStyle</b> property to create borderless and flat style controls, in addition to the default three-dimensional control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.EnableScrollAnimation">
      <summary>
              Gets or sets whether or not the animation will be performed when scroll or zoom on the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Boolean" /> value, <see langword="true" />
              if performs animation when scroll or zoom on the drop-down calendar; otherwise <see langword="false" />.
              <br />
              Defaule value is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Font">
      <summary>
              Gets or sets the drop-down calendar font.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Font" /> object that indicates the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />.
            </value>
      <remarks>
              The default value is the same as the control font.
              If the value is <see langword="null" />, the value is automatically the default value, without exception.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.InnerMargins">
      <summary>
              Gets or sets the inner margins of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding" /> value that indicates the inner margins of the drop-down calendar.
            </value>
      <remarks>
              This property determines the distance between every calendar view and it's header.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.InnerSpace">
      <summary>
              Gets or sets the inner space of the drop-down calendar.
            </summary>
      <value>
             A <see cref="T:System.Drawing.Size" /> value that indicates the inner space of the drop-down calendar.
            </value>
      <remarks>
              When the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarDimensions" /> property displays more than one calendar, this property determines the distance between each calendar.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FlatStyle">
      <summary>
              Gets or sets the appearance of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.FlatStyle" /> value that indicates the control appearance.
              <br /> The default is <see cref="F:System.Windows.Forms.FlatStyle.Standard" />.
            </value>
      <remarks>
              Use the <b>FlatStyle</b> property to get or set the display of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarDimensions">
      <summary>
              Gets or sets dimensions of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Size" /> with the number of columns and rows to use to display the calendar.
              <br /> The default is <see langword="true" />.
            </value>
      <remarks>
              Only one calendar year is displayed at a time, and the maximum number of months that can be displayed is 12. 
              Valid combinations of columns and rows have a maximum product of 12; 
              values greater than 12 are not allowed.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarMargins">
      <summary>
              Gets or sets margins for the drop-down calendar.
            </summary>
      <remarks>
              This property determines the distance between the calendar display area and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> border.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType">
      <summary>
              Gets or sets the type of the drop-down calendar.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" /> value that indicates the type of the current calendar.
            </value>
      <remarks>
              This property can change the display type of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ControlStyle">
      <summary>
              Gets or sets the style of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> object that indicates the control style.
            </value>
      <remarks>
              This property customizes the display style of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />. If you want to apply this setting, the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.UseControlStyle" /> property must be set to <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Cursor">
      <summary>
              Gets or sets the cursor that is displayed when the mouse pointer is over the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Cursor" /> instance that indicates the cursor shape when the mouse pointer is over the drop-down window.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.EmptyRows">
      <summary>
             Gets or sets how the calendar should be drawn when empty week rows appear.
            </summary>
      <value>
              An <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.EmptyRows" /> value that indicates how the calendar should be drawn when empty week rows appear.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EmptyRows.StartEmpty" />.
            </value>
      <remarks>
              The empty rows value means all dates in a row are trailing dates. This case only appears in the month of February.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.AllowSelection">
      <summary>
              Gets or sets the type of dates that allow selection.
            </summary>
      <value>
              An <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.AllowSelection" /> value that indicates the type of dates that allow selection.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSelection.Anyday" />.
            </value>
      <remarks>
              This property determines which kind of dates can be selected. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarYear">
      <summary>
              Gets or sets whether to display the calendar in the form of a fiscal year.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarYear" /> values.
              <br />
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarYear.Normal" />.
            </value>
      <remarks>
              The <b>CalendarYear</b> property determines the sequence for displaying the month when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" /> is <b>CalendarType.YearMonth</b>.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FirstDayOfWeek">
      <summary>
              Gets or sets which weekday to display first in the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek" /> value that indicates which weekday to display first in the drop-down calendar.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.NotSet" />.
            </value>
      <remarks>
              This property determines which day of the week is displayed first
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FirstFiscalMonth">
      <summary>
              Gets or sets the first fiscal month of the year.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Months" /> value that indicates the first fiscal month of the year.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Months.Default" />.
            </value>
      <remarks>
              The <b>FirstFiscalMonth</b> property determines which month to display first.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FirstMonthInView">
      <summary>
              Gets or sets the first month in the drop-down calendar view.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Months" /> enumeration value that indicates the first month in the view.
              <br />
              The default is <b>Months.Default</b>.
            </value>
      <remarks>
              When <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" /> is <b>MonthDay</b> and 12 months are shown in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />, 
              this property specifies which month is shown first. If the value is not <b>Months.Default</b>, scrolling is year by year.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FocusDate">
      <summary>
              Gets or sets the date that has focus.
            </summary>
      <value>
              A <see cref="T:System.Nullable`1" /> value that indicates which date has focus.
            </value>
      <remarks>
              This property determines where the focus rectangle is displayed in the date view.
            </remarks>
      <exception cref="T:System.ArgumentNullException">The value cannot be <see langword="null" />.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FocusRectangle">
      <summary>
              Gets or sets the style of the focus rectangle.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FocusRectangle" /> value that indicates the style of the focus rectangle.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle.Normal" />.
            </value>
      <remarks>
              This property determines the display style of the date with focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HeaderFormat">
      <summary>
              Gets or sets the format string of the header.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the format of the header.
              <br /> The default is MMMM yyy.
            </value>
      <remarks>
              The header text is displayed using the format specified by this property when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.UseHeaderFormat" /> property is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HeaderHeight">
      <summary>
              Gets or sets the height of the header.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the height of the header.
              <br /> The default is 0.
            </value>
      <remarks>
              A zero value means the header height is calculated automatically. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MaxDate">
      <summary>
              Gets or sets the maximum limit of the date.
            </summary>
      <value>
              A <see cref="T:System.DateTime" /> value that indicates the maximum date of the calendar.
            </value>
      <remarks>
              This property retrieves a maximun date value and must be greater than the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MinDate" />.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
              The value is <see langword="null" />.
             </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The value is less than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MinDate" />.
              </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MinDate">
      <summary>
              Gets or sets the minimum limit of the date.
            </summary>
      <value>
              A <see cref="T:System.DateTime" /> value that indicates the minimum date of the calendar.
            </value>
      <remarks>
              This property retrieves a minimum date value and must be less than the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MaxDate" />.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
              The value is <see langword="null" />.
              </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The value is greater than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MaxDate" />.
              </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HeaderStyle">
      <summary>
              Gets or sets the header style.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> object that indicates the style of the header.
            </value>
      <remarks>
              The property determines the display style of the header of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />. 
              This display style does not take effect when the header is rendered as a system style.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HolidayStyles">
      <summary>
              Gets or sets holiday styles.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> object that indicates the holiday style collection.
            </value>
      <remarks>
              This property retrieves a collection of holiday appearance styles.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ItemStyle">
      <summary>
              Gets or sets the style of each item.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> object that indicates the style of each item.
            </value>
      <remarks>
              This property determines the display style of each item, a date item or a month item, of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.LegendStyle">
      <summary>
              Gets or sets the style of the today legend.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> of the today legend.
            </value>
      <remarks>
              This property determines the display style of the legend area of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Lines">
      <summary>
              Gets or sets the line setting.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Grid" /> object that indicates the lines.
            </value>
      <remarks>
              This property determines the color and the style of lines shown in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.NavigatorOrientation">
      <summary>
              Gets or sets the orientation of the navigator.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.NavigatorOrientation" /> value that indicates the orientation of the navigator.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation.Right" />.
            </value>
      <remarks>
              This property determines the navigator position when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowNavigator" /> property is <b>Scrollbar</b> or <b>Button</b>.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.OverrideTipText">
      <summary>
              Gets or sets the text of the tip that is shown on an overridden holiday.
            </summary>
      <value>
              A <b>string</b> type that represents the value. The default is <b>string.Empty</b>.
            </value>
      <remarks>
              This property retrieves the tooltip text for an overridden holiday.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.PreferredSize">
      <summary>
              Gets the preferred size of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Size" /> value that contains the height and width, in pixels.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Redraw">
      <summary>
              Gets or sets a value that indicates whether the view is refreshed.
            </summary>
      <value>
              A <see langword="bool" /> type that represents the value. The default is <b>true.</b>.
            </value>
      <remarks>
              If this property is set to <see langword="false" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> does not refresh, so nothing is shown when the calendar is dropped down.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ScrollRate">
      <summary>
              Gets or sets the scroll rate.
            </summary>
      <value>
              A positive number that represents the current scroll rate by the number of months moved. 
              <br /> The default is 1.
            </value>
      <remarks>
              The scroll rate is the number of months that the control moves in the display when the user clicks a scroll arrow. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ScrollTipAlign">
      <summary>
              Gets or sets the scroll tip alignment.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment" /> type value that indicates the alignment of the scroll tip.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment.Default" />.
            </value>
      <remarks>
              When the user drags the scroll button to move the currently displayed months or years, 
              a tooltip that contains the date information is shown. 
              This property determines the alignment of this tool tip.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SelectedDate">
      <summary>
              Gets or sets the selected date.
            </summary>
      <value>
              A <see cref="T:System.Nullable`1" /> type value that indicates the selected date.
            </value>
      <remarks>
              This property rertrieves the date which is selected.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is out of range.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SelectionStyle">
      <summary>
              Gets or sets the style of selected dates.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> value that indicates the selection style.
            </value>
      <remarks>
              This property rertrieves the display style of the selected date or month cell.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowContextMenu">
      <summary>
              Gets or sets a value that indicates whether to show the context menu when right-clicking the mouse button or pressing the menu key.
            </summary>
      <value>
            	A <see langword="bool" /> value that indicates whether to show the context menu. The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowHeader">
      <summary>
              Gets or sets a value that indicates whether to show the header.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the header. The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowNavigator">
      <summary>
              Gets or sets a value that indicates how to show the navigator.
            </summary>
      <value>
              One value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators" />.
              <br /> The default is <b>CalendarNavigators.Outlook</b></value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowScrollTip">
      <summary>
              Gets or sets a value that indicates whether to show the scroll tip.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the scroll tip.The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowTrailing">
      <summary>
              Gets or sets a value that indicates whether to show trailing dates.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the trailing days.The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowToday">
      <summary>
              Gets or sets a value that indicates whether to show the today legend.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the today legend.The default is <see langword="false" />.
            </value>
      <remarks>
              This property determines whether to show the today legend at the bottom of this calendar.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowTodayMark">
      <summary>
              Gets or sets a value that indicates whether to show the today mark.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the today mark.The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowWeekNumber">
      <summary>
              Gets or sets a value that indicates whether to show the week number.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the week number.The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowZoomButton">
      <summary>
              Gets or sets a value that indicates whether to show the zoom button on the navigate bar.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to show the zoom button on the navigate bar; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SingleBorderColor">
      <summary>
              Gets or sets the color for a single line border.
            </summary>
      <value>
              The default value is the <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The color only takes effect when BorderStyle is FixedSingle.
              This property is from feature 0054 of V3.0 (Control border color)
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Styles">
      <summary>
              Gets or sets a set of stored <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> objects.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> object that indicates the styles collection.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SubStyles">
      <summary>
              Gets or sets a set of stored <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> objects.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection" /> object that indicates the SubStyle collection.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TipInterval">
      <summary>
              Gets or sets the interval before showing holiday tooltips when the mouse is over an item.
            </summary>
      <value>
              An <b>int</b> value that indicates the interval of holiday tooltips. 
              <br />
              The default is <b>500</b>.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TitleStyle">
      <summary>
              Gets or sets the style of the weekday title.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TitleStyle" /> value that indicates the display style of the weekday title. 
            </value>
      <remarks>
              This property retrieves the display style of the weekday title.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TodayImage">
      <summary>
              Gets or sets the image that is used to represent today.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Image" /> that is shown on the today legend and today cell.
            </value>
      <remarks>
              This property retrieves the image displayed at the today cell and today legend.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TodayMarkColor">
      <summary>
              Gets or sets the border color shown in the today area.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the today mark border color.
            </value>
      <remarks>
              The property retrieves the border color of the today mark.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TrailingStyle">
      <summary>
              Gets or sets the style of trailing dates.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> object that indicates the trailing style
            </value>
      <remarks>
              This property retrieves the display style of the trailing dates area.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.UseControlStyle">
      <summary>
              Gets or sets a value that indicates whether to use the control style.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to use the control style.
              <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              This property determines whether to apply the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ControlStyle" /> settings.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.UseHeaderFormat">
      <summary>
              Gets or sets whether to use the <b>HeaderFormat</b> property to show the header text.
            </summary>
      <value>
        <see langword="true" /> to use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HeaderFormat" /> setting to show the header text; otherwise, <see langword="false" />.
              <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              This property determines whether to apply the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HeaderFormat" /> settings.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Weekdays">
      <summary>
              Gets or sets the weekday settings.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" /> value that indicates the settings of the weekdays.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.WeekNumberStyle">
      <summary>
              Gets or sets the style of the week number.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> of the week number.
            </value>
      <remarks>
              This property retrieves the display style of the week number area.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.YearMonthFormat">
      <summary>
              Gets or sets the header format for the year or month view.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.YearMonthFormat" /> structure that indicates the year month format.
            </value>
      <remarks>
              This property determines which format the header text should use when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" /> is <b>YearMonth</b> mode.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.NavigateOnWheel">
      <summary>
              Gets or sets a value that indicates whether the user can navigate with the mouse wheel.
            </summary>
      <value>
              A <see langword="bool" /> type that represents the value. The default is <b>true.</b>.
            </value>
      <remarks>
              If this property is set to <see langword="false" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> does not navigate using the mouse wheel.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.DateFromPoint(System.Int32,System.Int32)">
      <summary>
              Gets a date according to the given x-coordinate and y-coordinate.
            </summary>
      <param name="x">
              The <see cref="T:System.Int32" /> value that indicates the x-coordinate of the point.
            </param>
      <param name="y">
              The <see cref="T:System.Int32" /> value that indicates the y-coordinate of the point.
            </param>
      <returns>
              The <see cref="T:System.Nullable`1" /> type to express the current date.
            </returns>
      <remarks>
             This method can retrieve a date from a special point which is determined by the x and y parameters. 
             If the given point is not contained in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> view, a <see langword="null" /> value is returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.DateFromPoint(System.Drawing.Point)">
      <summary>
              Gets a date according to the given point.
            </summary>
      <param name="point">The value of the <see cref="T:System.Drawing.Point" /> type.</param>
      <returns>
            The <see cref="T:System.Nullable`1" /> type used to express the current date.
            </returns>
      <remarks>
              This method can retrieve a date from a special point. 
              If the given point is not contained in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> view, 
              a <see langword="null" /> value is returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.DayOfWeekFromPoint(System.Int32,System.Int32)">
      <summary>
              Gets a date according the given x-coordinate and y-coordinate.
            </summary>
      <param name="x">
              The <see cref="T:System.Int32" /> value that indicates the x-coordinate of the point.
            </param>
      <param name="y">
              The <see cref="T:System.Int32" /> value that indicates the y-coordinate of the point.
            </param>
      <returns>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek" /> used to express the current weekday.
            </returns>
      <remarks>
              This method can retrieve a weekday from a special point which is determined by the x and y parameters. 
              If the given point is not contained in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> view, a <see langword="null" /> value is returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.DayOfWeekFromPoint(System.Drawing.Point)">
      <summary>
            Gets the weekday from a point.
            </summary>
      <param name="point">The value of the point type.</param>
      <returns>The DayOfWeekType used to express the current weekday.</returns>
      <remarks>
              This method can retrieve a weekday from a special point. 
              If the given point is not contained in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> view, a <see langword="null" /> value is returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.GetDatesInView(GrapeCity.Win.Spread.InputMan.CellType.PickDays)">
      <summary>
            Gets the dates of the given type in the current view.
            </summary>
      <param name="type">One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PickDays" /> values that indicates the type used for pick days.</param>
      <returns>A <see cref="T:System.DateTime" /> array that includes all dates based on the pick requirement.</returns>
      <remarks>
              The method retrieves the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PickDays" /> type dates in the current calendar view. 
              If the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarType.YearMonth" /> mode, 
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PickDays" /> type dates between the minimum and the maximum month are returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.GetDatesInView">
      <summary>
              Gets all the dates in the view.
            </summary>
      <returns>
              A <see cref="T:System.DateTime" /> array that includes all dates in the view.
            </returns>
      <remarks>
              This method retrieves all normal dates in the current calendar view. 
              If the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarType.YearMonth" /> mode, 
              all dates between the minimum and the maximum month are returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ScrollMonth(System.Int32)">
      <summary>
            Scrolls the calendar month according to the numbers specified.
            </summary>
      <param name="monthOffset">
              An integer type used to denote the number of calendar months to scroll and the direction in which to scroll them.
            </param>
      <remarks>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> moves its display month using this method, based on the given month offset.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ScrollYear(System.Int32)">
      <summary>
              Scrolls the calendar year according to the numbers specified.
            </summary>
      <param name="yearOffset">
              An integer type used to denote the number of calendar years to scroll and the direction in which to scroll them.
            </param>
      <remarks>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> moves its display year using this method based on the given year offset.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.LoadTemplate(GrapeCity.Win.Spread.InputMan.CellType.Templates)">
      <summary>
            Loads templates that effect the current calendar.
            </summary>
      <param name="template">The template value to effect the current calendar.</param>
      <remarks>
              There are three template types. Users can customize the display style for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> with this method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Zoom(GrapeCity.Win.Spread.InputMan.CellType.CalendarType)">
      <summary>
              Zooms the current calendar to the specific calendar type.
            </summary>
      <param name="calendarType">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" /> enumeration that specifies the target calendar type.
            </param>
      <returns>
              A <see langword="bool" /> value, <see langword="true" /> if the calendar type has changed; otherwise, <see langword="false" />.
            </returns>
      <remarks>
              This method can change the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" /> of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />. 
              If the operation succeeds, the <see langword="true" /> value is returned; otherwise, <see langword="false" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.EnableTouchZoom">
      <summary>
             Gets or sets if Touch Zoom is enabled.
            </summary>
      <value>
        <see langword="true"></see> if allow user to change view between Mouth and Year view by pinch, otherwise <see langword="false" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor">
      <summary>
             Represents the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor" /> settings.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Click">
      <summary>
             Occurs when the drop-down editor is clicked.
            </summary>
      <remarks>
              The <b>Click</b> event passes an <see cref="T:System.EventArgs" /> to its event handler, so it only indicates that a click has occurred. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnClick(System.Object,System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Click" /> event.
             </summary>
      <param name="sender">
               An <see cref="T:System.Object" /> value that indicates the event sender.
             </param>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnClick</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnClick</b> in a derived class, be sure to call the base class's <b>OnClick</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.DoubleClick">
      <summary>
             Occurs when the drop-down editor is double-clicked.
            </summary>
      <remarks>
              A double-click is determined by the mouse settings of the user's operating system. 
              The user can set the time between clicks of a mouse button that determines a double-click rather than two clicks. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnDoubleClick(System.Object,System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.DoubleClick" /> event.
             </summary>
      <param name="sender">
                An <see cref="T:System.Object" /> value that indicates the event sender.
             </param>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnDoubleClick</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnDoubleClick</b> in a derived class, be sure to call the base class's <b>OnDoubleClick</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.InvalidInput">
      <summary>
             Occurs when there is invalid input.
            </summary>
      <remarks>
              This event is raised if the invalid characters are entered using the keyboard or the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Paste" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnInvalidInput(System.Object,System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.InvalidInput" /> event.
             </summary>
      <param name="sender">
                An <see cref="T:System.Object" /> value that indicates the event sender.
             </param>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnInvalidInput</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnInvalidInput</b> in a derived class, be sure to call the base class's <b>OnInvalidInput</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyDown">
      <summary>
             Occurs when a key is pressed.
            </summary>
      <remarks>
              This event is raised when a key is pressed down.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyDown" /> event.
             </summary>
      <param name="sender">
                An <see cref="T:System.Object" /> value that indicates the event sender.
             </param>
      <param name="e">
               The <see cref="T:System.Windows.Forms.KeyEventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnKeyDown</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnKeyDown</b> in a derived class, be sure to call the base class's <b>OnKeyDown</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyPress">
      <summary>
             Occurs when a character key is pressed.
            </summary>
      <remarks>
              This event is raised when a key is pressed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyPress" /> event.
             </summary>
      <param name="sender">
                An <see cref="T:System.Object" /> value that indicates the event sender.
             </param>
      <param name="e">
               The <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnKeyPress</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnKeyPress</b> in a derived class, be sure to call the base class's <b>OnKeyPress</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyUp">
      <summary>
             Occurs when a key is released.
            </summary>
      <remarks>
              This event is raised when a pressed key is released.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyUp" /> event.
             </summary>
      <param name="sender">
                An <see cref="T:System.Object" /> value that indicates the event sender.
             </param>
      <param name="e">
               The <see cref="T:System.Windows.Forms.KeyEventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnKeyUp</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnKeyUp</b> in a derived class, be sure to call the base class's <b>OnKeyUp</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TextChanging">
      <summary>
             Occurs when a key is released.
            </summary>
      <remarks>
              This event is raised before the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Text" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnTextChanging(System.Object,GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TextChanging" /> event.
             </summary>
      <param name="sender">
                An <see cref="T:System.Object" /> value that indicates the event sender.
             </param>
      <param name="e">
               The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnTextChanging</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnTextChanging</b> in a derived class, be sure to call the base class's <b>OnTextChanging</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TextChanged">
      <summary>
             Occurs when the text of the drop-down editor is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Text" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnTextChanged(System.Object,System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TextChanged" /> event.
             </summary>
      <param name="sender">
                An <see cref="T:System.Object" /> value that indicates the event sender.
             </param>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnTextChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnTextChanged</b> in a derived class, be sure to call the base class's <b>OnTextChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BackColor">
      <summary>
             Gets or sets the background color of the drop-down window.
            </summary>
      <value>
              The color of the background.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of your forms.
            </remarks>
      <exception cref="T:System.ArgumentException">The value isn't valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BackgroundImage">
      <summary>
              Gets or sets the background image displayed in the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Image" /> that represents the image to display in the
              background of the drop-down window.
              <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BackgroundImageLayout">
      <summary>
              Gets or sets the layout of the background image.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.ImageLayout" /> value that indicates the layout of the background image.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BorderStyle">
      <summary>
              Gets or sets the border style.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BorderStyle" /> value.
              <br /> The default is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ContextMenuStrip">
      <summary>
             Gets or sets the context menu strip.
            </summary>
      <value>
             A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ContextMenuStrip" /> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ForeColor">
      <summary>
              Gets or sets the foreground color of the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowText" />.
            </value>
      <remarks>
              The foreground <see cref="T:System.Drawing.Color" /> of the drop-down window. 
              The default is the <see cref="P:System.Drawing.SystemColors.WindowText" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.SelectionLength">
      <summary>
              Gets or sets the number of characters selected in the drop-down editor.
            </summary>
      <value>
              The number of characters selected in the drop-down editor.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.SelectionStart">
      <summary>
              Gets or sets the starting point of text selected in the drop-down window.
            </summary>
      <value>
              The starting position of the selected text.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.SelectedText">
      <summary>
              Gets or sets a value that indicates the currently selected text in the drop-down editor.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the currently selected text in the drop-down editor.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Font">
      <summary>
              Gets or sets the font which is used for the drop-down window.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Font" /> value that indicates the font which is used for the drop-down window.
            </value>
      <remarks>
              The default value is the same as the control font.
              If the value is <see langword="null" />, the value is automatically the default value without exception.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Cursor">
      <summary>
              Gets or sets the cursor that is displayed when the mouse pointer is over the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Cursor" /> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Lines">
      <summary>
              Gets or sets the lines in the drop-down editor.
            </summary>
      <value>
              A <b>string</b> array that indicates the lines.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Padding">
      <summary>
             Gets or sets the padding of the drop-down window.
            </summary>
      <value>
             A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Padding" /> value that indicates the padding.
              <br /> The default is "1,1,1,1".
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ShouldSerializePadding">
      <summary>
              Indicates whether the Padding property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ResetPadding">
      <summary>
              Reset padding of the editor.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ReadOnly">
      <summary>
              Gets or sets a value that indicates whether the drop-down editor is read-only.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> if the drop-down editor is read-only; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ScrollBarMode">
      <summary>
              Gets or sets how to display the scroll bars.
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode" /> enumeration values 
              that indicates whether to display the scroll bars as soon as 
              the contents exceed the length of the drop-down edit when there are multiple lines.
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ScrollBars">
      <summary>
              Gets or sets a value that indicates how to show scroll bars.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ScrollBars" /> value that indicates how to show scroll bars.
              <br /> The default is <see cref="F:System.Windows.Forms.ScrollBars.Vertical" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ShowContextMenu">
      <summary>
              Gets or sets a value that indicates whether to show the context menu.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> to show the context menu; otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.SingleBorderColor">
      <summary>
              Gets or sets the color of the single line border.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the color of the single line border.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The color only takes effect when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ContentAlignment">
      <summary>
             Gets or sets the alignment of the content.
            </summary>
      <value>
             A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ContentAlignment" /> value that indicates the content alignment.
              <br /> The default is <see cref="F:System.Drawing.ContentAlignment.TopLeft" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Text">
      <summary>
             Gets or sets the text.
            </summary>
      <value>
             A <see cref="T:System.String" /> value that indicates the text.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.CanUndo">
      <summary>
             Gets a value that indicates whether the user can undo the previous operation in a text box control.
            </summary>
      <value>
        <see langword="true" /> if the user can undo the previous operation performed in a text box control; 
             otherwise, <see langword="false" />.
            </value>
      <remarks>
             If this method returns <see langword="true" />, you can call the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Undo" /> method to undo the last 
             operation in the control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TextLength">
      <summary>
              Gets the length of the text in the drop-down window.
            </summary>
      <value>
              The number of characters contained in the text of the control.
            </value>
      <remarks>
              You can use this property to determine the number of characters in a string for tasks such as searching for specific 
              strings of text within the text of the control, where knowledge of the total number of characters is needed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.AppendText(System.String)">
      <summary>
            Appends text to the current text of the control.
            </summary>
      <param name="text">
            The text to append to the current contents of the control. 
            </param>
      <remarks>
              You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the Text property.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Clear">
      <summary>
            Clears the contents of the control.
            </summary>
      <remarks>
            This method will cause the Text property to be set to a zero-length string. 
            If the <b>ReadOnly</b> property is set to True, the contents of the control 
            are not changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ClearUndo">
      <summary>
            Clears information about the most recent operation from the undo buffer of the control.
            </summary>
      <remarks>
            You can use this method to prevent an undo operation from repeating, based on the state of your application.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Copy">
      <summary>
            Copies the current selection in the control to the Clipboard.
            </summary>
      <remarks>
            You can use this method, instead of using the Clipboard class, to copy text in the control and place it in the Clipboard.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Cut">
      <summary>
              Moves the current selection in the control to the Clipboard.
            </summary>
      <remarks>
              This method will only cut text from the control if text is selected in the control. You can use this method, instead of 
              using the Clipboard class, to copy text in the control and move it to the Clipboard.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Paste">
      <summary>
            Replaces the current selection in the control with the contents of the Clipboard.
            </summary>
      <remarks>
            The <b>Paste</b> method will only paste text into the control if text is currently stored in the Clipboard. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ScrollToCaret">
      <summary>
            Scrolls the contents of the control to the current caret position.
            </summary>
      <remarks>
            This method enables you to scroll the contents of the control until the caret is within the visible region 
            of the control. If the caret is positioned below the visible region of the control, the <b>ScrollToCaret</b>
            method will scroll the contents of the control until the caret is visible at the bottom of the control. If 
            the caret is positioned above the visible region of the control, this method scrolls the contents of the control 
            until the caret is visible at the top of the control. A similar policy exists for the horizontal direction and it moves the caret to 1/3 width 
            from the left or right side. You can use this method in a multiline edit to ensure that the current text entry point is 
            within the visible region of the control.<br /><b>Note:</b> This method has no effect if the control does not have focus or if the caret is already positioned 
            in the visible region of the control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.SelectAll">
      <summary>
              Selects all text in the control.
            </summary>
      <remarks>
              This method enables you to select all text within the control. You can use this method in conjunction with the 
              <b>Cut</b> method, which requires text to be selected in the control, to cut the entire contents of the control 
              and paste them into the Clipboard.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Undo">
      <summary>
            Undoes the last edit operation in the control.
            </summary>
      <remarks>
            This method will undo the last clipboard or text change operation performed in the control if the <b>CanUndo</b> 
            property returns true.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.GetLineCount">
      <summary>
              Retrieves the number of lines in a multiple-line mode of the drop-down window.
            </summary>
      <returns>
              An <see cref="T:System.Int32" /> value that contains the number of lines in the multiple-line edit control.
            </returns>
      <remarks>
              If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Text" /> property is <see cref="F:System.String.Empty" />, this method returns zero; otherwise, it returns the number of lines.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TouchToolBar">
      <summary>
            Gets the shown <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TouchToolBar" /> by touch operation.
            </summary>
      <value>
            The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TouchToolBar" /> instance which will be shown by touch operation.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs">
      <summary>
              Represents the <see cref="T:System.EventArgs" /> for the <b>DropDownOpening</b> event.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" /> class.
            </summary>
      <param name="syncData">
              A <see langword="bool" /> value, if set to <see langword="true" /> synchronizes the value to the drop-down control.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs.SyncData">
      <summary>
              Gets or sets a value that indicates whether to synchronize data to the drop-down when it's opening.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to synchronize data to the drop-down when it's opening; otherwise, <see langword="false" />.
            </value>
      <remarks>
              This property determines whether to synchronize the data to the control from the drop-down dialog when it's opening.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs.ByTouch">
      <summary>
            Gets a value that indicates whether the drop-down operation is tiggered by touch
            </summary>
      <value>
        <see langword="true" /> if the operation is tiggered by touch; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs">
      <summary>
              Represents the <see cref="T:System.EventArgs" /> for the <b>DropDownClosing</b> event.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs.#ctor">
      <summary>
              Initializes the instance of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs.#ctor(System.Boolean,System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" /> class.
            </summary>
      <param name="syncData">
              A <see langword="bool" /> value, if set to <see langword="true" />, the data is synchronized to the owner control;
              otherwise, <see langword="false" />.
            </param>
      <param name="value">
              An <b>object</b> that indicates the value from the drop-down dialog.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs.SyncData">
      <summary>
              Gets or sets a value that indicates whether to synchronize data to the control from the drop-down when it's closing.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to synchronize the data to the control from the drop-down when it's closing; otherwise, <see langword="false" />.
            </value>
      <remarks>
              The property determines whether to synchronize the data to the control from the drop-down when it's closing.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs.Value">
      <summary>
              Gets or sets the value from the drop-down dialog.
            </summary>
      <value>
              An <b>object</b> that indicates the value from the drop-down dialog.
            </value>
      <remarks>
              The property retrieves the value of the drop-down dialog.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker">
      <summary>
              Represents the drop down picker for date and time values.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.ShowPickers">
      <summary>
              Gets or sets the display options of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions" /> value that indicates the display options of the drop-down picker.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions.Both" />.
            </value>
      <remarks>
              Use the <b>ShowPickers</b> property to get or set the display options of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.BackColor">
      <summary>
              Gets or sets the background color of the drop-down picker
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of your forms.
            </remarks>
      <exception cref="T:System.ArgumentException">The value isn't valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.SelectedBackColor">
      <summary>
            Gets or sets the highlight background color of the drop-down picker.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value indicates the highlight background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
      <remarks>
            You can use the <b>BackColor</b> property to change the highlight background color of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.ButtonBackColor">
      <summary>
            Gets or sets the button background color of the drop-down picker.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value indicates the button background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.Control" />.
            </value>
      <remarks>
            You can use the <b>ButtonBackColor</b> property to change the button background color of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.ButtonForeColor">
      <summary>
            Gets or sets the button foreground color of the drop-down picker.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value indicates the button foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.ControlText" />.
            </value>
      <remarks>
            You can use the <b>ButtonForeColor</b> property to change the button foreground color of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.FlatStyle">
      <summary>
              Gets or sets the appearance of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.FlatStyle" /> value that indicates the control appearance.
              <br /> The default is <see cref="F:System.Windows.Forms.FlatStyle.System" />.
            </value>
      <remarks>
              Use the <b>FlatStyle</b> property to get or set the display of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.ForeColor">
      <summary>
            Gets or sets the color of the foreground of the drop-down picker.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value indicates the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.GrayText" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.SelectedBorderColor">
      <summary>
            Gets or sets the color of the selected border of the drop-down picker.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value indicates the selected border color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.SingleBorderColor">
      <summary>
            Gets or sets the color for a single line border.
            </summary>
      <value>
            The default value is the <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
            The color only takes effect when BorderStyle is FixedSingle.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.SelectedForeColor">
      <summary>
            Gets or sets the color of the selected foreground of the drop-down picker.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value indicates the selected foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowText" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.SelectionRenderMode">
      <summary>
            Gets or sets the selection render mode of the drop-down picker.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode" /> value indicates the selection render mode of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.Border" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.TabForeColor">
      <summary>
            Gets or sets the color of the tab foreground.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value indicates the tab foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.ControlText" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.HeaderBackColor">
      <summary>
            Gets or sets the background color for the empty area of the header area.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value indicates the empty area of the header area background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.Control" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.DateTabText">
      <summary>
              Gets or sets the text shown in the date tab.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the text shown in the date tab.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.TimeTabText">
      <summary>
              Gets or sets the text shown in the time tab.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the text shown in the time tab.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker">
      <summary>
              Represents the dropdown picker.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.BackColor">
      <summary>
              Gets or sets the background color of the drop-down picker
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.SingleBorderColor">
      <summary>
              Gets or sets the color for a single line border.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value indicates the single line border color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The color only takes effect when BorderStyle is FixedSingle.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.SelectedBackColor">
      <summary>
              Gets or sets the highlight background color of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the highlight background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the highlight background color of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.Font">
      <summary>
              Gets or sets the font of the drop-down picker.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.Font" /> value indicates the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            </value>
      <remarks>
              You can use the <b>Font</b> property to change the font of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.BorderStyle">
      <summary>
              Gets or sets the border style of the drop-down picker.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.BorderStyle" /> enumeration that indicates the border style.
              <br /> The default is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </value>
      <remarks>
              You can use the <b>BorderStyle</b> property to create borderless and flat style controls, in addition to the default three-dimensional control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.FlatStyle">
      <summary>
              Gets or sets the appearance of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.FlatStyle" /> value that indicates the control appearance.
              <br /> The default is <see cref="F:System.Windows.Forms.FlatStyle.System" />.
            </value>
      <remarks>
              Use the <b>FlatStyle</b> property to get or set the display of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.ButtonBackColor">
      <summary>
              Gets or sets the button background color of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the button background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Control" />.
            </value>
      <remarks>
              You can use the <b>ButtonBackColor</b> property to change the button background color of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.ButtonForeColor">
      <summary>
              Gets or sets the button foreground color of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the button foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.ControlText" />.
            </value>
      <remarks>
              You can use the <b>ButtonForeColor</b> property to change the button foreground color of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.SelectionRenderMode">
      <summary>
            Gets or sets the selection render mode of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode" /> value indicates the selection render mode of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.Border" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.SelectedForeColor">
      <summary>
            Gets or sets the color of the selected foreground of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the selected foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowText" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.ForeColor">
      <summary>
            Gets or sets the color of the foreground of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.GrayText" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.SelectedBorderColor">
      <summary>
            Gets or sets the color of the selected border of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the selected border color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode">
      <summary>
              Represents the rendering mode of the selection are for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.Border">
      <summary>
              Shows a border around the selected row.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.Fill">
      <summary>
              Fill the background of the selected row.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.BorderWithFill">
      <summary>
              Fill the background of the selected row and shows a border abound it.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions">
      <summary></summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions.Both">
      <summary>
            The both
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions.DatePicker">
      <summary>
            The date picker
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions.TimePicker">
      <summary>
            The time picker
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateDropDownType">
      <summary>
              Prepesnets the drop down element type for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DateDropDownType.Calendar">
      <summary>
              Shows the drop-down Calendar on the drop down window.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DateDropDownType.Picker">
      <summary>
              Shows the drop-down picker on the drop down window.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase">
      <summary>
              Represents the base class for the text editing control.
            </summary>
      <remarks>
              This class will process the synchronization between ControlBase and InnerEditor.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.#ctor(System.ComponentModel.IContainer)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> class.
            </summary>
      <param name="container">
              The container indicates the container for the component model.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the ElementContainerControl and its child controls or elements
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
              True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
      <remarks>
              Call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Dispose(System.Boolean)" /> when you are finished using the <see cref="T:System.Windows.Forms.Control" />. 
              The <b>Dispose</b> method leaves the <see cref="T:System.Windows.Forms.Control" /> in an unusable state. 
              After calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Dispose(System.Boolean)" />, you must release all references to the <see cref="T:System.Windows.Forms.Control" /> 
              so the garbage collector can reclaim the memory that the <see cref="T:System.Windows.Forms.Control" /> was occupying.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.AutoSizeChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.AutoSize" /> property is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.AutoSize" /> property is changed.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TextChanging">
      <summary>
              Occurs just before the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" /> property is changed in the control.
            </summary>
      <remarks>
              This event is raised before the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnTextChanging(GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TextChanging" /> event.
            </summary>
      <param name="e">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs" /> instance that contains the event data.
            </param>
      <remarks>
             Raising an event invokes the event handler through a delegate.
             <para />
             The <b>OnTextChanging</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
             <para /><b>Notes to Inheritors:</b><para />
             When overriding <b>OnTextChanging</b> in a derived class, be sure to call the base class's <b>OnTextChanging</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ModifiedChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Modified" /> property is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Modified" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnModifiedChanged(System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ModifiedChanged" /> event.
             </summary>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnModifiedChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnModifiedChanged</b> in a derived class, be sure to call the base class's <b>OnModifiedChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.EditStatusChanged">
      <summary>
              Occurs when toggling between insert and overwrite mode.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OverWrite" /> property is changed or the user presses the Insert key.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnEditStatusChanged(GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs)">
      <summary>
               Raises the <b>EditStatus</b>Changed event.
             </summary>
      <param name="e">
               The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnEditStatusChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnEditStatusChanged</b> in a derived class, be sure to call the base class's <b>OnEditStatusChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput">
      <summary>
              Occurs when entering invalid characters.
            </summary>
      <remarks>
              This event is raised if the invalid characters are entered using the keyboard or the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnInvalidInput(System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> event.
             </summary>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnInvalidInput</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnInvalidInput</b> in a derived class, be sure to call the base class's <b>OnInvalidInput</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContentAlignmentChanged">
      <summary>
              Occurs when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContentAlignment" /> property is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContentAlignment" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnContentAlignmentChanged(System.EventArgs)">
      <summary>
               Occurs when the <b>ContentAlignment</b> property is changed.
             </summary>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
              Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnContentAlignmentChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnContentAlignmentChanged</b> in a derived class, be sure to call the base class's <b>OnContentAlignmentChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyleChanged">
      <summary>
               Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" /> property is changed.
             </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnBorderStyleChanged(System.EventArgs)">
      <summary>
             Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyleChanged" /> event.
             </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnBorderStyleChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnBorderStyleChanged</b> in a derived class, be sure to call the base class's <b>OnBorderStyleChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.HideSelectionChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.HideSelection" /> property is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.HideSelectionChanged" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnHideSelectionChanged(System.EventArgs)">
      <summary>
               Raises the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.HideSelection" /> event.
             </summary>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnHideSelectionChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnHideSelectionChanged</b> in a derived class, be sure to call the base class's <b>OnHideSelectionChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnlyChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> property is changed.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> property is changed.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnReadOnlyChanged(System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnlyChanged" /> event.
             </summary>
      <param name="e">
               The <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnReadOnlyChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnReadOnlyChanged</b> in a derived class, be sure to call the base class's <b>OnReadOnlyChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit">
      <summary>
              Occurs when entering special keys that cause the control to lose focus.
            </summary>
      <remarks>
              This event is raised if the focus is moved out of the control using keyboard operations.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit" /> event.
             </summary>
      <param name="e">
               The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnKeyExit</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnKeyExit</b> in a derived class, be sure to call the base class's <b>OnKeyExit</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.RightToLeftChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.RightToLeft" /> property is changed.
             <para />
             This event is not relevant for this class.
            </summary>
      <remarks>
              This event is raised if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.RightToLeft" /> property is changed.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle">
      <summary>
              Gets or sets the type of border that is drawn around the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" /> enumeration that indicates the border style.
             <br />
              The default is <b>BorderStyle.Fixed3D</b>.
            </value>
      <remarks>
              You can use the <b>BorderStyle</b> property to create borderless and flat style controls, in addition to the default three-dimensional control.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              A value that is not within the range of valid values for the enumeration was assigned to the property. 
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SingleBorderColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.FlatStyle">
      <summary>
              Gets or sets the flat style of the edit control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx" /> enumeration that indicates the flat style of the edit control.
            </value>
      <remarks>
              The <b>FlatStyle</b> property determines the display style of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SingleBorderColor">
      <summary>
              Gets or sets the color when <b>BorderStyle</b> is <b>FixedSingle</b>.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the border color when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" /> is <b>FixedSingle</b>.
              <br />
              The default is <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The <see cref="T:System.Drawing.Color" /> only takes effect when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" /> is <b>FixedSingle</b>.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackColor">
      <summary>
              Gets or sets the background color of the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.
              <br />
              The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral,               PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of your forms.
              <para />
              To change the color of the text within the control, use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ForeColor" /> property. When setting the <b>BackColor</b> property of your control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <b>BackColor</b> and <b>ForeColor</b> properties are both set to <b>Color.Black</b>, the text within your control will not be visible.
              <para />
              This property might be over ridden if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> property of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> is set to <see langword="true" />.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DisabledBackColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ForeColor">
      <summary>
              Gets or sets the foreground color of the control.
            </summary>
      <value>
              The foreground <see cref="T:System.Drawing.Color" /> of the control. 
              <br />
              The default is the <b>SystemColors.WindowText</b>.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral,               PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
              You can use the <b>ForeColor</b> property to change the color of the text within the control to match the text of other controls on your form. 
              You can also use this property to highlight a specific control that contains an invalid value.
              <para />
              To change the background color of the control, use the <b>BackColor</b> property. 
              When setting the <b>ForeColor</b> property of your text control, ensure that the color you choose does not cause the text of the control to disappear. 
              For example, if the <b>ForeColor</b> and <b>BackColor</b> properties are both set to <b>Color.Black</b>, the text within your textbox control will not be visible.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DisabledForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DisabledBackColor">
      <summary>
              Gets or sets the disabled background color of the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the disabled background color.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Control" />.
            </value>
      <remarks>
              If this control is disabled, the background is displayed using the value of this property.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DisabledForeColor">
      <summary>
              Gets or sets the disabled foreground color of the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the disabled foreground color.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.GrayText" />.
            </value>
      <remarks>
              If this control is disabled, the foreground is displayed using the value of this property.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnlyBackColor">
      <summary>
              Gets or sets the background color when the control is read-only.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color when the control is read-only.
            </value>
      <remarks>
              If this control is read-only, the background is displayed using the value of this property.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is a transparent or semi-transparent color value.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnlyForeColor">
      <summary>
              Gets or sets the foreground color when the control is read-only.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground color when the control is read-only.
            </value>
      <remarks>
              If this control is read-only, the foreground is displayed using the value of this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ActiveBackColor">
      <summary>
              Gets or sets the background color when the control has the input focus.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color when the control has the input focus.
            </value>
      <remarks>
              If this control has the input focus, the background is displayed using the value of this property.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is a transparent or semi-transparent color value.</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackColor" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ActiveForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ActiveForeColor">
      <summary>
              Gets or sets the foreground color when the control has the input focus.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground color when the control has the input focus.
            </value>
      <remarks>
              If this control has the input focus, the foreground is displayed using the value of this property.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackgroundImage">
      <summary>
              Gets or sets the background image displayed in the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.
              <br />
              The default is <see langword="null" />.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral,               PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
              Use the <b>BackgroundImage</b> property to place a graphic image on a control. 
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackgroundImageLayout" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackgroundImageLayout">
      <summary>
              Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.
            </summary>
      <value>
              One of the values of <see cref="T:System.Windows.Forms.ImageLayout" /> 
              (<see cref="F:System.Windows.Forms.ImageLayout.Center" /> , 
              <see cref="F:System.Windows.Forms.ImageLayout.None" />,
              <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, 
              <see cref="F:System.Windows.Forms.ImageLayout.Tile" />, 
              or <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />). 
              <see cref="F:System.Windows.Forms.ImageLayout.Tile" /> is the default value.
              </value>
      <remarks>
              Use the <b>BackgroundImageLayout</b> property to specify the position and behavior of an image you have placed on a control. <b>BackgroundImageLayout</b> takes effect only if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackgroundImage" /> property is set.
             <pare />
              You can increase performance for large images if you set <b>BackgroundImageLayout</b> to something other than <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.
              </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              The specified enumeration value does not exist. 
            </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral,               PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackgroundImage" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text">
      <summary>
              Gets or sets the text associated with this control.
            </summary>
      <value>
              The text displayed in the control.
            </value>
      <remarks>
              The <b>Text</b> property retrieves the string value displayed on this control.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TextLength" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TextLength">
      <summary>
              Gets the length of the text.
            </summary>
      <value>
              The number of characters contained in the text of the control.
            </value>
      <remarks>
              You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart">
      <summary>
              Gets or sets the number of the character's position to start selecting from.
            </summary>
      <value>
              The character position to start selecting from.
              <br />
              The default is zero.
            </value>
      <remarks>
              If no text is selected in the control, this property indicates the insertion point for new text. If you set this property to a location beyond the length of the text in the control, the selection start position is placed after the last character. When text is selected in the control, changing this property might decrease the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" /> property. If the remaining text in the control after the position indicated by the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" /> property is less than the value of the <b>SelectionLength</b> property, the value of the <b>SelectionLength</b> property is automatically decreased. The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" /> property never causes an increase in the <b>SelectionLength</b> property.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The assigned value is less than zero.
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectedText" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Select(System.Int32,System.Int32)" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength">
      <summary>
              Gets or sets the number of characters selected in the control.
            </summary>
      <value>
              The number of characters selected in the control.
              <br />
              The default is zero.
            </value>
      <remarks>
              You can use this property to determine if any characters are currently selected in the control before performing operations on the selected text. When the value of the <b>SelectionLength</b> property is set to a value that is larger than the number of characters within the text of the control, the value of the <b>SelectionLength</b> property is set to the entire length of text within the control minus the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" /> property 
              (if any value is specified for the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" /> property).
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The assigned value is less than zero.
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectedText" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Select(System.Int32,System.Int32)" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectedText">
      <summary>
              Gets or sets a value that indicates the currently selected text in the control.
            </summary>
      <value>
              A string that represents the currently selected text in the control.
              <br />
              The default is <see langword="string.Empty">string.Empty</see></value>
      <remarks>
              You can assign text to this property to change the text currently selected in the control. If no text is currently selected in the control, this property inserts the new value in the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" /> property at the current caret position.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Select(System.Int32,System.Int32)" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.RightToLeft">
      <summary>
              Gets or sets a value that indicates whether the control's elements are aligned to support locales using right-to-left fonts.
            </summary>
      <value>
              One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values. 
              <br />
              The default is <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.
             </value>
      <remarks>
              This property is not relevant for this class.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DefaultSize">
      <summary>
              This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
              <para />
              Gets the default size of the control.
            </summary>
      <value>
               The default <see cref="T:System.Drawing.Size" /> of the control.
            </value>
      <remarks>
              The <b>DefaultSize</b> property represents the <see cref="T:System.Drawing.Size" /> of the control when it is initially created. You can adjust the size of the control by setting its <see cref="T:System.Drawing.Size" /> property value.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContentAlignment">
      <summary>
              Gets or sets the content alignment of the control.
            </summary>
      <value>
              The value indicates the alignment of the content of this control.
              <br />
              The default is <see cref="F:System.Drawing.ContentAlignment.TopLeft" />.
            </value>
      <remarks>
              There are nine alignment types for displaying the content. 
              Each type can be set using this property.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Padding" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Padding">
      <summary>
              Gets or sets padding within the control.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding"></see> object that represents the control's internal spacing characteristics.
              <br /> The default is "1,1,1,1".
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
              The <b>Padding</b> property indicates the rectangle used for displaying the text. The rectangle is between the border and display area and excludes the side button areas.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContentAlignment" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.AutoSize">
      <summary>
             Gets or sets a value that indicates whether the control is automatically sized to show all the content in a vertical direction.
            </summary>
      <value>
        <see langword="true" /> if enabled; otherwise, <see langword="false" />.
            <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              When this property is set to <see langword="true" />, 
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> adjusts its width to display all the content.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Initializing">
      <summary>
              Gets a value that indicates whether this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> is initializing.
            </summary>
      <value>
        <see langword="true" /> if initializing; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Modified">
      <summary>
              Gets or sets a value that indicates that the control has been modified by the user since the control was created or its contents were last set.
            </summary>
      <value>
        <see langword="true" /> if modified by user; otherwise, <see langword="false" />.
              <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              You can use this property to determine if the user has modified the contents of the control. You can also set this property in code to indicate that changes were made to the control by the application. This property can be used by validation and data-saving methods to determine if changes were made in a control so the changed content can be validated or saved.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly">
      <summary>
              Gets or sets a value that indicates whether this control is read-only.
            </summary>
      <value>
        <see langword="true" /> if the control is read-only; otherwise, <see langword="false" />.
              <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              When this property is set to <see langword="true" />, the contents of the control cannot be changed by the user at run time. With this property set to <see langword="true" />, you can still set the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" /> property in code. You can use this feature instead of disabling the control with the <see cref="P:System.Windows.Forms.Control.Enabled" /> property to allow the contents to be copied and ToolTips to be shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.EditMode">
      <summary>
              Gets or sets the edit mode of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditMode" /> value that indicates the edit mode of this control.
              <br />
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.Insert" />.
            </value>
      <remarks>
              If the value of this property has the "Fixed" prefix, pressing the Insert key will not effect edit mode. The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OverWrite" /> property may effect this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.HideSelection">
      <summary>
              Gets or sets a value that indicates whether to hide the selection when the control does not have focus.
            </summary>
      <value>
        <see langword="true" /> to hide the selection; otherwise, <see langword="false" />.
              <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              You can use this property to keep text highlighted in a control while another form or a dialog box has focus, such as a spelling checker dialog box.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLastChar">
      <summary>
              Gets or sets whether the next control in the tab order receives the focus as 
              soon as the control is filled at the last character. 
            </summary>
      <value>
        <see langword="true" /> if the focus is moved to the next control in the tab order as soon as the control
              is filled at the last character defined by the input control; otherwise, <see langword="false" />. 
               <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              The input focus moves to the next control when the last entered character causes the text to exceed the limit of the control.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLeftRightKey" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLeftRightKey">
      <summary>
              Gets or sets whether the focus automatically moves to the previous or next control in the tab order 
              when pressing the left or right arrow keys.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLeftRightKey" /> enumeration values.  
              <br /> 
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey.None" />.
            </value>
      <remarks>
              The value of this property indicates the key which moves the input focus to the next control. 
              When the caret is at the last character of this control, focus moves out by pressing the right arrow key. 
              When the caret is before the first character of this control, focus moves out by pressing the left key.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLastChar" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo">
      <summary>
              Gets a value that indicates whether the control can undo the previous operation in a control.
            </summary>
      <value>
        <see langword="true" /> if this instance can undo; otherwise, <see langword="false" />.
            </value>
      <remarks>
              If this method returns <see langword="true" />, 
              you can call the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" /> method to undo the last operation in a control. 
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ShowContextMenu">
      <summary>
              Gets or sets a value that indicates whether to pop up the context menu of the control.
            </summary>
      <value>
        <see langword="true" /> if the context menu is shown when right-clicking the control; 
              otherwise, <see langword="false" />.
              <br />
              The default is <see langword="true" />.
            </value>
      <remarks>
              This property determines whether to show the context menu. If the <see cref="!:ContextMenu" /> or <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenuStrip" /> is not none, this control displays this special menu. If both values are none, the default context menu is displayed.
            </remarks>
      <seealso cref="!:ContextMenu" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenuStrip" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenuStrip">
      <summary>
              Gets or sets the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associated with this control.
            </summary>
      <value>
              The <see cref="T:System.Windows.Forms.ContextMenuStrip" /> for this control, or <see langword="null" /> if there is no <see cref="T:System.Windows.Forms.ContextMenuStrip" />. 
              <br />
              The default is <see langword="null" />.
            </value>
      <remarks>
              If a <see cref="!:ContextMenu" /> has also been assigned to the control, the <see cref="!:ContextMenu" /> takes precedence over the <b>ContextMenuStrip</b>.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ShowContextMenu" />
      <seealso cref="!:ContextMenu" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OverWrite">
      <summary>
              Gets the current edit status of the control.
            </summary>
      <value>
        <see langword="true" /> if the current edit status is overwrite; otherwise, <see langword="false" />.
            </value>
      <remarks>
              The <b>OverWrite</b> property indicates the edit mode of this control. The Insert key can change this value. If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.EditMode" /> property is <b>FixedInsert</b> or <b>FixedOverWrite</b>, this property is fixed.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.EditMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Font">
      <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
        <para>
              The <b>Font</b> property is an ambient property. An ambient property is a control property that, 
              if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
              <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. For more information about 
              ambient properties, see the <see cref="T:System.Windows.Forms.AmbientProperties" /> class or the <see cref="T:System.Windows.Forms.Control" /> class overview.
            </para>
        <para></para>
        <para>
              Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>; 
              however, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy">
      <summary>
              Copies the current selection in the control to the Clipboard.
            </summary>
      <remarks>
              You can use this method, instead of using the <see cref="T:System.Windows.Forms.Clipboard" /> class, 
              to copy text in the control and place it in the <b>Clipboard</b>.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste">
      <summary>
              Replaces the current selection in the control with the contents of the <b>Clipboard</b>.
            </summary>
      <remarks>
             The <b>Paste</b> method will only paste text into the control if text is currently stored in the <b>Clipboard</b>. 
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut">
      <summary>
              Moves the current selection in the control to the Clipboard.
            </summary>
      <remarks>
              This method will only cut text from the control if text is selected in the control. 
              You can use this method, instead of using the <see cref="T:System.Windows.Forms.Clipboard" />  class, 
              to copy text in the control and move it to the <b>Clipboard</b>.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectAll">
      <summary>
              Selects all text in the control.
            </summary>
      <remarks>
              This method enables you to select all text in the control. You can use this method in conjunction with the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" /> method, which requires text to be selected in the control, to cut the contents of the control and paste them into the <b>Clipboard</b>.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DeselectAll" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DeselectAll">
      <summary>
              Specifies that the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" /> property 
              is zero so that no characters are selected in the control.
            </summary>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectAll" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Select(System.Int32,System.Int32)">
      <summary>
              Selects a range of text in the control.
            </summary>
      <param name="start">
              The position of the first character in the current text selection within the text box. 
            </param>
      <param name="length">
              The number of characters to select. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The <b>value</b> of the start parameter is less than zero.
            </exception>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectAll" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DeselectAll" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectedText" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear">
      <summary>
              Clears all text in the control.
            </summary>
      <remarks>
              You can use this method to clear the contents of 
              the control instead of assigning an empty string to the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" /> property.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ShortcutClear">
      <summary>
              Clears all text in the control using a shortcut.
            </summary>
      <remarks>
              This method is mainly used for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />. The behavior is similar to the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.AppendText(System.String)">
      <summary>
              Appends text to the current text of the edit control.
            </summary>
      <param name="text">
              The text to append to the current contents of the edit control.
            </param>
      <remarks>
              You can use this method to add text to the existing text 
              in the control instead of using the concatenation operator (+) 
              to concatenate text to the Text property.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo">
      <summary>
              Undoes the last edit operation in the control.
            </summary>
      <remarks>
              This method will undo the last <b>Clipboard</b> or text change operation performed in the control if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" /> property returns <see langword="true" />.
              <note>
              This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.
              </note></remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ClearUndo">
      <summary>
              Clears information about the most recent operation from the undo buffer of the control.
            </summary>
      <remarks>
              You can use this method to prevent an undo operation from repeating, 
              based on the state of your application.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ResetText">
      <summary>
              Resets the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" /> property to its default value.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnHandleCreated(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated"></see> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
              Sets the specified boundary of the <b>EditBase</b> control.
            </summary>
      <param name="x">
              The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.
            </param>
      <param name="y">
              The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.
            </param>
      <param name="width">
              The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.
            </param>
      <param name="height">
              The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.
            </param>
      <param name="specified">
              A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.
            </param>
      <remarks>
             Typically, the parameters that correspond to the boundary, not included in the specified parameter, are passed in with their current values. For example, the <see cref="P:System.Windows.Forms.Control.Height" />, <see cref="P:System.Windows.Forms.Control.Width" />, <see cref="P:System.Drawing.Point.X" />, or <see cref="P:System.Drawing.Point.Y" /> properties of the <see cref="P:System.Windows.Forms.Control.Location" /> property can be passed in with a reference to the current instance of the control; however, all values passed in are honored and applied to the control.
             <para />
             The specified parameter represents the elements of the controls <see cref="P:System.Windows.Forms.Control.Bounds" /> changed by your application. For example, if you change the <see cref="T:System.Drawing.Size" /> of the control, the specified parameter value is the <b>Size</b> value of <see cref="T:System.Windows.Forms.BoundsSpecified" />; however, if the <b>Size</b> is adjusted in response to the <see cref="P:System.Windows.Forms.Control.Dock" /> property being set, the specified parameter value is the None value of <b>BoundsSpecified</b>.
             <para /><b>Notes to Inheritors:</b><para />
             When overriding SetBoundsCore in a derived class, be sure to call the base class's SetBoundsCore method to force the boundary of the control to change. Derived classes can add size restrictions to the SetBoundsCore method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.GetPreferredSize(System.Drawing.Size)">
      <summary>
              Retrieves the size of a rectangular area into which a control can fit.
            </summary>
      <param name="proposedSize">
              The custom-sized area for a control.
            </param>
      <returns>
              An ordered pair of type <see cref="T:System.Drawing.Size" /> objects that represent the width and height of a rectangle.
            </returns>
      <remarks>
              The behavior of GetPreferredSize differs by control. The LayoutEngine might be unable to assign the returned size to the control. You can return a size larger than the constraints indicated in the proposedSize parameter, but proposedSize should decrease as the constraint decreases. For example, GetPreferredSize(new Size(100, 0)) should not be wider than GetPreferredSize(new Size(200, 0)). The exception is a proposedSize of 0 or Size.Empty, which is defined as unconstrained.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ScrollToCaret">
      <summary>
              Scrolls the content of the control to the current caret position.
            </summary>
      <remarks>
             This method enables you to scroll the contents of the control until the caret is within the visible region of the control. If the caret is positioned below the visible region of the control, the <b>ScrollToCaret</b> method will scroll the contents of the control until the caret is visible at the bottom of the control. If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control. You can use this method in a multiline control to ensure that the current text entry point is within the visible region of the control.
             <note>
             This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.
             </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
              This API supports the .NET Framework infrastructure and is not intended to be used directly
              from your code.
            <para />
              Determines whether the specified key is a regular input key or a special key that requires 
              preprocessing.
             </summary>
      <param name="keyData">
               One of the <see cref="T:System.Windows.Forms.Keys" /> values.
             </param>
      <returns>
        <see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.
             </returns>
      <remarks>
               Call the <b>IsInputKey</b> method to determine whether the key specified by the keyData
               parameter is an input key that the control requires. This method is called during window
               message preprocessing to determine whether the specified input key should be 
               preprocessed or sent directly to the control. If <b>IsInputKey</b> returns <see langword="true" />, 
               the specified key is sent directly to the control. If <b>IsInputKey</b> returns <see langword="false" />, 
               the specified key is preprocessed and only sent to the control if it is not consumed 
               by the preprocessing phase. Keys that are preprocessed include the TAB, RETURN, ESCAPE, 
               and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.IsInputChar(System.Char)">
      <summary>
              This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
            <para />
              Determines if a character is an input character that the control recognizes.
             </summary>
      <param name="charCode">The character to test.</param>
      <returns>
        <see langword="true" /> if the character should be sent directly to the control and not preprocessed;
             otherwise, <see langword="false" />.
             </returns>
      <remarks>
               Call the <b>IsInputChar</b> method to determine whether the character specified by 
               the charCode parameter is an input character that the control requires. 
               This method is called during window message preprocessing to determine 
               whether the specified input character should be preprocessed or sent directly to the control.
               If <b>IsInputChar</b> returns <see langword="true" />, the specified character is sent directly to the control. 
               If <b>IsInputChar</b> returns <see langword="false" />, the specified character is preprocessed and 
               only sent to the control if it is not consumed by the preprocessing phase. 
               The preprocessing of a character includes checking whether the character is a mnemonic of
               another control.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnGotFocus(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.
             </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnGotFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnGotFocus</b> in a derived class, be sure to call the base class's <b>OnGotFocus</b> method so that registered delegates receive the event. 
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnLostFocus(System.EventArgs)">
      <summary>
               Raise the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnLostFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnLostFocus</b> in a derived class, be sure to call the base class's <b>OnLostFocus</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>
              Moves the focus using the key exit event.
            </summary>
      <param name="e">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> instance that contains the event data.
            </param>
      <remarks>
        <b>ExitKeys.CharInput</b>, <b>ExitKeys.CtrlRight</b>, <b>ExitKeys.NextControl</b>, 
              <b>ExitKeys.Right</b>, and <b>ExitKeys.Tab</b> move the focus forward. 
              Other <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" /> move the focus backward.
              <note>
               The base method must be invoked when overridden in the inherited class; otherwise, the focus will not move.
              </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.WndProc(System.Windows.Forms.Message@)">
      <summary>
              Processes Windows messages.
            </summary>
      <param name="m">
              The Windows System.Windows.Forms.Message to process.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnEnter(System.EventArgs)">
      <summary>
             Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
             </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnEnter</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnEnter</b> in a derived class, be sure to call the base class's <b>OnEnter</b> method so that registered delegates receive the event. 
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnLeave(System.EventArgs)">
      <summary>
               Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnLeave</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnLeave</b> in a derived class, be sure to call the base class's <b>OnLeave</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.
            </summary>
      <param name="e">
              A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.
            </param>
      <remarks>
             Raising an event invokes the event handler through a delegate.
             <para />
             The <b>OnValidating</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
             <para /><b>Notes to Inheritors:</b><para />
             When overriding <b>OnValidating</b> in a derived class, be sure to call the base class's <b>OnValidating</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnValidated(System.EventArgs)">
      <summary>
               Raises the <see cref="E:System.Windows.Forms.Control.Validated" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> that contains the event data.
             </param>
      <remarks>
              Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnValidated</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnValidated</b> in a derived class, be sure to call the base class's <b>OnValidated</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnPaddingChanged(System.EventArgs)">
      <summary>
               Raises the <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnPaddingChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnPaddingChanged</b> in a derived class, be sure to call the base class's <b>OnPaddingChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnFontChanged(System.EventArgs)">
      <summary>
             Raises the <see cref="E:System.Windows.Forms.Control.FontChanged"></see> event.
             </summary>
      <param name="e">A <see cref="T:System.EventArgs"></see> that contains the event data.</param>
      <remarks>
               Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnFontChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnFontChanged</b> in a derived class, be sure to call the base class's <b>OnFontChanged</b> method so that registered delegates receive the event. 
             </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DefaultImeMode">
      <summary>
              This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
              <para />
              Gets the default Input Method Editor (IME) mode supported by the control.
            </summary>
      <value>
              One of the System.Windows.Forms.ImeMode values.
            </value>
      <remarks>
              An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.
              <para />
              As implemented in the <see cref="T:System.Windows.Forms.Control" /> class, this property always returns the <see cref="F:System.Windows.Forms.ImeMode.Inherit" /> value. The Inherit value specifies that the IME mode is inherited from the parent control.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding the <b>DefaultImeMode</b> property in a derived class, use the base class's <b>DefaultImeMode</b> property to extend the base implementation; otherwise, you must provide all the implementation.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ImeMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ImeMode">
      <summary>
              Gets or sets the Input Method Editor (IME) mode of the control.
            </summary>
      <value>
            One of the <see cref="T:System.Windows.Forms.ImeMode" /> values. The default is <see cref="F:System.Windows.Forms.ImeMode.Inherit" />.
            </value>
      <remarks>
              An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard. The <b>ImeMode</b> property is typically set to <see cref="F:System.Windows.Forms.ImeMode.Off" /> for a control that is intended to only enter numeric values. The ImeMode property value is set to <see cref="F:System.Windows.Forms.ImeMode.NoControl" /> for the <see cref="T:System.Windows.Forms.Form" /> class.
              <para />
              Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <see cref="F:System.Windows.Forms.ImeMode.NoControl" />.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              The assigned value is not one of the <see cref="T:System.Windows.Forms.ImeMode" /> enumeration values. 
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DefaultImeMode" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnEnabledChanged(System.EventArgs)">
      <summary>
             Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged"></see> event.
             </summary>
      <param name="e">A <see cref="T:System.EventArgs"></see> that contains the event data.</param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
             <para />
              The <b>OnEnabledChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
             <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnEnabledChanged</b> in a derived class, be sure to call the base class's <b>OnEnabledChanged</b> method so that registered delegates receive the event. 
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnVisibleChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged"></see> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs"></see> that contains the event data.</param>
      <remarks>
             Raising an event invokes the event handler through a delegate.
             <para />
             The <b>OnVisibleChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
             <para /><b>Notes to Inheritors:</b><para />
             When overriding <b>OnVisibleChanged</b> in a derived class, be sure to call the base class's <b>OnVisibleChanged</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnLocationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LocationChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnParentBackColorChanged(System.EventArgs)">
      <summary>
               Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event when the 
               <see cref="P:System.Windows.Forms.Control.BackColor" /> property value of the control's container changes.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate. 
            <para />
              The <b>OnParentBackColorChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnParentBackColorChanged</b> in a derived class, be sure to call the base class's <b>OnParentBackColorChanged</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.GetDefaultShortcuts">
      <summary>
            Gets the default shortcuts.
            </summary>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchContextMenuScale">
      <summary>
            Gets or sets the factor applies to context menu item's height while context menu is popped up by touch.
             </summary>
      <value>
             The factor applies to context menu item's height while context menu while popup by touch. The default is 1.5f.
             </value>
      <remarks>
              User can set <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchContextMenuScale" /> to make item's height larger in context menu when it is  popped up by touch.
             </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
             The assigned value is less than 1 or greater than 4.
             </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchDropDownScale">
      <summary>
            Gets or sets the factor applies to dropdown item while opening dropdown by touch behavior.
            </summary>
      <value>
            The factor applies to dropdown item while opening dropdown by touch behavior. The default is 1.5f.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The assigned value is less than 1 or greater than 4.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ShowGrippers">
      <summary>
            Gets or sets whether shown grippers when inputting by touch.
            </summary>
      <value>
        <see langword="true" /> to show grippers when inputting by touch; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ShowTouchToolBar">
      <summary>
            Gets or sets the how to show the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchToolBar" />.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions" /> value indicates how to show the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchToolBar" />. The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.TapGripper" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchToolBar">
      <summary>
            Gets the shown <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchToolBar" /> by touch operation.
            </summary>
      <value>
            The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchToolBar" /> instance which will be shown by touch operation.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs">
      <summary>
              Represents data for the <b>EditStatusChanged</b> event.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs.Overwrite">
      <summary>
              Gets the value that indicates whether the current edit status is overwrite mode.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether the current edit status is overwrite mode.
            </value>
      <remarks>
              The property retrieves the edit status.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs" /> class.
            </summary>
      <param name="overwrite">
              The value indicates whether the current edit status is overwrite mode.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment">
      <summary>
                Specifies how to position and align the attached element 
                to the core element.
            </summary>
      <remarks>
                This is used when alignment and positioning needs to take
                place between 2 elements, such as an image and a text.
                Usually, the text will become the core element 
                with the image being the attached element in this case.
            </remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.Left">
      <summary>
              The attached element is at the left of the core element.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.LeftTop">
      <summary>
              The attached element is at the left of the core element in horizontal, 
              and two element's top edges have same vertial coordinate.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.LeftMiddle">
      <summary>
              The attached element is at the left of the core element in horizontal, 
              and two element's center points have same vertial coordinate.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.LeftBottom">
      <summary>
              The attached element is at the left of the core element in horizontal, 
              and two element's bottom edges have same vertial coordinate.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.Top">
      <summary>
              The attached element is at the top of the core element.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.TopLeft">
      <summary>
              The attached element is at the top of the core element in vertical, 
              and two element's left edges have same horizontal coordinate.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.TopCenter">
      <summary>
              The attached element is at the top of the core element in vertical, 
              and two element's center points have same horizontal coordinate.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.TopRight">
      <summary>
              The attached element is at the top of the core element in vertical, 
              and two element's right edges have same horizontal coordinate.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.Right">
      <summary>
              The attached element is at the right of the core element.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.RightTop">
      <summary>
              The attached element is at the right of the core element in horizontal, 
              and two element's top edges have same vertial coordinate.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.RightMiddle">
      <summary>
              The attached element is at the right of the core element in horizontal, 
              and two element's center points have same vertial coordinate.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.RightBottom">
      <summary>
              The attached element is at the right of the core element in horizontal, 
              and two element's bottom edges have same vertial coordinate.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.Bottom">
      <summary>
              The attached element is at the bottom of the core element.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.BottomLeft">
      <summary>
              The attached element is at the bottom of the core element in vertical, 
              and two element's left edges have same horizontal coordinate.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.BottomCenter">
      <summary>
              The attached element is at the bottom of the core element in vertical, 
              and two element's center points have same horizontal coordinate.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.BottomRight">
      <summary>
              The attached element is at the bottom of the core element in vertical, 
              and two element's right edges have same horizontal coordinate.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace">
      <summary>
              Defines what kind of space is allowed in the text.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.None">
      <summary>
             No space character is allowed.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Narrow">
      <summary>
             Only SBCS space character is allowed.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Wide">
      <summary>
              Only DBCS space char character allowed.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Both">
      <summary>
              Both DBCS and SBCS space characters are allowed.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode">
      <summary>
              Specifies the type of 12-hour mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode.Hour12As0">
      <summary>
              12-hour mode ranges from 00:00:00 to 11:59:59.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode.Hour0As12">
      <summary>
              12-hour mode ranges from 01:00:00 to 12:59:59.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType">
      <summary>
              Represents the different year digit type.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType.FourDigitYear">
      <summary>
              The <b>FourDigitYear</b> mode ranges from 0000 - 9999.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType.TwoDigitYear">
      <summary>
              The <b>TwoDigitYear</b> mode ranges from 00 - 99.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateMode">
      <summary>
              Specifies the validate type of input.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateMode.ValidateNone">
      <summary>
              No validate mode, fields behavior independent.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateMode.Validate">
      <summary>
              Normal validate mode, fields behavior independent checking.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx">
      <summary>
              Specifies the input validation type.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateNone">
      <summary>
              Specifies no validate mode, field behavior is independent.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.Validate">
      <summary>
              Specifies normal validate mode, field behavior uses independent checking.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx">
      <summary>
              Specifies extended validate mode, adjusts when needed.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberSpinMode">
      <summary>
              Defines the number spin mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NumberSpinMode.Field">
      <summary>
              Spins by the field.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NumberSpinMode.Value">
      <summary>
              Spins by the specified field value.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NumberSpinMode.Digits">
      <summary>
              Spins by digits.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpinMode">
      <summary>
              Defines the date spin increment mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DateSpinMode.Field">
      <summary>
              Specifies to spin using the field.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DateSpinMode.Value">
      <summary>
              Specifies to spin using the value of the specified field.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ClipContent">
      <summary>
              Specifies how the literal in the content is handled in the clipboard.
            </summary>
      <remarks>
              Inserting or replacing text includes or excludes literals.
            </remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals">
      <summary>
              Specifies that literals are included.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.ExcludeLiterals">
      <summary>
              Specifies that literals are excluded.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.WrapMode">
      <summary>
              Represents how to wrap the line when it is beyond the width of the view.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WrapMode.NoWrap">
      <summary>
              Does not wrap.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WrapMode.WordWrap">
      <summary>
              Wraps the text by words.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WrapMode.CharWrap">
      <summary>
              Wraps the text by characters.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EditMode">
      <summary>
              Specifes the edit mode.
            </summary>
      <remarks>
              Use the members of this enumeration to control the INSERT or REPLACE mode of the editor.
            </remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.Insert">
      <summary>
              Indicates the <b>Insert</b> mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.Overwrite">
      <summary>
              Indicates the <b>Overwrite</b> mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.FixedInsert">
      <summary>
              Indicates the fixed <b>Insert</b> mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.FixedOverwrite">
      <summary>
              Indicates the fixed <b>Overwrite</b> mode.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HighlightText">
      <summary>
              Highlights the type of text selection in the control.
            </summary>
      <remarks>
              After getting focus, none, specified fields, or all text in the editor is highlighted.
            </remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.None">
      <summary>Specifies no highlight.</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.Field">
      <summary>Highlights the specified field.</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.All">
      <summary>Highlights all the text.</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals">
      <summary>
              Specifies how the literals are displayed during user input.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always">
      <summary>Always show the literals.</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PostDisplay">
      <summary>The literals are post displayed as the user types.</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PreDisplay">
      <summary>The literals are displayed before the user types.</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups">
      <summary>
              Specifies the key groups.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.NumKeys">
      <summary>
              Reresents the number input keys.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.MemoryKeys">
      <summary>
              Represents the memory operation keys.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.MathKeys">
      <summary>
              Represents the math operation keys.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.ResetKeys">
      <summary>
              Represnts the reset keys.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.EditKeys">
      <summary>
              Represents the keys for editing.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.Output">
      <summary>
              Represents the key for output.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.Indicator">
      <summary>
              Represents the indicator keys.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TabAction">
      <summary>
              Specifies how the tab key works.
            </summary>
      <remarks>
              The Tab key moves focus among controls or fields.
            </remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control">
      <summary>
              Used to move focus between controls.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Field">
      <summary>
              Used to move the cursor position between fields in the control.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern">
      <summary>
              Defines what kind of pattern is displayed in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EraPattern.EraName">
      <summary>
              Displays a full era name.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EraPattern.AbbreviatedEraName">
      <summary>
              Displays an abbreviated era name.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EraPattern.Symbol">
      <summary>
              Displays a symbol.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern">
      <summary>
              Defines what kind of pattern is displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern.MonthName">
      <summary>
              Displays a full month name.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern.AbbreviatedMonthName">
      <summary>
              Displays an abbreviated month name.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern.Number">
      <summary>
              Displays a number.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern">
      <summary>
              Defines what kind of pattern is displayed in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern.AmPmDesignator">
      <summary>
              Displays a full AMDesignator or PMDesignator.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern.AbbreviatedAmPmDesignator">
      <summary>
              Displays an abbreviated AMDesignator or PMDesignator.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern">
      <summary>
              Defines what kind of pattern is displayed.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern.WeekdayName">
      <summary>
              Displays a full weekday name.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern.AbbreviatedWeekdayName">
      <summary>
              Displays an abbreviated weekday name.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl">
      <summary>
              Determines what sign the value is.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl">
      <summary>
              Indicates not control sign of value.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Positive">
      <summary>
               Indicates keep value positive.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Negative">
      <summary>
              Indicates keep value negative.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SignState">
      <summary>
              Represent the sign type.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.None">
      <summary>
              Represent there is none sign. eg, value == <see langword="null" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Positive">
      <summary>
              Represent the value is positive. eg, value = +0.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Negative">
      <summary>
              Represent the value is negative. eg, value = -0.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey">
      <summary>
              Specifies the action for the left or right arrow key.
            </summary>
      <remarks>
              The left or right key causes focus to be lost when the caret is at the left-most or right-most position.
            </remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey.None">
      <summary>
              Specifies no action.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey.Left">
      <summary>
              Specifies to move to the previous control when pressing left or Ctrl+left keys on the first character of the control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey.Right">
      <summary>
              Specifies to move to the next control when pressing right or Ctrl+right keys on the last character of the control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey.Both">
      <summary>
              Specifies to move to the previous or next control when pressing the left or right or Ctrl+left or Ctrl+right keys on the first or last character of the control.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx">
      <summary>
              Specifies the appearance of a control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Flat">
      <summary>
              Specifies that the control appears flat.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Popup">
      <summary>
              Specifies that the control appears flat until the mouse pointer moves over it, at which point
              it appears three-dimensional.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Standard">
      <summary>
              Specifies that the control appears three-dimensional.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.System">
      <summary>
              Specifies that the appearance of the control is determined by the user's operating system.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.ActiveFlat">
      <summary>
              Specifies that the control uses the active flat style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Professional">
      <summary>
              Specifies that the control uses the professional appearance style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Office2007Blue">
      <summary>
              Specifies that the control uses the office2007 blue appearance style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Office2007Black">
      <summary>
              Specifies that the control uses the office2007 black appearance style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Office2007Silver">
      <summary>
              Specifies that the control uses the office2007 silver appearance style.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode">
      <summary>
              Represents an enumeration that defines the ellipsis mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.None">
      <summary>
              Specifies no ellipsis trim.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisEnd">
      <summary>
              Specifies to trim the end of the string with characters.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisPath">
      <summary>
              Specifies to trim the center of the string with charactors.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextEffect">
      <summary>
              Specifies the effect for how the text is drawn on a graphics surface, such as: Flat, 3D, and so on.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextEffect.Flat">
      <summary>
              Text is drawn with no 3D effect (default).
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextEffect.Inset">
      <summary>
              Text is drawn with a heavy inset effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextEffect.Raised">
      <summary>
              Text is drawn with a heavy raised effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextEffect.InsetLite">
      <summary>
              Text is drawn with a light inset effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextEffect.RaisedLite">
      <summary>
              Text is drawn with a light raised effect.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Symbols">
      <summary>
              Represents useful symbols.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.None">
      <summary>
              Specifies an empty symbol.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Arrow">
      <summary>
              Specifies an arrow.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowUnderline">
      <summary>
              Specifies an arrow with an underline.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowDoubleUnderline">
      <summary>
              Specifies an arrow with a double underline.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowThickUnderline">
      <summary>
              Specifies an arrow with a thick underline.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowOverline">
      <summary>
              Specifies an arrow with an over line.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowDoubleOverline">
      <summary>
              Specifies an arrow with a double over line.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowThickOverline">
      <summary>
              Specifies an arrow with a thick over line.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.DoubleArrow">
      <summary>
              Specifies a double arrow.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Dot">
      <summary>
              Specifies a dot.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ZoomIn">
      <summary>
              Specifies a zoom in symbol.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ZoomOut">
      <summary>
              Specifies a zoom out symbol.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection">
      <summary>
              Represents the direction of the symbol.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Left">
      <summary>
              Specifies the left direction.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Up">
      <summary>
              Specifies the up direction.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Right">
      <summary>
              Specifies the right direction.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Down">
      <summary>
              Specifies the down direction.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition">
      <summary>
              Specifies the side button position.
            </summary>
      <remarks>
              Use the members of this enumeration to set the side buttons'
              position when both buttons are inside or outside of the control border. 
              The left or right information is defined in the enumeration.
            </remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition.LeftInside">
      <summary>
              Side buttons are at the left side and inside the border.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition.LeftOutside">
      <summary>
              Side buttons are at the left and outside the border.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition.RightInside">
      <summary>
              Side buttons are at the right and inside of the border.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition.RightOutside">
      <summary>
              Side buttons are at the right and outside of the border.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility">
      <summary>
              Specifies the visibility of side buttons.
            </summary>
      <remarks>
              The members of this enumeration allow users to set the timing of spin and 
              drop-down button visibility.
            </remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility.NotShown">
      <summary>
              Side buttons are not shown.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility.ShowAlways">
      <summary>
              Side buttons are always shown.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility.ShowOnFocus">
      <summary>
              Side buttons are shown when the button container gets focus.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection">
      <summary>
               Specifies the direction in which a drop-down
               control is displayed relative to its parent control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.AboveLeft">
      <summary>
              Uses the mouse position to specify that the drop-down control
              is displayed above and to the left of its parent control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.AboveRight">
      <summary>
              Uses the mouse position to specify that the drop-down control
              is displayed above and to the right of its parent control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.BelowLeft">
      <summary>
              Uses the mouse position to specify that the drop-down control
              is displayed below and to the left of its parent control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.BelowRight">
      <summary>
              Uses the mouse position to specify that the drop-down control
              is displayed below and to the right of its parent control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Left">
      <summary>
              Compensates for nested drop-down controls and specifies that the drop-down control
              is displayed to the left of its parent control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Right">
      <summary>
              Compensates for nested drop-down controls and specifies that the drop-down control
              is displayed to the right of its parent control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Default">
      <summary>
              Compensates for nested drop-down controls and responds to the <see cref="T:System.Windows.Forms.RightToLeft" />
              setting, specifying either <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Left" />
              or <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Right" /> accordingly.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode">
      <summary>
              Specifies how to show the scroll bar(s).
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed">
      <summary>
              Specifies that scroll bars are always shown.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Automatic">
      <summary>
              Specifies that scroll bars are shown when the content is out of range.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType">
      <summary>
              Specifies the mode of display data.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType.Text">
      <summary>
              Show item as text
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType.Image">
      <summary>
              Shown item as image
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.InputStatus">
      <summary>
              Represents the status of the field.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Empty">
      <summary>
              Without input, the field is empty.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Part">
      <summary>
              With input, but not finished yet.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Full">
      <summary>
              The input is finished.
            </summary>
      <remarks>
              A field status of full does not mean the field cannot accept input.
              There is a case where the field is full, but the field has not reached the maximum limit and can still accept input.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AllowSelection">
      <summary>
              Specifies the type of dates that can be selected.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSelection.Anyday">
      <summary>
              Specifies that any dates can be selected.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSelection.Workday">
      <summary>
              Specifies that only workdays can be selected.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSelection.Holiday">
      <summary>
              Specifies that only holidays and weekend days can be selected.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalendarType">
      <summary>
              Defines the type of the calendar.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarType.MonthDay">
      <summary>
              Shows the calendar by Month-Day type.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarType.YearMonth">
      <summary>
              Shows the calendar by Year-Month type.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalendarYear">
      <summary>
              Specifies the <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarType.YearMonth" /> display type of the calendar.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarYear.Normal">
      <summary>
              Displays as the normal year.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarYear.Fiscal">
      <summary>
              Displays as the Fiscal year.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Months">
      <summary>
              Specifies the month of a year.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.Default">
      <summary>
              Indicates the month is not defined
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.January">
      <summary>
              Indicates January
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.February">
      <summary>
              Indicates February
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.March">
      <summary>
              Indicates March
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.April">
      <summary>
              Indicates April
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.May">
      <summary>
              Indicates May
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.June">
      <summary>
              Indicates June
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.July">
      <summary>
              Indicates July
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.August">
      <summary>
              Indicates August
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.September">
      <summary>
              Indicates September
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.October">
      <summary>
              Indicates October
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.November">
      <summary>
              Indicates November
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.December">
      <summary>
              Indicates December
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayType">
      <summary>
              Defines the type of days (workday, holiday, etc.)
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal">
      <summary>
              Indicates a normal non-holiday day.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Holiday">
      <summary>
              Indicates a holiday that appears yearly.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.ForcedWorkday">
      <summary>
              Indicates a normal day which originally was a holiday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.ForcedHoliday">
      <summary>
              Indicates a holiday that appears for a 
              specific date.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.OverriddenHoliday">
      <summary>
              Indicates a holiday that appears when a holiday
              lands on a weekend and automatically moves onto the next day.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.DayOfWeekHoliday">
      <summary>
              Indicates the weekday is a holiday.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayOverride">
      <summary>
              Defines how a holiday is handled when it lands on a weekday 
              that is specified as a holiday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HolidayOverride.None">
      <summary>
              No holiday override takes place.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HolidayOverride.NextDay">
      <summary>
              Holiday overrides to the next day.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HolidayOverride.NextWorkDay">
      <summary>
              Holiday overrides to the next work day.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle">
      <summary>
            Specifies the type of the selection indicator.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle.Normal">
      <summary>
            Shows the selection indicator as a focus rectangle.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle.Box">
      <summary>
            Shows the selection indicator as a box.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle.ThreeD">
      <summary>
            Shows the selection indicator as 3D (reverse).
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle.FlatButton">
      <summary>
            Shows the selection indicator as 3D when the mouse moves over the focus item; otherwise, shown as flat.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation">
      <summary>
              Specifies the position of the navigation bar in a calendar.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation.Left">
      <summary>
              Specifies the navigation bar is positioned at the left side of the calendar.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation.Top">
      <summary>
              Specifies the navigation bar is positioned at the top of the calendar.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation.Right">
      <summary>
              Specifies the navigation bar is positioned at the right side of the calendar.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation.Bottom">
      <summary>
              Specifies the navigation bar is positioned at the bottom of the calendar.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EmptyRows">
      <summary>
              Specifies how to show the empty week rows in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EmptyRows.StartEmpty">
      <summary>
              Specifies that the empty rows appear at the beginning.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EmptyRows.AllAtEnd">
      <summary>
              Specifies that all empty rows are at the end.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators">
      <summary>
              Specifies which type of navigator bar is shown in the control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators.None">
      <summary>
              Specifies that no navigator bar is shown.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators.Buttons">
      <summary>
              Specifies that the button style navigator bar is shown.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators.ScrollBar">
      <summary>
              Specifies that the scroll bar style navigator bar is shown.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators.Outlook">
      <summary>
              Specifies that the outlook style navigator bar is shown.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags">
      <summary>
              Defines flags for the different weeks.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.None">
      <summary>
              Specifies no weeks.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.FirstWeek">
      <summary>
              Specifies the first week in the month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.SecondWeek">
      <summary>
              Specifies the second week in the month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.ThirdWeek">
      <summary>
              Specifies the third week in the month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.FourthWeek">
      <summary>
              Specifies the fourth week in the month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.FifthWeek">
      <summary>
              Specifies the fifth week in the month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.LastWeek">
      <summary>
              Specifies the last week in the month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.All">
      <summary>
              Specifies all weeks in the month.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Templates">
      <summary>
              Specifies the style of the template.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Templates.Outlook">
      <summary>
              Specifies the outlook style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Templates.MonthCalendar">
      <summary>
              Specifies the MonthCalendar style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Templates.System">
      <summary>
              Specifies the System style.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PickDays">
      <summary>
              Specifies which type of <b>PickDays</b> to use.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickDays.NormalDay">
      <summary>
              Specifies only the days in the current month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickDays.TrailingDay">
      <summary>
              Specifies to include the trailling days in the view.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickDays.MinMaxDay">
      <summary>
              Specifies the minimum or maximum day.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek">
      <summary>
              Specifies the day of the week.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.NotSet">
      <summary>
              Indicates the weekday is not defined.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Sunday">
      <summary>
              Indicates Sunday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Monday">
      <summary>
              Indicates Monday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Tuesday">
      <summary>
              Indicates Tuesday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Wednesday">
      <summary>
              Indicates Wednesday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Thursday">
      <summary>
              Indicates Thursday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Friday">
      <summary>
              Indicates Friday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Saturday">
      <summary>
              Indicates Saturday.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment">
      <summary>
              Specifies the position of the scroll tip window within the control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment.Default">
      <summary>
              The scroll tip window is positioned at the default location.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment.TopLeft">
      <summary>
              The scroll tip window is positioned at the top or left side of the control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment.BottomRight">
      <summary>
              The scroll tip window is positioned at the bottom or right side of the control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment.Center">
      <summary>
              The scroll tip window is positioned at the center of the control.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit">
      <summary>
               Defines the <b>LengthUnit</b> enumeration.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit.Char">
      <summary>
              Indicates the calculational unit is a .Net character when calculating the length of the string.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit.Byte">
      <summary>
              Indicates the calculational unit is a byte when calculating the length of the string.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit.TextElement">
      <summary>
              Indicates the calculational unit is a TextElment when calculating the length of the string.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditMode">
      <summary>
              Defines the <b>FieldsEditMode</b> enumeration.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditMode.LeftSide">
      <summary>
              Specifies the input is from the left side in each field.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditMode.RightSide">
      <summary>
              Specifies the input is from the right side in each field.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditMode.Unfixed">
      <summary>
              Specifies that the field does not show the empty prompt character, but the width of the field is fixed.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DisplayAlignment">
      <summary>
             Defines the <b>DisplayAlignment</b> enumeration.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DisplayAlignment.None">
      <summary>
              Specifies to never make a horizontal alignment effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DisplayAlignment.Distributed">
      <summary>
            Specifies that the alignment is distributed.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DisplayAlignment.DistributedWithWhiteSpace">
      <summary>
            Specifies that the alignment is distributed with white space.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation">
      <summary>
              Defines the dropdown animation.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.None">
      <summary>
              Indicates no animation.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Scroll">
      <summary>
              Indicates the scroll animation.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Slide">
      <summary>
              Indicates the slide animation.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Fade">
      <summary>
              Indicates the fade animation.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Center">
      <summary>
              Indicates the center animation.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Extend">
      <summary>
              Indicates the extend animation.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Drag">
      <summary>
              Indicates the drag animation.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode">
      <summary>
              Defines the CrLf mode which describes how to process the CrLf char.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode.NoControl">
      <summary>
              Accepts all CrLf characters in copied, cut, or pasted strings.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode.Filter">
      <summary>
              Removes all CrLf characters in copied, cut, or pasted strings.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode.Cut">
      <summary>
              Cuts the following strings from the first CrLf character in copied, cut, and pasted strings.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.RoundPattern">
      <summary>
              Specifies the round pattern of the specified number.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.RoundPattern.Ceiling">
      <summary>
              When a number is halfway between two others, it is rounded toward the smallest integer greater than or equal to the specified number.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.RoundPattern.Floor">
      <summary>
              When a number is halfway between two others, it is rounded toward the largest integer less than or equal to the specified number.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.RoundPattern.MidpointRoundAwayFromZero">
      <summary>
              When a number is halfway between two others, it is rounded toward the nearest number that is away from zero.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.RoundPattern.MidpointRoundToEven">
      <summary>
              When a number is halfway between two others, it is rounded toward the nearest even number. 
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior">
      <summary>
            Defines how to process the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value">GcDateTime.Value</see>, 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value">GcNubmer.Value</see>, <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value">GcTimeSpan.Value</see>,
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDate.Value">GcDate.Value</see>, and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTime.Value">GcTime.Value</see> 
            properties when there is invalid data during input.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin">
      <summary>
              Adjusts the value to the valid range between the minimum and maximum.
            </summary>
      <remarks>
             If the value is less than the minimum, adjusts to the minimum. If the Value is greater than the maximum, adjusts to the maximum.
            </remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.Clear">
      <summary>
              Clears the value to <see langword="null" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.Restore">
      <summary>
              Restores the backup value to the specified property.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.CancelInput">
      <summary>
             Cancels the last input and holds the old text.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.Keep">
      <summary>
             Keeps the last input and holds the old text.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode">
      <summary>
              Defines the Tab character mode which describes how to process the Tab character.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode.NoControl">
      <summary>
              Accepts all Tab characters in copied, cut, or pasted strings.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode.Filter">
      <summary>
              Removes all Tab characters in copied, cut, or pasted strings.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode.Cut">
      <summary>
              Cuts the following strings from the first Tab character in copied, cut, and pasted strings.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior">
      <summary>
            Defines behavior used when click <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.None">
      <summary>
             No specific bhavior.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" /> will do spin up behavior.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" /> will do spin down behavior.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions">
      <summary>
            Defines how to show the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> when touch tap target control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.None">
      <summary>
            Not show the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> by touch device.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.PressAndHold">
      <summary>
            Show the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> to take place of showing <see cref="!:System.Windows.Forms.Control.ContextMenu" /> or <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> when executing touch PressAndHolder operation.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.TapSelection">
      <summary>
            Show the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> by tap the selection region of target control.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.TapGripper">
      <summary>
            Show the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> by tap the selection gripper.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode">
      <summary>
              Represents the mode of revealing the typed password in the password protected editor.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.None">
      <summary>
              Never reveal the typed password.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.ShowEyeButton">
      <summary>
             Shows an eye button and press it to reveal the typed password. 
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.ShowLastTypedChar">
      <summary>
            Shows the last typed char for a short period and then hidden with password char.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode">
      <summary>
              Repesents the decimal part of the numeric value handling mode.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode.Filter">
      <summary>
             The decimal point will be filtered.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode.Cut">
      <summary>
             Cut off the decimal part, only kepts the integer part value.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard">
      <summary>
              Defines the action options of hide the touch keyboard when user opens the drop-down window.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard.None">
      <summary>
            Not hide the touch keyboard. Both dropdown and touch keyboard are shown.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard.AutoHide">
      <summary>
             The touch keyboard will be hidden when the drop-down window is shown.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard.HideAndReshow">
      <summary>
             The touch keyboard will be hidden when the drop-down window is shown, and it will be shown again after the drop-down window is closed.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl">
      <summary>
              Represents the base class for the formatted text editors.
            </summary>
      <remarks>
              This class will process the synchronization between ControlBase and InnerEditor.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.#ctor(System.ComponentModel.IContainer)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl" /> class.
            </summary>
      <param name="container">
              The container.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the ElementContainerControl and its child controls or elements
              and optionally releases the managed resources.
            </summary>
      <param name="disposing">
              True to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
      <remarks>
              Call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.Dispose(System.Boolean)" /> when you are finished using the <see cref="T:System.Windows.Forms.Control" />. 
              The <b>Dispose</b> method leaves the <see cref="T:System.Windows.Forms.Control" /> in an unusable state. 
              After calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.Dispose(System.Boolean)" />, you must release all references to the <see cref="T:System.Windows.Forms.Control" /> 
              so the garbage collector can reclaim the memory that the <see cref="T:System.Windows.Forms.Control" /> was occupying.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SpinDown">
      <summary>
              Occurs when the spin action is down.
            </summary>
      <remarks>
              This event is raised when the down spin action occurs.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnSpinDown(System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SpinDown" /> event.
            </summary>
      <param name="e">
              The <see cref="T:System.EventArgs" /> instance that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnSpinDown</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnSpinDown</b> in a derived class, be sure to call the base class's <b>OnSpinDown</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SpinUp">
      <summary>
              Occurs when the spin action is up.
            </summary>
      <remarks>
              This event is raised when the up spin action occurs.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnSpinUp(System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SpinUp" /> event.
            </summary>
      <param name="e">
              The <see cref="T:System.EventArgs" /> instance that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnSpinUp</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnSpinUp</b> in a derived class, be sure to call the base class's <b>OnSpinUp</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter">
      <summary>
              Occurs when any field is entered.
            </summary>
      <remarks>
              This event is raised when the input focus enters a field.
            </remarks>
      <seealso cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnFieldEnter(GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> event.
            </summary>
      <param name="e">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs" /> instance that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnFieldEnter</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnFieldEnter</b> in a derived class, be sure to call the base class's <b>OnFieldEnter</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave">
      <summary>
              Occurs when input focus leaves a field.
            </summary>
      <remarks>
              This event is raised when the input focus leaves a field.
            </remarks>
      <seealso cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnFieldLeave(GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" /> event.
            </summary>
      <param name="e">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs" /> instance that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnFieldLeave</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnFieldLeave</b> in a derived class, be sure to call the base class's <b>OnFieldLeave</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldPaint">
      <summary>
              Occurs when any field is painted.
            </summary>
      <remarks>
              This event is raised when the field is redrawn. 
              It passes an instance of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs" /> to the method(s) 
              that handles the <b>FieldPaint</b> event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnFieldPaint(GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldPaint" /> event.
            </summary>
      <param name="e">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs" /> instance that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnFieldPaint</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnFieldPaint</b> in a derived class, be sure to call the base class's <b>OnFieldPaint</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnEnabledChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged"></see> event.
            </summary>
      <param name="e">
            A <see cref="T:System.EventArgs"></see> that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnEnabledChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnEnabledChanged</b> in a derived class, be sure to call the base class's <b>OnEnabledChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnVisibleChanged(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged"></see> event.
            </summary>
      <param name="e">
              A <see cref="T:System.EventArgs"></see> that contains the event data.</param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnVisibleChanged</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnVisibleChanged</b> in a derived class, be sure to call the base class's <b>OnVisibleChanged</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BorderStyle">
      <summary>
              Gets or sets the border style.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BorderStyle" /> enumeration that indicates the border style.
            </value>
      <remarks>
              You can use the <b>BorderStyle</b> property to create borderless and flat style controls, in addition to the default three-dimensional control.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              A value that is not within the range of valid values for the enumeration was assigned to the property. 
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SingleBorderColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FlatStyle">
      <summary>
              Gets or sets the flat style of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx" /> enumeration that indicates the flat style of the edit control.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Standard" />.
            </value>
      <remarks>
              The <b>FlatStyle</b> property determines the display style of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SingleBorderColor">
      <summary>
              Gets or sets the color when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the border color when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </value>
      <remarks>
              The color only takes effect when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BackColor">
      <summary>
              Gets or sets the background color for the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. 
              <br />
              The default is <see cref="P:System.Drawing.SystemColors.Window" />.
              </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral,               PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the text control to blend into the color scheme of the forms.
              <para />
              To change the color of the text within the control, use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ForeColor" /> property. When setting the <b>BackColor</b> property of a text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <b>BackColor</b> and <b>ForeColor</b> properties are both set to <b>Color.Black</b>, the text within a textbox control will not be visible.
              <para />
              This property might be overridden if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> property of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> is set to <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ForeColor">
      <summary>
              Gets or sets the foreground color of the control.
            </summary>
      <value>
              The foreground <see cref="T:System.Drawing.Color" /> of the control.
              <br />
              The default is <see cref="P:System.Drawing.SystemColors.WindowText" />.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral,               PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
              You can use the <b>ForeColor</b> property to change the color of the text within the control to match the text of other controls on your form. You can also use this property to highlight a specific control that contains an invalid value.
              <para />
              To change the background color of the control, use the <b>BackColor</b> property. When setting the ForeColor property of a text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <b>ForeColor</b> and <b>BackColor</b> properties are both set to <b>Color.Black</b>, the text within the textbox control will not be visible.
              <para />
              This property might be overridden if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> property of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> is set to true.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DisplayText">
      <summary>
              Gets the display text of the control.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the display text.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              This property retrieves the displayed text without input focus. The <see cref="T:GrapeCity.Win.Views.DisplayField" /> and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> properties may effect this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ClipContent">
      <summary>
              Gets or sets how data should be copied to the clipboard.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ClipContent" /> enumeration values that specifies 
              how data is copied to the clipboard.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" />.
            </value>
      <remarks>
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" /> value means that all displayed text is copied when setting data to <see cref="T:System.Windows.Forms.Clipboard" /> using methods or UI behaviors. 
              The  <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.ExcludeLiterals" /> value means the displayed text except for the literal fields' text is copied.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.TabAction">
      <summary>
              Gets or sets whether the tab key moves the focus between controls or between 
              fields within the control.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.TabAction" /> enumeration values.  The default is 
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control" />.
            </value>
      <remarks>
              The caret moves to the next field when this property is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Field" />. 
              If the caret is in the last field, the input focus leaves this control when pressing the TAB key. 
              If the value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control" />, the behavior is similar to the standard control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.HighlightText">
      <summary>
              Gets or sets how to select the text when the control receives the focus.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.HighlightText" /> enumeration values.    
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.None" />.
            </value>
      <remarks>
              When the input focus enters the control the first time, 
              this property determines the highlight mode of the control. 
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.None" /> means no highlight effect. 
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.Field" /> means to highlight the field the caret is in. 
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.All" /> means to highlight all text.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ShowLiterals">
      <summary>
              Gets or sets whether to display the literals during user entry.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ShowLiterals" /> enumeration values.  
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always" />.
            </value>
      <remarks>
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always" /> means the literal fields are always displayed. 
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PostDisplay" /> means the literal field is displayed after the field next to the literal field, only when the field has data. 
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PreDisplay" /> means the literal field is displayed before the field next to the literal field, only when the field has data.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.PromptChar">
      <summary>
              Gets or sets the character used as an input prompt.
            </summary>
      <value>
              The character used as an input prompt. The default is an underscore ("_").
            </value>
      <remarks>
              The <b>PromptChar</b> property determines the display text when the <see cref="N:GrapeCity.Win.Value" /> is none and one or more input fields or display fields exist.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.InputStatus">
      <summary>
              Gets the current input status of the control.
            </summary>
      <value>
              An <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.InputStatus" /> enumeration that indicates whether the text is full, empty, or partial.
            </value>
      <remarks>
              If no text is entered, this property is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Empty" />. 
              If part of the text is entered, this property is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Part" />. 
              If all the text is entered, this property is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Full" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinUp">
      <summary>
              Performs the spin up action.
            </summary>
      <remarks>
              This method has the same behavior as pressing the up key.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinDown" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ShortcutSpinUp">
      <summary>
              Performs the spin up action for a shortcut key.
            </summary>
      <remarks>
              This method is mainly used for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />. 
              The behavior is the same as using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinUp" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinDown">
      <summary>
              Performs the spin down action.
            </summary>
      <remarks>
              This method has the same behavior as pressing the down key.
            </remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinUp" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ShortcutSpinDown">
      <summary>
              Performs the spin down action for a shortcut key.
            </summary>
      <remarks>
             This method is mainly used for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />. 
             The behavior is the same as using the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinDown" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
              Raises the KeyDown event.
            </summary>
      <param name="e">
              A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
              Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
      <param name="keyData">
              One of the <see cref="T:System.Windows.Forms.Keys" /> values.
            </param>
      <returns>
        <see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.
            </returns>
      <remarks>
              Call the <b>IsInputKey</b> method to determine whether the key specified by the keyData parameter is an input key that the control requires. This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control. If <b>IsInputKey</b> returns <see langword="true" />, the specified key is sent directly to the control. If <b>IsInputKey</b> returns <see langword="false" />, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. Keys that are preprocessed include the TAB, RETURN, ESCAPE, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnGotFocus(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnGotFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnGotFocus</b> in a derived class, be sure to call the base class's <b>OnGotFocus</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnLostFocus(System.EventArgs)">
      <summary>
              Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnLostFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnLostFocus</b> in a derived class, be sure to call the base class's <b>OnLostFocus</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Raises the MouseUp event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs">
      <summary>
              Represents the <see cref="T:System.EventArgs" /> for the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs.Field" /> notification.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Fields.Field)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs" /> class.
            </summary>
      <param name="field">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs.Field" /> object that indicates the field that has focus.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs.Field">
      <summary>
              Gets the field which triggers the event.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs.Field" /> object that indicates the field that triggered the event.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs">
      <summary>
              Represents the <see cref="T:System.EventArgs" /> for the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldPaint" /> event on the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,GrapeCity.Win.Spread.InputMan.CellType.Fields.Field)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs" /> class.
            </summary>
      <param name="graphics">
              The <see cref="T:System.Drawing.Graphics" /> object used to paint the item.
            </param>
      <param name="clipRectangle">
              The clipped <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle in which to paint.
            </param>
      <param name="field">
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs.Field" /> which was painted.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs.Field">
      <summary>
              Gets the field which triggers the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldPaint" /> event.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs.Field" /> object that indicates the field which triggers the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldPaint" /> event.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayField">
      <summary>
              Represents <b>DateDisplayField</b> class to define display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayField">
      <summary>
              Represents <b>DateInputDisplayField</b> class to define input type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayField.PromptChar">
      <summary>
              Gets or sets the prompt char of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value used for prompt empty bits of the display field.
            </value>
      <remarks>
              The property retrieves the <see cref="T:System.Char" /> used for prompt empty bits of the display field.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField">
      <summary>
              Represents <b>DateLiteralDisplayField</b> class to define literal type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField" /> class.
            </summary>
      <param name="literalText">
              A <see cref="T:System.String" /> value indicates the literal text of the display literal field.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField.Text">
      <summary>
              Gets or sets the literal text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the literal text of the display field.
              <br /> The default is a White-Space char.
            </value>
      <remarks>
              The property retrieves the literal text displayed when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> hasn't the input focus.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField">
      <summary>
              Represents <b>DateEraDisplayField</b> class to define era type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.EraPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> enumeration indicates the pattern of the era display field.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField.Pattern">
      <summary>
              Gets or sets era pattern for the field.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> enum indicates the pattern.
              The default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EraPattern.EraName" />.
            </value>
      <remarks>
              The property retrieves the display pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField" /> when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> hasn't input focus.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField">
      <summary>
              Represents <b>DateEraYearDisplayField</b> class to define era year type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              if set to <see langword="true" /> show leading zero.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField.#ctor(System.Boolean,System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              If set to <see langword="true" />, the field will show leading zero.
            </param>
      <param name="showTraditionalFirstYear">
              A <see langword="bool" /> value if set to <see langword="true" /> we will display the first era year as the start of the era.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField.ShowTraditionalFirstYear">
      <summary>
              Gets or sets a value indicating whether show the first year by traditional format.
            </summary>
      <value>
        <see langword="true" /> if show the first year by traditional format; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether shows the the traditional year when the year is the first one.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField.ShowLeadingZero">
      <summary>
              Gets or sets a value indicating whether show leading zero.
            </summary>
      <value>
        <see langword="true" /> if show leading zero; otherwise, <see langword="false" />.
              <br />  The default is <see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether shows the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayField">
      <summary>
              Represents <b>DateADDisplayField</b> class to define AD type display fields for the the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayField" /> class.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField">
      <summary>
              Represents <b>DateYearDisplayField</b> class to define year type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              if set to <see langword="true" /> the digits of the display field is fixed, otherwise, <see langword="false" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.YearDigitType)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              if set to <see langword="true" /> the digits of the display field is fixed, otherwise, <see langword="false" />.
            </param>
      <param name="yearDigit">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> value indicates the type of the year digit.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField.YearDigit">
      <summary>
              Gets or sets the year digit of the field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> enumeration indicates the year digit types.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType.FourDigitYear" />.
            </value>
      <remarks>
              The property retrieves the mode of the year value for displaying.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField.ShowLeadingZero">
      <summary>
              Gets or sets a value indicating whether show leading zero.
            </summary>
      <value>
        <see langword="true" /> if show leading zero; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether shows the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField">
      <summary>
              Represents <b>DateMonthDisplayField</b> class to define month type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value, if <see langword="true" /> the field's length is fixed. Otherwise, the length is alterable.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.MonthPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value, if <see langword="true" /> the field's length is fixed. Otherwise, the length is alterable.
            </param>
      <param name="pattern">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> enumeration indicates how to show the value of the month.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField.Pattern">
      <summary>
              Gets or sets pattern of month for the field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> enumeration indicates the pattern to show the month.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern.Number" />.
            </value>
      <remarks>
              The property retrieves the display pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField" /> when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> hasn't the input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField.ShowLeadingZero">
      <summary>
              Gets or sets a value indicating whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField" /> shows the leading zero.
            </summary>
      <value>
        <see langword="true" /> if show leading zero; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether shows the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField">
      <summary>
              Represents <b>DateDayDisplayField</b> class to define day type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              If set to <see langword="true" /> the length of the field is fixed. Otherwise, <see langword="false" />.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField.ShowLeadingZero">
      <summary>
              Gets or sets a value indicating whether shows leading zero.
            </summary>
      <value>
        <see langword="true" /> if show leading zero; otherwise, <see langword="false" />.
              <br /> The default value is <see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether shows the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField">
      <summary>
              Represents <b>DateWeekdayDisplayField</b> class to define weekday type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern" /> value indicates the weekday pattern.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField.Pattern">
      <summary>
              Gets or sets a value indicating the weekday pattern for the field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern" /> value indicates the weekday pattern.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern.WeekdayName" />.
            </value>
      <remarks>
              The property retrieves the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField" />.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField">
      <summary>
              Represents <b>DateHourDisplayField</b> class to define hour type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              If set to <see langword="true" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> will show the leading zero.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField.#ctor(System.Boolean,System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              If set to <see langword="true" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> will show the leading zero.
            </param>
      <param name="midnightAs24">
              If set to <see langword="true" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> will show the mid-night as 24 o'clock.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField.MidnightAs24">
      <summary>
              Gets or sets a value indicating whether middle night displayed as hour 24.
            </summary>
      <value>
        <see langword="true" /> if middle night is displayed as hour 24; otherwise, <see langword="false" />.
              <br /> The default value is <see langword="false" />.
            </value>
      <remarks>
              The property indicates whether the middle night displayed as 24 or zero .
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField.ShowLeadingZero">
      <summary>
              Gets or sets a value indicating whether show leading zero.
            </summary>
      <value>
        <see langword="true" /> if show leading zero; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether shows the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField">
      <summary>
              Represents <b>DateShortHourDisplayField</b> class to define short hour type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value indicates whether the length of the field is fixed.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value indicates whether the length of the field is fixed.
            </param>
      <param name="hour12Mode">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.Hour12Mode" /> enumeration indicates how we represents the hour 12 in duodecimal hour format.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.Hour12Mode">
      <summary>
              Gets or sets a value indicating whether hour 0 displayed as hour 12.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.Hour12Mode" /> enumeration indicates how we represents the hour 12 in duodecimal hour format.
              The default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode.Hour0As12" />.
            </value>
      <remarks>
              The property retrieves the short hour display mode.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.ShowLeadingZero">
      <summary>
              Gets or sets a value indicating whether show leading zero.
            </summary>
      <value>
        <see langword="true" /> if show leading zero; otherwise, <see langword="false" />.
              <sbr /> The default value is <see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether shows the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField">
      <summary>
              Represents <b>DateAmPmDisplayField</b> class to define AmPm type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField" /> class.
            </summary>
      <param name="pattern">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value indicates the AMPM pattern.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern,System.String,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField" /> class.
            </summary>
      <param name="pattern">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value indicates the AMPM pattern.
            </param>
      <param name="amDesignator">
              A <see cref="T:System.String" /> value indicates the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.AMDesignator" />.
            </param>
      <param name="pmDesignator">
              A <see cref="T:System.String" /> value indicates the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.PMDesignator" />.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.Pattern">
      <summary>
              Gets or sets a value indicating how to show AmPm.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value indicates the pattern.
              The default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern.AmPmDesignator" />.
            </value>
      <remarks>
              The property retrieves the display pattern about the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.AMDesignator" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.PMDesignator" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.AMDesignator">
      <summary>
              Gets or sets the designator of AM.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.AMDesignator" />.
            </value>
      <remarks>
              The property retrieves the display text when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> hasn't input focus and the value is before than the noon.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.PMDesignator">
      <summary>
              Gets or sets the designator or PM.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.PMDesignator" />.
            </value>
      <remarks>
              The property retrieves the display text when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> hasn't input focus and the value is after than the noon.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField">
      <summary>
              Represents <b>DateMinuteDisplayField</b> class to define minute type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value indicates whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField" /> shows the leading zero.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField.ShowLeadingZero">
      <summary>
              Gets or sets a value indicating whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField" /> shows the leading zero.
            </summary>
      <value>
        <see langword="true" /> if show leading zero; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether shows the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField">
      <summary>
              Represents <b>DateSecondDisplayField</b> class to define second type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value if set to <see langword="true" /> the length of the field is fixed.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField.ShowLeadingZero">
      <summary>
              Gets or sets a value indicating whether show leading zero.
            </summary>
      <value>
        <see langword="true" /> if show leading zero; otherwise, <see langword="false" />.
              <br /> The default value is <see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether shows the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField">
      <summary>
              Represents <b>DateSystemFormatDisplayField</b> class to define system format type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:System.String" /> value indicates the pattern of the field.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField.Pattern">
      <summary>
              Gets or sets the system format pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the pattern of the field.
              <br /> The default is G.
            </value>
      <remarks>
              The property retrieves the pattern for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField" />.
              The <see cref="T:System.DateTime" /> value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> converts to a <see cref="T:System.String" /> as the display text of this field, following the <b>Pattern</b> property.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField">
      <summary>
              Represents <b>DateField</b> class to define base input fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
      <remarks>
              This class represents base class for a type of fields that can accepted by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField">
      <summary>
              Represents <b>DateInputField</b> class to define input fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.PromptChar">
      <summary>
              Gets or sets the prompt char of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value used for prompt empty bits of the field when inputting.
            </value>
      <remarks>
              The property retrieves the <see cref="T:System.Char" /> used for prompt empty bits of the field.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.Value">
      <summary>
              Gets or sets the value of the field.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the value of this field.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.SpinIncrement">
      <summary>
              Gets or sets the spin increment.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </value>
      <remarks>
              The default value is the owner's Spin.Increment value except we set the value.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.SpinDown">
      <summary>
              Perform spin down behavior.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.SpinDown(System.Int32)">
      <summary>
              Perform spin down with the specified increment parameters.
            </summary>
      <param name="increment">
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.SpinUp">
      <summary>
              Perform spin up behavior.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.SpinUp(System.Int32)">
      <summary>
              Perform spin up with the specified increment parameters.
            </summary>
      <param name="increment">
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField">
      <summary>
              Represents <b>DateLiteralField</b> class to define literal fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField" /> class.
            </summary>
      <param name="literalText">
               A <see cref="T:System.String" /> value indicates the literal text.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField.Text">
      <summary>
              Gets or sets the literal text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the literal text of the field.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The property retrieves the literal text displayed when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> has the input focus.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField">
      <summary>
              Represents <b>DateEraField</b> class to define Era fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.EraPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" /> class.
            </summary>
      <param name="pattern">
              The pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" />.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.Pattern">
      <summary>
              Gets or sets the pattern of the field.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> value indicates the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" />.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EraPattern.EraName" />.
            </value>
      <remarks>
              The property retrieves the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.Text">
      <summary>
              Gets or sets the text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicating the text of the field.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.Value">
      <summary>
              Gets or sets the value of the field.
            </summary>
      <value>
              A nullable <see cref="T:System.Int32" /> value indicating the value of this field.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.AutoDropDown">
      <summary>
              Gets or sets a <see langword="bool" /> value which indicates whether auto drop down
              when focus come to this field.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the auto drop down when focus come
              to this field, otherwise,<see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether to dropdown the dropdown window automatically when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" /> got the input focus or not.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.DroppedDown">
      <summary>
             Gets or sets a <see langword="bool" /> value indicates whether the dropdown window is showing.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> indicates the dropdown window is showing, otherwise, <see langword="false" />.
             <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The property determines to dropped down the drop-down window or not.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.DropDownEnabled">
      <summary>
             Gets or sets a <see langword="bool" /> value indicates whether the dropdown function is active.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> indicates the dropdown function is active, otherwise, <see langword="false" />.
             <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The property indicates whether the drop-down window can be drop down or not.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearField">
      <summary>
              Represents <b>DateEraYearField</b> class to define Era year fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearField" /> class.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField">
      <summary>
              Represents <b>DateYearField</b> class to define year fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.YearDigitType)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField" /> class.
            </summary>
      <param name="yearDigit">  
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> value indicates the year digit.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField.YearDigit">
      <summary>
              Gets or sets the year digit of the field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> enum indicates the year digit.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType.FourDigitYear" />.
            </value>
      <remarks>
              The property retrieves the mode of the year value for displaying.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField.TwoDigitYearMax">
      <summary>
              Gets or sets the max year of two digits mode of the field.
            </summary>
      <value>
              A <see cref="T:System.Nullable`1" /> value indicates the last year of a 100-year range that can be represented by a 2-digit year.
              If value is <see langword="null" />, it will return the system default value.
            </value>
      <remarks>
              The property indicates the last year of a 100-year range that can be represented by a 2-digit year.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField">
      <summary>
              Represents <b>DateMonthField</b> class to define month fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.MonthPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" /> class.
            </summary>
      <param name="pattern">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> value indicates the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" />.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.Pattern">
      <summary>
              Gets or sets the pattern of the field.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> value indicates the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" />.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern.Number" />.
            </value>
      <remarks>
              The property retrieves the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.AutoDropDown">
      <summary>
            Gets or sets a <see langword="bool" /> value which indicates whether auto drop down
            when focus come to this field.
            </summary>
      <value>
            A <see langword="bool" /> value, <see langword="true" /> if the auto drop down when focus come
            to this field, otherwise,<see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether to dropdown the dropdown window automatically when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" /> got the input focus or not.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.DroppedDown">
      <summary>
             Gets or sets a <see langword="bool" /> value indicates whether the dropdown window is showing.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> indicates the dropdown window is showing, otherwise, <see langword="false" />.
            </value>
      <remarks>
              The property determines to dropped down the drop-down window or not.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.DropDownEnabled">
      <summary>
             Gets or sets a <see langword="bool" /> value indicates whether the dropdown function is active.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> indicates the dropdown function is active, otherwise, <see langword="false" />.
            </value>
      <remarks>
              The property indicates whether the drop-down window can be drop down or not.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayField">
      <summary>
              Represents <b>DateDayField</b> class to define day fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayField" /> class.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourField">
      <summary>
              Represents <b>DateHourField</b> class to define hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourField" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourField.MidnightAs24">
      <summary>
              Gets or sets a value indicates whether treats midnight as 24 o'clock.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if we treat Midnight as 24 o'clock. Otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The property indicates whether the middle night displayed as 24 or zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField">
      <summary>
              Represents <b>DateAmPmField</b> class to define AmPm fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.#ctor">
      <summary>
              Initalizes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField" /> class.
            </summary>
      <param name="pattern">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value indicates the AMPM pattern.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern,System.String,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField" /> class.
            </summary>
      <param name="pattern">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value indicates the AMPM pattern.
            </param>
      <param name="amDesignator">
              A <see cref="T:System.String" /> value indicates the AMDesignator.
            </param>
      <param name="pmDesignator">
              A <see cref="T:System.String" /> value indicates the PMDesignator.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.Pattern">
      <summary>
              Gets or sets a value indicating the pattern of the field.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value indicates the pattern.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern.AmPmDesignator" />.
            </value>
      <remarks>
              The property retrieves the pattern about the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.AMDesignator" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.PMDesignator" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.AMDesignator">
      <summary>
              Gets or sets the designator of Am.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the designator of Am.
            </value>
      <remarks>
              The property retrieves the text when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> has input focus and the value is before than the noon.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.PMDesignator">
      <summary>
              Gets or sets the designator of Pm.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the designator of Pm.
            </value>
      <remarks>
              The property retrieves the text when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> has input focus and the value is after than the noon.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.Text">
      <summary>
              Gets or sets the text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the text of the field.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.Value">
      <summary>
              Gets or sets the value of the field.
            </summary>
      <value>
              An <see cref="T:System.Nullable`1" /> value indicating the value of this field.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourField">
      <summary>
              Represents <b>DateShortHourField</b> class to define short hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourField" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourField.Hour12Mode">
      <summary>
              Gets or sets a value indicates show 0 o'clock as 12.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourField.Hour12Mode" /> enumeration indicates the type of 12-hours mode.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode.Hour0As12" />.
            </value>
      <remarks>
              The property retrieves the short hour display mode.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteField">
      <summary>
              Represents <b>DateMinuteField</b> class to define minute fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteField" /> class.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondField">
      <summary>
              Represents <b>DateSecondField</b> class to define second fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondField" /> class.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField">
      <summary>
              Represents <b>DisplayField</b> class to define a base for display field.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> class.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Paint">
      <summary>
              Occurs when the display field is redrawn.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.BackColor">
      <summary>
              Gets or sets the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" />.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the background color of the field.
              <br /> The default is <see cref="P:System.Drawing.Color.Transparent" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.ForeColor">
      <summary>
              Gets or sets the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" />.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the foreground color of the field.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Font">
      <summary>
              Gets or sets the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" />.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Font" /> object indicates the <b>Font</b> of the field.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Size">
      <summary>
              Gets the size of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Size" /> indicates the size of the field.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Margin">
      <summary>
              Gets or sets the space around the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" />.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding"></see> representing the space around the field.
              <br /> The default is "0,0,0,0".
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Padding">
      <summary>
              Gets or sets padding within the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" />.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding"></see> representing the field's internal spacing characteristics.
              <br /> The default is "0,0,0,0".
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Text">
      <summary>
              Gets text assosiated to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" />.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the text of the display field.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.PointContainerToField(System.Drawing.Point)">
      <summary>
              Computes the location of the specified container point into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> coordinates.
            </summary>
      <param name="point">
              The container coordinate <see cref="T:System.Drawing.Point"></see> to convert. 
            </param>
      <returns>
              A <see cref="T:System.Drawing.Point"></see> that represents the converted 
              <see cref="T:System.Drawing.Point"></see>, point, in field coordinates.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.PointFieldToContainer(System.Drawing.Point)">
      <summary>
              Computes the location of the specified the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> point into container coordinates.
            </summary>
      <param name="point">
              The field coordinate <see cref="T:System.Drawing.Point"></see> to convert. 
            </param>
      <returns>
              A <see cref="T:System.Drawing.Point"></see> that represents the converted 
              <see cref="T:System.Drawing.Point"></see>, point, in container coordinates.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.ResetFont">
      <summary>
              Resets the <b>Font</b> property to default value.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.ResetForeColor">
      <summary>
              Resets the <b>ForeColor</b> property to default value.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Name">
      <summary>
              Gets or sets the name of the object.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicating the name of the object.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1">
      <summary>
              Represents a collection for <b>DisplayField</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnInsertComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert value.
            </param>
      <param name="value">
              The new value of the element at index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnAddRangeComplete(System.Object[])">
      <summary>
              Performs additional custom processes after inserting a new element array into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="value">
              The new value of the element.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
              The value to replace with newValue.
            </param>
      <param name="newValue">
              The new value of the element at index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which value can be found.
            </param>
      <param name="value">
              The value of the element to remove from index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnClearComplete">
      <summary>
              Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnAddRange(System.Object[])">
      <summary>
              Performs additional custom processes before inserting a new element array into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="value">
              The new value of the element array.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnInsert(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert value.
            </param>
      <param name="value">
              The new value of the element at index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
              The value to replace with newValue.
            </param>
      <param name="newValue">
              The new value of the element at index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnValidateNewItems(System.Object,System.Object[])">
      <summary>
              Performs additional custom processes to validating adding items.
            </summary>
      <param name="oldItem">
              An <b>object</b> indicates the old item when set item.
            </param>
      <param name="newItems">
              An <b>object</b> array indicates the new items.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeDisplayFieldCollection">
      <summary>
              Represents the display field collection for <b>GcDateTime</b> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeDisplayFieldCollection.AddRange(System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;DateDisplayField&gt;"></see> to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <b>string</b> value indicates the specified format string.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection">
      <summary>
              Represents the display field collection for <b>GcTimeSpan</b> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection.AddRange(System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;TimeSpanDisplayField&gt;"></see> to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <b>string</b> value indicates the specified format string.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection.AddRange(System.String,System.Int32,System.Char,System.String,System.String,System.String,System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;TimeSpanDisplayField&gt;"></see> to the end of the collection,
              which is built from a specified arguments.
            </summary>
      <param name="pattern">
              A <b>string</b> value indicates the pattern string of the format.
            </param>
      <param name="decimalPlaces">
              An <b>int</b> value indicates the number of decimal places to display in the GcTimeSpan control.
            </param>
      <param name="decimalPoint">
              A <b>char</b> value indicates the character that will represents the decimal point.
            </param>
      <param name="positivePrefix">
              A <b>string</b> value indicates the prefix string when value is positive.
            </param>
      <param name="positiveSuffix">
              A <b>string</b> value indicates the suffix string when value is positive.
            </param>
      <param name="negativePrefix">
              A <b>string</b> value indicates the prefix string when value is negative.
            </param>
      <param name="negativeSuffix">
              A <b>string</b> value indicates the suffix string when value is negative.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection.OnValidateNewItems(System.Object,System.Object[])">
      <summary>
              Performs additional custom processes to validating adding items.
            </summary>
      <param name="oldItem">
              An <b>object</b> indicates the old item when set item.
            </param>
      <param name="newItems">
              An <b>object</b> array indicates the new items.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldCollection">
      <summary>
              Represents the display field collection for <b>GcNumber</b> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldCollection.AddRange(System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;NumberDisplayField&gt;"></see> to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <b>string</b> value indicates the specified format string.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldCollection.AddRange(System.String,System.String,System.String,System.String,System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;NumberDisplayField&gt;"></see> to the end of the collection,
              which is built from a specified arguments.
            </summary>
      <param name="pattern">
              A <b>string</b> value indicates the pattern.
            </param>
      <param name="positivePrefix">
              A <b>string</b> value indicates the prefix string when value is positive.
            </param>
      <param name="positiveSuffix">
              A <b>string</b> value indicates the suffix string when value is positive.
            </param>
      <param name="negativePrefix">
              A <b>string</b> value indicates the prefix string when value is negative.
            </param>
      <param name="negativeSuffix">
              A <b>string</b> value indicates the suffix string when value is negative.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldCollection.OnValidateNewItems(System.Object,System.Object[])">
      <summary>
              Performs additional custom processes to validating adding items.
            </summary>
      <param name="oldItem">
              An <b>object</b> indicates the old item when set item.
            </param>
      <param name="newItems">
              An <b>object</b> array indicates the new items.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field">
      <summary>
              Represnts a <b>Field</b> class to define a base field.
            </summary>
      <remarks>
              This class will implement view function for single segment. And some input behavior will exposed to user, too.
              This is final interface for our user.
              When a field is created, it will create a segment and value module for it. Then configuration will be done on the
              segment and the value module.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> class.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Enter">
      <summary>
              Occurs when the input focus enters the field.
            </summary>
      <remarks>
              This event is raised when the input focus moves in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Leave">
      <summary>
              Occurs when the input focus leaves the field.
            </summary>
      <remarks>
              This event is raised when the input focus leaves the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Paint">
      <summary>
              Occurs when the field is redrawn.
            </summary>
      <remarks>
              This event is raised when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> refreshed.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.BackColor">
      <summary>
              Gets or sets the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the background color of the field.
              <br /> The default is <see cref="P:System.Drawing.Color.Transparent" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of your forms.
              <para />
              To change the color of the text within the control, use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.ForeColor" /> property. When setting the <b>BackColor</b> property of your control, ensure that the color you choose does not cause the text of the control to disappear. 
              For example, if the <b>BackColor</b> and <b>ForeColor</b> properties are both set to <b>Color.Black</b>, the text within your control will not be visible.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.ForeColor">
      <summary>
              Gets or sets the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the foreground color of the field.
            </value>
      <remarks>
              You can use the <b>ForeColor</b> property to change the color of the text within the control to match the text of other controls on your form. 
              You can also use this property to highlight a specific control that contains an invalid value.
              <para />
              To change the background color of the control, use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.BackColor" /> property. When setting the ForeColor property of your text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <b>ForeColor</b> and <b>BackColor</b> properties are both set to <b>Color.Black</b>, the text within your textbox control will not be visible.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Font">
      <summary>
              Gets or sets the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Font" /> object indicates the Font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </value>
      <remarks>
        <para>
              The <b>Font</b> property is an ambient property. An ambient property is a control property that, 
              if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
              <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. 
            </para>
        <para></para>
        <para>
              Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>. 
              However, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Size">
      <summary>
              Gets the size of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Size" /> indicates the size of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Margin">
      <summary>
              Gets or sets the space around the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding"></see> representing the space between field.
              <br /> The default is "0,0,0,0".
            </value>
      <remarks>
              This property determines the distance between one field and it's neighbors.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Padding">
      <summary>
              Gets or sets padding within the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </summary>
      <value> 
              A <see cref="T:System.Windows.Forms.Padding"></see> representing the field's internal spacing characteristics.
              <br /> The default is "0,0,0,0".
            </value>
      <remarks>
              This property determines the distance between the input area of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> and the bounds edge of it.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Focused">
      <summary>
              Gets a value indicating whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> has input focus.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> contains the input focus, otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Text">
      <summary>
              Gets text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.InputStatus">
      <summary>
              Gets the current input status of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </summary>
      <value>
              An <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.InputStatus" /> enumeration indicates whether the field is full, empty or partially inputted.
            </value>
      <remarks>
              This method retrieves the input status of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionStart">
      <summary>
              Gets the selection start position.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the selection start position.
              <br /> The default is 0.
            </value>
      <remarks>
              If no text is selected in the control, this property indicates the insertion point for new text. 
              If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character. 
              When text is selected in the control, changing this property might decrease the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionLength" /> property. 
              If the remaining text in the control after the position indicated by the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionStart" /> property is less than the value of the <b>SelectionLength</b> property, 
              the value of the <b>SelectionLength</b> property is automatically decreased. The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionStart" /> property never causes an increase 
              in the <b>SelectionLength</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionLength">
      <summary>
              Gets the length of the selection.
            </summary>
      <value>
              The length of the selection.
              <br /> The default is 0.
            </value>
      <remarks>
              You can use this property to determine if any characters are currently selected in the control before performing operations on the selected text. 
              When the value of the <b>SelectionLength</b> property is set to a value that is larger than the number of characters within the text of the control, 
              the value of the <b>SelectionLength</b> property is set to the entire length of text within the control minus the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionStart" /> 
              property (if any value is specified for the <b>SelectionStart</b> property).
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.CharPositionToX(System.Int32)">
      <summary>
              Converts the char position to x coordinate position.
            </summary>
      <param name="charPosition">
              An <see cref="T:System.Int32" /> value indicates the char position.
            </param>
      <returns>
              An <see cref="T:System.Int32" /> value indicates the x coordinate position.
            </returns>
      <remarks>
              This method converts the char position value to an <see cref="T:System.Int32" /> value indicates the position on x coordinate offset from the left most of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> in pixel.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.XToCharPosition(System.Int32)">
      <summary>
              Converts the x coordinate position to char position.
            </summary>
      <param name="xPosition">
              An <see cref="T:System.Int32" /> value indicates the x coordinate position.
            </param>
      <returns>
              An <see cref="T:System.Int32" /> value indicates the char position.
            </returns>
      <remarks>
              This method converts the <see cref="T:System.Int32" /> value indicates the position on x coordinate, which related to the left most of the Field,  to a char position value.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.PointContainerToField(System.Drawing.Point)">
      <summary>
              Computes the location of the specified container point into field coordinates.
            </summary>
      <param name="point">
              The container coordinate <see cref="T:System.Drawing.Point"></see> to convert. 
            </param>
      <returns>
              A <see cref="T:System.Drawing.Point"></see> that represents the converted 
              <see cref="T:System.Drawing.Point"></see>, p, in field coordinates.
            </returns>
      <remarks>
              This method converts the point in the container coordinates to a new point in the field coordinates.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.PointFieldToContainer(System.Drawing.Point)">
      <summary>
              Computes the location of the specified field point into container coordinates.
            </summary>
      <param name="point">
              The field coordinate <see cref="T:System.Drawing.Point"></see> to convert. 
            </param>
      <returns>
              A <see cref="T:System.Drawing.Point"></see> that represents the converted 
              <see cref="T:System.Drawing.Point"></see>, p, in container coordinates.
            </returns>
      <remarks>
              This method converts the point in the field coordinates to a new point in the container coordinates.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.ResetFont">
      <summary>
              Resets the <b>Font</b> property to default value.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.ResetForeColor">
      <summary>
              Resets the <b>ForeColor</b> property to default value.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Name">
      <summary>
              Gets or sets the name of the object.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicating the name of the object.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1">
      <summary>
              Represents a collection for <b>Field</b> object, which is a base class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnInsertComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert value.
            </param>
      <param name="value">
              The new value of the element at index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnAddRangeComplete(System.Object[])">
      <summary>
              Performs additional custom processes after inserting a new element array into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="value">
              The new value of the element.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
              The value to replace with newValue.
            </param>
      <param name="newValue">
              The new value of the element at index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which value can be found.
            </param>
      <param name="value">
              The value of the element to remove from index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnClearComplete">
      <summary>
              Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnAddRange(System.Object[])">
      <summary>
              Performs additional custom processes before inserting a new element array into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="value">
              The new value of the element array.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnInsert(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert value.
            </param>
      <param name="value">
              The new value of the element at index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
              The value to replace with newValue.
            </param>
      <param name="newValue">
              The new value of the element at the specified index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnValidateNewItems(System.Object,System.Object[])">
      <summary>
              Performs additional custom processes to validating adding items.
            </summary>
      <param name="oldItem">
              An <b>object</b> indicates the old item when set item.
            </param>
      <param name="newItems">
              An <b>object</b> array indicates the new items.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnValidate(System.Object)">
      <summary>
              Performs additional custom processes when validating a value.
            </summary>
      <param name="value">
              The object to validate.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldCollection">
      <summary>
              Represents a collection for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField" /> object, which is read only.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldCollection.AddRange(System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;MaskField&gt;"></see> to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <see cref="T:System.String" /> value indicates the specified format string.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeFieldCollection">
      <summary>
              Represents a collection for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField" /> object, which is read only.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeFieldCollection.AddRange(System.String)">
      <summary>
              Adds the contents of another <see cref="T:System.Collections.Generic.IList`1"></see> to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <see cref="T:System.String" /> value indicates the specified format string.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeFieldCollection.OnValidateNewItems(System.Object,System.Object[])">
      <summary>
              Performs additional custom processes to validating adding items.
            </summary>
      <param name="oldItem">
              An <b>object</b> indicates the old item when set item.
            </param>
      <param name="newItems">
              An <b>object</b> array indicates the new items.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection">
      <summary>
              Represents a collection for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField" /> object, which is read only.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection.AddRange(System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;TimeSpanField&gt;"></see> to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <see cref="T:System.String" /> value indicates the specified format string.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection.AddRange(System.String,System.Int32,System.Char,System.String,System.String,System.String,System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;TimeSpanField&gt;"></see> to the end of the collection,
              which is built from a specified arguments.
            </summary>
      <param name="pattern">
              A <see cref="T:System.String" /> value indicates the pattern string of the format.
            </param>
      <param name="decimalPlaces">
              An <see cref="T:System.Int32" /> value indicates the number of decimal places to display in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" /> control.
            </param>
      <param name="decimalPoint">
              A <b>char</b> value indicates the character that will represents the decimal point.
            </param>
      <param name="positivePrefix">
              A <see cref="T:System.String" /> value indicates the prefix string when value is positive.
            </param>
      <param name="positiveSuffix">
              A <see cref="T:System.String" /> value indicates the suffix string when value is positive.
            </param>
      <param name="negativePrefix">
              A <see cref="T:System.String" /> value indicates the prefix string when value is negative.
            </param>
      <param name="negativeSuffix">
              A <see cref="T:System.String" /> value indicates the suffix string when value is negative.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which value can be found.
            </param>
      <param name="value">
              The value of the element to remove from index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection.OnValidateNewItems(System.Object,System.Object[])">
      <summary>
              Performs additional custom processes to validating adding items.
            </summary>
      <param name="oldItem">
              An <b>object</b> indicates the old item when set item.
            </param>
      <param name="newItems">
              An <b>object</b> array indicates the new items.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields">
      <summary>
              Represents a collection for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields" /> object, which is read only.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.Item(System.Int32)">
      <summary>
              Gets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField" /> at the specified index.
            </summary>
      <value>
              The specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField" /> at this collection.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.SignPrefix">
      <summary>
              Gets the sign prefix field of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField" /> object indicate the sign prefix.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.IntegerPart">
      <summary>
              Gets the integer part field of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField" /> object indicates field for the integer part.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.DecimalSeparator">
      <summary>
              Gets the decimal separator field of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorField" /> object indicates field for decimal separator.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.DecimalPart">
      <summary>
              Gets the decimal part field of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField" /> indicates field for decimal part.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.SignSuffix">
      <summary>
              Gets the sign suffix field of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField" /> object indicate the sign suffix.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.SetFields(System.String)">
      <summary>
              Parses the format and sync settings for each field.
            </summary>
      <param name="format">
              A <see cref="T:System.String" /> value indicates the format for the fields.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.SetFields(System.String,System.String,System.String,System.String,System.String)">
      <summary>
              Parses the pattern and sync settings for each field.
            </summary>
      <param name="pattern">
              A <see cref="T:System.String" /> value indicates the pattern for the fields.
            </param>
      <param name="positivePrefix">
              A <see cref="T:System.String" /> value indicates the string for the positive prefix.
            </param>
      <param name="positiveSuffix">
              A <see cref="T:System.String" /> value indicates the string for the positive suffix.
            </param>
      <param name="negativePrefix">
              A <see cref="T:System.String" /> value indicates the string for the negative prefix.
            </param>
      <param name="negativeSuffix">
              A <see cref="T:System.String" /> value indicates the string for the negative suffix.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.Count">
      <summary>
              Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the count.
            </value>
      <returns>
              The number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.GetEnumerator">
      <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
              An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField">
      <summary>
              Represents <b>MaskField</b> class to define fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask" /> control.
            </summary>
      <remarks>
              It is a base class for all Fields of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask" /> Control.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayField">
      <summary>
              Represents <b>NumberDisplayField</b> class to define display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField">
      <summary>
              Represents <b>NumberSignDisplayField</b> class to define sign display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.#ctor(System.String,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" /> class.
            </summary>
      <param name="positivePattern">
              A <see cref="T:System.String" /> value indicates the positive pattern.
            </param>
      <param name="negativePattern">
              A <see cref="T:System.String" /> value indicates the negative pattern.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.SignState">
      <summary>
              Gets the state of the sign of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.SignState" /> enumeration indicates the state of the sign.
            </value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.None" /> means do not show the sign, because now value is <see langword="null" />.
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Positive" /> means the state of the value is positive, we should show the positive sign.
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Negative" /> means the state of the value is negative, we should show the negative sign.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.NegativePattern">
      <summary>
              Gets or sets the negative pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the negative pattern.
            </value>
      <remarks>
              The property retrieves the pattern when the value is negative.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.PositivePattern">
      <summary>
              Gets or sets the positive pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the positive pattern.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The property retrieves the pattern when the value is positive.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField">
      <summary>
              Represents <b>NumberIntegerPartDisplayField</b> class to define integer part display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField.GroupSeparator">
      <summary>
              Gets or sets the group separator of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value indicates the group separator.
            </value>
      <remarks>
              The property retrieves the group separator. The default value depends on the system information.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField.GroupSizes">
      <summary>
              Gets or sets the number of digits in each group to the left of the decimal in numeric values. 
            </summary>
      <value>
              The number of digits in each group to the left of the decimal in numeric values.
              The default for InvariantInfo is a one-dimensional array with only one element, which is set to 3.
            </value>
      <remarks>
              Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.
              The first element of the array defines the number of elements in the least significant group of digits 
              immediately to the left of the NumberDecimalSeparator. Each subsequent element refers to the next significant
              group of digits to the left of the previous group. If the last element of the array is not 0, the remaining
              digits are grouped based on the last element of the array. If the last element is 0, the remaining digits
              are not grouped.
            <note>
              For example, if the array contains { 3, 4, 5 }, the digits will be grouped similar to "55,55555,55555,55555,4444,333.00".
              If the array contains { 3, 4, 0 }, the digits will be grouped similar to "55555555555555555,4444,333.00".
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField.MinDigits">
      <summary>
              Gets or sets the min digits of the field.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the min digits.
              <br /> The default is 1.
            </value>
      <remarks>
              The property retrieves the minimum number of the digits.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayField">
      <summary>
              Represents <b>NumberDecimalPartDisplayField</b> class to define decimal part display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayField" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayField.MinDigits">
      <summary>
              Gets or sets the minimize digits of the field.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the minimize digits.
              <br /> The default is 0.
            </value>
      <remarks>
              The property retrieves the minimum number of the digits.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayField.MaxDigits">
      <summary>
              Gets or sets the maximize digits of the field.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the maximize digits.
              <br /> The default is 28.
            </value>
      <remarks>
              The property retrieves the maximum number of the digits.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayField">
      <summary>
              Represents <b>NumberDecimalSeparatorDisplayField</b> class to define deciaml separator display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayField" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayField.DecimalSeparator">
      <summary>
              Gets or sets the character to use as the decimal separator in display numeric values.
            </summary>
      <value>
              The character to use as the decimal separator in display numeric values.
            </value>
      <remarks>
              The property retrieves the decimal separator. The default value depends on the system information.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField">
      <summary>
              Represents <b>NumberLiteralDisplayField</b> class to define literal display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField" /> class.
            </summary>
      <param name="literalText">
              A <see cref="T:System.String" /> value indicates the literal text.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField.Text">
      <summary>
              Gets or sets the literal text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the literal text of the field.
              <br /> The default is a White-Space char.
            </value>
      <remarks>
              The property retrieves the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField" />.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField">
      <summary>
              Represents <b>NumberDecimalGeneralFormatDisplayField</b> class to define general format display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat" /> value indicates the pattern.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField.Pattern">
      <summary>
              Gets or sets the pattern of the field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat" /> enumeration indicates the pattern of the field.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum1_G" />.
            </value>
      <remarks>
              The property retrieves the display pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField" /> when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> hasn't the input focus.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField">
      <summary>
              Represents <b>NumberMoneyPatternDisplayField</b> class to define money pattern display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:System.String" /> value indicates the pattern which specify the pattern to parse the money pattern.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField.Pattern">
      <summary>
              Gets or sets the pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the pattern of the field.
              <br /> The default is ###[####:万].
            </value>
      <remarks>
             The property retrieves the display pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField" /> when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> hasn't the input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField.DecimalSeparator">
      <summary>
              Gets or sets the decimal separator of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value indicatse the decimal point.
            </value>
      <remarks>
              The property retrieves the decimal separator. The default value depends on the system information.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField.GroupSeparator">
      <summary>
              Gets or sets the group separator of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value indicates the group separator.
            </value>
      <remarks>
              The property retrieves the group separator. The default value depends on the system information.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayField">
      <summary>
              Represents <b>NumberSystemFormatDisplayField</b> class to define percent display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayField.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayField" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayField.Pattern">
      <summary>
              Gets or sets the pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the pattern that used to format the numeric value.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField">
      <summary>
              Represents <b>NumberField</b> class to define fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
      <remarks>
              It is a base class for all Fields of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> Control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField.Name">
      <summary>
              Gets or sets the name of the object.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicating the name of the object.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField">
      <summary>
              Represents <b>NumberSignField</b> class to define sign fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField.NegativePattern">
      <summary>
              Gets or sets the negative pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the negative pattern.
            </value>
      <remarks>
              The property retrieves the pattern when the value is negative.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField.PositivePattern">
      <summary>
              Gets or sets the positive pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the positive pattern.
            </value>
      <remarks>
              The property retrieves the pattern when the value is positive.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField.SignState">
      <summary>
              Gets the sign state of the field.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField.SignState" /> enum value indicates the sign.
            </value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.None" /> means do not show the sign, because now value is <see langword="null" />.
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Positive" /> means the state of the value is positive, we should show the positive sign.
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Negative" /> means the state of the value is negative, we should show the negative sign.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField">
      <summary>
              Represents <b>NumberIntegerPartField</b> class to define integer part fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.GroupSeparator">
      <summary>
              Gets or sets the character that separates groups of digits to the left of the decimal in numeric values.
            </summary>
      <value>
              The character that separates groups of digits to the left of the decimal in numeric values.
              The default for InvariantInfo is ",". 
            </value>
      <remarks>
              The initial value of this property is derived from the settings in 
              Regional and Language Options (or Regional Options or Regional Settings) in Control Panel. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.GroupSizes">
      <summary>
              Gets or sets the number of digits in each group to the left of the decimal in numeric values. 
            </summary>
      <value>
              The number of digits in each group to the left of the decimal in numeric values.
              The default for InvariantInfo is a one-dimensional array with only one element, which is set to 3.
            </value>
      <remarks>
              Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.
              The first element of the array defines the number of elements in the least significant group of digits 
              immediately to the left of the NumberDecimalSeparator. Each subsequent element refers to the next significant
              group of digits to the left of the previous group. If the last element of the array is not 0, the remaining
              digits are grouped based on the last element of the array. If the last element is 0, the remaining digits
              are not grouped.
            <note>
              For example, if the array contains { 3, 4, 5 }, the digits will be grouped similar to "55,55555,55555,55555,4444,333.00".
              If the array contains { 3, 4, 0 }, the digits will be grouped similar to "55555555555555555,4444,333.00".
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.Value">
      <summary>
              Gets or sets the value of the integer part.
            </summary>
      <value>
              A nullable <b>decimal</b> value indicates the value of the integer part.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.MinDigits">
      <summary>
              Gets or sets the required digits of the field.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the required digits of the field.
              <br /> The default is 0.
            </value>
      <remarks>
              The property retrieves the minimum number of the digits.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.MaxDigits">
      <summary>
              Gets or sets the optional digits of the field.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the optional digits of the field.
            </value>
      <remarks>
              The property retrieves the maximum number of the digits.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.SpinIncrement">
      <summary>
              Gets or sets the spin increment of the field.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </value>
      <remarks>
              The default value is the owner's <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" /> value except we set the value.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.SpinDown">
      <summary>
              Performs spin down behavior.
            </summary>
      <remarks>
              The method spins the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.Value" /> 
              to the next one which less than current.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.SpinDown(System.Int32)">
      <summary>
              Performs spin down with the specified increment parameters.
            </summary>
      <param name="increment">
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </param>
      <remarks>
              The method spins the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.Value" /> 
              to the next one which less than current following the increment.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.SpinUp">
      <summary>
              Performs spin up behavior.
            </summary>
      <remarks>
              The method spins the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.Value" /> 
              to the previous one which greater than current.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.SpinUp(System.Int32)">
      <summary>
              Performs spin up with the specified increment parameters.
            </summary>
      <param name="increment">
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </param>
      <remarks>
              The method spins the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.Value" />
              to the previous one which greater than current following the increment.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorField">
      <summary>
              Represents <b>NumberDecimalSeparatorField</b> class to define decimal separator fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorField.DecimalSeparator">
      <summary>
              Gets or sets the character to use as the decimal separator in numeric values.
            </summary>
      <value>
              The character to use as the decimal separator in numeric values.
              The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is '.'.
            </value>
      <remarks>
              The property retrieves the decimal separator. The default value depends on the system information.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField">
      <summary>
              Represents <b>NumberDecimalPartField</b> class to define decimal part fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.Value">
      <summary>
              Gets or sets the value of the decimal part.
            </summary>
      <value>
              The <see cref="T:System.Nullable`1" /> value indicates the decimal part.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.MinDigits">
      <summary>
              Gets or sets the required digits of the field.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the required digits of the field.
              <br /> The default is 0.
            </value>
      <remarks>
              The property retrieves the minimum number of the digits.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.MaxDigits">
      <summary>
              Gets or sets the optional digits of the field.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the optional digits of the field.
            </value>
      <remarks>
              The property retrieves the maximum number of the digits.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.SpinIncrement">
      <summary>
              Gets or sets the spin increment.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </value>
      <remarks>
              The default value is the owner's <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" /> value except we set the value.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.SpinDown">
      <summary>
              Performs spin down behavior.
            </summary>
      <remarks>
              The method spins the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.Value" />
              to the next one which less than current.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.SpinDown(System.Int32)">
      <summary>
              Performs spin down with the specified increment parameters.
            </summary>
      <param name="increment">
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </param>
      <remarks>
              The method spins the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.Value" />
              to the next one which less than current following the increment.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.SpinUp">
      <summary>
              Performs spin up behavior.
            </summary>
      <remarks>
              The method spins the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.Value" />
              to the previous one which greater than current.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.SpinUp(System.Int32)">
      <summary>
              Performs spin up with the specified increment parameters.
            </summary>
      <param name="increment">
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </param>
      <remarks>
              The method spins the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.Value" />
              to the previous one which greater than current following the increment.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayField">
      <summary>
              Represents <b>TimeSpanDisplayField</b> class to define display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" /> control.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField">
      <summary>
              Represents <b>TimeSpanField</b> class to define fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" /> control.
            </summary>
      <remarks>
              This class represents a base field that can accepted by <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" /> control.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo">
      <summary>
              Represents the <b>DisplayFieldInfo</b> class used to define a base for the display field.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.BackColor">
      <summary>
              Gets or sets the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" /> object.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color of the field.
            <br /> The default is <see cref="P:System.Drawing.Color.Transparent" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.Font">
      <summary>
              Gets or sets the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" /> object.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Font" /> object that indicates the <b>Font</b> of the field.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.ForeColor">
      <summary>
              Gets or sets the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" /> object.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground color of the field.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.Margin">
      <summary>
              Gets or sets the space around the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" /> object.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding"></see> that represents the space around the field.
            <br /> The default is "0,0,0,0".
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.Name">
      <summary>
              Gets or sets the name of the object.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the name of the object.
            <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.Padding">
      <summary>
              Gets or sets padding within the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" />.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding"></see> that represents the field's internal spacing characteristics.
            <br /> The default is "0,0,0,0".
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo">
      <summary>
              Represnts a <b>FieldInfo</b> class used to define a base field.
            </summary>
      <remarks>
              This class implements the view function for a single segment. Some input behavior is also exposed to the user.
              This is the final interface for the user.
              When a field is created, it creates a segment and a value module for it. Then configuration is done on the
              segment and the value module.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.BackColor">
      <summary>
              Gets or sets the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> object.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color of the field.
            <br /> The default is <see cref="P:System.Drawing.Color.Transparent" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend in to the color scheme of the forms.
            <para />
              To change the color of the text within the control, use the <see cref="P:FieldInfo.ForeColor" /> property. When setting the <b>BackColor</b> property of the control, ensure that the color you choose does not cause the text of the control to disappear.
              For example, if the <b>BackColor</b> and <b>ForeColor</b> properties are both set to <b>Color.Black</b>, the text within your control will not be visible.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.Font">
      <summary>
              Gets or sets the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> object.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Font" /> object that indicates the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> object.
            </value>
      <remarks>
        <para>
              The <b>Font</b> property is an ambient property. An ambient property is a control property that,
              if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
              <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default.
            </para>
        <para></para>
        <para>
              Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>.
              You can base the new font on an existing font.
            </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.ForeColor">
      <summary>
              Gets or sets the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> object.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground color of the field.
            </value>
      <remarks>
              You can use the <b>ForeColor</b> property to change the color of the text within the control to match the text of other controls on the form.
              You can also use this property to highlight a specific control that contains an invalid value.
            <para />
              To change the background color of the control, use the <see cref="P:FieldInfo.BackColor" /> property. When setting the ForeColor property of your text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <b>ForeColor</b> and <b>BackColor</b> properties are both set to <b>Color.Black</b>, the text within your textbox control will not be visible.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.Margin">
      <summary>
              Gets or sets the space around the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> object.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding"></see> that represents the space between fields.
            <br /> The default is "0,0,0,0".
            </value>
      <remarks>
              This property determines the distance between one field and the fields next to it.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.Name">
      <summary>
              Gets or sets the name of the object.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the name of the object.
            <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.Padding">
      <summary>
              Gets or sets padding within the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> object.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding"></see> that represents the field's internal spacing characteristics.
            <br /> The default is "0,0,0,0".
            </value>
      <remarks>
              This property determines the distance between the input area of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> and the boundary edge.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.Text">
      <summary>
              Gets text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayFieldInfo">
      <summary>
              Represents the <b>DateADDisplayFieldInfo</b> class used to define AD type display fields for the the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo">
      <summary>
              Represents the <b>DateAmPmDisplayFieldInfo</b> class used to define AmPm type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo" /> class.
            </summary>
      <param name="pattern">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value that indicates the AMPM pattern.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern,System.String,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo" /> class.
            </summary>
      <param name="pattern">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value that indicates the AMPM pattern.
            </param>
      <param name="amDesignator">
              A <see cref="T:System.String" /> value that indicates the <see cref="P:DateAmPmDisplayFieldInfo.AMDesignator" />.
            </param>
      <param name="pmDesignator">
              A <see cref="T:System.String" /> value that indicates the <see cref="P:DateAmPmDisplayFieldInfo.PMDesignator" />.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.AMDesignator">
      <summary>
              Gets or sets the AM designator.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the <see cref="P:DateAmPmDisplayFieldInfo.AMDesignator" />.
            </value>
      <remarks>
              The property retrieves the display text when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> does not have input focus and the value is before noon.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.Pattern">
      <summary>
              Gets or sets a value that indicates how to show the AmPm pattern.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value that indicates the pattern.
              The default value is <see cref="F:AmPmPattern.AmPmDesignator" />.
            </value>
      <remarks>
              This property retrieves the display pattern for the <see cref="P:DateAmPmDisplayFieldInfo.AMDesignator" /> and the <see cref="P:DateAmPmDisplayFieldInfo.PMDesignator" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.PMDesignator">
      <summary>
              Gets or sets the PM designator.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the <see cref="P:DateAmPmDisplayFieldInfo.PMDesignator" />.
            </value>
      <remarks>
              This property retrieves the display text when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> does not have input focus and the value is after noon.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo">
      <summary>
              Represents the <b>DateAmPmFieldInfo</b> class used to define AmPm fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.#ctor">
      <summary>
              Initalizes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo" /> class.
            </summary>
      <param name="pattern">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value that indicates the AMPM pattern.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern,System.String,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo" /> class.
            </summary>
      <param name="pattern">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value that indicates the AMPM pattern.
            </param>
      <param name="amDesignator">
              A <see cref="T:System.String" /> value that indicates the AM designator.
            </param>
      <param name="pmDesignator">
              A <see cref="T:System.String" /> value that indicates the PM designator.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.AMDesignator">
      <summary>
              Gets or sets the AM designator.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the AM designator.
            </value>
      <remarks>
              This property retrieves the text when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> has input focus and the value is before noon.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.Pattern">
      <summary>
              Gets or sets a value that indicates the field pattern.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> value that indicates the pattern.
            <br /> The default is <see cref="F:AmPmPattern.AmPmDesignator" />.
            </value>
      <remarks>
              This property retrieves the pattern for the <see cref="P:DateAmPmFieldInfo.AMDesignator" /> and the <see cref="P:DateAmPmFieldInfoPMDesignator" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.PMDesignator">
      <summary>
              Gets or sets the PM designator.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the PM designator.
            </value>
      <remarks>
              This property retrieves the text when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> has input focus and the value is after noon.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo">
      <summary>
              Represents the <b>DateDayDisplayFieldInfo</b> class used to define day type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
        <see langword="true" /> if the length of the field is fixed; otherwise, <see langword="false" />.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo.ShowLeadingZero">
      <summary>
              Gets or sets a value that indicates whether to show leading zeros.
            </summary>
      <value>
        <see langword="true" /> to show leading zeros; otherwise, <see langword="false" />.
            <br /> The default value is <see langword="false" />.
            </value>
      <remarks>
              This property retrieves whether to show the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayFieldInfo">
      <summary>
              Represents <b>DateDayFieldInfo</b> class to define day fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayFieldInfo" /> class.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo">
      <summary>
              Represents the <b>DateDisplayFieldInfo</b> class used to define display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo">
      <summary>
              Represents the <b>DateEraDisplayFieldInfo</b> class used to define era type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.EraPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo" /> class.
            </summary>
      <param name="pattern">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> enumeration that indicates the pattern of the era display field.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo.Pattern">
      <summary>
              Gets or sets the era pattern for the field.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> enumeration that indicates the pattern.
              The default value is <see cref="F:EraPattern.EraName" />.
            </value>
      <remarks>
              This property retrieves the display pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo" /> when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> does not have input focus.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo">
      <summary>
              Represents the <b>DateEraFieldInfo</b> class used to define Era fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.EraPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" /> class.
            </summary>
      <param name="pattern">
              The pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" />.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo.AutoDropDown">
      <summary>
              Gets or sets a <see langword="bool" /> value which indicates whether to automatically drop down
              when this field gets focus.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to automatically drop down when the field gets focus; 
              otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              This property retrieves whether to automatically drop down the drop-down window when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" /> has input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo.DropDownEnabled">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether the drop-down function is active.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> indicates the drop-down function is active, otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              This property indicates whether the drop-down window can drop down.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo.Pattern">
      <summary>
              Gets or sets the pattern of the field.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> value that indicates the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" />.
            <br /> The default is <see cref="F:EraPattern.EraName" />.
            </value>
      <remarks>
              This property retrieves the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" />.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo">
      <summary>
              Represents the <b>DateEraYearDisplayFieldInfo</b> class used to define era year type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              If set to <see langword="true" /> show leading zeros.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo.#ctor(System.Boolean,System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              If set to <see langword="true" />, the field shows leading zeros.
            </param>
      <param name="showTraditionalFirstYear">
              A <see langword="bool" /> value, if set to <see langword="true" /> display the first era year as the start of the era.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo.ShowLeadingZero">
      <summary>
              Gets or sets a value that indicates whether to show leading zeros.
            </summary>
      <value>
        <see langword="true" /> to show leading zeros; otherwise, <see langword="false" />.
            <br />  The default is <see langword="false" />.
            </value>
      <remarks>
              This property retrieves whether to show the leading zero.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo.ShowTraditionalFirstYear">
      <summary>
              Gets or sets a value that indicates whether to show the first year using the traditional format.
            </summary>
      <value>
        <see langword="true" /> to show the first year using the traditional format; otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              This property retrieves whether to show the traditional year when the year is the first one.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearFieldInfo">
      <summary>
              Represents the <b>DateEraYearFieldInfo</b> class used to define Era year fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo">
      <summary>
              Represents the <b>DateFieldInfo</b> class used to define base input fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
      <remarks>
              This class represents the base class for field types that can be accepted by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo">
      <summary>
              Represents the <b>DateHourDisplayFieldInfo</b> class used to define hour type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              If set to <see langword="true" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> shows the leading zero.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo.#ctor(System.Boolean,System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              If set to <see langword="true" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> shows the leading zero.
            </param>
      <param name="midnightAs24">
              If set to <see langword="true" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> shows midnight as 24 o'clock.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo.MidnightAs24">
      <summary>
              Gets or sets a value that indicates whether midnight is displayed as hour 24.
            </summary>
      <value>
        <see langword="true" /> if midnight is displayed as hour 24; otherwise, <see langword="false" />.
            <br /> The default value is <see langword="false" />.
            </value>
      <remarks>
              This property indicates whether midnight is displayed as 24 or zero .
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo.ShowLeadingZero">
      <summary>
              Gets or sets a value that indicates whether to show leading zeros.
            </summary>
      <value>
        <see langword="true" /> to show leading zeros; otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              This property retrieves whether to show the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourFieldInfo">
      <summary>
              Represents the <b>DateHourFieldInfo</b> class used to define hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourFieldInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourFieldInfo.MidnightAs24">
      <summary>
              Gets or sets a value that indicates whether to specify midnight as 24 o'clock.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to specify midnight as 24 o'clock; otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              This property indicates whether midnight is displayed as 24 or zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayFieldInfo">
      <summary>
              Represents the <b>DateInputDisplayFieldInfo</b> class used to define input type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayFieldInfo.PromptChar">
      <summary>
              Gets or sets the prompt character for the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value used as a placeholder character for the display field.
            </value>
      <remarks>
              This property retrieves the <see cref="T:System.Char" /> used as the prompt character for the display field.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputFieldInfo">
      <summary>
              Represents the <b>DateInputFieldInfo</b> class used to define input fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputFieldInfo.PromptChar">
      <summary>
              Gets or sets the prompt character for the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value used as a placeholder character for the field when entering data.
            </value>
      <remarks>
              This property retrieves the <see cref="T:System.Char" /> used as the prompt character for the field.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputFieldInfo.SpinIncrement">
      <summary>
              Gets or sets the spin increment.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value that indicates the spin increment.
            </value>
      <remarks>
              The default value is the owner's Spin.Increment value except when setting the value.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo">
      <summary>
              Represents the <b>DateLiteralDisplayFieldInfo</b> class used to define literal type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo" /> class.
            </summary>
      <param name="literalText">
              A <see cref="T:System.String" /> value that indicates the literal text of the display literal field.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo.Text">
      <summary>
              Gets or sets the literal text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the literal text of the display field.
            <br /> The default is a space character.
            </value>
      <remarks>
              This property retrieves the literal text displayed when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> does not have input focus.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo">
      <summary>
              Represents the <b>DateLiteralFieldInfo</b> class used to define literal fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo" /> class.
            </summary>
      <param name="literalText">
              A <see cref="T:System.String" /> value that indicates the literal text.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo.Text">
      <summary>
              Gets or sets the literal text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the literal text of the field.
            <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              This property retrieves the literal text displayed when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> has the input focus.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo">
      <summary>
              Represents the <b>DateMinuteDisplayFieldInfo</b> class used to define minute type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value that indicates whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo" /> shows the leading zero.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo.ShowLeadingZero">
      <summary>
              Gets or sets a value that indicates whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo" /> shows the leading zero.
            </summary>
      <value>
        <see langword="true" /> to show the leading zero; otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              This property retrieves whether to show the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteFieldInfo">
      <summary>
              Represents the <b>DateMinuteFieldInfo</b> class used to define minute fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo">
      <summary>
              Represents the <b>DateMonthDisplayFieldInfo</b> class used to define month type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value, if <see langword="true" /> the field's length is fixed; otherwise, the length is alterable.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.MonthPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value, if <see langword="true" /> the field's length is fixed; otherwise, the length is alterable.
            </param>
      <param name="pattern">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> enumeration that indicates how to show the value of the month.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo.Pattern">
      <summary>
              Gets or sets the month pattern for the field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> enumeration that indicates the pattern used to display the month.
            <br /> The default is <see cref="F:MonthPattern.Number" />.
            </value>
      <remarks>
              This property retrieves the display pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo" /> when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> does not have the input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo.ShowLeadingZero">
      <summary>
              Gets or sets a value that indicates whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo" /> shows the leading zero.
            </summary>
      <value>
        <see langword="true" /> to show the leading zero; otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              This property retrieves whether to show the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo">
      <summary>
              Represents the <b>DateMonthFieldInfo</b> class used to define month fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.MonthPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" /> class.
            </summary>
      <param name="pattern">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> value that indicates the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" />.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo.AutoDropDown">
      <summary>
              Gets or sets a <see langword="bool" /> value which indicates whether to automatically drop down
              when this field gets focus.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to automatically drop down when the field gets focus;
              otherwise,<see langword="false" />.
            </value>
      <remarks>
              This property retrieves whether to automatically drop down the drop-down window when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" /> gets input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo.DropDownEnabled">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether the drop-down function is active.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> indicates the drop-down function is active; otherwise, <see langword="false" />.
            </value>
      <remarks>
              This property indicates whether the drop-down window can drop down.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo.Pattern">
      <summary>
              Gets or sets the field pattern.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> value that indicates the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" />.
            <br /> The default is <see cref="F:MonthPattern.Number" />.
            </value>
      <remarks>
              This property retrieves the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" /> pattern.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo">
      <summary>
              Represents the <b>DateSecondDisplayFieldInfo</b> class used to define second type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value, if set to <see langword="true" /> the length of the field is fixed.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo.ShowLeadingZero">
      <summary>
              Gets or sets a value that indicates whether to show a leading zero.
            </summary>
      <value>
        <see langword="true" /> to show a leading zero; otherwise, <see langword="false" />.
            <br /> The default value is <see langword="false" />.
            </value>
      <remarks>
              This property retrieves whether to show the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondFieldInfo">
      <summary>
              Represents the <b>DateSecondFieldInfo</b> class used to define second fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo">
      <summary>
              Represents the <b>DateShortHourDisplayFieldInfo</b> class used to define short hour type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value that indicates whether the length of the field is fixed.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              A <see langword="bool" /> value that indicates whether the length of the field is fixed.
            </param>
      <param name="hour12Mode">
              A <see cref="P:DateShortHourDisplayFieldInfo.Hour12Mode" /> enumeration that indicates how to represent the hour 12 in duodecimal hour format.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo.Hour12Mode">
      <summary>
              Gets or sets a value that indicates whether the hour 0 is displayed as hour 12.
            </summary>
      <value>
              A <see cref="P:DateShortHourDisplayFieldInfo.Hour12Mode" /> enumeration indicates how to represent the hour 12 in duodecimal hour format.
              The default value is <see cref="F:Hour12Mode.Hour0As12" />.
            </value>
      <remarks>
              This property retrieves the short hour display mode.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo.ShowLeadingZero">
      <summary>
              Gets or sets a value that indicates whether to show a leading zero.
            </summary>
      <value>
        <see langword="true" /> to show a leading zero; otherwise, <see langword="false" />.
            <sbr /> The default value is <see langword="false" />.
            </value>
      <remarks>
              This property retrieves whether to show the leading zero.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourFieldInfo">
      <summary>
              Represents the <b>DateShortHourFieldInfo</b> class used to define short hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourFieldInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourFieldInfo.Hour12Mode">
      <summary>
              Gets or sets a value that indicates whether to show 0 o'clock as 12.
            </summary>
      <value>
              A <see cref="P:DateShortHourFieldInfo.Hour12Mode" /> enumeration that indicates the type of 12-hour mode.
            <br /> The default is <see cref="F:Hour12Mode.Hour0As12" />.
            </value>
      <remarks>
              This property retrieves the short hour display mode.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo">
      <summary>
              Represents the <b>DateSystemFormatDisplayFieldInfo</b> class used to define system format type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:System.String" /> value that indicates the pattern of the field.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo.Pattern">
      <summary>
              Gets or sets the system format pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the pattern of the field.
            <br /> The default is G.
            </value>
      <remarks>
              This property retrieves the pattern for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo" />.
              The <see cref="T:System.DateTime" /> value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> converts to a <see cref="T:System.String" /> as the display text of this field, following the <b>Pattern</b> property.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo">
      <summary>
              Represents the <b>DateWeekdayDisplayFieldInfo</b> class used to define weekday type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern" /> value that indicates the weekday pattern.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo.Pattern">
      <summary>
              Gets or sets a value that indicates the weekday pattern for the field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern" /> value that indicates the weekday pattern.
            <br /> The default is <see cref="F:WeekdayPattern.WeekdayName" />.
            </value>
      <remarks>
              This property retrieves the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo" />.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo">
      <summary>
              Represents the <b>DateYearDisplayFieldInfo</b> class used to define year type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              If set to <see langword="true" /> the digits of the display field are fixed; otherwise, <see langword="false" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.YearDigitType)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo" /> class.
            </summary>
      <param name="showLeadingZero">
              If set to <see langword="true" /> the digits of the display field are fixed; otherwise, <see langword="false" />.
            </param>
      <param name="yearDigit">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> value that indicates the type of the year digit.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo.ShowLeadingZero">
      <summary>
              Gets or sets a value that indicates whether to show leading zeros.
            </summary>
      <value>
        <see langword="true" /> to show a leading zero; otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              This property retrieves whether to show the leading zero.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo.YearDigit">
      <summary>
              Gets or sets the year digit of the field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> enumeration that indicates the year digit types.
            <br /> The default is <see cref="F:YearDigitType.FourDigitYear" />.
            </value>
      <remarks>
              This property retrieves the display mode of the year value.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo">
      <summary>
              Represents the <b>DateYearFieldInfo</b> class used to define year fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.YearDigitType)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo" /> class.
            </summary>
      <param name="yearDigit">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> value that indicates the year digit.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo.TwoDigitYearMax">
      <summary>
              Gets or sets the maximum year for the two digit mode.
            </summary>
      <value>
              An integer value that indicates the last year of a 100-year range that can be represented by a 2-digit year.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo.YearDigit">
      <summary>
              Gets or sets the year digit of the field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> enumeration that indicates the year digit.
            <br /> The default is <see cref="F:YearDigitType.FourDigitYear" />.
            </value>
      <remarks>
              This property retrieves the display mode of the year value.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo">
      <summary>
              Represents <b>MaskEnumerationFieldInfo</b> class to define pattern fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.#ctor(System.String[])">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo" /> class.
            </summary>
      <param name="items">
              A <see cref="T:System.String" /> array indicates the items.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.AutoConvert">
      <summary>
              Gets or sets a value indicating whether the field can auto convert.
            </summary>
      <value>
        <see langword="true" /> if can perform auto convert; otherwise, <see langword="false" />.
            </value>
      <remarks>
              If set the <b>AutoConvert</b> property to <see langword="true" />, all convertible characters will be 
              automatically converted accordingly to the input mask. For example, if set 
              the input mask to "A", by hitting a lower case character the control automatically 
              converts the character into an upper case. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.Items">
      <summary>
              Gets or sets supported items of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> array value indicates the items.
            </value>
      <remarks>
              The property retrieves the collection about the <see cref="T:System.String" /> item.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.PromptChar">
      <summary>
              Gets or sets the prompt char of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value used for prompt empty bits of the field when inputting.
            </value>
      <remarks>
              The property retrieves the <see cref="T:System.Char" /> used for prompt empty bits of the field.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.Focus">
      <summary>
              Sets input focus to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo" />.
            </summary>
      <returns>
        <see langword="true" /> if the input focus request was successful; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.ValidateItems(System.String[])">
      <summary>
            Validate items of MaskEnumarationFieldInfo
            </summary>
      <param name="items"></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.ValidateItem(System.String)">
      <summary>
            Validate item of MaskEnumarationFieldInfo's Items
            </summary>
      <param name="item"></param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.SpinIncrement">
      <summary>
              Gets or sets the spin increment.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </value>
      <remarks>
              The default value is the owner's <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" /> value except we set the value.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.AutoDropDown">
      <summary>
              Gets or sets a <see langword="bool" /> value which indicates whether auto drop down
              when focus come to this field.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the auto drop down when focus come
              to this field, otherwise,<see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The property retrieves whether to dropdown the dropdown window automatically when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationField" /> got the input focus or not.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.DropDownEnabled">
      <summary>
             Gets or sets a <see langword="bool" /> value indicates whether the dropdown function is active.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> indicates the dropdown function is active, otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The property indicates whether the drop-down window can be drop down or not.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo">
      <summary>
              Represents the <b>MaskFieldInfo</b> class used to define base input fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" />.
            </summary>
      <remarks>
              This class represents the base class for field types that can be accepted by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.PropertyChanged">
      <summary>
            Event is raised when a property is changed
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo">
      <summary>
              Represents <b>MaskLiteralFieldInfo</b> class to define pattern fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo" /> class.
            </summary>
      <param name="literalText">
              A <see cref="T:System.String" /> value indicates the literal.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.Text">
      <summary>
              Gets or sets the literal text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the literal text of the field.
              <br /> The default is White-Space char.
            </value>
      <remarks>
              The property retrieves the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo">
      <summary>
              Represents <b>MaskPatternFieldInfo</b> class to define pattern fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:System.String" /> value indicates the pattern.</param>
      <param name="minLength">
              An <see cref="T:System.Int32" /> value indicates the minimum length.
            </param>
      <param name="maxLength">
              An <see cref="T:System.Int32" /> value indicates the maximum length.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.MinLength">
      <summary>
              Gets or sets the minimum length of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo" />.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the minimum length.
              <br /> The default is 1.
            </value>
      <remarks>
              The property determines the minimum length of input characters.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.MaxLength">
      <summary>
              Gets or sets the maximum length of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo" />.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the maximum length.
              <br /> The default is <see cref="F:System.UInt16.MaxValue" />.
            </value>
      <remarks>
              The property determines the maximum length of input characters.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.AutoConvert">
      <summary>
              Gets or sets a value indicating whether the field can auto convert.
            </summary>
      <value>
        <see langword="true" /> if can perform auto convert; otherwise, <see langword="false" />.
            </value>
      <remarks>
              If set the <b>AutoConvert</b> property to <see langword="true" />, all convertible characters will be 
              automatically converted accordingly to the input mask. For example, if set 
              the input mask to "A", by hitting a lower case character the control automatically 
              converts the character into an upper case. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.Pattern">
      <summary>
              Gets the pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the pattern.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The property retrieves the pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternField" /> when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask" /> hasn't the input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.PromptChar">
      <summary>
              Gets or sets the prompt char of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value used for prompt empty bits of the field when inputting.
            </value>
      <remarks>
              The property retrieves the <see cref="T:System.Char" /> used for prompt empty bits of the field.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.UseSystemPasswordChar">
      <summary>
              Gets or sets a value indicating whether use system password char.
            </summary>
      <value>
        <see langword="true" /> if use system password char; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The <b>UseSystemPasswordChar</b> property has precedence over the 
              <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.PasswordChar" /> property. Whenever the <b>UseSystemPasswordChar</b>
              is set to <see langword="true" />, the default system password character is used and any character set by 
              <b>PasswordChar</b>is ignored.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.PasswordChar">
      <summary>
              Gets or sets the password char.
            </summary>
      <value>
              The <see cref="T:System.Char" /> value indicates the char of the password.
              <br /> The default is "\0".
            </value>
      <remarks>
              The <b>PasswordChar</b> can be used to create a password field in a dialog box. Although you 
              can use any SBCS character, most Windows-based applications use the asterisk (*) (Chr(42)).
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.Text">
      <summary>
              Gets or sets the text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicating the text of the field.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.Focus">
      <summary>
              Sets input focus to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternField" />.
            </summary>
      <returns>
        <see langword="true" /> if the input focus request was successful; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo">
      <summary>
              Represents the <b>NumberDecimalGeneralFormatDisplayFieldInfo</b> class used to define general format display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat" /> value indicates the pattern.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo.Pattern">
      <summary>
              Gets or sets the pattern of the field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat" /> enumeration indicates the pattern of the field.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum1_G" />.
            </value>
      <remarks>
              The property retrieves the display pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField" /> when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> hasn't the input focus.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayFieldInfo">
      <summary>
              Represents <b>NumberDecimalPartDisplayFieldInfo</b> class to define decimal part display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayFieldInfo.MinDigits">
      <summary>
              Gets or sets the minimize digits of the field.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the minimize digits.
              <br /> The default is 0.
            </value>
      <remarks>
              The property retrieves the minimum number of the digits.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayFieldInfo.MaxDigits">
      <summary>
              Gets or sets the maximize digits of the field.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the maximize digits.
              <br /> The default is 28.
            </value>
      <remarks>
              The property retrieves the maximum number of the digits.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartFieldInfo">
      <summary>
              Represents <b>NumberDecimalPartFieldInfo</b> class to define decimal part fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> control.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartFieldInfo.MinDigits">
      <summary>
              Gets or sets the required digits of the field.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the required digits of the field.
              <br /> The default is 0.
            </value>
      <remarks>
              The property retrieves the minimum number of the digits.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartFieldInfo.MaxDigits">
      <summary>
              Gets or sets the optional digits of the field.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the optional digits of the field.
            </value>
      <remarks>
              The property retrieves the maximum number of the digits.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartFieldInfo.SpinIncrement">
      <summary>
              Gets or sets the spin increment.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </value>
      <remarks>
              The default value is the owner's <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" /> value except we set the value.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayFieldInfo">
      <summary>
              Represents <b>NumberDecimalSeparatorDisplayFieldInfo</b> class to define deciaml separator display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayFieldInfo.DecimalSeparator">
      <summary>
              Gets or sets the character to use as the decimal separator in display numeric values.
            </summary>
      <value>
              The character to use as the decimal separator in display numeric values.
            </value>
      <remarks>
              The property retrieves the decimal separator. The default value depends on the system information.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorFieldInfo">
      <summary>
              Represents <b>NumberDecimalSeparatorFieldInfo</b> class to define decimal separator fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> control.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorFieldInfo.DecimalSeparator">
      <summary>
              Gets or sets the character to use as the decimal separator in numeric values.
            </summary>
      <value>
              The character to use as the decimal separator in numeric values.
              The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is '.'.
            </value>
      <remarks>
              The property retrieves the decimal separator. The default value depends on the system information.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo">
      <summary>
              Represents the <b>NumberDisplayFieldInfo</b> class used to define display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFieldInfo">
      <summary>
              Represents the <b>NumberFieldInfo</b> class used to define base input fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </summary>
      <remarks>
              This class represents the base class for field types that can be accepted by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFieldInfo.Name">
      <summary>
              Gets or sets the name of the object.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the name of the object.
            <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo">
      <summary>
              Represents <b>NumberIntegerPartDisplayFieldInfo</b> class to define integer part display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo.GroupSeparator">
      <summary>
              Gets or sets the group separator of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value indicates the group separator.
            </value>
      <remarks>
              The property retrieves the group separator. The default value depends on the system information.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo.GroupSizes">
      <summary>
              Gets or sets the number of digits in each group to the left of the decimal in numeric values. 
            </summary>
      <value>
              The number of digits in each group to the left of the decimal in numeric values.
              The default for InvariantInfo is a one-dimensional array with only one element, which is set to 3.
            </value>
      <remarks>
              Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.
              The first element of the array defines the number of elements in the least significant group of digits 
              immediately to the left of the NumberDecimalSeparator. Each subsequent element refers to the next significant
              group of digits to the left of the previous group. If the last element of the array is not 0, the remaining
              digits are grouped based on the last element of the array. If the last element is 0, the remaining digits
              are not grouped.
            <note>
              For example, if the array contains { 3, 4, 5 }, the digits will be grouped similar to "55,55555,55555,55555,4444,333.00".
              If the array contains { 3, 4, 0 }, the digits will be grouped similar to "55555555555555555,4444,333.00".
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo.MinDigits">
      <summary>
              Gets or sets the min digits of the field.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the min digits.
              <br /> The default is 1.
            </value>
      <remarks>
              The property retrieves the minimum number of the digits.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo">
      <summary>
              Represents <b>NumberIntegerPartFieldInfo</b> class to define integer part fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> control.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo.GroupSeparator">
      <summary>
              Gets or sets the character that separates groups of digits to the left of the decimal in numeric values.
            </summary>
      <value>
              The character that separates groups of digits to the left of the decimal in numeric values.
              The default for InvariantInfo is ",". 
            </value>
      <remarks>
              The initial value of this property is derived from the settings in 
              Regional and Language Options (or Regional Options or Regional Settings) in Control Panel. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo.GroupSizes">
      <summary>
              Gets or sets the number of digits in each group to the left of the decimal in numeric values. 
            </summary>
      <value>
              The number of digits in each group to the left of the decimal in numeric values.
              The default for InvariantInfo is a one-dimensional array with only one element, which is set to 3.
            </value>
      <remarks>
              Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.
              The first element of the array defines the number of elements in the least significant group of digits 
              immediately to the left of the NumberDecimalSeparator. Each subsequent element refers to the next significant
              group of digits to the left of the previous group. If the last element of the array is not 0, the remaining
              digits are grouped based on the last element of the array. If the last element is 0, the remaining digits
              are not grouped.
            <note>
              For example, if the array contains { 3, 4, 5 }, the digits will be grouped similar to "55,55555,55555,55555,4444,333.00".
              If the array contains { 3, 4, 0 }, the digits will be grouped similar to "55555555555555555,4444,333.00".
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo.MinDigits">
      <summary>
              Gets or sets the required digits of the field.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the required digits of the field.
              <br /> The default is 0.
            </value>
      <remarks>
              The property retrieves the minimum number of the digits.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo.MaxDigits">
      <summary>
              Gets or sets the optional digits of the field.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the optional digits of the field.
            </value>
      <remarks>
              The property retrieves the maximum number of the digits.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo.SpinIncrement">
      <summary>
              Gets or sets the spin increment of the field.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </value>
      <remarks>
              The default value is the owner's <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" /> value except we set the value.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo">
      <summary>
              Represents the <b>NumberLiteralDisplayFieldInfo</b> class used to define literal type display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo" /> class.
            </summary>
      <param name="literalText">
              A <see cref="T:System.String" /> value that indicates the literal text of the display literal field.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo.Text">
      <summary>
              Gets or sets the literal text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the literal text of the display field.
            <br /> The default is a space character.
            </value>
      <remarks>
              The property retrieves the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField" />.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo">
      <summary>
              Represents the <b>NumberMoneyPatternDisplayFieldInfo</b> class used to define money pattern display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo" /> class.
            </summary>
      <param name="pattern">
              A <see cref="T:System.String" /> value indicates the pattern which specify the pattern to parse the money pattern.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo.Pattern">
      <summary>
              Gets or sets the pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the pattern of the field.
              <br /> The default is ###[####:万].
            </value>
      <remarks>
             The property retrieves the display pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField" /> when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> hasn't the input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo.DecimalSeparator">
      <summary>
              Gets or sets the decimal separator of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value indicatse the decimal point.
            </value>
      <remarks>
              The property retrieves the decimal separator. The default value depends on the system information.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo.GroupSeparator">
      <summary>
              Gets or sets the group separator of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value indicates the group separator.
            </value>
      <remarks>
              The property retrieves the group separator. The default value depends on the system information.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo">
      <summary>
              Represents <b>NumberSignDisplayFieldInfo</b> class to define sign display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo.#ctor(System.String,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo" /> class.
            </summary>
      <param name="positivePattern">
              A <b>string</b> value that indicates the positive pattern.
            </param>
      <param name="negativePattern">
              A <b>string</b> value that indicates the negative pattern.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo.NegativePattern">
      <summary>
              Gets or sets the negative pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the negative pattern.
            </value>
      <remarks>
              The property retrieves the pattern when the value is negative.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo.PositivePattern">
      <summary>
              Gets or sets the positive pattern of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the positive pattern.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The property retrieves the pattern when the value is positive.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignFieldInfo">
      <summary>
              Represents <b>NumberSignFieldInfo</b> class to define sign fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> control.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignFieldInfo.NegativePattern">
      <summary>
              Gets or sets the negative pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the negative pattern.
            </value>
      <remarks>
              The property retrieves the pattern when the value is negative.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignFieldInfo.PositivePattern">
      <summary>
              Gets or sets the positive pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the positive pattern.
            </value>
      <remarks>
              The property retrieves the pattern when the value is positive.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayFieldInfo">
      <summary>
              Represents the <b>NumberSystemFormatDisplayFieldInfo</b> class used to define system format display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayFieldInfo.Pattern">
      <summary>
              Gets or sets the pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the pattern that used to format the numeric value.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayDisplayFieldInfo">
      <summary>
              Represents <b>TimeSpanDayDisplayFieldInfo</b> class to display sign fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayDisplayFieldInfo.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayField" /> class.
            </summary>
      <param name="digits">
              An <see cref="T:System.Int32" /> value indicates the digits.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayFieldInfo">
      <summary>
              Represents <b>TimeSpanDayFieldInfo</b> class to define sign fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayField" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayFieldInfo.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayField" /> class.
            </summary>
      <param name="digits">
              An <see cref="T:System.Int32" /> value indicates the digits.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo">
      <summary>
              Represents <b>TimeSpanDecimalDisplayFieldInfo</b> class to display hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo" /> class.
            </summary>
      <param name="digits">
              An <see cref="T:System.Int32" /> value indicates the digits.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo">
      <summary>
              Represents <b>TimeSpanDecimalFieldInfo</b> class to define hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo" /> class.
            </summary>
      <param name="digits">
              An <see cref="T:System.Int32" /> value indicates the digits.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo">
      <summary>
              Represents <b>TimeSpanDisplayFieldInfo</b> class to define display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
      <remarks>
              This class represents the base class for field types that can be accepted by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo">
      <summary>
              Represents the <b>TimeSpanField</b> class used to define base input fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />.
            </summary>
      <remarks>
              This class represents the base class for field types that can be accepted by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.PropertyChanged">
      <summary>
            Event is raised when a property is changed
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo">
      <summary>
              Represents <b>TimeSpanHourDisplayFieldInfo</b> class to display hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo" /> class.
            </summary>
      <param name="digits">
              An <see cref="T:System.Int32" /> value indicates the digits.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo">
      <summary>
              Represents <b>TimeSpanHourFieldInfo</b> class to define hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo" /> class.
            </summary>
      <param name="digits">
              An <see cref="T:System.Int32" /> value indicates the digits.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo">
      <summary>
              Represents <b>TimeSpanInputDisplayFieldInfo</b> class to display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
      <remarks>
              This class represents a base inputable field that can accepted by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.Digits">
      <summary>
              Gets or sets the digits of the field.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the digits of the field.
              <br /> The default is 1.
            </value>
      <remarks>
              The property retrieves how many chars user can input to the field.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.PromptChar">
      <summary>
              Gets or sets the prompt char of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value used for prompt empty bits of the field when inputting.
            </value>
      <remarks>
              The property retrieves the <see cref="T:System.Char" /> used for prompt empty bits of the field.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo">
      <summary>
              Represents <b>TimeSpanInputFieldInfo</b> class to define fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
      <remarks>
              This class represents a base inputable field that can accepted by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.Digits">
      <summary>
              Gets or sets the digits of the field.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the digits of the field.
              <br /> The default is 1.
            </value>
      <remarks>
              The property retrieves how many chars user can input to the field.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.Value">
      <summary>
              Gets or sets the value of the field.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value indicates the value of this field.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.PromptChar">
      <summary>
              Gets or sets the prompt char of the field.
            </summary>
      <value>
              A <see cref="T:System.Char" /> value used for prompt empty bits of the field when inputting.
            </value>
      <remarks>
              The property retrieves the <see cref="T:System.Char" /> used for prompt empty bits of the field.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.SpinIncrement">
      <summary>
              Gets or sets the spin increment.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the spin increment.
            </value>
      <remarks>
              The default value is the owner's <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" /> value except we set the value.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo">
      <summary>
              Represents <b>TimeSpanLiteralDisplayFieldInfo</b> class to define literal display fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo" /> class.
            </summary>
      <param name="literalText">
               A <see cref="T:System.String" /> value indicates the literal text.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.Text">
      <summary>
              Gets or sets the literal text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the literal text of the field.
              <br /> The default is White-Space char.
            </value>
      <remarks>
              The property retrieves the text of the field.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo">
      <summary>
              Represents <b>TimeSpanLiteralFieldInfo</b> class to define literal fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo" /> class.
            </summary>
      <param name="literalText">
               A <see cref="T:System.String" /> value indicates the literal text.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.Text">
      <summary>
              Gets or sets the literal text of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the literal text of the field.
              <br /> The default is White-Space char.
            </value>
      <remarks>
              The property retrieves the text of the field.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo">
      <summary>
              Represents <b>TimeSpanMinuteDisplayFieldInfo</b> class to display hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo" /> class.
            </summary>
      <param name="digits">
              An <see cref="T:System.Int32" /> value indicates the digits.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo">
      <summary>
              Represents <b>TimeSpanMinuteFieldInfo</b> class to define hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo" /> class.
            </summary>
      <param name="digits">
              An <see cref="T:System.Int32" /> value indicates the digits.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo">
      <summary>
              Represents <b>TimeSpanSecondDisplayFieldInfo</b> class to display hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo" /> class.
            </summary>
      <param name="digits">
              An <see cref="T:System.Int32" /> value indicates the digits.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo">
      <summary>
              Represents <b>TimeSpanSecondFieldInfo</b> class to define hour fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo.#ctor(System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo" /> class.
            </summary>
      <param name="digits">
              An <see cref="T:System.Int32" /> value indicates the digits.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo">
      <summary>
              Represents <b>TimeSpanSignDisplayFieldInfo</b> class to display sign fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.#ctor(System.String,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo" /> class.
            </summary>
      <param name="positivePattern">
              A <see cref="T:System.String" /> value indicates the positive pattern.
            </param>
      <param name="negativePattern">
              A <see cref="T:System.String" /> value indicates the negative pattern.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.NegativePattern">
      <summary>
              Gets or sets the negative pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the negative pattern.
            </value>
      <remarks>
              The property retrieves the pattern when the value is negative.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.PositivePattern">
      <summary>
              Gets or sets the positive pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the positive pattern.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The property retrieves the pattern when the value is positive.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo">
      <summary>
              Represents <b>TimeSpanSignFieldInfo</b> class to define sign fields for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> control.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.#ctor(System.String,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo" /> class.
            </summary>
      <param name="positivePattern">
              A <see cref="T:System.String" /> value indicates the positive pattern.
            </param>
      <param name="negativePattern">
              A <see cref="T:System.String" /> value indicates the negative pattern.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.NegativePattern">
      <summary>
              Gets or sets the negative pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the negative pattern.
            </value>
      <remarks>
              The property retrieves the pattern when the value is negative.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.PositivePattern">
      <summary>
              Gets or sets the positive pattern of the field.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the positive pattern.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The property retrieves the pattern when the value is positive.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventHandler">
      <summary>
              provide the scroll event handle.
            </summary>
      <param name="sender">
              The source of the event.
            </param>
      <param name="e">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventArgs">
      <summary>
              Provides the <see cref="T:System.EventArgs" /> data for the event.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventArgs.#ctor(System.DateTime,System.DateTime)">
      <summary>
              Initializes a new instance of the <see cref="T:System.Windows.Forms.ScrollEventArgs" /> class.
            </summary>
      <param name="start">The first (start) date in view.</param>
      <param name="end">The last (end) date in view.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventArgs.EndDate">
      <summary>
              Gets the last (end) date in view.
            </summary>
      <value>
              The <see cref="T:System.DateTime" /> value indicates the last (end) date in view.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventArgs.StartDate">
      <summary>
              Gets the first (start) date in value.
            </summary>
      <value>
              The <see cref="T:System.DateTime" /> value indicates the first (start) date in view.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDown">
      <summary>
              Represents the drop down settings for the drop down function for <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDown.DropDownType">
      <summary>
              Gets or sets the type of the drop down.
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateDropDownType" /> value, indicates the type of the drop down.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection">
      <summary>
              Defines the direction of the gradient effect
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.NotSet">
      <summary>
              The default direction.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.Forward">
      <summary>
              The forward direction
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.Backward">
      <summary>
              The backward direction
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.Center">
      <summary>
              The center direction
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.Side">
      <summary>
              The side direction
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect">
      <summary>
              Represents a class to define the gradient effect.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.#ctor">
      <summary>
              Initializes the instance of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.#ctor(GrapeCity.Win.Spread.InputMan.CellType.GradientStyle,GrapeCity.Win.Spread.InputMan.CellType.GradientDirection,System.Drawing.Color,System.Drawing.Color)">
      <summary>
              Initializes the instance of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" /> class with specifics value.
            </summary>
      <param name="style">
              Indicates the style of gradient.
            </param>
      <param name="direction">
              Indicates the direction of gradient.
            </param>
      <param name="startColor">
              Indicates the color of gradient starting.
            </param>
      <param name="endColor">
              Indicates the color of gradient ending.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.Style">
      <summary>
              Gets or sets a value indicating the style of gradient.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle" /> value indicates the style of gradient.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Horizontal" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.Direction">
      <summary>
              Gets or sets a value indicating the direction of gradient.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection" /> value indicates the direction of gradient.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.NotSet" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.StartColor">
      <summary>
              Gets or sets a value indicating the start color of gradient.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the start color of gradient.
              <br /> The default is <see cref="P:System.Drawing.Color.White" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.EndColor">
      <summary>
              Gets or sets a value indicating the end color of gradient.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the end color of gradient.
              <br /> The default is <see cref="P:System.Drawing.Color.Black" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.Default">
      <summary>
              Gets a default value object of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" /> object includes the default value.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.Equals(System.Object)">
      <summary>
              Determines whether the specified <b>Object</b> is equal to the current <b>Object</b>. 
            </summary>
      <param name="obj">
              The <see cref="T:System.Object" /> to compare with the current <b>Object</b>.
            </param>
      <returns>
        <see langword="true" /> if the specified <b>Object</b> is equal to the current <b>Object</b>; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.Clone">
      <summary>
              Creates an identical copy of the item.
            </summary>
      <returns>
              An object that represents an item that has the same images, and subitems associated with it as the cloned item.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.GetHashCode">
      <summary>
              Gets the hash code for this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" /> object.
            </summary>
      <returns>
              The <see cref="T:System.Int32" /> value indicates the hash code for this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" /> object.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle">
      <summary>
              Defines style of gradient effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Horizontal">
      <summary>
              The horizontal style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Vertical">
      <summary>
              The vertical style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.DiagonalUp">
      <summary>
              The diagonalUp style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.DiagonalDown">
      <summary>
              The diagonalDown style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.CornerUp">
      <summary>
              The cornerUp style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.CornerDown">
      <summary>
              The cornerDown style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Circular">
      <summary>
              The circular style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Rectangular">
      <summary>
              The rectangular style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Elliptical">
      <summary>
              The elliptical style.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase">
      <summary>
              Represents a base class implementation of the holiday interface.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.IsHoliday(System.DateTime)">
      <summary>
              Determines whether the specified date is a holiday.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
        <see langword="true" /> if the date is a holiday; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.TypeOfDay(System.DateTime)">
      <summary>
              Returns the type of day for the specified date.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> enumeration that represents the
              type of day.
            </returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.IsYearly">
      <summary>
              Determines whether the holiday implementation is yearly.
            </summary>
      <value>
        <see langword="true" /> if a yearly holiday; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.Name">
      <summary>
              Gets or sets the name of the holiday.
            </summary>
      <value>
              The name of the holiday.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.Clone">
      <summary>
              Creates a shallow copy of the holiday object.
            </summary>
      <returns>
              A shallow copy of the holiday object.
            </returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.PropertyChanged">
      <summary>
              Occurs when any property is changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.PropertyChanged" /> event.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance that contains the event data.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday">
      <summary>
              Defines methods to retrieve holidays from the implementing
              references or value types.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.IHoliday.IsHoliday(System.DateTime)">
      <summary>
              Determines whether the specified date is a holiday.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
        <see langword="true" /> if the date is a holiday; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.IHoliday.TypeOfDay(System.DateTime)">
      <summary>
              Returns the type of day for the specified date.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> enumeration that represents the
              type of day.
            </returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.IHoliday.IsYearly">
      <summary>
              Determines whether the holiday implementation is yearly.
            </summary>
      <value>
        <see langword="true" /> if a yearly holiday; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.IHoliday.Name">
      <summary>
              Gets or sets the name of the holiday.
            </summary>
      <value>
              The name of the holiday.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday">
      <summary>
              An implementation of the yearly holidays - which means 
              holidays defined here will appear yearly regardless
              of the year.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.#ctor(System.Int32,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> 
              class with the specified settings.
            </summary>
      <param name="month">
              An integer value that represents the holiday month.
            </param>
      <param name="day">
              An integer value that represents the holiday day. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> 
              class with the specified settings.
            </summary>
      <param name="name">
              A name that represents the holiday.
            </param>
      <param name="month">
              An integer value that represents the holiday month.
            </param>
      <param name="day">
              An integer value that represents the holiday day. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> 
              class with the specified settings.
            </summary>
      <param name="startMonth">
              An integer value that represents the starting month of
              the holiday.
            </param>
      <param name="startDay">
              An integer value that represents the starting day of
              the holiday.
            </param>
      <param name="endMonth">
              An integer value that represents the ending month of
              the holiday.
            </param>
      <param name="endDay">
              An integer value that represents the ending day of
              the holiday.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> 
              class with a specified holiday date.
            </summary>
      <param name="name">
              A name that represents the holiday.
            </param>
      <param name="startMonth">
              An integer value that represents the starting month of
              the holiday.
            </param>
      <param name="startDay">
              An integer value that represents the starting day of
              the holiday.
            </param>
      <param name="endMonth">
              An integer value that represents the ending month of
              the holiday.
            </param>
      <param name="endDay">
              An integer value that represents the ending day of
              the holiday.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.StartMonth">
      <summary>
              Gets or sets the starting month of the holiday.
            </summary>
      <value>
              An integer value that represents the holiday starting
              month which ranges from 1 through 12.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.StartDay">
      <summary>
              Gets or sets the starting day of the holiday.
            </summary>
      <value>
              An integer value that represents the holiday starting
              day which ranges from 1 through the number of days in a month.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.EndMonth">
      <summary>
              Gets or sets the ending month of the holiday.
            </summary>
      <value>
              An integer value that represents the holiday ending
              month which ranges from 1 through 12.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.EndDay">
      <summary>
              Gets or sets the ending day of the holiday.
            </summary>
      <value>
              An integer value that represents the holiday ending
              day which ranges from 1 through the number of days in a month.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.IsHoliday(System.DateTime)">
      <summary>
              Determines whether the specified date is a holiday.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
        <see langword="true" /> if the date is a holiday; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.Name">
      <summary>
              Gets or sets the name of the holiday.
            </summary>
      <value>
              The name of the holiday.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.IsYearly">
      <summary>
              Determines whether the holiday implementation is yearly.
            </summary>
      <value>
        <see langword="true" /> if a yearly holiday; otherwise, <see langword="false" />.
            </value>
      <remarks>
              Since holidays for this implementation appear yearly,
              a <see langword="true" /> value is always returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.TypeOfDay(System.DateTime)">
      <summary>
              Returns the type of day for the specified date.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> enumeration that represents the
              type of day.
            </returns>
      <remarks>
              This method returns a <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Holiday" /> if the 
              date is a holiday; otherwise, a <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal" />
              is returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.Clone">
      <summary>
              Creates a shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> object.
            </summary>
      <returns>
              A shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday">
      <summary>
              An implementation of the forced holidays which are 
              based on the exact specified dates and are not yearly.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.#ctor(System.DateTime)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> 
              class with the specified settings.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that represents the forced holiday.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.#ctor(System.String,System.DateTime)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> 
              class with the specified settings.
            </summary>
      <param name="name">
              A name that represents the holiday.
            </param>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that represents the forced holiday.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.#ctor(System.DateTime,System.DateTime)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> 
              class with the specified settings.
            </summary>
      <param name="startDate">
              A <see cref="T:System.DateTime" /> value that represents the starting
              forced holiday date.
            </param>
      <param name="endDate">
              A <see cref="T:System.DateTime" /> value that represents the ending
              forced holiday date.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.#ctor(System.String,System.DateTime,System.DateTime)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> 
              class with the specified settings.
            </summary>
      <param name="name">
              A name that represents the holiday.
            </param>
      <param name="startDate">
              A <see cref="T:System.DateTime" /> value that represents the starting
              forced holiday date.
            </param>
      <param name="endDate">
              A <see cref="T:System.DateTime" /> value that represents the ending
              forced holiday date.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.Start">
      <summary>
              Gets or sets the starting forced holiday.
            </summary>
      <value>
              A <see cref="T:System.DateTime" /> value that indicates the date that represents the forced holiday starting date.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.End">
      <summary>
              Gets or sets the end forced holiday.
            </summary>
      <value>
              A <see cref="T:System.DateTime" /> value that indicates the date that represents the forced holiday end date.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.IsHoliday(System.DateTime)">
      <summary>
              Determines whether the specified date is a holiday.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
        <see langword="true" /> if the date is a holiday; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.Name">
      <summary>
              Gets or sets the name of the holiday.
            </summary>
      <value>
              The <see cref="T:System.String" /> value that indicates the name of the holiday.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.IsYearly">
      <summary>
              Determines whether the holiday implementation is yearly.
            </summary>
      <value>
        <see langword="true" /> if a yearly holiday; otherwise, <see langword="false" />.
            </value>
      <remarks>
              Since forced holidays for this implementation will NOT appear 
              yearly, a <see langword="false" /> value is always returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.TypeOfDay(System.DateTime)">
      <summary>
              Returns the type of day for the specified date.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> enumeration that represents the
              type of day.
            </returns>
      <remarks>
              This method returns a <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.ForcedWorkday" /> if the 
              date is a holiday; otherwise, a <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal" />
              is returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.Clone">
      <summary>
              Creates a shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> object.
            </summary>
      <returns>
              A shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday">
      <summary>
              An implementation of the forced workdays which are 
              based on the exact specified dates and are not yearly.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.#ctor(System.DateTime)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> 
              class with the specified date.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that represents the forced workday.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.#ctor(System.String,System.DateTime)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> 
              class with the specified date.
            </summary>
      <param name="name">
              A name that represents the holiday.
            </param>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that represents the forced workday.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.#ctor(System.DateTime,System.DateTime)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> 
              class with the specified date.
            </summary>
      <param name="startDate">
              A <see cref="T:System.DateTime" /> value that represents the starting
              forced workday date.
            </param>
      <param name="endDate">
              A <see cref="T:System.DateTime" /> value that represents the ending
              forced workday date.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.#ctor(System.String,System.DateTime,System.DateTime)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> 
              class with the specified date.
            </summary>
      <param name="name">
              A name that represents the holiday.
            </param>
      <param name="startDate">
              A <see cref="T:System.DateTime" /> value that represents the starting
              forced workday date.
            </param>
      <param name="endDate">
              A <see cref="T:System.DateTime" /> value that represents the ending
              forced workday date.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.Start">
      <summary>
              Gets or sets the starting forced workday.
            </summary>
      <value>
              The <see cref="T:System.DateTime" /> value that indicates the date that represents the forced workday starting date.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.End">
      <summary>
              Gets or sets the end forced workday.
            </summary>
      <value>
              The <see cref="T:System.DateTime" /> value that indicates the date that represents the forced workday end date.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.IsHoliday(System.DateTime)">
      <summary>
              Determines whether the specified date is a forced workday.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
        <see langword="true" /> if the date is a forced workday; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.Name">
      <summary>
              Gets or sets the name of the forced workday.
            </summary>
      <value>
              The <see cref="T:System.String" /> value that indicates the name of the forced workday.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.IsYearly">
      <summary>
              Determines whether the workday implementation is yearly.
            </summary>
      <value>
        <see langword="true" /> if a yearly workday; otherwise, <see langword="false" />.
            </value>
      <remarks>
              Since forced workdays for this implementation will NOT appear 
              yearly, a <see langword="false" /> value is always returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.TypeOfDay(System.DateTime)">
      <summary>
              Returns the type of day for the specified date.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> enumeration that represents the
              type of day.
            </returns>
      <remarks>
              This method returns a <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.ForcedWorkday" /> if the 
              date is a forced workday; otherwise, a <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal" />
              is returned.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.Clone">
      <summary>
              Creates a shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday" /> object.
            </summary>
      <returns>
              A shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday">
      <summary>
              Represents the yearly holidays set by the day of the week rules.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday" /> 
              class with the specified date.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.#ctor(GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday" /> 
              class with the specified date.
            </summary>
      <param name="month">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" /> enumeration value that indicates the month.
            </param>
      <param name="weekdayOrder">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" /> enumeration value that indicates the weekday order.
            </param>
      <param name="dayOfWeek">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" /> enumeration value that indicates the day of the week.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.#ctor(System.String,GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday" /> 
              class with the specified date.
            </summary>
      <param name="name">
              A <see cref="T:System.String" /> value that indicates the name of the holiday.
            </param>
      <param name="month">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" /> enumeration value that indicates the month.
            </param>
      <param name="weekdayOrder">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" /> enumeration value that indicates the weekday order.
            </param>
      <param name="dayOfWeek">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" /> enumeration value that indicates the day of the week.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.Month">
      <summary>
              Gets or sets the month of the holiday.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" /> enumeration value that indicates the month.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.NotSet" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.DayOfWeekInMonth">
      <summary>
              Gets or sets the weekday order.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" /> enumeration value that represents the weekday order.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.NotSet" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.DayOfWeek">
      <summary>
              Gets or sets the day of the week.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" /> enumeration value that indicates the day of the week.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.NotSet" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.IsHoliday(System.DateTime)">
      <summary>
              Determines whether the specified date is a weekday holiday.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
        <see langword="true" /> if the date is a weekday holiday; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.TypeOfDay(System.DateTime)">
      <summary>
              Returns the type of day for the specified date.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> enumeration that represents the
              type of day.
            </returns>
      <remarks>
              This method returns the <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Holiday" /> if the 
              <b>date</b> is a weekday holiday; otherwise, a <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal" /> 
              is returned.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.IsYearly">
      <summary>
              Gets whether the weekday holiday implementation is yearly.
            </summary>
      <value>
        <see langword="true" /> if a yearly weekday holiday; otherwise, <see langword="false" />.
            </value>
      <remarks>
              Since a weekday holiday for this implementation appears 
              yearly, a <see langword="true" /> value is always returned.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.Name">
      <summary>
              Gets or sets the name of the weekday and the holiday.
            </summary>
      <value>
              The name of the weekday and the holiday.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.Clone">
      <summary>
              Creates a shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday" /> object.
            </summary>
      <returns>
              A shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday">
      <summary>
              Represents the forced holidays of a specific year, 
              which are set by the day of week rules.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> 
              class with the specified date.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.#ctor(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> 
              class with the specified date.
            </summary>
      <param name="year">
              An <see cref="T:System.Int32" /> value that indicates the year of the forced holiday in weekdays.
            </param>
      <param name="month">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" /> enumeration value that indicates the month.
            </param>
      <param name="weekdayOrder">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" /> enumeration value that indicates the weekday order.
            </param>
      <param name="dayOfWeek">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" /> enumeration value that indicates the day of the week.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.#ctor(System.String,System.Int32,GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> 
              class with the specified date.
            </summary>
      <param name="name">
              A <see cref="T:System.String" /> value that indicates the name of the forced holiday in weekdays.
            </param>
      <param name="year">
              An <see cref="T:System.Int32" /> value that indicates the year of the forced holiday in weekdays.
            </param>
      <param name="month">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" /> enumeration value that indicates the month.
            </param>
      <param name="weekdayOrder">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" /> enumeration value that indicates the weekday order.
            </param>
      <param name="dayOfWeek">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" /> enumeration value that indicates the day of the week.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.Year">
      <summary>
              Gets or sets the year of the forced holiday in weekdays.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the year.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.Month">
      <summary>
              Gets or sets the month of the holiday.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" /> enumeration value that indicates the month.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.DayOfWeekInMonth">
      <summary>
              Gets or sets the weekday order.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" /> enumeration value that represents the weekday order.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.DayOfWeek">
      <summary>
              Gets or sets the day of the week.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" /> enumeration value that indicates the day of week.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.IsHoliday(System.DateTime)">
      <summary>
              Determines whether the specified date is a weekday holiday.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
        <see langword="true" /> if the date is a weekday holiday; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.TypeOfDay(System.DateTime)">
      <summary>
              Returns the type of day for the specified date.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> enumeration that represents the
              type of day.
            </returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.IsYearly">
      <summary>
              Determines whether the weekday holiday implementation is yearly.
            </summary>
      <value>
        <see langword="true" /> if a yearly weekday holiday; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              Since a forced weekday holiday for this implementation does not appear 
              yearly, a <see langword="false" /> value is always returned.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.Name">
      <summary>
              Gets or sets the name of the weekday holiday.
            </summary>
      <value>
              The name of the weekday holiday.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.Clone">
      <summary>
              Creates a shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> object.
            </summary>
      <returns>
              A shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday">
      <summary>
              Represents the forced workdays of a specific year,
              which is set by the day of week rules.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> 
              class with the specified date.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.#ctor(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday" /> 
              class with the specified date.
            </summary>
      <param name="year">
              An <see cref="T:System.Int32" /> value that indicates the year of the forced workday in weekdays.
            </param>
      <param name="month">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" /> enumeration value that indicates the month.
            </param>
      <param name="weekdayOrder">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" /> enumeration value that indicates the weekday order.
            </param>
      <param name="dayOfWeek">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" /> enumeration value that indicates the day of the week.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.#ctor(System.String,System.Int32,GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday" /> 
              class with the specified date.
            </summary>
      <param name="name">
              A <see cref="T:System.String" /> value that indicates the name of the forced workday in weekdays.
            </param>
      <param name="year">
              An <see cref="T:System.Int32" /> value that indicates the year of the forced workday in weekdays.
            </param>
      <param name="month">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" /> enumeration value that indicates the month.
            </param>
      <param name="weekdayOrder">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" /> enumeration value that indicates the weekday order.
            </param>
      <param name="dayOfWeek">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" /> enumeration value that indicates the day of the week.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.Year">
      <summary>
              Gets or sets the year of the forced workday in weekdays.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the year.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.Month">
      <summary>
              Gets or sets the month of the forced workday in weekdays.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" /> enumeration value that indicates the month.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.NotSet" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.DayOfWeekInMonth">
      <summary>
              Gets or sets the weekday order.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" /> enumeration value that represents the weekday order.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.NotSet" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.DayOfWeek">
      <summary>
              Gets or sets the day of the week.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" /> enumeration value that indicates the day of the week.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.NotSet" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.IsHoliday(System.DateTime)">
      <summary>
              Determines whether the specified date is a forced day of week workday.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
        <see langword="true" /> if the date is a forced day of the week workday; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.TypeOfDay(System.DateTime)">
      <summary>
              Returns the type of day for the specified date.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> enumeration that represents the
              type of day.
            </returns>
      <remarks>
              This method returns a <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.ForcedWorkday" /> if the 
              date is a weekday holiday; otherwise, a <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal" />
              is returned.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.IsYearly">
      <summary>
              Determines whether the weekday holiday implementation is yearly.
            </summary>
      <value>
        <see langword="true" /> if a yearly weekday holiday; otherwise, <see langword="false" />.
            </value>
      <remarks>
              Since a forced weekday holiday for this implementation does not appear 
              yearly, a <see langword="false" /> value is always returned.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.Name">
      <summary>
              Gets or sets the name of the weekday holiday.
            </summary>
      <value>
              The name of the weekday holiday.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.Clone">
      <summary>
              Creates a shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> object.
            </summary>
      <returns>
              A shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags">
      <summary>
              Represents the day of the week in month flags.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.NotSet">
      <summary>
              The month weekday is not set.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.First">
      <summary>
              The first specified weekday in a month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.Second">
      <summary>
              The second specified weekday in a month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.Third">
      <summary>
              The third specified weekday in a month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.Fourth">
      <summary>
              The fourth specified weekday in a month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.Fifth">
      <summary>
              The fifth specified weekday in a month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.Last">
      <summary>
              The last specified weekday in a month.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.All">
      <summary>
              All of the specified weekdays in a month.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags">
      <summary>
              Represents the flags of the day of the week.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.NotSet">
      <summary>
              The day of the week is not set.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Sunday">
      <summary>
              Indicates Sunday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Monday">
      <summary>
              Indicates Monday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Tuesday">
      <summary>
              Indicates Tuesday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Wednesday">
      <summary>
              Indicates Wednesday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Thursday">
      <summary>
              Indicates Thursday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Friday">
      <summary>
              Indicates Friday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Saturday">
      <summary>
              Indicates Saturday.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.All">
      <summary>
              Indicates all days of the week.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags">
      <summary>
              Represents the month flag enumeration.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.NotSet">
      <summary>
              The month value is not set.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.January">
      <summary>
              Represents January.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.February">
      <summary>
              Represents February.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.March">
      <summary>
              Represents March.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.April">
      <summary>
              Represents April.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.May">
      <summary>
              Represents May.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.June">
      <summary>
              Represents June.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.July">
      <summary>
              Represents July.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.August">
      <summary>
              Represents August.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.September">
      <summary>
              Represents September.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.October">
      <summary>
              Represents October.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.November">
      <summary>
              Represents November.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.December">
      <summary>
              Represents December.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.All">
      <summary>
              Represents all of the months.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection">
      <summary>
              Represents a collection of <b>HolidayStyleCollection</b> objects.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.#ctor">
      <summary>
              Initializes a new instance of the HolidayStyleCollection class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.#ctor(System.String[],GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle[])">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> class.
            </summary>
      <param name="keys">A key array to be added to <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.</param>
      <param name="holidayStyles">A HolidayStyle array to be added to <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Dispose">
      <summary>
              Releases the resources used by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle[])">
      <summary>
              Copies the items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> to a compatible one-dimensional array of type <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />, 
              starting from the first index of the target array.
            </summary>
      <param name="array">
              An array of type <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> serving as the destination for the copy action. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle[],System.Int32)">
      <summary>
              Copies the items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> to a compatible one-dimensional array of type <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />, 
              starting at the specified zero-based index of the target array.
            </summary>
      <param name="array">An array of type <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> serving as the destination for the copy action. </param>
      <param name="arrayIndex">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Item(System.Int32)">
      <summary>
              Gets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> at the specified index.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the index.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Item(System.String)">
      <summary>
              Gets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> with the specified key.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the key.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
              Occurs when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> has changed.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.OnHolidayStyleHolidaysCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
              Occurs when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> has changed.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.OnHolidayStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Occurs when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> object has changed.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.OnHolidayStyleSubStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.SubStyle" /> property of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> has changed.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Add(System.String)">
      <summary>
              Adds a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> with the specified key into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.
            </summary>
      <param name="key">The key of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.</param>
      <returns>The index of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> in <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Add(System.String,GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle)">
      <summary>
              Adds an item with the specified key and value into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.
            </summary>
      <param name="key">The key of this item.</param>
      <param name="holidayStyle">The value of this item.</param>
      <returns>The index of this item in <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.AddRange(System.String[],GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle[])">
      <summary>
            Adds the specified key array and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> array into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.
            </summary>
      <param name="keys">The specified key array.</param>
      <param name="holidayStyles">The specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> array.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Insert(System.Int32,System.String)">
      <summary>
              Inserts a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> with the specified key into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.
            </summary>
      <param name="index">
              The index of this inserted <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </param>
      <param name="key">
              The key of this inserted <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Insert(System.Int32,System.String,GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle)">
      <summary>
              Inserts an item with the specified key and value into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.
            </summary>
      <param name="index">  
              The index of this inserted <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </param>
      <param name="key">  .
              The key of this inserted <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </param>
      <param name="holidayStyle">  
              The inserted <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Clear">
      <summary>
              Removes all elements from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the element with the specified index from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.
            </summary>
      <param name="index">
              The <see cref="T:System.Int32" /> value that indicates the index of the item.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Remove(System.String)">
      <summary>
              Removes the element with the specified key from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />.
            </summary>
      <param name="key">
              The <see cref="T:System.String" /> value that indicates the key of the item.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Save(GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection,System.String)">
      <summary>
              Saves the holiday styles to disk in xml format.
            </summary>
      <param name="holidayStyles">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> that indicates the holiday styles.
            </param>
      <param name="fileName">
              A <see cref="T:System.String" /> that indicates the file name.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Load(System.String)">
      <summary>
              Loads the holiday styles from the disk.
            </summary>
      <param name="fileName">
              A <see cref="T:System.String" /> that indicates the file name.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> that indicates the holiday styles.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle">
      <summary>
              Represents holiday styles.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> class with the specified name.
            </summary>
      <param name="name">
              The <see cref="T:System.String" /> value that indicates the name of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.#ctor(System.String,GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection,GrapeCity.Win.Spread.InputMan.CellType.SubStyle)">
      <summary>
              Initializes a new instance of the HolidayStyle class with the specified initialization properties.
            </summary>
      <param name="name">
              The <see cref="T:System.String" /> value that indicates the name of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </param>
      <param name="holidays"> 
              The <see cref="T:System.String" /> value that indicates the holidays of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </param>
      <param name="subStyle"> 
              The <see cref="T:System.String" /> value that indicates the subStyle of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.Dispose">
      <summary>
              Releases the resources used by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.OnHolidaysCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
              Called when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> has changed.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Occurs when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> object has changed.
            </summary>
      <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.OnSubStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.SubStyle" /> object has changed.
            </summary>
      <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.Holidays">
      <summary>
            Gets or sets the holidays.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> value that indicates the holidays.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.Name">
      <summary>
              Gets or sets the name of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </summary>
      <value>
              The <see cref="T:System.String" /> value that indicates the name of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.SubStyle">
      <summary>
            Gets or sets the sub-style of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.SubStyle" /> value that indicates the sub-style of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.Clone">
      <summary>
              Creates an exact copy of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> object.
            </summary>
      <returns>
              Returns the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> object this method creates
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle">
      <summary>
              Represents a SubStyle class that indicates attributes such as bold, underline, and the color of the text.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.GetHashCode">
      <summary>
             Gets a hash code of this object.
            </summary>
      <returns>
              An <see cref="T:System.Int32" /> value that indicates the hash code of this object.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.#ctor(System.Drawing.Color,System.Drawing.Color)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> class with specified initialization properties.
            </summary>
      <param name="backColor">The initialization of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.BackColor" /> property.</param>
      <param name="foreColor">The initialization of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.ForeColor" /> property.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.#ctor(System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the SubStyle class with specified initialization properties.
            </summary>
      <param name="backColor">The initialization of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.BackColor" /> property.</param>
      <param name="foreColor">The initialization of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.ForeColor" /> property.</param>
      <param name="bold">The initialization of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.Bold" /> property.</param>
      <param name="underLine">The initialization of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.UnderLine" /> property.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.BackColor">
      <summary>
              Gets or sets the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" />.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.ForeColor">
      <summary>
              Gets or sets the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" />.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.Bold">
      <summary>
              Gets or sets whether the text is bold.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether the text is bold.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.UnderLine">
      <summary>
              Gets or sets whether the text has an underline style.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether the text has an underline style.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.Clone">
      <summary>
              Creates an exact copy of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> object.
            </summary>
      <returns>
              Returns the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> object this method created.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.Equals(System.Object)">
      <summary>
              Gets whether the given object equals this instance.
            </summary>
      <param name="obj">
              An <b>object</b> to be compared.
            </param>
      <returns>
              The <see langword="bool" /> type that indicates if the object is the same as the current instance.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Occurs when any property of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> is changed.
            </summary>
      <param name="e">
              A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection">
      <summary>
              Represents a collection of instances of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" />,
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" />, and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday" /> classes 
              supported by the holiday collection manager.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.#ctor">
      <summary>
              Initializes a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> object.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Weekdays)">
      <summary>
              Initializes a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> object.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.#ctor(GrapeCity.Win.Spread.InputMan.CellType.IHoliday[],GrapeCity.Win.Spread.InputMan.CellType.Weekdays)">
      <summary>
              Initializes a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> object using
              the specified settings (not recommended for outer usage).
            </summary>
      <param name="holidays">
              An object array of holidays with the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> 
              interface implemented.
            </param>
      <param name="weekdays">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Weekdays" /> object that contains day of week holiday
              settings.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Weekdays">
      <summary>
              Gets or sets the policy object for the individual holidays.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Weekdays" /> object that contains the holiday 
              policy for each weekday.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Item(System.Int32)">
      <summary>
              Gets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> specified by its index.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the index.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.IHoliday)">
      <summary>
              Adds the specified holiday to the collection.
            </summary>
      <param name="holiday">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> value that indicates the holiday to add.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.IHoliday[])">
      <summary>
              Copies the elements of the specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> 
              array to the end of the collection.
            </summary>
      <param name="holidays">
              The array of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> objects to add to the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.IHoliday)">
      <summary>
              Inserts a holiday object in the collection.
            </summary>
      <param name="index">
              The zero-based index at which <b>holiday</b> is inserted. 
            </param>
      <param name="holiday">
              The <see cref="T:System.Object" /> to insert - with the IHoliday interface
              implemented.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.IHoliday)">
      <summary>
              Removes the first occurrence of the specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" />
              from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" />.
            </summary>
      <param name="holiday">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> to remove from the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.IHoliday[],System.Int32)">
      <summary>
              Copies the entire <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> to a 
              compatible one-dimensional array of type <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" />, 
              starting at the specified zero-based index of the target array.
            </summary>
      <param name="holidays">
              An array of type <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> serving as the 
              destination for the copy action.
            </param>
      <param name="index">
              The zero-based index at which to start placing the copied 
              collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.IHoliday)">
      <summary>
              Searches for the specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> and returns 
              the zero-based index of the first occurrence within the collection.
            </summary>
      <param name="holiday">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> for which to search in the collection. 
            </param>
      <returns>
              A <see cref="T:System.Int32" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.IHoliday)">
      <summary>
              Returns a value that indicates whether the specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" />
              is a member of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" />.
            </summary>
      <param name="holiday">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> for which to check collection membership. 
            </param>
      <returns>
        <see langword="true" /> if the <b>holiday</b> parameter is a member of the 
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.GetTypeOfDay(System.DateTime,System.Object@)">
      <summary>
              Determines the type of day for the specified date.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <param name="holiday">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" />, <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" />, or
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday" /> class associated with the holiday.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> enumeration that represents the
              type of day.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.IsHoliday(System.DateTime)">
      <summary>
              Determines whether the specified date is a holiday.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
        <see langword="true" /> if the date is a holiday; otherwise, <see langword="false" />.
            </returns>
      <remarks>
              A specified date that uses the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> or 
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> class is treated as a holiday.
              Also, weekday's can be treated as holidays by using the 
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> structure.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.IsOverridden(System.DateTime)">
      <summary>
              Determines whether the specified date is an overridden 
              holiday.
            </summary>
      <param name="date">
              A <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
        <see langword="true" /> if the specified date is an overridden holiday; otherwise,
              <see langword="false" />.
            </returns>
      <remarks>
              An <b>override</b> holiday occurs when the specified holiday
              lands on a weekday that is also set to a holiday with a 
              flag telling it to override. Refer to the 
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> for further details.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after inserting a new element 
              into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert <b>value</b>.
            </param>
      <param name="value">
              The new value of the element at the specified index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after removing an element 
              from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> instance.
            </summary>
      <param name="index">
              The zero-based index at which <b>value</b> can be found.
            </param>
      <param name="value">
              The value of the element to remove from <b>index</b>.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.OnClear">
      <summary>
              Performs additional custom processes after clearing the contents 
              of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> instance.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection">
      <summary>
              Extends the <see cref="T:System.Collections.CollectionBase" /> class which notifies
              when items are being added or removed from the collection.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.CollectionChanged">
      <summary>
              Occurs when the collection has changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.CollectionChanged" /> event.
            </summary>
      <param name="ccevent">
              A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after inserting a new element 
              into the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection" /> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert <b>value</b>.
            </param>
      <param name="value">
              The new value of the element at the specified index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
      <param name="index">
              The zero-based index at which the value can be found.
            </param>
      <param name="value">
              The value of the element to remove from the specified index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.OnClearComplete">
      <summary>
              Performs additional custom processes after clearing the contents 
              of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection" /> instance.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle">
      <summary>
              Represents a <b>ItemStyle</b> class to define style settings.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle.BackColor">
      <summary>
              Gets or sets the background color.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that represents the background color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle.ForeColor">
      <summary>
              Gets or sets the foreground color.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that represents the foreground color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle.GradientEffect">
      <summary>
              Gets or sets a value that represents the background gradient effect.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle.GradientEffect" /> value indicates the background gradient effect.
              <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate">
      <summary>
              Represents a <b>ItemTemplate</b> class to define template for items.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.#ctor(System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate" /> class with values.
            </summary>
      <param name="indent">An <see cref="T:System.Int32" /> value that represents the indent of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="image">An <b>object</b> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Image" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="backColor">A <see cref="T:System.Drawing.Color" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.BackColor" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="foreColor">A <see cref="T:System.Drawing.Color" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ForeColor" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="height">A <see cref="T:System.Int32" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Height" /> of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="font">A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Font" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font" /> of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="gradientEffect">A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.GradientEffect" /> that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect" /> of  the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.AutoItemHeight">
      <summary>
              Gets or sets a <see langword="bool" /> value whether the height is preferred.
            </summary>
      <value>
              A <see langword="bool" /> value indicates whether the height is preferred, <see langword="true" /> if 
              the height is preferred, otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.BackColor">
      <summary>
              Gets or sets the background color.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the background color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ForeColor">
      <summary>
              Gets or sets the foreground color.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the foreground color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Font">
      <summary>
              Gets or sets the font.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Font" /> value.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ShouldSerializeFont">
      <summary>
              Should serialize <b>Font</b>.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ResetFont">
      <summary>
              Resets the <b>Font</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ShouldSerializeForeColor">
      <summary>
              Should serialize <b>ForeColor</b>.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ResetForeColor">
      <summary>
              Resets the <b>ForeColor</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ShouldSerializeHeight">
      <summary>
              Shoulds the height of the serialize.
            </summary>
      <returns>
              A <see langword="bool" /> value, true if we should generate code for Height property. Otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ResetHeight">
      <summary>
              Reset the Height property.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.GradientEffect">
      <summary>
              Gets or sets the gradient effect.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.GradientEffect" /> value.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Height">
      <summary>
              Gets or sets the height.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value indicates the height.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Image">
      <summary>
              Gets or sets the image.
            </summary>
      <value>
              An <see cref="T:System.Object" /> value indicates the image.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Indent">
      <summary>
              Gets or sets the indent.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value indicates the indent.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection">
      <summary>
              Represents a <b>ItemTemplateCollection</b> class to store <b>ItemTemplate</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate)">
      <summary>
              Determines whether the collection contains specified item.
            </summary>
      <param name="item">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> object that specified.
            </param>
      <returns>
        <see langword="true" /> if the object is found in the collection; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate)">
      <summary>
              Gets the index of the item.
            </summary>
      <param name="item">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> object that need to find the index.
            </param>
      <returns>
              The index if the object is found in the collection; otherwise,-1.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate)">
      <summary>
              Inserts an item to the collection at the specified position
            </summary>
      <param name="index">
              The zero-based index at which value should be inserted.
            </param>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate" /> object to insert into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate)">
      <summary>
              Deletes the specific item from the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate" /> object that will be deleted.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.RemoveAt(System.Int32)">
      <summary>
              Remove the item at specific position from the collection.
            </summary>
      <param name="index">
              The index to be romoved.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Clear">
      <summary>
              Clears all the items in the collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate)">
      <summary>
              Adds an item to the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate" /> object to add into the collection.
            </param>
      <returns>
              The index of the added item.
            </returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Item(System.Int32)">
      <summary>
              Gets or sets the item at the specified position.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicatest the specified position in the collection.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate[],System.Int32)">
      <summary>
              Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular 
              <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">
             The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from 
             <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. 
            </param>
      <param name="index">
               The zero-based index in array at which copying begins.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Count">
      <summary>
              Gets count of the collection.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the count number of the collection.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.GetEnumerator">
      <summary>
              Gets an enumerator that iterates through the collection.
            </summary>
      <returns>
              Returns an enumerator of the collection.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys">
      <summary>
              Specifies which keys cause the control to lose focus.
            </summary>
      <remarks>
              The enumeration variable indicates which key, composite key, or shortcut key causes focus to be lost.
            </remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.Tab">
      <summary>
              Indicates the Tab key.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.ShiftTab">
      <summary>
              Indicates the Shift + Tab key.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.NextControl">
      <summary>
              Indicates the shortcut key(s) set to <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut.NextControl" /> KeyAction.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.PreviousControl">
      <summary>
              Indicates the shortcut key(s) set to <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut.PreviousControl" /> KeyAction.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.Right">
      <summary>
              Indicates the right arrow key.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.Left">
      <summary>
              Indicates the left arrow key.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.CtrlRight">
      <summary>
              Indicates the Ctrl + Right arrow.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.CtrlLeft">
      <summary>
              Indicates the Ctrl + Left arrow.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.CharInput">
      <summary>
              Indicates the last character finishes the input.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs">
      <summary>
              Provides the data for an event.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs.Key">
      <summary>
              Gets an <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" /> value that indicates the key raised by the <b>KeyExit</b> event.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" /> value that indicates the key raised by the <b>KeyExit</b> event.
            </value>
      <remarks>
              This property retrieves the keyboard key.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs.#ctor(GrapeCity.Win.Spread.InputMan.CellType.ExitKeys)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> class using the specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" />.
            </summary>
      <param name="key">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" /> value that indicates which key caused the <b>KeyExit</b> event.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventHandler">
      <summary>
              Represents the method that handles the <b>KeyExit</b> event of a control.
            </summary>
      <param name="sender">
              The source of the event.
            </param>
      <param name="e">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> that contains the event data.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Line">
      <summary>
              Represents a <b>Line</b> class that defines the appearance setting.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Empty">
      <summary>
              Gets an empty line.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.#ctor(GrapeCity.Win.Spread.InputMan.CellType.LineStyle,System.Drawing.Color)">
      <summary>
              Initializes a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> class instance 
              with the specified attribute settings.
            </summary>
      <param name="lineStyle">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> enumeration that indicates the line style of the line.
            </param>
      <param name="color">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Color" /> value that indicates the color of the line.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Style">
      <summary>
              Gets or sets the line style (dotted, dashed, inset, and so on.).
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />  values that indicates the style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Color">
      <summary>
              Gets or sets the line color.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Color" /> value that indicates the color of the line.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Line.LineWidth">
      <summary>
              Gets the width of the line, according to the style of the line.
            </summary>
      <returns>
              An <see cref="T:System.Int32" /> value that represents the line width.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.Equals(System.Object)">
      <summary>
              Determines whether two object instances are equal.
            </summary>
      <param name="obj">
              The <b>object</b> to compare with the current <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />.
            </param>
      <returns>
              This method returns <b>true</b> if <b>obj</b> is a <b>Line</b>
              object and it's <b>Color</b> and <b>Style</b> properties are 
              equal to the corresponding properties of this <b>Line</b> 
              structure; otherwise, <b>false</b>.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.GetHashCode">
      <summary>
              Serves as a hash function for a particular type, suitable for use in 
              hashing algorithms and data structures like a hash table.
            </summary>
      <returns>
              An <see cref="T:System.Int32" /> value that indicates the hash code for the current object.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.ToString">
      <summary>
              Converts the value of this instance to its equivalent string representation.
            </summary>
      <returns>
              The <see cref="T:System.String" /> representation of the value of this instance.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Called when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> object is changed.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.Clone">
      <summary>
              Clones a copy from this instance.
            </summary>
      <returns>
              The copied value.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle">
      <summary>
            Specifies the style of the line.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.None">
      <summary>
              Specifies no line.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Dotted">
      <summary>
              Specifies a line consisting of dots.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Dashed">
      <summary>
              Specifies a line consisting of dashes.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.DashDotDot">
      <summary>
              Specifies a line consisting of a repeating pattern of dash-dot-dot.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.DashDot">
      <summary>
              Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Hair">
      <summary>
              Specifies a dashed style line with dashes spaced 50 percent closer than the dashed style.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Single">
      <summary>
              Specifies a single line.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Double">
      <summary>
              Specifies a double line.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Thick">
      <summary>
              Specifies a thick single line.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Inset">
      <summary>
              Specifies a line with an inset effect.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Raised">
      <summary>
              Specifies a line with a raised effect.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn">
      <summary>
              Represents a <b>ListColumn</b> class to define colunm object.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> class with text of header.
            </summary>
      <param name="text">
              A <see cref="T:System.String" /> value indicates the text of the header.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> class with display type.
            </summary>
      <param name="dataDisplayType">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" /> value that represents the display type of the column.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> class with settings.
            </summary>
      <param name="dataDisplayType">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" /> value that represents display type of the column.
            </param>
      <param name="defaultSubItem">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem" /> object that represents the default subitem of the column.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> class with settings.
            </summary>
      <param name="dataDisplayType">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" /> value that represents display type of the column.
            </param>
      <param name="defaultSubItem">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem" /> object that represents the default subitem of the column.
            </param>
      <param name="width">
              A <see cref="T:System.Int32" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Width" /> of the column.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem,System.Int32,System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> class with settings.
            </summary>
      <param name="dataDisplayType">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" /> value that represents display type of the column.
            </param>
      <param name="defaultSubItem">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem" /> object that represents the default subitem of the column.
            </param>
      <param name="width">
              A <see cref="T:System.Int32" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Width" /> of the column.
            </param>
      <param name="visible">
              A <see langword="bool" /> value indicating whether the column is visible.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,System.String,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem,System.Collections.IComparer,System.Windows.Forms.SortOrder,System.Boolean,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> class with settings.
            </summary>
      <param name="autoWidth">If set to <see langword="true" /> [auto width].</param>
      <param name="dataType">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" /> value that represents display type of the column.
            </param>
      <param name="dataPropertyName">
              A <see cref="T:System.String" /> value indicates the property name of data source.
            </param>
      <param name="defaultSubItem">
               A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem" /> object that represents the default subitem of the column.
            </param>
      <param name="sortComparer">
              A <see cref="T:System.Collections.IComparer" /> value indicates the comparer for sorting.
            </param>
      <param name="sortOrder">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.SortOrder" /> value indicates the order for sorting.
            </param>
      <param name="visible">
              If set to <see langword="true" /> the column is visiable, otherwise, <see langword="false" />.
            </param>
      <param name="width">
              A <see cref="T:System.Int32" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Width" /> of the column.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Width">
      <summary>
              Gets or sets a value that represents width of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value that represents the width of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataPropertyName">
      <summary>
              Gets or sets a <see cref="T:System.String" /> value that represents the name of binding field in current binding datasource.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the property name of the data source.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.SortOrder">
      <summary>
              Gets or sets the sort order.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.SortOrder" /> enumeration indicating the sort order.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.SortComparer">
      <summary>
              Gets or sets comparer class for sort function.
            </summary>
      <value>
              An <see cref="T:System.Collections.IComparer" /> object, user can implement own sort algorithm.
            </value>
      <remarks>
              If value is <see langword="null" />, control will use build in policy to sort.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.AutoWidth">
      <summary>
              Gets or sets a <see langword="bool" /> value indicating whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> can auto calculate width by content.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> can auto calculate width by content; Otherwise,<see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Header">
      <summary>
              Gets or sets a value that represents header settings of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" /> object that represents the header of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Visible">
      <summary>
              Gets or sets a value indicating whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> is visible.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> is visible; otherwise, <see langword="false" />. 
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem">
      <summary>
              Gets a value that represents the default subitem.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem" /> value indicates the default subitem in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType">
      <summary>
              Gets or sets a value that represents the display type of the value.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" /> enumeration that represents the display type of value. 
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ShouldSerializeHeader">
      <summary>
              Shoulds the serialize header.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetHeader">
      <summary>
              Resets the header.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ShouldSerializeDefaultSubItem">
      <summary>
              Shoulds the serialize default sub item.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetDefaultSubItem">
      <summary>
              Resets the default sub item.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetAutoWidth">
      <summary>
              Resets the width of the auto.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetDataDisplayType">
      <summary>
              Resets the type of the data display.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetSortOrder">
      <summary>
              Resets the sort order.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetVisible">
      <summary>
              Resets the visible.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetWidth">
      <summary>
              Resets the width.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetSortComparer">
      <summary>
              Resets the sort comparer.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Sort">
      <summary>
              Sorts the items in the collection by the column relating SubItems.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Sort(System.Windows.Forms.SortOrder,System.Collections.IComparer)">
      <summary>
              Sorts the items in the collection by the column relating SubItems.
            </summary>
      <param name="sortOrder">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.SortOrder" /> value indicates the order for sorting.
            </param>
      <param name="sortComparer">
              A <see cref="T:System.Collections.IComparer" /> value indicates the comparer for sorting.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection">
      <summary>
              Represents a <b>ListColumnCollection</b> class to store <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> object.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>
              Gets the index of the item.
            </summary>
      <param name="item">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> object that need to find the index.
            </param>
      <returns>
              An <see cref="T:System.Int32" /> value if the object is found out in the collection; otherwise,-1.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>
              Inserts an item to the collection at the specified position
            </summary>
      <param name="index">
              The zero-based index at which value should be inserted.
            </param>
      <param name="item">
              The object to insert into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.RemoveAt(System.Int32)">
      <summary>
              Removes the item at the specific position form the collection.
            </summary>
      <param name="index">
              The zero-based index of the item to remove.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Item(System.Int32)">
      <summary>
              Gets or sets the column at the specified position.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicatest the specified position in the collection.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>
              Adds an item to the collection.
            </summary>
      <param name="listColumn">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> object to add into the collection.
            </param>
      <returns>
              The index of the added item.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Add(System.String)">
      <summary>
              Adds an <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> with the given text to the collection.
            </summary>
      <param name="text">
              A <see cref="T:System.String" /> value indicates the text of a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ListColumn[])">
      <summary>
              Add some columns of specified collection to the end of the collection.
            </summary>
      <param name="columns">  
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> array added into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Clear">
      <summary>
              Clears all the items in the collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>
              Determines whether the collection contains a specific item.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> item to locate in the collection.
            </param>
      <returns>
        <see langword="true" /> if the item is found out in the collection; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ListColumn[],System.Int32)">
      <summary>
              Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular 
              <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">
              The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from 
             <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. 
            </param>
      <param name="arrayIndex">
               The zero-based index in array at which copying begins.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Count">
      <summary>
              Gets count of the collection.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the count number of the collection.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>
              Deletes a specific item form the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> item to be deleted.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.ToArray">
      <summary>
              Copies the subItems of the colletion to a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> array.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> array value with items copied from the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.GetEnumerator">
      <summary>
              Gets the enumerator of the collection.
            </summary>
      <returns>
              A <see cref="T:System.Collections.IEnumerator" /> object that represents current enumerator of the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.AddProcess(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>
              Process method before a column is added to the collection.
            </summary>
      <param name="column">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> value which is adding to the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.RemoveProcess(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>
              Process method before a column be removed to the collection.
            </summary>
      <param name="column">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> value which is removing from the collection.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn">
      <summary>
              Represents the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn" /> class to define the default value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.AutoWidth">
      <summary>
              Gets or sets a <see langword="bool" /> value indicates whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> calculates the width automatically. 
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> is auto width, otherwise, 
              <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.DataDisplayType">
      <summary>
              Gets or sets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.DataDisplayType" /> value indicates the display of the column.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.DataDisplayType" /> value indicates the display of the column.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType.Text" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.DefaultSubItem">
      <summary>
              Gets or sets the default <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.DefaultSubItem" /> instance indicates the default settings of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.Header">
      <summary>
              Gets or sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" /> instance indicates the header of list control.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.SortOrder">
      <summary>
              Gets or sets the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.SortOrder" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.SortOrder" /> value indicates the order when sorts.
              <br /> The default is <see cref="F:System.Windows.Forms.SortOrder.None" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.Width">
      <summary>
              Gets or sets the width of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value indicates the width of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />.
              <br /> The default is 60.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.Visible">
      <summary>
              Gets or set a <see langword="bool" /> value indicates whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" /> is visible or not.
            </summary>
      <value>
              A <see langword="bool" /> value. <see langword="true" /> is visible, otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.ShouldSerializeHeader">
      <summary>
              Shoulds the serialize header.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.ResetHeader">
      <summary>
              Resets the header.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.ShouldSerializeDefaultSubItem">
      <summary>
              Shoulds the serialize default sub item.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.ResetDefaultSubItem">
      <summary>
              Resets the default sub item.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines">
      <summary>
              Represents a <b>ListGridLines</b> class to define list grid lines.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.HorizontalLines">
      <summary>
              Gets or sets style for horizontal lines.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> object that used to draw horizontal lines. 
              <br /> The default is dark grey single line.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.VerticalLines">
      <summary>
              Gets or sets style for vertical lines.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> object that used to draw vertical lines. 
              <br /> The default is dark grey single line.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.ShouldSerializeVerticalLines">
      <summary>
            Shoulds the serialize vertical lines.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.ResetVerticalLines">
      <summary>
              Resets the vertical lines to the default.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.ShouldSerializeHorizontalLines">
      <summary>
            Shoulds the serialize horizontal lines.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.ResetHorizontalLines">
      <summary>
              Resets the horizontal lines to the default.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader">
      <summary>
              Represents a <b>ListHeader</b> class to define header settings.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.ContentAlignment">
      <summary>
              Gets or sets the content alignment.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.ContentAlignment" /> value indicates the alignment of the content of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.ImageTextSpace">
      <summary>
              Gets or sets the space between the image and text.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> that represents the space between the image and text.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.TextAttachAlignment">
      <summary>
              Gets or sets how to attach the text to the image.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment" /> that represents how to attach the text to the image.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.Ellipsis">
      <summary>
              Gets or sets whether display the ellipsis character when the text beyond the width of the header.
            </summary>
      <value>
              A <see langword="bool" /> that indicates whether display the ellipsis character when the text beyond the width of the header. 
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.AllowResize">
      <summary>
              Gets or sets a <see langword="bool" /> value indicating whether allows set the size. 
            </summary>
      <value>
        <see langword="true" /> if the Column allow user set the size; Otherwise,<see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.BackColor">
      <summary>
              Gets or sets a value that represents the backcolor.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the background color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.ForeColor">
      <summary>
              Gets or sets a value that represents the forecolor.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the foreground color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.Clickable">
      <summary>
              Gets or sets a value indicating whether clickable or not.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" /> is clickable, otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.GradientEffect">
      <summary>
              Gets or sets a value that represents the gradient effect.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.GradientEffect" /> value indicates the gradient effect.
              <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.Image">
      <summary>
              Gets or sets a value that represent the image.
            </summary>
      <value>
              An <b>Object</b> value indicates the image.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.Text">
      <summary>
              Gets or sets a string that represents caption string.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the caption string.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.TextEffect">
      <summary>
              Gets or sets the effect setting of the text.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.TextEffect" /> value indicates the effect of the text.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.SortIndicatorAlignment">
      <summary>
              Gets or sets a value that represents the alignment of the indicator of sort.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.LeftRightAlignment" /> value indicates the alignment of the indicator of sort.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane">
      <summary>
              Represents a <b>ListHeaderPane</b> class to define header pane setting.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Height">
      <summary>
              Gets or sets a value indicating height.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value that indicates height of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />.
              <br /> The default is 20.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.ShouldSerializeHeight">
      <summary>
              Indicates whether the Height property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.ResetHeight">
      <summary>
              Resets the Height property to default value.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Visible">
      <summary>
              Gets or sets a value indicating whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" /> is visible or not.
            </summary>
      <value>
        <see langword="true" />, if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" /> is visible. Otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.AutoHeight">
      <summary>
              Gets or sets a value indicating whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" /> is auto adjust height.
            </summary>
      <value>
        <see langword="true" />, if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" /> auto adjust height through <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Font" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />. Otherwise, <see langword="false" /><br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Font">
      <summary>
              Gets or sets a value that represents the Font.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Font" /> value that the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.BackColor">
      <summary>
              Gets or sets the background color.  
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Control" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.GradientEffect">
      <summary>
            Gets or sets a value that represents background gradient effect.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.GradientEffect" /> object.
              <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" /> class.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem">
      <summary>
              Represents a <b>ListItem</b> class to default settings of item.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> class with settings.
            </summary>
      <param name="subItem">
              An object of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItem[])">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(System.Object[])">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of the object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItem[],System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> object.
            </param>
      <param name="image">
              An <b>object</b> value that represents the imgae of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(System.Object[],System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of the object.
            </param>
      <param name="image">
              An <b>object</b> value that represents the imgae of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItem[],System.Int32,System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of the SubItem.
            </param>
      <param name="indent">
              An <see cref="T:System.Int32" /> value that represents the indent of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="image">
              An <b>object</b> value that represents the imgae of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(System.Object[],System.Int32,System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of the object.
            </param>
      <param name="indent">
              An <see cref="T:System.Int32" /> value that represents the indent of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="image">
              An <b>object</b> value that represents the imgae of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItem[],System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect,System.String,System.Object,System.Boolean)">
      <summary>
             Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />.
            </param>
      <param name="indent">
              An <see cref="T:System.Int32" /> value that represents the indent of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="image">
              An <b>object</b> value that represents the imgae of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="backColor">
              A <see cref="T:System.Drawing.Color" /> value that represents the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="foreColor">
              A <see cref="T:System.Drawing.Color" /> value that represents the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="height">
              An <see cref="T:System.Int32" /> value that represents the height of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="font">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font" /> value that represents the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="gradientEffect">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect" /> that represents the gradient effect of  the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="toolTipText">
              A <see cref="T:System.String" /> value that represents the tool-tip text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="tag">
              An <b>object</b> value that represents the tag of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="visible">
              A <see langword="bool" /> value that represents whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> is visible or not.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(System.Object[],System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect,System.String,System.Object,System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />.
            </param>
      <param name="indent">
              An <see cref="T:System.Int32" /> value that represents the indent of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="image">
              An <b>object</b> value that represents the imgae of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="backColor">
              A <see cref="T:System.Drawing.Color" /> value that represents the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="foreColor">
              A <see cref="T:System.Drawing.Color" /> value that represents the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="height">
              An <see cref="T:System.Int32" /> value that represents the height of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="font">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font" /> value that represents the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="gradientEffect">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect" /> that represents the gradient effect of  the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="toolTipText">
              A <see cref="T:System.String" /> value that represents the tool-tip text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="tag">
              An <b>object</b> value that represents the tag of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <param name="visible">
              A <see langword="bool" /> value that represents whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> is visible or not.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> class with settings.
            </summary>
      <param name="text">
              A <see cref="T:System.String" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Text" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.BackColor">
      <summary>
              Gets or sets the background color.  
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> that represents the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ForeColor">
      <summary>
              Gets or sets the foreground color.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font">
      <summary>
              Gets or sets the font.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font" /> that represents the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Height">
      <summary>
              Gets or sets the height of the ListItem.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value that represents the height of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Visible">
      <summary>
              Gets or sets a value indicating whether the ListItem is visible.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> is visible; otherwise, <see langword="false" />. 
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Image">
      <summary>
              Gets or sets the Image of the ListItem.
            </summary>
      <value>
              An <see cref="T:System.Object" /> value indicates the image of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Checked">
      <summary>
              Gets or sets a value indicating whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> can be checked.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> can be Checked; otherwise,<see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Indent">
      <summary>
              Gets or sets a value indicating that the indent of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value that represents the indent of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Text">
      <summary>
              Gets or sets the text in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </summary>
      <value>
              The text indicates the first <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Value" /> in the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Enabled">
      <summary>
              Gets or sets a value indicating whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> is enabled.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> is enable; Otherwise,<see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.AutoItemHeight">
      <summary>
              Gets a value indicating whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> calculates the height automatically.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> calculate the height automatically through the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />; 
              Otherwise,<see langword="false" /></value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems">
      <summary>
              Gets or sets the subitem collection of  the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection" /> value that represents the subitem collection of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />. 
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Tag">
      <summary>
              Gets or sets a value that represents the tag what user want to set.
            </summary>
      <value>
              An <b>object</b> that stores what user want to set.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ToolTipText">
      <summary>
              Gets or sets tool-tip text of item.
            </summary>
      <value>
              A <see cref="T:System.String" /> object that represents text info of the tool-tip.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeAutoItemHeight">
      <summary>
              Shoulds the height of the serialize auto item.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetAutoItemHeight">
      <summary>
              Resets the height of the auto item.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeBackColor">
      <summary>
              Shoulds the color of the serialize back.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetBackColor">
      <summary>
              Resets the color of the back.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeForeColor">
      <summary>
              Shoulds the color of the serialize fore.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetForeColor">
      <summary>
              Resets the color of the fore.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeFont">
      <summary>
              Shoulds the serialize font.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetFont">
      <summary>
              Resets the font.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeHeight">
      <summary>
              Shoulds the height of the serialize.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetHeight">
      <summary>
              Resets the height.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeIndent">
      <summary>
              Shoulds the serialize indent.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetIndent">
      <summary>
              Resets the indent.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeVisible">
      <summary>
              Shoulds the serialize visible.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetVisible">
      <summary>
              Resets the visible.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeGradientEffect">
      <summary>
              Shoulds the serialize gradient effect.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetGradientEffect">
      <summary>
              Resets the gradient effect.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeImage">
      <summary>
              Shoulds the serialize image.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetImage">
      <summary>
              Resets the image.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect">
      <summary>
            Gets or sets a value that represents background gradient effect of the ListItem.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect" /> object
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection">
      <summary>
              Represents a <b>ListItemCollection</b> class to store <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindObject(System.Object,System.Int32,System.Int32)">
      <summary>
              Finds the first item after specifed index that matches the specified object.
            </summary>
      <param name="obj">
              The object to search for.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              The zero-based index of the first item found.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindAllObject(System.Object,System.Int32)">
      <summary>
              Finds the first item in the List that matches the specified object.
            </summary>
      <param name="obj">
              The object to search for.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" /> containing the matched items.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindAllString(System.String,System.Int32)">
      <summary>
              Finds the first item in the collection that starts with the specified string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection" /> containing the matched items.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindString(System.String,System.Int32,System.Int32)">
      <summary>
              Finds the first item after the given index which starts with the given string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              The zero-based index of the first item found; returns -1 if no match is found.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindAllStringExact(System.String,System.Int32)">
      <summary>
              Finds the first item in the List that matches the specified string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" /> containing the matched items.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindStringExact(System.String,System.Int32,System.Int32)">
      <summary>
              Finds the first item after the specified index that matches the specified string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              The zero-based index of the first item found; returns -1 if no match is found.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Find(System.Object,System.Collections.IComparer,System.Int32,System.Int32)">
      <summary>
              Finds the value by comparer form start index.
            </summary>
      <param name="value">
              The <b>object</b> value to search for.
            </param>
      <param name="comparer">
              The <see cref="T:System.Collections.IComparer" /> value indicating the comparer.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value to which column index search in.
            </param>
      <returns>
              If successed,index of the item,otherwise,-1
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>
              Gets index of the item.
            </summary>
      <param name="item">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> object that need to find index.
            </param>
      <returns>
              An <see cref="T:System.Int32" /> value indicating the index if the item is found in the collection; otherwise,-1.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>
              Inserts an item to the collection at the specified position
            </summary>
      <param name="index">
              The zero-based index at which value should be inserted.
            </param>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> item to insert into the collectin.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.RemoveAt(System.Int32)">
      <summary>
              Removes the item at the specific position from the collection.
            </summary>
      <param name="index">
              The <see cref="T:System.Int32" /> value indicates the index of item to be removed.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Item(System.Int32)">
      <summary>
              Gets or sets the item at the specified position.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the specified position.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>
              Add an item to the collection.
            </summary>
      <param name="item">
              The Object to add into the collection.
            </param>
      <returns>
              The index of the added item.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Add(System.String)">
      <summary>
              Add a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> with the text to the collection.
            </summary>
      <param name="text">
              A <see cref="T:System.String" /> value that represents <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Text" /> of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.
            </param>
      <returns>
              The index of the added item.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ListItem[])">
      <summary>
              Adds some items of specified collection to the end of the collection.
            </summary>
      <param name="items">  
              A specified collection added into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.AddRange(System.String[])">
      <summary>
              Add some texts of specified collection to the end of the collection.
            </summary>
      <param name="texts">
              A specified collection add into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Clear">
      <summary>
              Clears all the items in the collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>
              Determines whether the collection contains specified item.
            </summary>
      <param name="item">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> object that specified.
            </param>
      <returns>
        <see langword="true" /> if the Object is found in the collection; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ListItem[],System.Int32)">
      <summary>
              Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular 
              <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">
              The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from 
             <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. 
            </param>
      <param name="arrayIndex">
              The zero-based index in array at which copying begins.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Count">
      <summary>
              Gets the count of the collection.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the the count of the collection.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>
              Deletes a specific item form the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> object to be deleted.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.ToArray">
      <summary>
              Copies the subItems of the colletion to a new Array.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> array contains all the item which in the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.GetEnumerator">
      <summary>
              Gets the enumerator of the collection.
            </summary>
      <returns>
              An <see cref="T:System.Collections.IEnumerator" /> object that represents current enumerator of the collection.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection">
      <summary>
              Defines <b>MatchedListItemCollection</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection.Item(System.Int32)">
      <summary>
              Gets the item at the specified position.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the specified position.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection.CopyTo(System.Array,System.Int32)">
      <summary>
              Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
      <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
      <param name="index">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">The array is <see langword="null" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is less than zero. </exception>
      <exception cref="T:System.ArgumentException">The array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection.Count">
      <summary>
              Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
      <value>
              The number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection.GetEnumerator">
      <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
              An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection">
      <summary>
              Represents the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection" /> class.
            </summary>
      <value>
              This class indicates the search result collection in a specified list.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>
              Determines whether an element is in this collection.
            </summary>
      <param name="item">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> object.
            </param>
      <returns>
              A<see langword="bool" /> value, <see langword="true" /> if contains, otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>
              Gets the zero-based index of the specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> in this collection.
            </summary>
      <param name="item">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> object.
            </param>
      <returns>
              An <see cref="T:System.Int32" /> value indicates the zero-based index.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1">
      <summary>
              Represents the strongly typed collection of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> objects. 
              Provides methods and properties to search and access items using the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.INamedObject.Name" /> property of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> object.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.#ctor(GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection{`0})">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" /> class.
            </summary>
      <param name="values">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" /> object that contains items for constructing a new collection object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.#ctor(`0[])">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" /> class.
            </summary>
      <param name="values">
              An <b>Array</b>.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.Item(System.String)">
      <summary>
              Gets or sets the element with the specified name.
            </summary>
      <value>
              An element of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> type that indicates the specified item.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.Find(System.String)">
      <summary>
              Finds the item using the specified name.
            </summary>
      <param name="name">
              A <see cref="T:System.String" /> value that indicates the name of the object to retrieve from the collection
            </param>
      <returns>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> object with the specified name within the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.IndexOfKey(System.String)">
      <summary>
              Retrieves the index of the first occurrence of the specified item within the collection.
            </summary>
      <param name="name">
              The name of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> object to search for. 
            </param>
      <returns>
              The zero-based index of the first occurrence of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> object with the specified name in the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.ContainsKey(System.String)">
      <summary>
              Determines whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" /> collection contains an item with the specified key.
            </summary>
      <param name="name">
              The key to locate in the collection.
            </param>
      <returns>
        <see langword="true" /> if the collection contains an <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> typed item with the specified name; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject">
      <summary>
              Represents an object with a name.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.INamedObject.Name">
      <summary>
              Gets or sets the name of the object.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the name of the object.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator">
      <summary>
               Represents a <b>PopUpCalculator</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Align">
      <summary>
              Gets or sets the alignment of the pop up window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.LeftRightAlignment" /> value. 
              <br /> The default is <see cref="F:System.Windows.Forms.LeftRightAlignment.Left" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.AllowPopUp">
      <summary>
              Gets or sets a value indicating whether allow pop up the popup window.
            </summary>
      <value>
        <see langword="true" /> if allow pop up; otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.BackColor">
      <summary>
              Gets or sets background color of the pop up window
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the background color of the pop up window.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.ForeColor">
      <summary>
              Gets or sets the foreground color of the pop up window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the foreground color of the pop up window.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowText" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.BackgroundImage">
      <summary>
              Gets or sets the background image displayed in the pop up window.
            </summary>
      <value>
              An <see cref="T:System.Drawing.Image" /> that represents the image to display in the
              background of the pop up window.
              <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.BackgroundImageLayout">
      <summary>
              Gets or sets the layout mode of the background image.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.ImageLayout" /> value indicates the layout mode of the background image.
              <br /> The default is <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.BorderStyle">
      <summary>
              Gets or sets the style of border.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.BorderStyle" /> value indicates the style of border.
              <br /> The default is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Cursor">
      <summary>
              Gets or sets the cursor that is displayed when the mouse pointer is over the view.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Cursor" /> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Font">
      <summary>
              Gets or sets the font which is used in the pop up window.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Font" /> value indicates the the font which is used in the pop up window.
            </value>
      <remarks>
              Default value is same as font of control.
              If set a <see langword="null" />, value will be default value automatically without exception.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Lines">
      <summary>
              Gets or sets how many lines show in the pop up window.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates how many lines show in the pop up window.
              <br /> The default is 12.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Padding">
      <summary>
              Gets or sets the padding of the pop up window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding" /> value.
              <br /> The default is "1,1,1,1".
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.SingleBorderColor">
      <summary>
              Gets or sets the color for single line border in the pop up window.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Color" /> value indicates the color of the single line border.
              <br /> The default value is the <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Width">
      <summary>
              Gets or sets the width of the pop up window.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the width of the pop up window.
              <br /> The default is 0.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The value is less than zero.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.TextHAlign">
      <summary>
             Gets or sets the horizontal alignment of the text of the pop up window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.HorizontalAlignment" /> value.
              <br /> The default is <see cref="F:System.Windows.Forms.HorizontalAlignment.Right" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Value">
      <summary>
             Gets the value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator" />.
            </summary>
      <value>
              A <see cref="T:System.Decimal" /> value indicates the value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.DecimalDigit">
      <summary>
              Gets or sets the decimal digit.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the digit of decimal part.
              <br /> The default is 2.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.UseDecimalDigit">
      <summary>
             Gets or sets if use <b>DecimalDigit</b> property.
            </summary>
      <value>
              The <see langword="bool" /> value, <see langword="true" /> if use the decimal digit, otherwise <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Text">
      <summary>
              Gets the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator" />.
            </summary>
      <value>
              The <see cref="T:System.String" /> value indicates the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.ButtonMappings">
      <summary>
              Gets or sets the whether the shortcut key for the button item.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" /> object indicates the button mapping collection.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs">
      <summary>
              Represents the <see cref="T:System.EventArgs" /> for <b>PopUpOpening</b> event.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs" /> class.
            </summary>
      <param name="syncData">
              A <see langword="bool" /> value if set to <see langword="true" /> we should synchronize the value to the drop down control.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs.SyncData">
      <summary>
              Gets or sets a value indicating whether we synchronize data to the drop down when open.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if we synchronize data to the drop down when open; otherwise, <see langword="false" />.
            </value>
      <remarks>
              The property determines synchronising the data to the control from the pop up dialog when it's opening or not.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs">
      <summary>
              Represents the <see cref="T:System.EventArgs" /> for <b>PopUpClosing</b> event.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs.#ctor">
      <summary>
              Initializes the instance of <b>PopUpClosingEventArgs</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs.#ctor(System.Boolean,System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs" /> class.
            </summary>
      <param name="syncData">
              A <see langword="bool" /> value if set to <see langword="true" /> [sync data].
            </param>
      <param name="value">
              An <b>object</b> indicates the value from the drop down dialog.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs.SyncData">
      <summary>
              Gets or sets a value indicating whether we synchronize data to the drop down when open.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if we synchronize data to the drop down when open; otherwise, <see langword="false" />.
            </value>
      <remarks>
              The property determines synchronising the data to the control from the drop down when it's closing or not.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs.Value">
      <summary>
              Gets or sets the value from the PopUp parts.
            </summary>
      <value>
              An <b>object</b> indicates the value from the drop down dialog.
            </value>
      <remarks>
              The property retrieves the value of the pop-up dialog.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase">
      <summary>
              Represents the base class of side buttons.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Paint">
      <summary>
              Occurs after rendering the SideButtonBase.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click">
      <summary>
              Occurs when the button is clicked.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.OnClick(System.Object,System.EventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> event.
            </summary>
      <param name="sender">
              An <see cref="T:System.Object" /> that indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> object that contains the event data.
            </param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.MouseDown">
      <summary>
              Occurs when the mouse button is pressed down.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.MouseDown" /> event.
            </summary>
      <param name="sender">
              An <see cref="T:System.Object" /> that indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> object that contains the event data.
            </param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.MouseUp">
      <summary>
              Occurs when the mouse button is released.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.MouseUp" /> event.
            </summary>
      <param name="sender">
              An <see cref="T:System.Object" /> that indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.Windows.Forms.MouseEventArgs" /> object that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Finalize">
      <summary>
              Releases unmanaged resources and performs other cleanup operations before the
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> is reclaimed by garbage collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component" /> and optionally releases the managed resources.
            </summary>
      <param name="disposing">
              true to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
      <remarks>
              Call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Dispose(System.Boolean)" /> when you are finished using the <see cref="T:System.Windows.Forms.Control" />. 
              The <b>Dispose</b> method leaves the <see cref="T:System.Windows.Forms.Control" /> in an unusable state. 
              After calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Dispose(System.Boolean)" />, you must release all references to the <see cref="T:System.Windows.Forms.Control" /> 
              so the garbage collector can reclaim the memory that the <see cref="T:System.Windows.Forms.Control" /> was occupying.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Parent">
      <summary>
              Gets the control object that owns this SideButton.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Position">
      <summary>
              Gets or sets the position of the side button.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition" /> enumeration that indicates the position of the side button.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition.RightInside" />.
            </value>
      <remarks>
            With the <b>Position</b> property, you can change the position of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> object. 
            This places the button inside or outside and to the left or right of the container control's border.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Visible">
      <summary>
              Gets or sets the visibility of the side button.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility" /> enumeration that indicates the visibility settings for the side button.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility.ShowAlways" />.
            </value>
      <remarks>
              The <b>Visible</b> property determines whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> is visible, always shown, 
              shown only if the container control gets focus, or never shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.ButtonWidth">
      <summary>
              Gets or sets the width of the side button.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the width of the side button.
            </value>
      <remarks>
              The value of this property retrieves the width of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Enabled">
      <summary>
              Gets or sets a value that indicates whether this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> is enabled.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if enabled; otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" /></value>
      <remarks>
              With the <b>Enabled</b> property, you can enable or disable controls at run time. For example, you can disable controls that do not apply to the current state of the application. You can also disable a control to restrict its use. For example, a button can be disabled to prevent the user from clicking it. If a control is disabled, it cannot be selected.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Size">
      <summary>
              Gets the size of the SideButtonBase.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Size" /> value that indicates the size of the SideButtonBase.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Tag">
      <summary>
              Gets or sets the object that contains data about the side button object.
            </summary>
      <value>
              An <see cref="T:System.Object" /> that contains data about the side button object. The default is <see langword="null" />.
            </value>
      <remarks>
        <para>
                Any type derived form <see cref="T:System.Object" /> class can be assigned to this property. If the Tag property is set through the Windows Form designer, only text can be assigned.
              </para>
        <para>
                A common use for the Tag property is to store data that is closely associated with the side button object. 
              </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.PropertyChanged" /> event.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance that contains the event data.
            </param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.PropertyChanged">
      <summary>
              Occurs when a property of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> is changed.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Name">
      <summary>
              Gets or sets the name of the object.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the name of the object.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.BackColor">
      <summary>
            Gets or sets the backcolor of the side button.
            </summary>
      <value>
             The backcolor of the side button.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.UseVisualStyleBackColor">
      <summary>
              Gets or sets whether to use the visual style backcolor when flat style is system and system theme is active.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" />  to use the visual style backcolor when 
              flat style is system and system theme is active; otherwise, <see langword="false" />.
            </value>
      <remarks>
              Visual styles are specifications for the appearance of controls. 
              For example, visual styles can define the color, size, and font of controls, and they enable you to configure the visual interface to coordinate 
              with your application interface. Additionally, they provide a mechanism for all Windows-based applications to have visual styles applied.
              <note>
              Only the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" /> and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" /> are effected by this property.
              </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.FlatAppearance">
      <summary>
              Gets the appearance of the border and the colors used to indicate check state and mouse state.
            </summary>
      <value>
              One of the <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance" /> objects.
            </value>
      <remarks>
              With the <b>FlatAppearance</b> property, you can customize the appearance for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> object when the <see cref="T:System.Windows.Forms.FlatStyle" /> of the control, which the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> belongs to, is <b>FlatStyle.Flat</b>.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.ForeColor">
      <summary>
            Gets or sets the foreground color.
            </summary>
      <value>The color of the foreground.</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton">
      <summary>
              Represents the settings of the <b>DropDownButton</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton.IsDefaultBehavior">
      <summary>
              Gets or sets a value that indicates whether this instance is the default behavior.
            </summary>
      <value>
        <see langword="true" /> if this button controls the default drop-down behavior; otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton.UseVisualStyleBackColor">
      <summary>
              Gets or sets whether to use the visual style backcolor when flat style is system and system theme is active.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to use the visual style backcolor when 
              flat style is system and system theme is active; otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
      <remarks>
              This property is invalid for <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton">
      <summary>
              Represents the <b>SpinButton</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.IsDefaultBehavior">
      <summary>
              Gets or sets a value that indicates whether this instance is the default behavior.
            </summary>
      <value>
        <see langword="true" /> if this button controls the default drop-down behavior; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.Interval">
      <summary>
              Gets or sets the interval of firing the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinUp" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinDown" /> events.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the interval of firing the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinUp" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinDown" /> events.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs when value is smaller than 1.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.Delay">
      <summary>
              Gets or sets the delay time, in milliseconds, before repeating the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinUp" /> or the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinDown" /> event.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the delay time, in milliseconds, before repeating the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinUp" /> and the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinDown" /> events.
            </value>
      <remarks>
              The value must be positive.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs when value is smaller than 0.</exception>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinUp">
      <summary>
              Occurs when the up arrow button of the spin button is pressed.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinDown">
      <summary>
              Occurs when the down arrow button of the spin button is pressed.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.UseVisualStyleBackColor">
      <summary>
              Gets or sets whether to use the visual style backcolor when flat style is system and system theme is active.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to use the visual style backcolor when 
              flat style is system and system theme is active; otherwise, false.
            </value>
      <remarks>
              This property is invalid for <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.Size">
      <summary>
              Gets the size of the SideButtonBase.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Size" /> value that indicates the size of the SideButtonBase.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton">
      <summary>
              Represents the normal side button with image and text.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButton.CheckedChanged">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Checked" /> property is changed.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButton.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Dispose(System.Boolean)">
      <summary>
              Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component" /> and optionally releases the managed resources.
            </summary>
      <param name="disposing">
              true to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
      <remarks>
              Call <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Dispose(System.Boolean)" /> when you are finished using the <see cref="T:System.Windows.Forms.Control" />. 
              The <b>Dispose</b> method leaves the <see cref="T:System.Windows.Forms.Control" /> in an unusable state. 
              After calling <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Dispose(System.Boolean)" />, you must release all references to the <see cref="T:System.Windows.Forms.Control" /> 
              so the garbage collector can reclaim the memory that the <see cref="T:System.Windows.Forms.Control" /> was occupying.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Image">
      <summary>
              Gets or sets the image displayed on a button view.
            </summary>
      <value>
              An <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Image" /> that indicates the image displayed on a button view.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Text">
      <summary>
              Gets or sets the text displayed on a button view.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the text displayed on a button view
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.ContentAlignment">
      <summary>
              Gets or sets the alignment of the image attached to the text (classical appearance).
            </summary>
      <value>
              A <see cref="T:System.Drawing.ContentAlignment" /> that indicates the alignment of the image attached to the text.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.TextAlignment">
      <summary>
              Gets or sets the alignment of the text with the image.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.LeftRightAlignment" /> enumeration, 
              <b>Left</b> means the text is at the left side of the image, 
              <b>Right</b> means the text is at the right side of the image.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.CheckOnClick">
      <summary>
              Gets or sets a value that indicates whether to check the button when clicked.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to check the button when clicked; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Checked">
      <summary>
              Gets or sets a value that indicates whether the check box is in the checked state.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether the check box is in the checked state.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Delay">
      <summary>
              Gets or sets the delay time, in milliseconds, before repeating the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> event.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the delay time, in milliseconds, before repeating the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
              The default is 250.
            </value>
      <remarks>
              The value must be greater than or equals to 0. 
              If <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.CheckOnClick" /> property is <see langword="true" /> 
              or <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval" /> property is 0, the Spin action will be stopped.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is smaller than 0.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval">
      <summary>
              Gets or sets the interval of firing the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the interval of firing the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
              The default is 0.
            </value>
      <remarks>
              The value must be greater than or equals to 0. 
              If <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.CheckOnClick" /> property is <see langword="true" /> 
              or <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval" /> property is 0, the Spin action will be stopped.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is smaller than 0.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Behavior">
      <summary>
            Gets or sets the behavior when click the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior" /> enumeration, 
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" /> means when click the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />, it will do spin up behavior,
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" /> means when click the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />, it will do spin down behavior. 
            </value>
      <remarks>
            When set as <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />, <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Text" /> property will be forced changed to "+", <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval" /> property will be forced changed to 60.
            When set as <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />, <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Text" /> property will be forced changed to "-", <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval" /> property will be forced changed to 60.
            When set as <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.None" />, <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Text" /> property will be forced changed to <see cref="F:System.String.Empty" />, <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval" /> property will be forced changed to 0.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton">
      <summary>
              Represents the symbol button class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Symbol">
      <summary>
              Gets or sets the symbol to be drawn.
            </summary>
      <value>
               A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Symbols" /> object that indicates the symbol to be drawn.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.SymbolDirection">
      <summary>
              Gets or sets the direction of the symbol.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.SymbolDirection" /> that indicates the direction of the symbol.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Delay">
      <summary>
              Gets or sets the delay time, in milliseconds, before repeating the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> event.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the delay time, in milliseconds, before repeating the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
              The default is 250.
            </value>
      <remarks>
              The value must be greater than or equals to 0. 
              If <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval" /> property is 0, the Spin action will be stopped.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is smaller than 0.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval">
      <summary>
              Gets or sets the interval of firing the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the interval of firing the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
              The default is 0.
            </value>
      <remarks>
              The value must be greater than or equals to 0. 
              If <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval" /> property is 0, the Spin action will be stopped.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is smaller than 0.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Behavior">
      <summary>
            Gets or sets the behavior when click the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior" /> enumeration, 
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" /> means when click the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />, it will do spin up behavior,
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" /> means when click the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />, it will do spin down behavior. 
            </value>
      <remarks>
            When set as <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />, 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Symbol" /> property will be forced changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Arrow" />, 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.SymbolDirection" /> property will be forced changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Up" />, 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval" /> property will be forced changed to 60.
            When set as <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />, 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Symbol" /> property will be forced changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Arrow" />, 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.SymbolDirection" /> property will be forced changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Down" />, 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval" /> property will be forced changed to 60.
            When set as <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.None" />, 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Symbol" /> property will be forced changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.None" />, 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.SymbolDirection" /> property will be forced changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Left" />, 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval" /> property will be forced changed to 0.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection">
      <summary>
              Represents the collection for Side buttons.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Item(System.Int32)">
      <summary>
              Gets or sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> at the specified index in the collection.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> at each valid index.
            </returns>
      <param name="index">
              The zero-based index of the collection to access. 
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The index parameter is outside the valid range of indexes for the collection. 
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase)">
      <summary>
              Adds the specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> to the collection.
            </summary>
      <returns>
              The index at which the new element was inserted.
            </returns>
      <param name="value">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> to add. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>
              Copies the elements of the specified array to the end of the collection.
            </summary>
      <param name="value">
              An array of type <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> that contains the objects to add to the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.AddRange(System.Collections.Generic.IList{GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase})">
      <summary>
              Adds the contents of another <see cref="T:System.Collections.Generic.IList`1" /> to the end of the collection.
            </summary>
      <param name="value">
              An <see cref="T:System.Collections.Generic.IList`1" /> that contains the objects to add to the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase)">
      <summary>
              Gets a value that indicates whether the collection contains the specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />.
            </summary>
      <returns>
        <see langword="true" /> if the collection contains the specified object; otherwise, <see langword="false" />.
            </returns>
      <param name="value">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> to search for in the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnInsert(System.Int32,System.Object)">
      <summary>
                Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
                The zero-based index at which to insert the value.
            </param>
      <param name="value">
                The new value of the element at the specified index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
                Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
                The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
                The value to replace with newValue.
            </param>
      <param name="newValue">
                The new value of the element at the specified index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnRemove(System.Int32,System.Object)">
      <summary>
                Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
                The zero-based index at which value can be found.
            </param>
      <param name="value">
                The value of the element to remove from the specified index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[],System.Int32)">
      <summary>
              Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance that begins at the specified index.
            </summary>
      <param name="array">
              The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. 
            </param>
      <param name="index">
              The index of the array at which to begin inserting. 
            </param>
      <exception cref="T:System.ArgumentNullException">
              The array parameter is null. 
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The index parameter is less than the target array's minimum index. 
            </exception>
      <exception cref="T:System.ArgumentException">
              The destination array is multidimensional.-or- The number of elements in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> is greater than
              the available space between the index of the target array specified by the index parameter and the end of the target array.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase)">
      <summary>
              Gets the index in the collection of the specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />, if it exists in the collection.
            </summary>
      <returns>
              The index in the collection of the specified object, if found; otherwise, -1.
            </returns>
      <param name="value">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> to locate in the collection. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase)">
      <summary>
              Inserts the specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> into the collection at the specified index.
            </summary>
      <param name="value">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> to insert. 
            </param>
      <param name="index">
              The zero-based index where the specified object should be inserted. 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase)">
      <summary>
              Removes the specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> from the collection.
            </summary>
      <param name="value">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> to remove from the collection. 
            </param>
      <exception cref="T:System.ArgumentException">
              The specified object is not found in the collection. 
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnValidate(System.Object)">
      <summary>
              Performs additional custom processes when validating a value.
            </summary>
      <param name="value">
              The object to validate.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnClear">
      <summary>
              Performs additional custom processes when clearing the contents of the 
              <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnClearComplete">
      <summary>
              Performs additional custom processes after clearing the contents of the 
              <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after inserting a new element into the 
              <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert the value.
            </param>
      <param name="value">
              The new value of the element at the specified index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
      <param name="index">
              The zero-based index at which value can be found.
            </param>
      <param name="value">
              The value of the element to remove from the specified index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
      <param name="index">
              The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
              The value to replace with newValue.
            </param>
      <param name="newValue">
              The new value of the element at the specified index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
              Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.CollectionChanged" /> event.
            </summary>
      <param name="e">
              The <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> instance that contains the event data.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Item(System.String)">
      <summary>
              Gets or sets the element with the specified name.
            </summary>
      <value>
              An element of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> type that indicates the specified item.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Find(System.String)">
      <summary>
              Finds the item using the specified name.
            </summary>
      <param name="name">
              A <see cref="T:System.String" /> value that indicates the name of the object to retrieve from the collection
            </param>
      <returns>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> object with the specified name within the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.IndexOfKey(System.String)">
      <summary>
              Retrieves the index of the first occurrence of the specified item within the collection.
            </summary>
      <param name="name">
              The name of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> object to search for. 
            </param>
      <returns>
              The zero-based index of the first occurrence of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> object with the specified name in the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.ContainsKey(System.String)">
      <summary>
              Determines whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" /> collection contains an item with the specified key.
            </summary>
      <param name="name">
              The key to locate in the collection.
            </param>
      <returns>
        <see langword="true" /> if the collection contains an <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> typed item with the specified name; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance">
      <summary>
              Represents the <b>FlatButtonAppearance</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.BorderSize">
      <summary>
              Gets or sets a value that specifies the size, in pixels, of the border around the button.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> that represents the size, in pixels, of the border around the button.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The <b>BorderSize</b> of the flat button must be greater than or equal to 0.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.BorderColor">
      <summary>
              Gets or sets the color of the border around the button.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> structure that represents the color of the border around the button.
            </value>
      <exception cref="T:System.ArgumentException">
              The transparent color is not supported.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.CheckedBackColor">
      <summary>
              Gets or sets the color of the client area of the button when the button is checked and the mouse pointer is outside the boundary of the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> structure that represents the color of the client area of the button.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.MouseDownBackColor">
      <summary>
              Gets or sets the color of the client area of the button when the mouse is pressed within the boundary of the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> structure that represents the color of the client area of the button.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.MouseOverBackColor">
      <summary>
              Gets or sets the color of the client area of the button when the mouse pointer is within the boundary of the control.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> structure that represents the color of the client area of the button.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Spin">
      <summary>
              Represents the spin function settings.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.AllowSpin">
      <summary>
              Gets or sets whether the spin behavior is enabled.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the spin behavior can be performed; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment">
      <summary>
              Gets or sets the increment offset of a single spin behavior.
            </summary>
      <value>
              An <b>int</b> value, that indicates the increment offset of the spin behavior.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.SpinOnKeys">
      <summary>
              Gets or sets a value that indicates whether the user can cause a spin action using a key.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the user can cause a spin action with the keyboard; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Wrap">
      <summary>
              Gets or sets whether the spin behavior can wrap when reaching a maximum or minimum limit.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the spin behavior can wrap; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.SpinOnWheel">
      <summary>
              Gets or sets a value that indicates whether the user can cause a spin action using the mouse wheel.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the user can cause a spin action using the mouse wheel; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberSpin">
      <summary>
               Represents the number spin functions settings.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberSpin.SpinMode">
      <summary>
              Gets or sets the spin mode.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberSpinMode" /> enumeration that indicates how to perform the spin action.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberSpin.IncrementValue">
      <summary>
              Gets or sets the increment value.
            </summary>
      <value>
              A <see cref="T:System.Decimal" /> value that indicates the increment value.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin">
      <summary>
              Represents the date spin function settings.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateSpin.SpinMode">
      <summary>
              Gets or sets the spin increment mode.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpinMode" /> enumeration that indicates how to perform the spin action.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateSpin.IncrementValue">
      <summary>
              Gets or sets the increment value.
            </summary>
      <value>
              A <see cref="T:System.TimeSpan" /> value that indicates the increment value.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar">
      <summary>
              Represents a <b>StatusBar</b> class to define status bar settings .
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Text">
      <summary>
              Gets or sets a value indicates the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" />.
            </summary>
      <value>
              The <see cref="T:System.String" /> value indicates the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Visible">
      <summary>
              Gets or set a <see langword="bool" /> value indicates whether the statusbar is visible.
            </summary>
      <value>
              The <see langword="bool" /> value, <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" /> is visible, otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem">
      <summary>
              Represents a <b>SubItem</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.#ctor(System.Object,System.Object,System.Drawing.ContentAlignment,System.Boolean,System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> class with values.
            </summary>
      <param name="value">
              An <b>object</b> indicates the value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> object.
            </param>
      <param name="tag">
              An <b>object</b> indicates the tag value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> object.
            </param>
      <param name="contentAlignment">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ContentAlignment" /> enumeration indicates the alignment of the content.
            </param>
      <param name="wordWrap">
              A <see langword="bool" /> value, <see langword="true" /> if allow wrap by word. Otherwise, <see langword="false" />.
            </param>
      <param name="ellipsis">
              A <see langword="bool" /> value, <see langword="true" /> if auto show ellipsis when content can not display completely, otherwise <see langword="false" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.#ctor(System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> class with values.
            </summary>
      <param name="value">
              An <b>object</b> indicates the value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Padding">
      <summary>
              Gets or sets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Padding" /> value indicates the margin of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Padding" /> value indicates the margin.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Value">
      <summary>
              Gets or sets a value that represents value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />.
            </summary>
      <value>
              The <see cref="T:System.Object" /> value indicates the value.
              <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Tag">
      <summary>
              Gets or sets a value that user free set.
            </summary>
      <value>
              An <see cref="T:System.Object" /> object that represents the tag of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ContentAlignment">
      <summary>
              Gets or sets a value that represents alignment of the text.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ContentAlignment" /> value indicates the alignment of the text.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.WordWrap">
      <summary>
              Gets or sets a <see langword="bool" /> value indicating whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> can word wrap or not.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> can word wrap; Otherwise,<see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Ellipsis">
      <summary>
              Gets or sets a <see langword="bool" /> value indicating whether ought to display ellipsis when text can't display completely.
            </summary>
      <value>
        <see langword="true" /> if the text will use ellipsis display when the text can't display completely; Otherwise,<see langword="false" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ResetContentAlignment">
      <summary>
              Resets the content alignment.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ResetEllipsis">
      <summary>
              Resets the ellipsis.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ResetWordWrap">
      <summary>
            Resets the word wrap.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ResetPadding">
      <summary>
              Resets the padding.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection">
      <summary>
              Defines the <b>SubItemCollection</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>
              Gets the index of the item.
            </summary>
      <param name="item">
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> object that need to find index.
            </param>
      <returns>
              The index if the item is found in the collection; otherwise,-1.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>
              Inserts an item to the collection at the specified position
            </summary>
      <param name="index">
              The zero-based index at which value should be inserted.
            </param>
      <param name="item">
              The item to insert into the collectin.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.RemoveAt(System.Int32)">
      <summary>
              Remove the item at specific position form the collection.
            </summary>
      <param name="index">
              The index of item to be removed.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Item(System.Int32)">
      <summary>
              Gets or sets the item at the specified position.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the specified position.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>
              Adds an item to the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> value to add into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Add(System.Object)">
      <summary>
            Adds an item to the collection.
            </summary>
      <param name="item">The object to add into the collection.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.SubItem[])">
      <summary>
              Add some SubItems of specified collection to the end of the collection.
            </summary>
      <param name="subItems">  A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> array added into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.AddRange(System.Object[])">
      <summary>
              Add some SubItems of specified collection to the end of the collection.
            </summary>
      <param name="subItems">  A <b>object</b> array added into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Clear">
      <summary>
              Clears all the items in the collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>
              Determines whether the collection contains a specific item.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> to locate in the collection.
            </param>
      <returns>
        <see langword="true" /> if the item is found in the collection; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.SubItem[],System.Int32)">
      <summary>
              Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular 
              <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">
             The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from 
             <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. 
            </param>
      <param name="arrayIndex">
               The zero-based index in array at which copying begins.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Count">
      <summary>
              Gets a value that represents the count of the collection.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the count.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.IsReadOnly">
      <summary>
              Gets a value indicating whether the collection is read only.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>
              Deletes a specific item form the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> value to be deleted.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.ToArray">
      <summary>
              Copies the subItems of the colletion to a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> array.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> array returned with all items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection" /></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.GetEnumerator">
      <summary>
              Gets the enumerator.
            </summary>
      <returns>
              The enumerator.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem">
      <summary>
              Represents a <b>DefaultSubItem</b> class to define default value for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.Ellipsis">
      <summary>
              Gets or sets a <see langword="bool" /> value indicates whether use ellipsis when there isn't enough place to draw the content.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if  use ellipsis when there isn't enough place to draw the content, otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.WordWrap">
      <summary>
              Gets or sets a <see langword="bool" /> value indicates whether the content can be wrapped.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if  he content can be wrapped, otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.Padding">
      <summary>
              Gets or sets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.Padding" /> value indicates the distance between the content and the boundary of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.Padding" /> value indicates the distance between the content and the boundary of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />..
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ContentAlignment">
      <summary>
              Gets or sets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ContentAlignment" /> value indicates the alignment of the content.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ContentAlignment" /> value indicates the alignment of the content.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ShouldSerializePadding">
      <summary>
              Should serialize <b>Padding</b>.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ResetPadding">
      <summary>
              Resets the <b>Padding</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ShouldSerializeWordWrap">
      <summary>
              Should serialize <b>WordWrap</b>.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ResetWordWrap">
      <summary>
              Resets the <b>WordWrap</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ShouldSerializeEllipsis">
      <summary>
              Should serialize <b>Ellipsis</b>.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ResetEllipsis">
      <summary>
              Resets the <b>Ellipsis</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ShouldSerializeContentAlignment">
      <summary>
              Should serialize <b>ContentAlignment</b>.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ResetContentAlignment">
      <summary>
              Resets the <b>ContentAlignment</b>.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle">
      <summary>
              Indicates what will be shown.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.TextOnly">
      <summary>
              Only show text, image area is blank.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.ImageOnly">
      <summary>
              Only show image, cann't edit in this way.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.Both">
      <summary>
              Shows both image and text.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs">
      <summary>
              Provides data for the <b>TextChanging</b> event.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs.Cancel">
      <summary>
              Gets or sets the value that indicates whether the changing action is canceled.
            </summary>
      <value>
              A <b>bool</b> value that indicates whether the changing action is canceled.
            </value>
      <remarks>
              If the <b>Cancel</b> property is <b>true</b>, the text does not change.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs.Result">
      <summary>
              Gets the value that indicates the result after the text is changed.
            </summary>
      <value>
              A <b>string</b> that indicates the result after text is changed.
            </value>
      <remarks>
              The <b>Result</b> retrieves the new text which the old text was changed to.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs.#ctor(System.Boolean,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs" /> class.
            </summary>
      <param name="cancel">
              A <b>bool</b> value that indicates whether the changing action is canceled.
            </param>
      <param name="result">
              A <b>string</b> value that indicates the result after the changing action.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventHandler">
      <summary>
              Represents the method that handles the <b>TextChanging</b> event.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ITouchBarAction">
      <summary>
            An operation that is performed by click <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ITouchBarAction.CanExecute(System.Object)">
      <summary>
            Defines the method that determines whether the action can execute in its current state.
            </summary>
      <param name="target">
            The target <see cref="T:System.Object" /> to execute this action.
            </param>
      <returns>
        <see langword="true" /> if this action can be executed; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ITouchBarAction.Execute(System.Object)">
      <summary>
            Executes the specified object.
            </summary>
      <param name="target">
            The target <see cref="T:System.Object" /> to execute this action.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar">
      <summary>
            Represents the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> which will be shown by touch operation.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Drawing.Point)">
      <summary>
             Positions the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> relative to the target control location.
            </summary>
      <param name="position">
            The horizontal and vertical location of the attached control's upper-left corner, in pixels.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Int32,System.Int32)">
      <summary>
            Positions the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> relative to the target control coordinates.
            </summary>
      <param name="x">The horizontal coordinate based on the attached control, in pixels.</param>
      <param name="y">The vertical coordinate based on the attached control, in pixels.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Drawing.Point,System.Windows.Forms.ToolStripDropDownDirection)">
      <summary>
            Positions the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> relative to the specified
            control location and with the specified direction relative to the target control.
            </summary>
      <param name="position">The horizontal and vertical location of the attached control's upper-left corner, in pixels.</param>
      <param name="direction">One of the <see cref="T:System.Windows.Forms.ToolStripDropDownDirection" /> values.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Windows.Forms.Control,System.Drawing.Point)">
      <summary>
            Positions the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> relative to the specified control location.
            </summary>
      <param name="control">The control that is the reference point for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> position.</param>
      <param name="position">The horizontal and vertical location of the reference control's upper-left corner, in pixels.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Windows.Forms.Control,System.Int32,System.Int32)">
      <summary>
            Positions the <see cref="!:ToolBar" /> relative to the specified control location.
            </summary>
      <param name="control">The control that is the reference point for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> position.</param>
      <param name="x">The horizontal coordinate based on the reference control, in pixels.</param>
      <param name="y">The vertical coordinate based on the reference control, in pixels.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.ToolStripDropDownDirection)">
      <summary>
            Positions the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> relative to the specified control at the specified location and with the specified direction relative to the target control.
            </summary>
      <param name="control">The control that is the reference point for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" /> position.</param>
      <param name="position">The horizontal and vertical location of the reference control's upper-left corner, in pixels.</param>
      <param name="direction">One of the <see cref="T:System.Windows.Forms.ToolStripDropDownDirection" /> values.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.OnItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStrip.ItemClicked" /> event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton">
      <summary>
            Represents a <see cref="T:System.Windows.Forms.ToolStripButton" /> for touch device.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.#ctor">
      <summary>
            Create an instance of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.#ctor(System.String,System.Drawing.Image)">
      <summary>
            Create an instance of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton" />.
            </summary>
      <param name="text">Indicates the button text.</param>
      <param name="image">Indicates the button image.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.#ctor(GrapeCity.Win.Spread.InputMan.CellType.ITouchBarAction,System.String,System.Drawing.Image)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton" /> class.
            </summary>
      <param name="action">Indicates the action which is executed by click.</param>
      <param name="text">Indicates the button text.</param>
      <param name="image">Indicates the button image.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.Action">
      <summary>
            Gets the action which will be executed by the click.
            </summary>
      <value>
            The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ITouchBarAction" /> which will be executed by the click.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.Enabled">
      <summary>
            Gets or sets a value indicating whether the parent control of the <see cref="T:System.Windows.Forms.ToolStripItem" /> is enabled.
            </summary>
      <returns>true if the parent control of the <see cref="T:System.Windows.Forms.ToolStripItem" /> is enabled; otherwise, false. The default is true.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.GetPreferredSize(System.Drawing.Size)">
      <summary>
            Retrieves the size of a rectangular area into which a System.Windows.Forms.ToolStripButton can be fitted.
            </summary>
      <param name="constrainingSize">The specified area for a System.Windows.Forms.ToolStripButton.</param>
      <returns> An ordered pair of type System.Drawing.Size representing the width and height of a rectangle.</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy">
      <summary>
              Stores the holiday policy for a weekday - such as which weeks in 
              the month are considered as holidays or whether a holiday should 
              automatically override to the next day.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.Empty">
      <summary>
              Represents a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> structure 
              with its properties left uninitialized.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.#ctor(GrapeCity.Win.Spread.InputMan.CellType.WeekFlags,GrapeCity.Win.Spread.InputMan.CellType.HolidayOverride)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />
              structure with the specified <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags" /> and override settings.
            </summary>
      <param name="weekFlags">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags" /> flag value that represents the weeks that
              will be treated as a holiday.
            </param>
      <param name="overrideHoliday">
        <see langword="true" /> to override the holiday (when the holiday lands on a
              weekday which is already set to a holiday) to the following day;
              <see langword="false" /> to do nothing.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.Override">
      <summary>
              Gets or sets whether to override the holiday.
            </summary>
      <value>
        <see langword="true" /> to override the holiday; otherwise, <see langword="false" />.
              The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags">
      <summary>
              Gets or sets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags" /> enumeration that contains the 
              weekday's weekly holiday information.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags" /> enumeration that contains the weekday's weekly 
              holiday information.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.IsEmpty">
      <summary>
              Gets the value that indicates whether all properties of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />
              are uninitialized.
            </summary>
      <value>
              This property returns <see langword="true" /> if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags" /> is set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.None" />
              and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.Override" /> property is <see langword="false" />; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.IsHoliday(System.DateTime)">
      <summary>
              Determines whether the specified date is a weekday or a holiday.
            </summary>
      <param name="date">
              The <see cref="T:System.DateTime" /> value that indicates the date.
            </param>
      <returns>
        <see langword="true" /> if the specified date is a holiday; otherwise,
              <see langword="false" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays">
      <summary>
              Represents the holiday policy for each individual weekday.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" /> 
              class using day specified weekday policies.
            </summary>
      <param name="saturday">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> that indicates Saturday.
            </param>
      <param name="sunday">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> that indicates Sunday.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy[])">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" /> 
              class using day specified weekday policies.
            </summary>
      <param name="daysOfWeek">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> array that specifies the policy
              for the entire week.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Item(System.DayOfWeek)">
      <summary>
              Gets or sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> object 
              using the specified day of the week.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> object that indicates the
              holiday rules for the day of the week.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Sunday">
      <summary>
              Gets or sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> for Sunday.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> object that indicates the
              holiday rules for the day of the week.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Monday">
      <summary>
              Gets or sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> for Monday.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> object that indicates the
              holiday rules for the day of the week.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Tuesday">
      <summary>
              Gets or sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> for Tuesday.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> object that indicates the
              holiday rules for the day of the week.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Wednesday">
      <summary>
              Gets or sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> for Wednesday.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> object that indicates the
              holiday rules for the day of the week.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Thursday">
      <summary>
              Gets or sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> for Thursday.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> object that indicates the
              holiday rules for the day of the week.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Friday">
      <summary>
              Gets or sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> for Friday.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> object that indicates the
              holiday rules for the day of the week.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Saturday">
      <summary>
              Gets or sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> for Saturday.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> object that indicates the
              holiday rules for the day of the week.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.AllDaysOfWeek">
      <summary>
              Returns all of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> settings in
              a single array.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> array that contains the
              holiday policy of each day of the week.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Clone">
      <summary>
              Creates a shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" /> object.
            </summary>
      <returns>
              A shallow copy of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle">
      <summary>
               Declares the style of the weekdays.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.#ctor">
      <summary>
               Creates an instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" /> class.
            </summary>
      <param name="sunday">The Sunday obejct.</param>
      <param name="monday">The Monday object.</param>
      <param name="tuesday">The Tuesday obejct.</param>
      <param name="wednesday">The Wednesday obejct.</param>
      <param name="thursday">The Thursday object.</param>
      <param name="friday">The Friday object.</param>
      <param name="saturday">The Saturday object.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Dispose">
      <summary>
              Releases the resources used by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Called when any property of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" /> changed.
            </summary>
      <param name="e">
              An <see cref="T:System.EventArgs" /> contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.OnDayOfWeekStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Called when any property of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> object is changed.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.OnDayOfWeekStylePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Handles the <b>PropertyChanged</b> event from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> object.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.OnDayOfWeekStyleSubStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Called when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" /> property is changed.
            </summary>
      <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.DayOfWeekStylePropertySubStylePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Handles the <b>SubStylePropertyChanged</b> event of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> object.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Sunday">
      <summary>
              Gets or sets the style for Sunday.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> value that indicates the style for Sunday.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Monday">
      <summary>
              Gets or sets the style for Monday.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> value that indicates the style for Monday.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Tuesday">
      <summary>
              Gets or sets the style for Tuesday.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> value that indicates the style for Tuesday.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Wednesday">
      <summary>
              Gets or sets the style for Wednesday.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> value that indicates the style for Wednesday.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Thursday">
      <summary>
              Gets or sets the style for Thursday.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> value that indicates the style for Thursday.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Friday">
      <summary>
              Gets or sets the style for Friday.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> value that indicates the style for Friday.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Saturday">
      <summary>
              Gets or sets the style for Saturday.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> value that indicates the style for Saturday.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Item(GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek)">
      <summary>
              Gets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> according to the specified index.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek" /> value that indicates the specified index.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Clone">
      <summary>
              Creates an exact copy of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" /> object.
            </summary>
      <returns>Returns a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" /> object that this method creates</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle">
      <summary>
              Represents a <b>DayOfWeekStyle</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.GetHashCode">
      <summary>
              Serves as a hash function for a particular type, suitable for use in 
              hashing algorithms and data structures like a hash table.
            </summary>
      <returns>
              A hash code for the current object.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.#ctor(System.String,GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle,GrapeCity.Win.Spread.InputMan.CellType.SubStyle,GrapeCity.Win.Spread.InputMan.CellType.WeekFlags)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> class with the specified initialization properties.
            </summary>
      <param name="dayName">The <see cref="T:System.String" /> value that indicates the name of the day.</param>
      <param name="reflectToTitle">The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.ReflectToTitle" /> value that indicates a policy for how to apply the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" /> to the title.</param>
      <param name="subStyle">The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" /> value that indicates the display style.</param>
      <param name="weekFlags">The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.WeekFlags" /> value that indicates which week in a month should be applied to the style.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.Dispose">
      <summary>
              Releases the resources used by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle">
      <summary>
              Gets or sets the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" /> value.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" /> value that indicates the display style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.DayName">
      <summary>
              Gets or sets the name of the day.
            </summary>
      <value>
              The <see cref="T:System.String" /> value that indicates the name of the day.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.ReflectToTitle">
      <summary>
              Gets or sets the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.ReflectToTitle" /> value.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle" /> value that indicates a policy about how to apply the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" /> to the title. 
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.WeekFlags">
      <summary>
              Gets or sets the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.WeekFlags" /> value.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.WeekFlags" /> value that indicates which week in a month should be applied to the style
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Occurs when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> object is changed.
            </summary>
      <param name="e">
              A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.OnSubStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Occurs when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" /> object is changed.
            </summary>
      <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.OnSubStylePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Receives the PropertyChanged event from SubStyle.
            </summary>
      <param name="sender">
              An <b>object</b> that indicates the sender.
            </param>
      <param name="e">
              A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> value that contains the event data.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.Clone">
      <summary>
              Creates an new instance copied from this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> object.
            </summary>
      <returns>
              Returns a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> object.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.Equals(System.Object)">
      <summary>
              Determines whether two <see cref="T:System.Object" /> instances are equal.
            </summary>
      <param name="obj">
              The <see cref="T:System.Object" /> to compare with the current <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />.
            </param>
      <returns>
        <see langword="true" /> if value is an instance of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> and equals the value of 
              this instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle">
      <summary>
              Specifies how the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> of the weekday is applied to the weekday title.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle.None">
      <summary>
              Specifies no reflection to the title.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle.BackColor">
      <summary>
              Reflects the backcolor to the weekday title.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle.ForeColor">
      <summary>
              Reflects the text color to the weekday title.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle.Both">
      <summary>
              Reflects both the text color and backcolor to the weekday title.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat">
      <summary>
              Represents the format for the year and month in the YearMonth calendar.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.#ctor">
      <summary>
              Initializes an instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat" /> class with a default value.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.#ctor(System.String,System.String)">
      <summary>
              Initializes an instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat" /> class.
            </summary>
      <param name="yearFormat">
              A <see cref="T:System.String" /> value that indicates the year format.
            </param>
      <param name="monthFormat">
              A <see cref="T:System.String" /> value that indicates the month format.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.YearFormat">
      <summary>
              Gets or sets the format for the year.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the year format.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.MonthFormat">
      <summary>
              Gets or sets the format for the month.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the month format.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.Clone">
      <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
      <returns>
              A new object that is a copy of this instance.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Called when any property is changed.
            </summary>
      <param name="e">
              A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> value that contains the event data.
            </param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.PropertyChanged">
      <summary>
              Occurs when a property value changes.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo">
      <summary>
              Represents alternate text settings.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo.ForeColor">
      <summary>
              Gets or sets the color of the alternate text.
            </summary>
      <value>
              A <b>Color</b> value that indicates the forecolor of the alternate text.
            </value>
      <remarks>
              This property retrieves the color of the <see cref="P:AlternateText.Text" /> when the alternate text is shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo.Text">
      <summary>
              Gets or sets the alternate text.
            </summary>
      <value>
              A <b>string</b> value that indicates the text.
            </value>
      <remarks>
              This property retrieves the text for display when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> is shown.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo">
      <summary>
              Defines the automatic complete settings.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo.CandidateListItemFont">
      <summary>
              Gets or sets the font for the items in the automatic complete candidate list.
            </summary>
      <value>
              The candidate list item font.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo.HighlightMatchedText">
      <summary>
              Gets or sets a value that indicates whether to highlight matched text in the candidate list.
            </summary>
      <value>
              A <see cref="T:System.Boolean" /> value, <see langword="true" /> to highlight matched text in the candidate list;
              otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo.HighlightStyle">
      <summary>
              Gets or sets the style for highlighted matched text.
            </summary>
      <value>
              The highlight style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo.MatchingMode">
      <summary>
              Gets or sets the matching mode for the automatic complete feature.
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode" /> values that indicates how to match
              the string in the automatic complete feature.
            </value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              value is not defined.
            </exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyleInfo">
      <summary>
              Defines the highlight style for matched strings when using automatic complete.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyleInfo.BackColor">
      <summary>
              Gets or sets the background color of the highlighted string.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color of the highlighted string.
              The default value is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>, which means do not paint the background
              of the highlighted string.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyleInfo.Font">
      <summary>
              Gets or sets the font of the highlighted string.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the font of the highlighted string.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyleInfo.ForeColor">
      <summary>
              Gets or sets the foreground color of the highlighted string.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground color of the highlighted string.
              The default value is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>, which means use the same forecolor
              with the candidate list items to render the highlighted string.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo">
      <summary>
            Indicates related setting of filter.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.Enabled">
      <summary>
            Gets or sets a value indicating whether auto filter function is enabled or not.
            </summary>
      <value>
        <see langword="true" /> if auto filter function is enabled; otherwise, <see langword="false" />.
            	The default value is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.MinimumPrefixLength">
      <summary>
            Gets or sets the minimum length of the filter prefix.
            </summary>
      <value>
            The length of the min prefix.
            The default value is 1.
            </value>
      <remarks>
            Only when the filter prefix length is greater than or equals the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MinimumPrefixLength" />, the filter can be preformed automatically.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> is less than or equals to 0.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.MaxFilteredItems">
      <summary>
            Gets or sets the maximum items matched with filter condition will be shown in dropdown window.
            </summary>
      <value>
            The maximum shown filtered items.
            The default value is 0.
            </value>
      <remarks>
            Value equals to 0 means all matched items will be shown.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value" /> is less than zero.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.MatchingMode">
      <summary>
            Gets or sets the filter prefix how to match with <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MatchingSource" />.
            </summary>
      <value>
            The matching mode for filter prefix. The default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.MatchStartWith" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.MatchingSource">
      <summary>
            Gets or sets what the filter prefix match with.
            </summary>
      <value>
            The source used for filter prefix to match with. 
            The default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FilterMatchingSource.AllSubItems" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.Interval">
      <summary>
            Gets or sets the interval at which to excute filter.
            </summary>
      <value>
            The time, in milliseconds, to excute filter. The default is 500 milliseconds.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The interval is less than or equals to zero.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo">
      <summary>
              Represents the collection for Side buttons.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.#ctor">
      <summary>
              The constructor initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.#ctor(System.String[],System.String[])">
      <summary>
              The constructor initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" /> class.
            </summary>
      <param name="keys">
              A <see cref="T:System.String" /> array value indicates the key of the element.
            </param>
      <param name="values">
              A <see cref="T:System.String" /> array value indicates the value of the element.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.CopyTo(System.String[])">
      <summary>
              Copies the items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" /> to a compatible one-dimensional array of type <see cref="T:System.String" />, starting from the first index of the target array.
            </summary>
      <param name="array">A <see cref="T:System.String" /> array serving as the destination for the copy action. </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.CopyTo(System.String[],System.Int32)">
      <summary>
              Copies the items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" /> to a compatible one-dimensional array of type <see cref="T:System.String" />, starting at the specified zero-based index of the target array.
            </summary>
      <param name="array">A <see cref="T:System.String" /> array serving as the destination for the copy action. </param>
      <param name="arrayIndex">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.Item(System.String)">
      <summary>
              Gets the value according to the special key.
            </summary>
      <value>
              The <see cref="T:System.String" /> value indicatest the key of the specified element.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.Item(System.Int32)">
      <summary>
              Gets the value according to the special index.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicatest the index of the specified element.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.Add(System.String,System.String)">
      <summary>
              Add an item to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />.
            </summary>
      <param name="key">The key value of the button.</param>
      <param name="value">The button text string.</param>
      <returns>The item index.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.AddRange(System.String[],System.String[])">
      <summary>
              Add items to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />.
            </summary>
      <param name="keys">The key values of buttons.</param>
      <param name="values">The button text strings.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.Insert(System.Int32,System.String,System.String)">
      <summary>
              Inserts an item to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />.
            </summary>
      <param name="index">The index value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />.</param>
      <param name="key">The key value of the button.</param>
      <param name="value">The button text string.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.IsKeyValid(System.String)">
      <summary>
              Checks whether the key is valid.
            </summary>
      <param name="key">The key object of the button.</param>
      <returns>
        <see langword="true" />, if it is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo">
      <summary>
              Represents the style of the button that used in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.#ctor(System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.TextEffect)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />.
            </summary>
      <param name="foreColor">
              The initialization of the forecolor.
            </param>
      <param name="backColor">
              The initialization of the backcolor.
            </param>
      <param name="textEffect">
              The initialization of the text effect.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.Normal">
      <summary>
              Gets the default <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> used for normal buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> value indicates the normal style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.Memory">
      <summary>
              Gets the default <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> used for memory buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> value indicates the memory style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.Math">
      <summary>
              Gets the default <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> used for math buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> value indicates the math style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.Output">
      <summary>
              Gets the default <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> used for output window.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> value indicates the output style.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.BackColor">
      <summary>
              Gets or sets the background color.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Color" /> used to draw the background.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.ForeColor">
      <summary>
              Gets or sets the foreground color.
            </summary>
      <value>
             The <see cref="T:System.Drawing.Color" /> used to draw the text.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.TextEffect">
      <summary>
              Gets or sets the text drawing effect.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.TextEffect" /> values.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.Equals(System.Object)">
      <summary>
              Tests whether the given object is equal to this <b>CalculatorButtonStyleInfo</b>.
            </summary>
      <param name="obj">
              The object to compare to this object. 
            </param>
      <returns>
        <see langword="true" /> if obj is an instance of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> and is equal to this object; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.GetHashCode">
      <summary>
              Returns the generated hash code for this <b>CalculatorButtonStyleInfo</b>.
            </summary>
      <returns>
              Returns the hash code for this instance.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape">
      <summary>
              Defines a enumeration indicates the shape of separator.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape.Circle">
      <summary>
              Indicates the separator is a circle.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape.Rectangle">
      <summary>
              Indicates the separator is a rectangle.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo">
      <summary>
              Represents the border of the char box.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Line)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> class.
            </summary>
      <param name="all">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates all border lines.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.#ctor(System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> class.
            </summary>
      <param name="lineColor">
              The <see cref="T:System.Drawing.Color" /> value indicates the color of the line.
            </param>
      <param name="lineStyle">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> value indicates the line style.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> class.
            </summary>
      <param name="left">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the left border line.
            </param>
      <param name="top">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the top border line.
            </param>
      <param name="right">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the right border line.
            </param>
      <param name="bottom">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the bottom border line.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.Left">
      <summary>
              Gets or sets the left border line.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the left border line.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.Top">
      <summary>
              Gets or sets the top border line.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the top border line.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.Bottom">
      <summary>
              Gets or sets the bottom border line.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the bottom border line.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.Right">
      <summary>
              Gets or sets the right border line.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> indicates the right border line.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.SetAllLines(System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
             Sets the <see cref="T:System.Drawing.Color" /> and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> settings to all lines.
            </summary>
      <param name="lineColor">
              The <see cref="T:System.Drawing.Color" /> value indicates the color of the line.
            </param>
      <param name="lineStyle">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> value indicates the style of the line.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.SetAllLines(System.Drawing.Color)">
      <summary>
              Sets the <see cref="T:System.Drawing.Color" /> settings to all lines.
            </summary>
      <param name="lineColor">
              The <see cref="T:System.Drawing.Color" /> value indicates the color of the line.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.SetAllLines(GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
              Sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> settings to all lines.
            </summary>
      <param name="lineStyle">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> value indicates the style of the line.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.Equals(System.Object)">
      <summary>
              Determines whether two <see cref="T:System.Object" /> instances equals or not.
            </summary>
      <param name="obj">
              The <see cref="T:System.Object" /> to compare with the current <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />.
            </param>
      <returns>
              The method returns <see langword="true" /> if <b>obj</b> is a <b>CharBoxBorderInfo</b>
              object and it's <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line">Left</see>, and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line">Right</see>, 
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line">Top</see>,<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line">Border</see> properties are 
              equal to the corresponding properties of this <b>CharBoxBorderInfo</b> 
              structure; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.GetHashCode">
      <summary>
              Serves as a hash function for a particular type, suitable for use in 
              hashing algorithms and data structures like a hash table.
            </summary>
      <returns>
              A hash code for the current <see cref="T:System.Object" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ShouldSerializeTop">
      <summary>
              Indicates whether the Top property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ResetTop">
      <summary>
              Reset top border of the char box
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ShouldSerializeLeft">
      <summary>
              Indicates whether the Left property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ResetLeft">
      <summary>
              Reset left border of the char box
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ShouldSerializeAll">
      <summary>
              Indicates whether the All property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ResetAll">
      <summary>
              Reset all borders of the char box
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ShouldSerializeRight">
      <summary>
              Indicates whether the Right property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ResetRight">
      <summary>
              Reset right border of the char box
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ShouldSerializeBottom">
      <summary>
              Indicates whether the Bottom property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ResetBottom">
      <summary>
              Reset bottom border of the char box
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo">
      <summary>
              Represents the CharBoxInfo settings.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> class.
            </summary>
      <param name="autoSize">
              A <see langword="bool" /> value if set to <see langword="true" /> indicates the 
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(System.Boolean,System.Drawing.Size)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> class.
            </summary>
      <param name="autoSize">
              A <see langword="bool" /> value if set to <see langword="true" /> indicates the 
            </param>
      <param name="size">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Size" /> value indicates the actually size if autosize is false.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> class.
            </summary>
      <param name="style">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> enumeration indicates the style of the char box.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> class.
            </summary>
      <param name="border">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> object indicates the border setting of the char box.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> class.
            </summary>
      <param name="style">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> enumeration indicates the style of the char box.
            </param>
      <param name="border">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> object indicates the border setting of the char box.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> class.
            </summary>
      <param name="style">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> enumeration indicates the style of the char box.
            </param>
      <param name="border">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> object indicates the border setting of the char box.
            </param>
      <param name="backColor">
              A <see cref="T:System.Drawing.Color" /> value indicates Color of the background.
            </param>
      <param name="foreColor">
              A <see cref="T:System.Drawing.Color" /> value indicates Color of the foreground.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(System.Boolean,System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,System.Windows.Forms.Padding,System.Windows.Forms.Padding,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo,System.Drawing.Font,System.Drawing.ContentAlignment)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> class.
            </summary>
      <param name="autoSize">
              A <see langword="bool" /> value if set to <see langword="true" /> indicates the char box is auto size.
            </param>
      <param name="size">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Size" /> value indicates the actually size if autosize is false.
            <param name="style">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> enumeration indicates the style of the char box.
            </param><param name="backColor">
              A <see cref="T:System.Drawing.Color" /> value indicates Color of the background.
            </param><param name="foreColor">
              A <see cref="T:System.Drawing.Color" /> value indicates Color of the foreground.
            </param></param>
      <param name="margin">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Padding" /> value indicates the margin of the char box.
            </param>
      <param name="padding">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Padding" /> value indicates the padding of the char box.
            </param>
      <param name="border">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> object indicates the border setting of the char box.
            </param>
      <param name="font">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Font" /> object indicates font of the char box to render the char.
            </param>
      <param name="contentAlignment">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ContentAlignment" /> enumeration indicates the alignment of the content of the char box.
            </param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.PropertyChanged">
      <summary>
            Occurs when a property value changes.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.AutoSize">
      <summary>
              Gets or sets a value indicating whether the height of the control automatically 
              adjusts when the font assigned to the control is changed.
            </summary>
      <value>
              A <see langword="bool" /> value indicating whether the height of the control automatically 
              adjusts when the font assigned to the control is changed.
              <br /> The default is <see langword="true" />.
            </value>
      <remarks>
              When this property is set to true, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> adjusts its width to display its entire contents. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.BackColor">
      <summary>
              Gets or sets the back color of the char box.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> indicates the back color.
              <br /> The default is <see cref="P:System.Drawing.Color.Transparent" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of your forms.
              <para />
              To change the color of the text within the control, use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ForeColor" /> property. When setting the <b>BackColor</b> property of your control, ensure that the color you choose does not cause the text of the control to disappear. 
              For example, if the <b>BackColor</b> and <b>ForeColor</b> properties are both set to <b>Color.Black</b>, the text within your control will not be visible.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Style">
      <summary>
              Gets or sets the style of the char box.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> indicates the char box style.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.Normal" />.
            </value>
      <remarks>
              This property determines how to display the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Border" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Margin">
      <summary>
              Gets or sets the margins around the border of the char box.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Padding" /> indicates the margins.
              <br /> The default is "0,0,0,0".
            </value>
      <remarks>
              This property determines the distance between one char box and it's neighbors.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Padding">
      <summary>
              Gets or sets the blank size between the border and the content within the char box.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Padding" /> indicates the paddings.
              <br /> The default is "1,1,1,1".
            </value>
      <remarks>
              This property determines the distance between the input area of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> and the border of it.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Border">
      <summary>
              Gets or sets border of the char box.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> indicates the border of the char box.
            </value>
      <remarks>
              This property retrieves the border style of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ContentAlignment">
      <summary>
              Gets or sets the content alignment of the char box.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ContentAlignment" /> value indicates the content alignment of the char box.
              <br /> The default is <see cref="F:System.Drawing.ContentAlignment.MiddleCenter" />.
            </value>
      <remarks>
              This property determines the text alignment of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ForeColor">
      <summary>
              Gets or sets the fore color of the char box.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> indicates the fore color.
            </value>
      <remarks>
              You can use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.BackColor" /> property to change the background color of the control to blend into the color scheme of your forms.
              <para />
              To change the color of the text within the control, use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ForeColor" /> property. When setting the <b>BackColor</b> property of your control, ensure that the color you choose does not cause the text of the control to disappear. 
              For example, if the <b>BackColor</b> and <b>ForeColor</b> properties are both set to <b>Color.Black</b>, the text within your control will not be visible.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Size">
      <summary>
              Gets or sets the size of the char box.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Size" /> indicates the size of the char box.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Font">
      <summary>
              Gets or sets font of the char box.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Font" /> indicates the text font of the char box.
            </value>
      <remarks>
        <para>
              The <b>Font</b> property is an ambient property. An ambient property is a control property that, 
              if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
              <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. 
            </para>
        <para></para>
        <para>
              Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>. 
              However, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Clone">
      <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
      <returns>
              A new object that is a copy of this instance.
            </returns>
      <remarks>
              This method creates another <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> instance with the same settings as this one.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo">
      <summary>
              Defines a char box that accepts the user's input.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo.#ctor(System.Boolean,System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,System.Windows.Forms.Padding,System.Windows.Forms.Padding,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo,System.Drawing.Font,System.Drawing.ContentAlignment)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo" />.
            </summary>
      <param name="autoSize">
              A <see langword="bool" /> value indicating whether the height of the control automatically 
              adjusts when the font assigned to the control is changed.
            </param>
      <param name="backColor">
              A <see cref="T:System.Drawing.Color" /> indicates the background color.
            </param>
      <param name="border">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> indicates the border of the inputable box.
            </param>
      <param name="contentAlignment">
              A <see cref="T:System.Drawing.ContentAlignment" /> value indicates the content alignment of the inputable box.
            </param>
      <param name="font">
              A <see cref="T:System.Drawing.Font" /> indicates the text font of the inputable box.
            </param>
      <param name="foreColor">
              A <see cref="T:System.Drawing.Color" /> indicates the foreground color.
            </param>
      <param name="margin">
              A <see cref="T:System.Windows.Forms.Padding" /> indicates the margins.
            </param>
      <param name="padding">
              A <see cref="T:System.Windows.Forms.Padding" /> indicates the paddings.
            </param>
      <param name="size">
              A <see cref="T:System.Drawing.Size" /> indicates the size of the inputable box.
            </param>
      <param name="style">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> indicates the inputable box style.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo">
      <summary>
              Defines a kind of char box that is read-only box and just accepts the user's selection. 
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo" />.
            </summary>
      <param name="text">
              A <see cref="T:System.String" /> indicates the text of the literal box.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.#ctor(System.Boolean,System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,System.Windows.Forms.Padding,System.Windows.Forms.Padding,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo,System.Drawing.Font,System.Drawing.ContentAlignment,System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo" />.
            </summary>
      <param name="autoSize">
              A <see langword="bool" /> value indicating whether the height of the control automatically 
              adjusts when the font assigned to the control is changed.
            </param>
      <param name="backColor">
              A <see cref="T:System.Drawing.Color" /> indicates the background color.
            </param>
      <param name="border">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> indicates the border of the literal box.
            </param>
      <param name="contentAlignment">
              A <see cref="T:System.Drawing.ContentAlignment" /> value indicates the content alignment of the literal box.
            </param>
      <param name="font">
              A <see cref="T:System.Drawing.Font" /> indicates the text font of the literal box.
            </param>
      <param name="foreColor">
              A <see cref="T:System.Drawing.Color" /> indicates the foreground color.
            </param>
      <param name="margin">
              A <see cref="T:System.Windows.Forms.Padding" /> indicates the margins.
            </param>
      <param name="padding">
              A <see cref="T:System.Windows.Forms.Padding" /> indicates the paddings.
            </param>
      <param name="size">
              A <see cref="T:System.Drawing.Size" /> indicates the size of the literal box.
            </param>
      <param name="style">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> indicates the literal box style.
            </param>
      <param name="text">
              A <see cref="T:System.String" /> value indicates the text of the literal box.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.Text">
      <summary>
              Gets or sets the text of the literal box.
            </summary>
      <value>
              A <see cref="T:System.String" /> indicates the text of the literal box.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.Clone">
      <summary>
              Gets an object that is clone this object.
            </summary>
      <returns>
              An <see cref="T:System.Object" /> is the copy of this object.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo">
      <summary>
              Defines a kind of char box that display some patterns as a special separator 
              and does not accepts the input and selection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo" />.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo" />.
            </summary>
      <param name="separatorShape">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape" /> indicates the shape of the separator..
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape,System.Drawing.Size)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo" />.
            </summary>
      <param name="separatorShape">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape" /> indicates the shape of the separator..
            </param>
      <param name="separatorSize">
              A <see cref="T:System.Drawing.Size" /> indicates the size of the separator.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.#ctor(System.Boolean,System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,System.Windows.Forms.Padding,System.Windows.Forms.Padding,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo,System.Drawing.Font,System.Drawing.ContentAlignment,GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape,System.Drawing.Size)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo" />.
            </summary>
      <param name="autoSize">
              A <see langword="bool" /> value indicating whether the height of the control automatically 
              adjusts when the font assigned to the control is changed.
            </param>
      <param name="backColor">
              A <see cref="T:System.Drawing.Color" /> indicates the background color.
            </param>
      <param name="border">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" /> indicates the border of the inputable box.
            </param>
      <param name="contentAlignment">
              A <see cref="T:System.Drawing.ContentAlignment" /> value indicates the content alignment of the inputable box.
            </param>
      <param name="font">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Font" /> indicates the text font of the inputable box.
            </param>
      <param name="foreColor">
              A <see cref="T:System.Drawing.Color" /> indicates the foreground color.
            </param>
      <param name="margin">
              A <see cref="T:System.Windows.Forms.Padding" /> indicates the margins.
            </param>
      <param name="padding">
              A <see cref="T:System.Windows.Forms.Padding" /> indicates the paddings.
            </param>
      <param name="size">
              A <see cref="T:System.Drawing.Size" /> indicates the size of the inputable box.
            </param>
      <param name="style">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" /> indicates the inputable box style.
            </param>
      <param name="separatorShape">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape" /> indicating the shape of the separator box.
            </param>
      <param name="separatorSize">
              A <see cref="T:System.Drawing.Size" /> indicates the size of the separator box.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.SeparatorSize">
      <summary>
              Gets or sets the size of separator box.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Size" /> indicates the size of the separator box.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Shape">
      <summary>
              Gets or sets the shape of the separator box.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape" /> indicating the shape of the separator box.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Font">
      <summary>
              Gets or sets font of separator box.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Font" /> indicates the text font.
            </value>
      <remarks>
              Default is the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Font" /> of the container control.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Clone">
      <summary>
              Gets an object that is clone this object.
            </summary>
      <returns>
              An <see cref="T:System.Object" /> is the copy of this object.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection">
      <summary>
              Defines a collection that indicates a set of char boxes.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.OnFieldPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.FieldPropertyChanged" /> event.
            </summary>
      <param name="e"></param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.PostCode1">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> for postcode style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.PostCode2">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> for postcode style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.PostCode3">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> for postcode style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Number1">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> for number style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Number2">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> for number style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Number3">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> for number style.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Number4">
      <summary>
              Gets a template set of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> for number style.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.SetBorderColor(System.Drawing.Color)">
      <summary>
              Set the <see cref="T:System.Drawing.Color" /> of all <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo">Border</seealso>
              of each <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> in this collection
            </summary>
      <param name="color">
              A <see cref="T:System.Drawing.Color" /> indicate the color of line.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.SetBorderStyle(GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
              Set the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> of all <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />
              of each <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> in this collection
            </summary>
      <param name="lineStyle">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" /> indicate the style of line.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo)">
      <summary>
              Adds a char box to the collection.
            </summary>
      <param name="CharBoxInfo">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> indicates the char box.
            </param>
      <returns>
              A <see cref="T:System.Int32" /> indicates the index of the char box.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo,System.Int32)">
      <summary>
              Adds a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> to the collection.
            </summary>
      <param name="templateCharBoxInfo">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> indicate the template <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> which would be added in current collection
            </param>
      <param name="count">
              An <see cref="T:System.Int32" /> indicate the total number of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> which be added
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo[])">
      <summary>
              Adds an array of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> to the current collection.
            </summary>
      <param name="CharBoxInfoes">
              An array of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> to load into this collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo)">
      <summary>
              Inserts a char box into the collection at the given index.
            </summary>
      <param name="index">
              An <see cref="T:System.Int32" /> indicates the index.
            </param>
      <param name="CharBoxInfo">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> indicates the inserted char box.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo)">
      <summary>
              Removes a char box from the collection.
            </summary>
      <param name="CharBoxInfo">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> indicates the char box.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo)">
      <summary>
              Gets the index of the special char box.
            </summary>
      <param name="CharBoxInfo">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /> indicates the char box.
            </param>
      <returns>
              A <see cref="T:System.Int32" /> indicates the index of the char box.
            </returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Item(System.Int32)">
      <summary>
              Get a char box according by the index
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the special index.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo">
      <summary>
              Defines a <b>ComboBoxAlternateTextInfo</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.DisplayNull">
      <summary>
              Gets the <b>DisplayNull</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayNull</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.Null">
      <summary>
              Gets the <b>Null</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Null</b> instance.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateTextInfo">
      <summary>
              Defines the <b>DateAlternateTextInfo</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateTextInfo.DisplayEmptyEra">
      <summary>
              Gets the <b>DisplayEmptyEra</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayEmptyEra</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateTextInfo.DisplayNull">
      <summary>
              Gets the <b>DisplayNull</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayNull</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateTextInfo.EmptyEra">
      <summary>
              Gets the <b>EmptyEra</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>EmptyEra</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateTextInfo.Null">
      <summary>
              Gets the <b>Null</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Null</b> instance.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDisplayFieldCollectionInfo">
      <summary>
              Represents the display field collection for <b>GcDateTimeCellType</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDisplayFieldCollectionInfo.AddRange(System.String)">
      <summary>
              Adds the contents to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <b>string</b> value that indicates the specified format string.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateDisplayFieldInfosBuilder">
      <summary>
              Represents a builder that creates the formats specified by the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateDisplayFieldInfosBuilder.BuildFields(System.String)">
      <summary>
              Creates the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" /> object using the specified format.
            </summary>
      <param name="format">
              The format defined by the date control.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" /> array that indicates the build date fields.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo">
      <summary>
              Represents a collection for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo" /> object, which is read-only.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo.AddRange(System.String)">
      <summary>
              Adds the contents to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <b>string</b> value that indicates the specified format string.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo.OnAddRange(System.Object[])">
      <summary>
              Performs additional custom processes before inserting a new element array into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="value">
              The new value of the element array.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo.OnInsert(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert the value.
            </param>
      <param name="value">
              The new value of the element at the index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
              The value to replace with newValue.
            </param>
      <param name="newValue">
              The new value of the element at the specified index.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateFieldInfosBuilder">
      <summary>
              Represents a builder that creates the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo" /> object using the specified format.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateFieldInfosBuilder.BuildFields(System.String)">
      <summary>
              Creates a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo" /> object using the specified format.
            </summary>
      <param name="format">
              The format defined by the date control.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo" /> array that indicates the build date fields.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo">
      <summary>
              Represents settings for the <b>DropDown</b> function.
            </summary>
      <remarks>
              This class provides information about the drop-down function.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.AllowDrop">
      <summary>
              Gets or sets a value that indicates whether to allow drop.
            </summary>
      <value>
        <see langword="true" /> to allow drop; otherwise, <see langword="false" />.
            <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.AllowResize">
      <summary>
              Gets or sets whether the user can change the size of the drop-down window using a size grip.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the drop-down window can be resized by a size grip,
              otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.AutoDropDown">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether the drop-down window is automatically shown when the control (which is droppable) gets focus.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the drop-down window is automatically shown when the control gets focus,
              otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The drop-down window is automatically shown when the <b>AutoDropDown</b> is <see langword="true" /> and the <see cref="P:DropDown.AllowDrop" /> is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.ClosingAnimation">
      <summary>
              Gets or sets how to do animation when closing the drop-down window.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation" /> value that indicates the animation when closing the drop-down window.
            <br /> The default is <see cref="F:DropDownAnimation.None" />.
            </value>
      <remarks>
              This property retrieves the displayed animation style when the drop-down window is closing.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.Direction">
      <summary>
              Gets or sets the drop-down direction.
            </summary>
      <value>
              The drop-down direction.
            <br /> The default is <see cref="F:DropDownDirection.Default" />.
            </value>
      <remarks>
              This property retrieves the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection" /> when the drop-down window is opening.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.OpeningAnimation">
      <summary>
              Gets or sets how to do animation when opening the drop-down window.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation" /> value that indicates the animation when closing the drop-down window.
            <br /> The default is <see cref="F:DropDownAnimation.None" />.
            </value>
      <remarks>
              This property retrieves the animation style displayed when the drop-down window is opening.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.ShowShadow">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether to show a shadow on the drop-down dialog.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to show a shadow on the drop-down dialog; otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.Size">
      <summary>
              Gets or sets the size of the drop-down window.
            </summary>
      <value>
              A <see cref="P:DropDown.Size" /> value that indicates the size of the drop-down window.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.AutoHideTouchKeyboard">
      <summary>
              Gets or sets the value that indicates how to manipulate the touch keyboard when the drop-down window is shown.
            </summary>
      <value>
              An <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.AutoHideTouchKeyboard" /> value that indicates the action option for hiding the touch keyboard when the user opens the drop-down window.
              <br />
              The default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard.AutoHide">AutoHide</see>. The touch keyboard is hidden after the drop-down window is shown.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownInfo">
      <summary>
              Represents the drop-down settings for the drop-down function for <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownInfo.DropDownType">
      <summary>
              Gets or sets the drop-down type.
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateDropDownType" /> values, indicates the type of the drop-down.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo">
      <summary>
              Represents the drop-down settings for the drop-down function for <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.Width">
      <summary>
            Gets or sets the drop-down width.
            </summary>
      <value>The width of the drop-down.</value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than zero.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.Height">
      <summary>
            Gets or sets the drop-down height.
            </summary>
      <value>The height of the drop-down.</value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than zero.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.AutoWidth">
      <summary>
              Gets or sets whether to calculate the width for the drop-down window when opening
              the drop-down list.
            </summary>
      <value>
        <see langword="true" /> to calculate the width for the drop-down window, based 
              on the columns and control width, when opening the drop-down; 
              otherwise, <see langword="false" />.
              The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.AllowResize">
      <summary>
              Gets or sets whether the user can change the size of the drop-down window with a size grip.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the drop-down window can be resized by a size grip; 
              otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButtonInfo">
      <summary>
              Represents the settings of the <b>DropDownButton</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownButtonInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownButtonInfo.IsDefaultBehavior">
      <summary>
              Gets or sets a value that indicates whether this instance is the default behavior.
            </summary>
      <value>
        <see langword="true" /> if this button controls the default drop-down behavior; otherwise, <see langword="false" />.
            <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownButtonInfo.UseVisualStyleBackColor">
      <summary>
              Gets or sets whether to use the visual style backcolor when flat style is system and system theme is active.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to use the visual style backcolor when 
              flat style is system and system theme is active; otherwise, false.
            </value>
      <remarks>
              This property is invalid for <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo">
      <summary>
              Represents information about the drop-down calendar.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BackColor">
      <summary>
              Gets or sets the background color of the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Control" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of your forms.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BackgroundImage">
      <summary>
              Gets or sets the background image displayed in the drop-down window.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Image" /> that represents the image to display in the
              background of the drop-down window.
              <br /> The default is <see langword="null" />.
            </value>
      <remarks>
              Use the <b>BackgroundImage</b> property to place a graphic image onto a control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BackgroundImageLayout">
      <summary>
             Gets or sets the layout of the background image.
            </summary>
      <value>
              The <see cref="T:System.Windows.Forms.ImageLayout" /> value that indicates the layout of the background image.
              <br />
              The default is <b>ImageLayout.Tile</b></value>
      <remarks>
              Use the <b>BackgroundImageLayout</b> property to specify the position and behavior of an image you have placed onto a control. <b>BackgroundImageLayout</b> takes effect only if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BackgroundImage" /> property is set.
             <pare />
              You can increase performance for large images if you set <b>BackgroundImageLayout</b> to something other than <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BorderStyle">
      <summary>
              Gets or sets the border style of the drop-down window.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BorderStyle" /> enumeration that indicates the border style.
              <br /> The default is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </value>
      <remarks>
              You can use the <b>BorderStyle</b> property to create borderless and flat style controls, in addition to the default three-dimensional control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.ButtonKeys">
      <summary>
              Gets a fixed size array list that includes the name of the buttons in <b>DropDownCalculator</b>.
            </summary>
      <remarks>
              This property retrieves all button keys in <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.ButtonText">
      <summary>
              Indicates the collection that contains all of the text that replaces the standard caption.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" /> that indicates the text collection of all the calculator buttons.
            </value>
      <remarks>
              You can modify all button text strings with this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.ContentAlignment">
      <summary>
             Gets or sets a <see cref="T:System.Drawing.ContentAlignment" /> value which indicates the alignment of the text.
            </summary>
      <value>
              A <see cref="T:System.Drawing.ContentAlignment" /> value.
              <br /> The default is <see cref="F:System.Drawing.ContentAlignment.MiddleRight" />.
            </value>
      <remarks>
              This property determines the text alignment of each button.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.FlatStyle">
      <summary>
             Gets or sets the appearance style of the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.FlatStyle" /> value that indicates the control appearance.
            </value>
      <remarks>
              The <b>FlatStyle</b> property determines the display style of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.Font">
      <summary>
             Gets or sets the font used in the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Font" /> object that indicates the Font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />.
            </value>
      <remarks>
              Because <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>; 
              however, you can base the new font on the existing font.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.OutputHeight">
      <summary>
              Gets or sets the height of the output region.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value that indicates the height of the output region.
            </value>
      <remarks>
              The zero value of this property means the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" /> automatically calculate the height of the output area. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.Padding">
      <summary>
             Gets or sets the padding of the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding" /> value.
              <br />
              The default is "5, 5, 5, 5"
            </value>
      <remarks>
              This property retrieves the distance between the calculator area and the border of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.ShowOutput">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether to show the output region.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the output region.
            </value>
      <remarks>
              This property determines whether to show the output area. 
              When the value is <see langword="false" />, the output is shown on the EditBox of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.SingleBorderColor">
      <summary>
              Gets or sets the color for a single line border in the drop-down window.
            </summary>
      <value>
              The default value is the <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The <see cref="T:System.Drawing.Color" /> only takes effect when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BorderStyle" /> is <b>FixedSingle</b>.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.EditButtons">
      <summary>
              Gets or sets the button style for the edit button.
            </summary>
      <value>A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> object that is used to draw edit buttons.</value>
      <remarks>
              This property retrieves the display style of all edit buttons.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.MathButtons">
      <summary>
              Gets or sets the button style for the math button.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> object that is used to draw math related buttons.
            </value>
      <remarks>
              This property retrieves the display style of all math buttons.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.MemoryButtons">
      <summary>
              Gets or sets the button style for the memory button.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> object that is used to draw memory related buttons.
            </value>
      <remarks>
              This property retrieves the display style of all memory buttons.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.MemoryStatus">
      <summary>
              Gets or sets the style for the memory status button.
            </summary>
      <value>
              A  <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> object that is used to draw the memory caption.
            </value>
      <remarks>
              This property retrieves the display style of the memory status button.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.NumericButtons">
      <summary>
              Gets or sets the style for the numeric button.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> object that is used to draw numeric buttons.
            </value>
      <remarks>
              This property retrieves the display style of all numeric buttons.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.Output">
      <summary>
              Gets or sets the style for the output button.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> object that is used to draw the output result.
            </value>
      <remarks>
              This property retrieves the display style of the output area.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.ResetButtons">
      <summary>
              Gets or sets the style for the reset button.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" /> object that is used to draw reset buttons.
            </value>
      <remarks>
              This property retrieves the display style of all reset buttons.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo">
      <summary>
              Represents the data package for the drop-down calendar.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ActiveHolidayStyles">
      <summary>
              Gets or sets active holiday styles of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.String" /> array that indicates the active holiday styles.
            </value>
      <remarks>
              This property determines which <see cref="P:DropDownCalendar.HolidayStyles" /> is actived. If more than one  <see cref="P:DropDownCalendar.HolidayStyles" /> is actived and overlapped, the last one takes effect.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.AllowSelection">
      <summary>
              Gets or sets the type of dates that can be selected.
            </summary>
      <value>
              A <see cref="P:DropDownCalendar.AllowSelection" /> value that indicates the type of dates that allow selection.
            <br /> The default is <see cref="F:AllowSelection.Anyday" />.
            </value>
      <remarks>
              This property determines which kind of dates can be selected.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.BackColor">
      <summary>
              Gets or sets the background color of the drop-down calendar.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Color" /> of the background.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of the forms.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.BackgroundImage">
      <summary>
              Gets or sets the background image displayed in the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Image" /> that represents the image to display in the
              background of the drop-down window..
            </value>
      <remarks>
              Use the <b>BackgroundImage</b> property to place a graphic image onto a control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.BackgroundImageLayout">
      <summary>
              Gets or sets the layout of the background image of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.ImageLayout" /> value that indicates the layout of the background image.
            <br />
              The default is <b>ImageLayout.Tile</b></value>
      <remarks>
              Use the <b>BackgroundImageLayout</b> property to specify the position and behavior of an image you have placed onto a control. <b>BackgroundImageLayout</b> takes effect only if the <see cref="P:DropDownCalendar.BackgroundImage" /> property is set.
            <pare />
              You can increase performance for large images if you set <b>BackgroundImageLayout</b> to something other than <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.BorderStyle">
      <summary>
              Gets or sets the border style of the drop-down calendar.
            </summary>
      <value>
              A <see cref="P:DropDownCalendar.BorderStyle" /> enumeration that indicates the border style.
            <br /> The default is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </value>
      <remarks>
              You can use the <b>BorderStyle</b> property to create borderless and flat style controls, in addition to the default three-dimensional control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.CalendarDimensions">
      <summary>
              Gets or sets the dimensions of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Size" /> with the number of columns and rows to use to display the calendar.
            <br /> The default is <see langword="true" />.
            </value>
      <remarks>
              Only one calendar year is displayed at a time, and the maximum number of months that can be displayed is 12.
              Valid combinations of columns and rows make a maximum product of 12;
              for values greater than 12, the value is not allowed.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.CalendarMargins">
      <summary>
              Gets or sets the margins of the drop-down calendar.
            </summary>
      <remarks>
              This property determines the distance between the calendar display area and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo" /> border.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.CalendarType">
      <summary>
              Gets or sets the type of the drop-down calendar.
            </summary>
      <value>
              A <see cref="P:DropDownCalendar.CalendarType" /> value that indicates the current calendar type.
            </value>
      <remarks>
              This property can change the display type of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.CalendarYear">
      <summary>
              Gets or sets whether to display the calendar in the form of a fiscal year.
            </summary>
      <value>
              One of the <see cref="P:DropDownCalendar.CalendarYear" /> values.
            <br />
              The default is <see cref="F:CalendarYear.Normal" />.
            </value>
      <remarks>
              The <b>CalendarYear</b> property determines the month sequence to display when the <see cref="P:DropDownCalendar.CalendarType" /> is <b>CalendarType.YearMonth</b>.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ControlStyle">
      <summary>
              Gets or sets style of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> object that indicates the control style.
            </value>
      <remarks>
              This property customizes the display style of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />. If you want to apply this setting, the <see cref="P:DropDownCalendar.UseControlStyle" /> property must be set to <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.EmptyRows">
      <summary>
              Gets or sets how the calendar should be drawn when empty week rows appear.
            </summary>
      <value>
              A <see cref="P:DropDownCalendar.EmptyRows" /> value that indicates how the calendar should be drawn when empty week rows appear.
            <br /> The default is <see cref="F:EmptyRows.StartEmpty" />.
            </value>
      <remarks>
              The empty rows means all dates in a row are trailing dates. This case only appears in February.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.FirstDayOfWeek">
      <summary>
              Gets or sets which weekday to display first in the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek" /> value that indicates which weekday to display first in the drop-down calendar.
            <br /> The default is <see cref="F:DayOfWeek.NotSet" />.
            </value>
      <remarks>
              This property determines which day of the week to display first.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.FirstFiscalMonth">
      <summary>
              Gets or sets the first fiscal month of the year.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Months" /> value that indicates the first fiscal month of the year.
            <br /> The default is <see cref="F:Months.Default" />.
            </value>
      <remarks>
              The <b>FirstFiscalMonth</b> property determines which month to display first.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.FirstMonthInView">
      <summary>
              Gets or sets the first month in the view in the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Months" /> enumeration value that indicates the first month in the view.
            <br />
              The default is <b>Months.Default</b>.
            </value>
      <remarks>
              When <see cref="P:DropDownCalendar.CalendarType" /> is <b>MonthDay</b> and 12 months are shown in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />,
              this property specifies which month is shown first. If the value is not <b>Months.Default</b>, the calendar scrolls year by year.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.FlatStyle">
      <summary>
              Gets or sets the appearance of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.FlatStyle" /> value that indicates the control appearance.
            <br /> The default is <see cref="F:System.Windows.Forms.FlatStyle.Standard" />.
            </value>
      <remarks>
              Use the <b>FlatStyle</b> property to get or set the display of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.FocusRectangle">
      <summary>
              Gets or sets style of the focus rectangle.
            </summary>
      <value>
              A <see cref="P:DropDownCalendar.FocusRectangle" /> value that indicates the style of the focus rectangle.
            <br /> The default is <see cref="F:FocusRectangle.Normal" />.
            </value>
      <remarks>
              This property determines the display style of the date that has focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.Font">
      <summary>
              Gets or sets the font of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Font" /> object that indicates the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />.
            </value>
      <remarks>
              The default value is the same as the control font.
              If set to <see langword="null" />, the value is automatically the default value without exception.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.HeaderFormat">
      <summary>
              Gets or sets the format string of the header.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the format of the header.
            <br /> The default is MMMM yyy.
            </value>
      <remarks>
              The header text is displayed using the format specified by this property when the <see cref="P:DropDownCalendar.UseHeaderFormat" /> property is <see langword="true" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.HeaderHeight">
      <summary>
              Gets or sets the height of the header.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value that indicates the height of the header.
            <br /> The default is 0.
            </value>
      <remarks>
              The zero value means the height of the header is calculated automatically.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.HeaderStyle">
      <summary>
              Gets or sets the header style.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> object that indicates the style of the header.
            </value>
      <remarks>
              This property determines the display style of the header of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />.
              The display style does not take effect when the header is rendered as system style.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.HolidayStyles">
      <summary>
              Gets or sets holiday styles.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> object that indicates the holiday style collection.
            </value>
      <remarks>
              This property retrieves a collection of holiday appearance styles.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.InnerMargins">
      <summary>
              Gets or sets the inner margins of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding" /> value that indicates the inner margins of the drop-down calendar.
            </value>
      <remarks>
              This property determines the distance between every calendar view and its header.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.InnerSpace">
      <summary>
              Gets or sets the inner space of the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Size" /> value that indicates the inner space of the drop-down calendar.
            </value>
      <remarks>
              When the <see cref="P:DropDownCalendar.CalendarDimensions" /> property shows more than one calendar, this property determines the distance between every calendar.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ItemStyle">
      <summary>
              Gets or sets the style of each item.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> object that indicates the style of each item.
            </value>
      <remarks>
              The property determines the display style of each item, a date item or a month item, of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.LegendStyle">
      <summary>
              Gets or sets the style of the today legend area.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> of the today legend area.
            </value>
      <remarks>
              The property determines the display style of the legend area of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.Lines">
      <summary>
              Gets or sets the lines setting.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Grid" /> object that indicates the lines.
            </value>
      <remarks>
              This property determines the color and the style of the lines shown in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.MaxDate">
      <summary>
              Gets or sets the maximum limit of the date.
            </summary>
      <value>
              A <see cref="T:System.DateTime" /> value that indicates the maximum date of the calendar.
            </value>
      <remarks>
              This property retrieves a maximum date value and has to be greater than the <see cref="P:DropDownCalendar.MinDate" />.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
              The value is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The value is less than <see cref="P:DropDownCalendar.MinDate" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.MinDate">
      <summary>
              Gets or sets the minimum limit of the date.
            </summary>
      <value>
              A <see cref="T:System.DateTime" /> value that indicates the minimum date of the calendar.
            </value>
      <remarks>
              This property retrieves a minimum date value and has to be less than the <see cref="P:DropDownCalendar.MaxDate" />.
            </remarks>
      <exception cref="T:System.ArgumentNullException">
              The value is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The value is greater than <see cref="P:DropDownCalendar.MaxDate" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.NavigatorOrientation">
      <summary>
              Gets or sets the orientation of the navigator.
            </summary>
      <value>
              A <see cref="P:DropDownCalendar.NavigatorOrientation" /> value that indicates the orientation of the navigator.
            <br /> The default is <see cref="F:NavigatorOrientation.Right" />.
            </value>
      <remarks>
              This property determines the navigator position when the <see cref="P:DropDownCalendar.ShowNavigator" /> property is <b>Scrollbar</b> or <b>Button</b>.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.NavigateOnWheel">
      <summary>
              Gets or sets a value indicating whether user can navigate by mouse wheel.
            </summary>
      <value>
              A <see langword="bool" /> type that represents the value. The default is <b>true.</b>.
            </value>
      <remarks>
              If this property is set to <see langword="false" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo" /> will not navigate on mouse wheel.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.EnableTouchZoom">
      <summary>
             Gets or sets if Touch Zoom is enabled.
            </summary>
      <value>
        <see langword="true"></see> if allow user to change view between Mouth and Year view by pinch, otherwise <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.OverrideTipText">
      <summary>
              Gets or sets the tip text shown on an overridden holiday.
            </summary>
      <value>
              A <b>string</b> type that represents the value. The default is <b>string.Empty</b>.
            </value>
      <remarks>
              This property retrieves the tooltip text for an overridden holiday.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ScrollRate">
      <summary>
              Gets or sets the rate of scrolling.
            </summary>
      <value>
              A positive number represents the current scroll rate for the number of months moved.
            <br /> The default is 1.
            </value>
      <remarks>
              The scroll rate is the number of months that the control moves in the display when the user clicks a scroll arrow.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ScrollTipAlign">
      <summary>
              Gets or sets the scroll tip alignment.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment" /> type value that indicates the alignment of the scroll tip.
            <br /> The default is <see cref="F:ScrollTipAlignment.Default" />.
            </value>
      <remarks>
              When the user drags the scroll thumb bar used for moving the current displayed months or years,
              a tooltip that contains the date information is displayed.
              This property determines the alignment of that tooltip.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.SelectionStyle">
      <summary>
              Gets or sets the selected date style.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> value that indicates the selection style.
            </value>
      <remarks>
              This property retrieves the display style of the selected date cell or month cell.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowHeader">
      <summary>
              Gets or sets a value that indicates whether to show the header.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the header. The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowNavigator">
      <summary>
              Gets or sets a value that indicates how to show the navigator.
            </summary>
      <value>
              One value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators" />.
            <br /> The default is <b>CalendarNavigators.Outlook</b></value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowScrollTip">
      <summary>
              Gets or sets a value that indicates whether to show the scroll tip.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the scroll tip.The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowToday">
      <summary>
              Gets or sets a value that indicates whether to show the today legend.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the today legend.The default is <see langword="false" />.
            </value>
      <remarks>
              This property determines whether to show the today legend at the bottom of this calendar.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowTodayMark">
      <summary>
              Gets or sets a value that indicates whether to show the today mark.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the today mark. The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowTrailing">
      <summary>
              Gets or sets a value that indicates whether to show trailing dates.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the trailing days. The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowWeekNumber">
      <summary>
              Gets or sets a value that indicates whether to show the week number.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the week number. The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowZoomButton">
      <summary>
              Gets or sets a value that indicates whether to show the zoom button on the navigate bar.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to show the zoom button on the navigate bar; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.SingleBorderColor">
      <summary>
              Gets or sets the color for a single line border.
            </summary>
      <value>
              The default value is the <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The color only takes effect when BorderStyle is FixedSingle.
              This property is from feature 0054 of V3.0 (Control border color)
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.TipInterval">
      <summary>
              Gets or sets the interval before showing holiday tooltips when the mouse hovers over an item.
            </summary>
      <value>
              An <b>int</b> value that indicates the interval of holiday tooltips.
            <br />
              The default is <b>500</b>.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.TitleStyle">
      <summary>
              Gets or sets the style of the weekday title.
            </summary>
      <value>
              A <see cref="P:DropDownCalendar.TitleStyle" /> value that indicates the display style of the weekday title.
            </value>
      <remarks>
              This property retrieves the display style of the weekday title.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.TodayImage">
      <summary>
              Gets or sets the image that is used for today.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Image" /> shown on the today legend.
            </value>
      <remarks>
              This property retrieves the image displayed at the today cell and today legend.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.TodayMarkColor">
      <summary>
              Gets or sets the border color shown for today.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the today mark border color.
            </value>
      <remarks>
              This property retrieves the border color of the today mark.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.TrailingStyle">
      <summary>
              Gets or sets the trailing dates style.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> object that indicates the trailing style.
            </value>
      <remarks>
              This property retrieves the display style of the trailing dates area.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.UseControlStyle">
      <summary>
              Gets or sets a value that indicates whether to use the control style.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to use the control style.
            <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              This property determines whether to apply the <see cref="P:DropDownCalendar.ControlStyle" /> settings.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.UseHeaderFormat">
      <summary>
              Gets or sets whether to use the <b>HeaderFormat</b> property to show the header text.
            </summary>
      <value>
        <see langword="true" /> to use the <see cref="P:DropDownCalendar.HeaderFormat" /> setting to show the header text; otherwise, <see langword="false" />.
            <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              This property determines whether to apply the <see cref="P:DropDownCalendar.HeaderFormat" /> settings.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.Weekdays">
      <summary>
              Gets or sets the settings of the weekdays.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" /> value that indicates the settings of the weekdays.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.WeekNumberStyle">
      <summary>
              Gets or sets the week number style.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> of the week number.
            </value>
      <remarks>
              This property retrieves the display style of the week number area.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.YearMonthFormat">
      <summary>
              Gets or sets the header format of the year or month view.
            </summary>
      <value>
              A <see cref="P:DropDownCalendar.YearMonthFormat" /> structure that indicates the year month format.
            </value>
      <remarks>
              This property determines which format the header text should following when <see cref="P:DropDownCalendar.CalendarType" /> is <b>YearMonth</b> mode.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.EnableScrollAnimation">
      <summary>
              Gets or sets whether or not the animation will be performed when scroll or zoom on the drop-down calendar.
            </summary>
      <value>
              A <see cref="T:System.Boolean" /> value, <see langword="true" />
              if performs animation when scroll or zoom on the drop-down calendar; otherwise <see langword="false" />.
              <br />
              Defaule value is <see langword="true" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo">
      <summary>
              Represents the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor" /> information.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.BackColor">
      <summary>
              Gets or sets the background color of the drop-down window.
            </summary>
      <value>
              The color of the background.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the control to blend into the color scheme of the forms.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.BackgroundImage">
      <summary>
              Gets or sets the background image displayed in the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Image" /> that represents the image to display in the
              background of the drop-down window.
            <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.BackgroundImageLayout">
      <summary>
              Gets or sets the layout of the background image.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.ImageLayout" /> value that indicates the layout of the background image.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.BorderStyle">
      <summary>
              Gets or sets style of the border.
            </summary>
      <value>
              A <see cref="P:DropDownEditor.BorderStyle" /> value.
            <br /> The default is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ContentAlignment">
      <summary>
              Gets or sets the content alignment.
            </summary>
      <value>
              A <see cref="P:DropDownEditor.ContentAlignment" /> value that indicates the content alignment.
            <br /> The default is <see cref="F:System.Drawing.ContentAlignment.TopLeft" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.Font">
      <summary>
              Gets or sets the font which is used for the drop-down window.
            </summary>
      <value>
              A <see cref="P:DropDownEditor.Font" /> value that indicates the font which is used for the drop-down window.
            </value>
      <remarks>
              The default value is the same as the control font.
              If set to <see langword="null" />, the value is automatically the default value without exception.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ForeColor">
      <summary>
              Gets or sets the foreground color of the drop-down window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowText" />.
            </value>
      <remarks>
              The foreground <see cref="T:System.Drawing.Color" /> of the drop-down window.
              The default is the <see cref="P:System.Drawing.SystemColors.WindowText" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.Padding">
      <summary>
              Gets or sets the padding of the drop-down window.
            </summary>
      <value>
              A <see cref="P:DropDownEditor.Padding" /> value that indicates the padding.
            <br /> The default is "1,1,1,1".
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ReadOnly">
      <summary>
              Gets or sets a value that indicates whether the drop-down editor is read-only.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the drop-down editor is read-only; otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ScrollBarMode">
      <summary>
              Gets or sets how to display the scroll bars.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ScrollBarMode" /> enumeration values
              that indicates whether the multiple edit displays the scroll bars as soon as
              the contents exceed the length of the drop-down edit.
              The default is <see cref="F:ScrollBarMode.Fixed" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ScrollBars">
      <summary>
              Gets or sets a value that indicates how to show scroll bars.
            </summary>
      <value>
              The <see cref="P:DropDownEditor.ScrollBars" /> value indicates how to show scroll bars.
            <br /> The default is <see cref="F:System.Windows.Forms.ScrollBars.Vertical" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.SingleBorderColor">
      <summary>
              Gets or sets the color of the single line border.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the color of the single line border.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The color only takes effect when <see cref="P:DropDownEditor.BorderStyle" /> is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.TouchToolBar">
      <summary>
            Gets the displayed <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.TouchToolBar" />.
            </summary>
      <value>
            The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.TouchToolBar" /> instance that is shown using a touch operation.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo">
      <summary>
              Represents the drop-down picker.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.BackColor">
      <summary>
              Gets or sets the background color of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the background color of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.SingleBorderColor">
      <summary>
              Gets or sets the color for a single line border.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value that indicates the single line border color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
      <remarks>
              The color only takes effect when BorderStyle is FixedSingle.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.SelectedBackColor">
      <summary>
              Gets or sets the highlight background color of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the highlight background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
      <remarks>
              You can use the <b>BackColor</b> property to change the highlight background color of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.Font">
      <summary>
              Gets or sets the font of the drop-down picker.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.Font" /> value that indicates the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            </value>
      <remarks>
              You can use the <b>Font</b> property to change the font of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.BorderStyle">
      <summary>
              Gets or sets the border style of the drop-down picker.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.BorderStyle" /> enumeration that indicates the border style.
              <br /> The default is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </value>
      <remarks>
              You can use the <b>BorderStyle</b> property to create borderless and flat style controls, in addition to the default three-dimensional control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.FlatStyle">
      <summary>
              Gets or sets the appearance of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.FlatStyle" /> value that indicates the control appearance.
              <br /> The default is <see cref="F:System.Windows.Forms.FlatStyle.System" />.
            </value>
      <remarks>
              Use the <b>FlatStyle</b> property to get or set the display of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.ButtonBackColor">
      <summary>
              Gets or sets the button background color of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value indicates the button background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Control" />.
            </value>
      <remarks>
              You can use the <b>ButtonBackColor</b> property to change the button background color of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.ButtonForeColor">
      <summary>
              Gets or sets the button foreground color of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the button foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.ControlText" />.
            </value>
      <remarks>
              You can use the <b>ButtonForeColor</b> property to change the button foreground color of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.SelectionRenderMode">
      <summary>
            Gets or sets the selection render mode of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode" /> value that indicates the selection render mode of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.Border" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.SelectedForeColor">
      <summary>
            Gets or sets the color of the selected foreground of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the selected foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowText" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.ForeColor">
      <summary>
            Gets or sets the color of the foreground of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.GrayText" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.SelectedBorderColor">
      <summary>
            Gets or sets the color of the selected border of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the selected border color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo">
      <summary>
              Represents the drop-down picker for date and time values.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo.ShowPickers">
      <summary>
              Gets or sets the display options of the drop-down picker.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions" /> value that indicates the display options of the drop-down picker.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions.Both" />.
            </value>
      <remarks>
              Use the <b>ShowPickers</b> property to get or set the display options of the drop-down picker.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo.TabForeColor">
      <summary>
            Gets or sets the color of the tab foreground.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value that indicates the tab foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.ControlText" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo.HeaderBackColor">
      <summary>
            Gets or sets the background color for the empty area of the header area.
            </summary>
      <value>
            A <see cref="T:System.Drawing.Color" /> value that indicates the empty area of the header area background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />.
            <br /> The default is <see cref="P:System.Drawing.SystemColors.Control" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo.DateTabText">
      <summary>
              Gets or sets the text shown in the date tab.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the text shown in the date tab.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo.TimeTabText">
      <summary>
              Gets or sets the text shown in the time tab.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the text shown in the time tab.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType">
      <summary>
              Represents the base class for the formatted text editors.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType" /> class.
            </summary>
      <param name="info">The info.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.ClipContent">
      <summary>
              Gets or sets how data is copied to the Clipboard.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellTypeEditorControl.ClipContent" /> enumeration values that specifies
              how data is copied to the Clipboard.
            <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" />.
            </value>
      <remarks>
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" /> value means that all displayed text is copied when setting data to the <see cref="T:System.Windows.Forms.Clipboard" /> by methods or UI behaviors.
              The  <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.ExcludeLiterals" /> value means the displayed text except the literal fields' text is copied.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.TabAction">
      <summary>
              Gets or sets whether the tab key moves the focus between controls or between
              fields within the control.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellTypeEditorControl.TabAction" /> enumeration values.  The default is
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control" />.
            </value>
      <remarks>
              The caret moves to the next field when this property is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Field" />.
              If the caret is in the last field, the input focus leaves this control when pressing the Tab key.
              If the value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control" />, the behavior is the same as the standard control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.ShowLiterals">
      <summary>
              Gets or sets whether to display the literals during user entry.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellTypeEditorControl.ShowLiterals" /> enumeration values.
            <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always" />.
            </value>
      <remarks>
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always" /> means the literal field is always displayed.
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PostDisplay" /> means the literal field is displayed only after the field which is next to the literal field, gets data.
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PreDisplay" /> means the literal field is displayed only before the field which is next to the literal field, gets data.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.PromptChar">
      <summary>
              Gets or sets the character used as a prompt for input.
            </summary>
      <value>
              The character used as a prompt for input. The default is an underscore ("_").
            </value>
      <remarks>
              The <b>PromptChar</b> property determines the display text when the <see cref="N:GrapeCity.Win.Value" /> is none and one or more input fields or display fields exist.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Initializes the editor control.
            </summary>
      <param name="control">Editor control to initialize</param>
      <param name="appearance">Appearance settings</param>
      <param name="zoomFactor">Numeric value for scaling the display of the control</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.Clone">
      <summary>
            Creates and returns a base input man cell.
            </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType">
      <summary>
              Represents a <b>GcCharMaskCellType</b> class.
            </summary>
      <remarks>
              The GcCharMaskCellType provides number input for positive and negative values and 
              allows you to design a functional numeric input interface quickly and efficiently. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType" /> class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.BaseClearCollection">
      <summary>
            Innernal use by designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.PaintByControl">
      <summary>
             Gets or sets a value that indicates how to paint the cell.
             If true, the cell uses the inner control's painting to paint the cell, in this case, the cell paints exactly the same as the editing control.
             All settings of the cell such as fields with different styles are shown when painting the cell. The cell's paint performance is slow if painting by the control,
             rather than painting the string directly. Also, the text in the cell cannot be selected when exporting to pdf.
             If false, performance is good but some settings do not take effect.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.ShowSubEditor">
      <summary>
            Shows the subeditor control associated with the cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.FocusPosition">
      <summary>
              Gets or sets the initial cursor position when the editor gets focus.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.ExcelExportFormat">
      <summary>
              Gets or sets the excel export format.
            </summary>
      <value>
              The excel export format.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.AutoConvert">
      <summary>
              Gets or sets whether to automatically convert the entered characters 
              according to the input mask.
            </summary>
      <value>
        <see langword="true" /> if characters are automatically converted according to the input mask; 
              otherwise, <see langword="false" />. The default is <see langword="true" />.
            </value>
      <remarks>
        <para>
                If the <b>AutoConvert</b> property is set to <see langword="true" />, all convertible characters are 
                automatically converted according to the input mask. For example, if 
                the input mask is set to "A", then pressing a lower case character automatically 
                converts the character into an upper case. 
              </para>
        <para>
                If SBCS is entered in a DBCS mask input, the entered character is automatically 
                converted to DBCS. Also a DBCS space is automatically converted to a SBCS space 
                when the control only allows SBCS. 
              </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.CharBoxes">
      <summary>
              Gets the character box collection.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" /> that indicates the collection when saving the character box.
            </value>
      <remarks>
              The <b>CharBoxes</b> can be added or removed. The types include <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBox" />,<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LiteralBox" />, and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBox" />.
            </remarks>
      <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CharBoxSpacing" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.CharBoxSpacing">
      <summary>
              Gets or sets the spacing between character boxes.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the spacing between character boxes.
              <br /> The default is -1.
            </value>
      <remarks>
              The <b>CharBoxSpacing</b> property determines the space between two character boxes.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CharBoxes" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.ClipContent">
      <summary>
              Gets or sets how data should be copied to the clipboard.
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ClipContent" /> enumeration values that specifies 
              how data is copied to the clipboard. 
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" />.
            </value>
      <remarks>
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" /> value means all displayed text is copied when setting data to the <see cref="T:System.Windows.Forms.Clipboard" /> by methods or UI behaviors. 
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.ExcludeLiterals" /> value means the displayed text, excluding the literal field text, is copied.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.FormatString">
      <summary>
              Gets or sets the input format to use in the control.
            </summary>
      <value>
                The string used to control how text is entered.
              </value>
      <remarks>
              The format is specified by creating a mask using keywords and literals.
              <note>
                This input mask must not exist with only literals.
              </note></remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.InputDirection">
      <summary>
              Gets or sets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection" /> that indicates the input direction.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection" /> that indicates the input direction.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection.LeftToRight" /></value>
      <remarks>
              Use the <b>InputDirection</b> property to determine the direction and order when the user enters data.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.PasswordChar">
      <summary>
              Gets or sets the character used to mask characters of a password in the control.
            </summary>
      <value>
              The character used to mask characters entered in the control. 
              Sets the value of this property to 0 (character value) if you do not want the control to mask characters as they are typed. Equals 0 (character value) by default.
            </value>
      <remarks>
        <para>
              The <b>PasswordChar</b> can be used to create a password field in a dialog box. Although you 
              can use any SBCS character, most Windows-based applications use the asterisk (*) (Chr(42)).
              </para>
        <para>
              This property does not affect the <see cref="N:GrapeCity.Win.Text" /> property. 
              The <b>Text</b> contains exactly what the user types or what 
              was set from code. Setting the <b>PasswordChar</b> to 0, which is the default, will display 
              the actual text in the control.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <see cref="T:System.String" /> value indicates the recommended value.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property provides a hint for the user that is shown when the value is not fully entered.
              When a value is being typed,
              pressing a special shortcut key or key combination accepts the recommended value. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.AcceptsCrLf">
      <summary>
            Gets or sets how to process the CrLf characters when copying, cutting, or pasting a string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration indicates which mode the CrLf characters use when copying, cutting, or pasting a string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting causes the <b>GcCharMask</b> to be the same as the standard <b>TextBox</b> when copying, cutting, or pasting a string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.AllowSpace">
      <summary>
              Gets or sets whether to allow space input.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.AllowSpace" /> values.
              <br />
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Both" />.
              </value>
      <remarks>
        <para>
              Use the <b>AllowSpace</b> property to specify which kind of space is allowed in the text.
              </para>
        <para></para>
        <para>
              If <b>AllowSpace</b> is <b>None</b>, <b>GcCharMask</b> does not accept spaces.
              The <b>AllowSpace.Narrow</b> mode means the SBCS space is allowed.
              The <b>AllowSpace.Wide</b> mode means the DBCS space is allowed.
              The <b>AllowSpace.Both</b> mode means all kinds of spaces are allowed.
              </para>
        <para></para>
        <note>
                If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.AutoConvert" /> propety is <see langword="true" /> and <b>AllowSpace</b> is <b>AllowSpace.Wide</b>, the control
                automatically converts the SBCS space to a DBCS space when the user enters a SBCS space character. Other settings are the same.
                The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" /> property is always used with the AllowSpace property.
              </note>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.ShowRecommendedValue">
      <summary>
              Gets or sets whether to show the recommended value.
            </summary>
      <value>
        <see langword="true" /> to show the recommended value; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.RecommendedValue" /> property is shown when <b>ShowRecommendedValue</b>
              is <see langword="true" /> and the value is not fully entered; otherwise, the value of the <b>RecommendedValue</b> property is not shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.UseSystemPasswordChar">
      <summary>
              Gets or sets whether to use the system password character.
            </summary>
      <value>
        <see langword="true" /> to use the system password character; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The <b>UseSystemPasswordChar</b> property has precedence over the <b>PasswordChar</b> property. 
              Whenever the <b>UseSystemPasswordChar</b> is set to <see langword="true" />, 
              the default system password character is used and any character set by <b>PasswordChar</b>is ignored.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetEditorValue">
      <summary>
            Gets the unformatted value in the editor control.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.SetEditorValue(System.Object)">
      <summary>
            Sets the value of the editor control.
            </summary>
      <param name="value">Value of the editor control (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>
            Determines whether the specified control is reusable.
            </summary>
      <param name="control">The control.</param>
      <returns>
        <c>true</c> if the specified control is reusable; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Initializes the editor control.
            </summary>
      <param name="control">The control.</param>
      <param name="appearance">The appearance.</param>
      <param name="zoomFactor">The zoom factor.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary that contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the cell is created.
              If <see langword="null" /> is returned, no shortcuts are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>
            Starts the editing of a cell.
            </summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all the cell data</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.StopEditing">
      <summary>
            Stops the editing of a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.Format(System.Object)">
      <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
      <param name="obj">Object in the data model with cell data to format</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.Parse(System.String)">
      <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.FormatToClipboard(System.Object)">
      <summary>
            Formats to the Clipboard.
            </summary>
      <param name="obj">The object.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetDisplayText(System.Object)">
      <summary>
            Gets the display text.
            </summary>
      <param name="value">The cell value.</param>
      <returns>The display text.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size required</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the editor control.
            </summary>
      <param name="editor">Name of the editor control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.IsValid(System.Object)">
      <summary>
            Determines whether the specified value is valid.
            </summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.Clone">
      <summary>
            Creates and returns a base cell.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetDefaultCharMaskBoxes">
      <summary>
              Gets the default display fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" /> array that contains all default fields for display purposes.
            </returns>
      <remarks>
              The <b>GetDefaultMaskFields</b> method allows derived classes to customize default display fields when
              the cell is created.
              If <see langword="null" /> is returned, no display field is added to the cell.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl">
      <summary>
              The editing control for GcCharMaskCellType.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>
            Moves the focus using the key exit event.
            </summary>
      <param name="e">The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> instance that contains the event data.</param>
      <remarks>
        <b>ExitKeys.CharInput</b>, <b>ExitKeys.CtrlRight</b>, <b>ExitKeys.NextControl</b>, 
            <b>ExitKeys.Right</b>, and <b>ExitKeys.Tab</b> move the focus forward.
            Other <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" /> move the focus backward.
            <note>
            The base method must be invoked when overriding it in the inherited class; otherwise, the focus does not move.
            </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</param>
      <returns>
        <see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.
            </returns>
      <remarks>
            Call the <b>IsInputKey</b> method to determine whether the key specified by the keyData parameter is an input key that the control uses. This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control. If <b>IsInputKey</b> returns <see langword="true" />, the specified key is sent directly to the control. If <b>IsInputKey</b> returns <see langword="false" />, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. Keys that are preprocessed include the Tab, Return, Esc, and the Up Arrow, Down Arrow, Left Arrow, and Right Arrow keys.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the KeyDown event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            Raises the KeyPress event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnGotFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnGotFocus</b> in a derived class, be sure to call the base class's <b>OnGotFocus</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnEnter(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnEnter</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnEnter</b> in a derived class, be sure to call the base class's <b>OnEnter</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.NextCell">
      <summary>
            Moves to the next cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.PreviousCell">
      <summary>
            Moves to the prevous cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.Font">
      <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
      <value>
            The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.
            <br />The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
        <para>
            The <b>Font</b> property is an ambient property. An ambient property is a control property that,
            if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
            <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. For more information about
            ambient properties, see the <see cref="T:System.Windows.Forms.AmbientProperties" /> class or the <see cref="T:System.Windows.Forms.Control" /> class overview.
            </para>
        <para></para>
        <para>
            Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>; 
            however, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnInvalidInput</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnInvalidInput</b> in a derived class, be sure to call the base class's <b>OnInvalidInput</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.SubEditor">
      <summary>
            Gets the subeditor in the cell.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.AfterFocus">
      <summary>
            Occurs after the control gets focus.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>
            Raises the AfterFocus event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType">
      <summary>
              Represents a <b>GcComboBoxCellType</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType" /> class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AcceptsCrLf">
      <summary>
            Gets or sets how to process the CrLf characters when copying, cutting, or pasting a string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration that indicates which mode the CrLf characters use when copying, cutting, or pasting a string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting causes the <b>GcComboBox</b> to be similar to the standard <b>TextBox</b> when copying, cutting, or pasting a string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AcceptsTabChar">
      <summary>
            Gets or sets how to process the Tab character when copying, cutting, or pasting a string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> enumeration that indicates which mode the Tab character uses when copying, cutting, or pasting a string.
            <br />The default is <b>TabCharMode.NoControl</b>.
            </value>
      <remarks>
              The <b>TabCharMode.Cut</b> setting causes the <b>GcComboBox</b> to be similar to the standard <b>TextBox</b> when copying, cutting, or pasting a string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AllowSpace">
      <summary>
              Gets or sets an <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AllowSpace" /> value that indicates which type of space character is allowed.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace" /> value.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Both" />.
            </value>
      <remarks>
        <para>
              Use the <b>AllowSpace</b> property to specify which kind of space is allowed in the text.
              </para>
        <para></para>
        <para>
                If <b>AllowSpace</b> is <b>None</b>, <b>GcComboBox</b> does not accept spaces.
                The <b>AllowSpace.Narrow</b> setting means the SBCS space is allowed.
                The <b>AllowSpace.Wide</b> setting means the DBCS space is allowed.
                The <b>AllowSpace.Both</b> setting means all kinds of spaces are allowed.
              </para>
        <para></para>
        <note>
                If the AutoConvert property is <see langword="true" /> and AllowSpace is <b>AllowSpace.Wide</b>, the control
                automatically converts the SBCS space to DBCS space when the user enters a SBCS space. 
                The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Format(System.Object,System.Boolean@)" /> property is always used with the <b>AllowSpace</b> property.
              </note>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AlternateText">
      <summary>
              Gets the alternate text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo" /> value that indicates the alternate text.
            </value>
      <remarks>
              If the current value is <see cref="F:System.String.Empty" /> and this control has the input focus, the <see cref="N:GrapeCity.Win.Text" /> property equals the 
              <see cref="P:ComboBoxAlternateText.Null" /> setting, which is not null. The <see cref="N:GrapeCity.Win.Text" /> property
              equals the <see cref="P:ComboBoxAlternateText.DisplayNull" /> setting if the current value is <see langword="null" />
              and this control does not have the input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoComplete">
      <summary>
              Gets the automatic complete related settings.
            </summary>
      <value>
              The automatic complete setting.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteCustomSource">
      <summary>
              Gets or sets a custom <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> to use 
              when the AutoCompleteSource property is set to CustomSource.
            </summary>
      <value>
              The <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> to use with <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteSource" />.
              <br /> The default is <see langword="null" />.
            </value>
      <remarks>
        <para>
              Use the <b>AutoCompleteCustomSource</b>, <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteMode" />, 
              and <b>AutoCompleteSource</b> properties to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />
              that automatically completes input string by comparing the prefix being entered to the
              prefixes of all strings in a maintained source. This is useful for TextBox controls in which 
              URLs, addresses, file names, or commands are frequently entered.
              <para></para><para>
              The use of the <b>AutoCompleteCustomSource</b> property is optional, but you must
              set the <b>AutoCompleteSource</b> property to CustomSource in order to use 
              <b>AutoCompleteCustomSource</b>.
              </para><para></para><para>
              You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b> properties together.
                </para></para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteMode">
      <summary>
              Gets or sets an option that controls how automatic completion works for 
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> cell.
            </summary>
      <value>
              One of the values of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteMode" />. 
              The values are <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />, and 
              <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />. 
              The default is <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />.
            </value>
      <remarks>
        <para>
              Use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteCustomSource" />, <b>AutoCompleteMode</b>, 
              and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteSource" /> properties to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> that automatically 
              completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source. 
              This is useful for <b>GcTextBox</b> controls in which URLs, addresses, file names, or commands are frequently entered.
              </para>
        <para></para>
        <para>
              The <b>AutoCompleteCustomSource</b> property is optional, 
              but you must set the <b>AutoCompleteSource</b> property to <b>CustomSource</b>
              in order to use <b>AutoCompleteCustomSource</b>.
              </para>
        <para></para>
        <para>
              You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b>
              properties together.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteSource">
      <summary>
              Gets or sets the source for strings used for automatic completion.
            </summary>
      <value>
              One of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />. The options
              are <see cref="F:System.Windows.Forms.AutoCompleteSource.AllSystemSources" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteSource.AllUrl" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteSource.FileSystem" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteSource.HistoryList" />, 
              <see cref="F:System.Windows.Forms.AutoCompleteSource.RecentlyUsedList" />,
              <see cref="F:System.Windows.Forms.AutoCompleteSource.CustomSource" />, 
              and <see cref="F:System.Windows.Forms.AutoCompleteSource.None" />. 
              <br /> The default is <see cref="F:System.Windows.Forms.AutoCompleteSource.None" />.
            </value>
      <remarks>
        <para>
              Use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteCustomSource" />,<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteMode" />,
              and <b>AutoCompleteSource</b> properties to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> 
              that automatically completes input strings by comparing the prefix being entered to the 
              prefixes of all strings in a maintained source. This is useful for <b>GcTextBox</b> controls 
              in which URLs, addresses, file names, or commands are frequently entered.
              </para>
        <para></para>
        <para>
              The <b>AutoCompleteCustomSource</b> property is optional, but you must set the 
              <b>AutoCompleteSource</b> property to <b>CustomSource</b> in order to use 
              <b>AutoCompleteCustomSource</b>.
              </para>
        <para></para>
        <para>
              You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b> properties together.
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoConvert">
      <summary>
             Gets or sets a <see langword="bool" /> value that indicates whether to automatically convert the entered characters.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> to automatically convert the entered characters;  
             otherwise, <see langword="false" />.
             <br /> The default is <see langword="true" />.
            </value>
      <remarks>
        <para>
              If the <b>AutoConvert</b> property is set to <see langword="true" />, all convertible characters are 
              automatically converted according to the input mask. For example, if  
              the input mask is to "A", then pressing a lower case character automatically 
              converts the character into upper case. 
              </para>
        <para>
              If SBCS is entered in a DBCS mask input, the entered character is automatically 
              converted to DBCS. Also a DBCS space is automatically converted to a SBCS space 
              when the control only allows SBCS. 
              </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoFilter">
      <summary>
              Gets the automatic filter related settings.
            </summary>
      <value>
              The automatic filter settings.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoGenerateColumns">
      <summary>
              Gets or sets whether columns are created automatically when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DataSource" /> 
              or <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DataMember" /> property is set.
            </summary>
      <value>
              A<see langword="bool" /> value, <see langword="true" /> if the columns should be created automatically; otherwise,<see langword="false" /> . 
              <br />The default is <see langword="true" />.
            </value>
      <remarks>
              When the user binds a source to <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DataMember" />, columns are automatically generated in the drop-down list based on the data source.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoSelect">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether to automatically select the item in the list that matches the
              input in the editor.
            </summary>
      <value>
             A <see langword="bool" /> value, <see langword="true" /> to automatically match the entered characters according to 
             the input; otherwise, <see langword="false" />.
             <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DataMember">
      <summary>
              Gets or sets a value that represents a binding member string.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the binding member.
             <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DataSource">
      <summary>
              Gets or sets the data source.
            </summary>
      <value>
              An <b>object</b> that indicates the data source.
             <br /> The default is <see langword="null" />.
            </value>
      <remarks>
              A data source can be a database, a Web service, or an object that can later be used to generate data-bound controls. 
              When the <b>DataSource</b> property is set, the items collection cannot be modified.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DropDown">
      <summary>
              Gets the settings for the drop-down function.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo" /> instance that indicates the settings for the drop-down function.
            </value>
      <remarks>
              The drop-down behavior and the window appearance can be customized by setting this <b>DropDown</b> property.
              The settings specify whether to display the drop-down, whether to allow resizing, the direction of the drop-down window, the 
              shadow of the drop-down window, and the animations when opening and closing.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownMaxHeight" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DropDownMaxHeight">
      <summary>
             Gets or sets the maximum height of the drop-down window, if the user does not customize the size 
             of the drop-down window; otherwise, this property does not take effect.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the maximum height of the drop-down window.
             <br /> The default is 150.
            </value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDown" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DropDownStyle">
      <summary>
              Gets or sets the drop-down style.
            </summary>
      <value>
             A <see cref="T:System.Windows.Forms.ComboBoxStyle" /> value.
             <br /> The default is <see langword="System.Windows.Forms.ComboBoxStyle.DropDown" />.
            </value>
      <remarks>
              The <b>DropDownStyle</b> property controls the interface that is presented to the user. 
              You can enter a value that provides a simple drop-down list box, where the list always displays, a drop-down list box, 
              where the text portion is not editable and you must select an arrow to view the drop-down, or the default drop-down list box, 
              where the text portion is editable and the user must press the arrow key to view the list. 
              <para />
              If you set the <b>DropDownStyle</b> property to <b>DropDownList</b>, 
              you can select only valid values from the list. If you set the <b>DropDownStyle</b> property to <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DropDown" />, 
              you can type any value in the editable area of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> cell. In this case, 
              the <b>Append</b> value of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteMode" /> works 
              the same as the <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" /> value of <b>AutoCompleteMode</b>.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxDropDownItems">
      <summary>
            Gets or sets the maximum number of items to be shown in the drop-down portion of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />.
            </summary>
      <value>
            The maximum number of items in the drop-down portion. The minimum for this property is 1 and the maximum is 100.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The maximum number is less than one or greater than 100.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Ellipsis">
      <summary>
              Gets or sets how to show ellipsis when the text width is longer than the control.
            </summary>
      <value>
              In the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" /> enumeration,
              <b>None</b>, means no ellipsis string is shown.
              <b>EllipsisEnd</b>, adds the ellipsis string to the end of the characters.
              <b>EllipsisPath</b>, adds the string to the center of the characters.
              <b>EllipsisWord</b>, trims the end of the string with a word.
              <br />The default is <b>EllipsisMode.None</b>.
            </value>
      <remarks>
              When the text is longer than the control's width and the control does not have focus, 
              the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.EllipsisString" /> property is displayed.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.EllipsisString">
      <summary>
              Gets or sets what is shown as an ellipsis when the text width is longer than the control.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the string used as an ellipsis.
              <br />The default is <b>(...)</b>.
            </value>
      <remarks>
              This property specifies the string that is used when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Ellipsis" /> is set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisEnd" />
               or <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisPath" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.EditorValue">
      <summary>
            Gets or sets what value is written to the underlying data model.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.FormatString">
      <summary>
              Gets or sets a format string used to filter or convert the input string.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates a format string used to filter or convert the input string.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              This property specifies what kind of characters and symbols are allowed.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ImageAlign">
      <summary>
              Gets or sets the alignment of the image.
            </summary>
      <value>
              A  <see cref="T:System.Windows.Forms.HorizontalAlignment" /> value that indicates
              the alignment of the image for the editor and list.
            </value>
      <remarks>
              This property determines the position of the image. If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowListBoxImage" /> value is false, this property does not take effects.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageWidth" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ImageList">
      <summary>
              Gets or sets the <b>ImageList</b>.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ImageList" /> that contains <b>Image</b> objects.
              <br /> The default is <see langword="null" />.
            </value>
      <remarks>
              The <b>Image</b> property of the item in <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Items" /> loads images from this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ImageWidth">
      <summary>
              Gets or sets the image width.
            </summary>
      <value>
             An <see cref="T:System.Int32" /> value that indicates the width of the image area.
             <br /> The default is 16.
            </value>
      <remarks>
              This property determines the width of the image area used for displaying the item image.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageAlign" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Items">
      <summary>
              Gets the item collection.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo" /> that represents the collection of the combo items.
            </value>
      <remarks>
              This property allows you to obtain a reference to the list of items that are currently stored in <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. 
              This reference allows you to add items, remove items, and get the number of items in the collection. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListColumns">
      <summary>
             Gets the column collection.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo" /> object.
            </value>
      <remarks>
              Using the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo" /> object returned by this property, 
              you can add columns, remove columns, and get the number of columns contained in the drop-down list of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />. 
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDefaultColumn" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListDefaultColumn">
      <summary>
             Gets or sets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo" /> value that represents the default ListColumnInfo of the list.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo" /> value.
            </value>
      <remarks>
              This property is used to create default column settings. 
              If the user adds a column without any appearance changes, the column uses the default column settings.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListColumns" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListDescriptionFormat">
      <summary>
              Gets or sets a format string used to customize the description shown in <b>StatusBar</b>.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates a format string used to customize the description in <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo" />.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              This property customizes a format to display the description of this control.
            </remarks>
      <exception cref="T:System.ArgumentException">
              The <b>value</b> is not a valid <b>DescriptionFormat</b>.
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionSubItemIndex" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListDescriptionSubItemIndex">
      <summary>
             Gets or sets the index of a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object related to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo" /> display.
            </summary>
      <value>
             An <see cref="T:System.Int32" /> value that indicates the index of a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> related to the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.StatusBar" /> display.
             <br /> The default is 0.
            </value>
      <remarks>
              When the status bar is shown, this property determines which subitem text is displayed in the status bar of the drop-down window.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionFormat" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListDisabledItemStyle">
      <summary>
              Gets an <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo" /> value that indicates the color style of the disabled item.
            </summary>
      <value>
             An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo" /> value.
            </value>
      <remarks>
              The backcolor, forecolor, and the gradient effect can be customized with this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListGradientEffect">
      <summary>
              Gets or sets the background gradient effect.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" /> value that indicates the background gradient effect of the control. 
              <br /> The default is <see langword="null" />.
            </value>
      <remarks>
              The value of this property is drawn in the background of the drop-down list window, but the <see cref="!:BackgroundImage" /> covers it.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListGridLines">
      <summary>
              Gets or sets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo" /> value that indicates the grid lines.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo" /> value.
            </value>
      <remarks>
              The value of this property determines the appearance of the grid lines. 
              Included items are <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Color" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Style" /> of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListHeaderPane">
      <summary>
              Gets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" /> value that indicates the header pane.
            </summary>
      <value>
              A  <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" /> value.
            </value>
      <remarks>
              The property determines the appearance of the header pane of the drop-down list.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListItemTemplates">
      <summary>
              Gets or sets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo" /> value that specifies the items template.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo" /> value.
            </value>
      <remarks>
              This property used to create default settings for list items. 
              If an item is added without appearance changes, the item is displayed with the template settings.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListSelectedItemStyle">
      <summary>
              Gets an <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo" /> value that indicates the color style of the selected item of the control.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo" /> value.
            </value>
      <remarks>
              This property used to customize the appearance of selected items.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListSortColumnIndex">
      <summary>
              Gets or sets the index of the column to sort.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value.
              <br /> The defalut is -1.
            </value>
      <remarks>
              When the user sorts the drop-down list, this property determines the index of the column to sort.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLength">
      <summary>
              Gets or sets the maximum length the user can input in the editable region.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value.
              <br /> The defalut is 0.
            </value>
      <remarks>
              This property is related to the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLengthUnit" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.PaintByControl">
      <summary>
             Gets or sets a value that indicates how to paint the cell.
             If true, the cell uses the inner control's painting to paint the cell, in this case, the cell paints exactly the same as the editing control.
             All settings of the cell such as fields with different styles are shown when painting the cell. The cell's paint performance is slow if painting by the control,
             rather than painting the string directly. Also, the text in the cell cannot be selected when exporting to pdf.
             If false, performance is good but some settings do not take effect.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the recommended value.
             <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property provides a hint for user that is shown when the value is not fully entered. 
              When a value is being entered, pressing a special shortcut key or key combination accepts the recommended value. 
            </remarks>
      <exception cref="T:System.ArgumentException">The value isn't valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ScrollBarMode">
      <summary>
              Gets or sets how to display the scroll bars in the drop-down window.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ScrollBarMode" /> enumerations that indicate how to display the scroll bars.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Automatic" />.
            </value>
      <remarks>
              If set to <b>ScrollBarMode.Fixed</b>, the scroll bars are displayed at all times. 
              If set to <b>ScrollBarMode.Automatic</b>, the scroll bars are visible only when the content of the control exceeds the length of the control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ScrollBars">
      <summary>
              Gets or sets which scroll bars are visible.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ScrollBars" /> enumeration that specify which scroll bars are visible.
              <br /> The default is <see cref="F:System.Windows.Forms.ScrollBars.Vertical" />.
            </value>
      <remarks>
              This property determines which srollbar should be displayed.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ValueSubItemIndex">
      <summary>
              Gets or sets an <see cref="T:System.Int32" /> value that indicates the selected value subitem index.
            </summary>
      <value>
             An <see cref="T:System.Int32" /> value.
             <br /> The default is 0.
            </value>
      <remarks>
              The <see cref="!:SelectedValue" /> property equals the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> which is in the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" /> collection of the <see cref="!:SelectedItem" /> and is located by the index value of this property.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is out of range.</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowItemTip">
      <summary>
              Gets or sets whether to show the item tooltip.
            </summary>
      <value>
        <see langword="true" /> to show the tooltip when the mouse is over an item; 
              otherwise, <see langword="false" />. <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              When the mouse is over an item in the drop-down list, a tooltip is shown if this property is <see langword="true" />.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowOverflowTip" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowListBoxImage">
      <summary>
              Gets or sets whether to show the images of the 
              drop-down list.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to show images; otherwise, <see langword="false" /> .
             <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              An image is shown if this property is <see langword="true" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Image" /> property is not <see langword="null" />.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageWidth" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageAlign" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowOverflowTip">
      <summary>
              Gets or sets whether to show the overflow tip.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to show the overflow tip.
              <br /> The defalut is <see langword="false" />.
            </value>
      <remarks>
              When the mouse is over an item in the drop-down list, a tooltip is shown if this property is <see langword="true" /> and the item text is longer than the column width.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowItemTip" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowRecommendedValue">
      <summary>
              Gets or sets whether to show the recommended value.
            </summary>
      <value>
        <see langword="true" /> to show the recommended value; otherwise, <see langword="false" />.
             <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.RecommendedValue" /> property is shown when <b>ShowRecommendedValue</b> is <see langword="true" /> and the value is not fully entered; otherwise, the <b>RecommendedValue</b> property is not shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.SideButtons">
      <summary>
              Gets or sets the <b>SideButton</b> collection.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollectionInfo" /> instance that indicates the SideButtonBase collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed.
              Buttons include <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />,
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />, and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Spin">
      <summary>
             Gets the spin action information.
            </summary>
      <value>
             A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Spin" /> that indicates the spin information.
            </value>
      <remarks>
              The spin behaviors can be customized by setting this <b>Spin</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.StatusBar">
      <summary>
              Gets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo" /> object that indicates the status bar information.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo" /> object.
            </value>
      <remarks>
              This property determines the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Text" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Visible" /> properties.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextBoxStyle">
      <summary>
              Gets or sets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle" /> value that indicates the appearance style of the editor.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle" /> value.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.TextOnly" />.
            </value>
      <remarks>
              The property determines whether only text, only an image, or both can be displayed in the edit area of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextFormat">
      <summary>
              Gets or sets a format string used to customize text.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates a format string used to customize text.
            </value>
      <remarks>
              This property specifies a format used to display the <see cref="N:GrapeCity.Win.Text" />.
            </remarks>
      <exception cref="T:System.ArgumentException">
              The <b>value</b> is not a valid <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextFormat" />.
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextBoxStyle" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextSubItemIndex">
      <summary>
              Gets or sets an integer value that represents the index of <b>SubItem</b> used to display the Text property.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value.
              <br /> The default is 0.
            </value>
      <remarks>
              If the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextFormat" /> property is <see cref="F:System.String.Empty" />, 
              the <see cref="N:GrapeCity.Win.Text" /> property equals the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> which is in the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" /> collection of the <see cref="!:SelectedItem" /> and is located by the index value of this property.
            </remarks>
      <exception cref="T:System.ArgumentException">The value is not valid.</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedText" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.UnSelectedImageIndex">
      <summary>
              Gets or sets the index of the image that is shown on the editor area when user the does not select an item in the drop-down list.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the image index.
             <br /> The default is -1.
            </value>
      <remarks>
              When the <see cref="!:SelectedItem" /> is <see langword="null" /> and 
              the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextBoxStyle" /> property is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.ImageOnly" /> or <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.Both" />, 
              an image is displayed in the edit area based on the index value.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.UseCompatibleDrawing">
      <summary>
            Gets or sets whether <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> uses compatible drawing when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyle" /> is <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList" />.
            </summary>
      <value>
        <see langword="true" /> if <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" /> uses compatible drawing; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLengthCodePage">
      <summary>
            Gets or sets the code page for the encoding that used to count the max length in byte.
            </summary>
      <value>
            An <see cref="T:System.Int32" /> value indictes the code page for the encoding. <b />
            The default is -1, indicates using the built-in byte length counting method instead of using encoding.
            </value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLengthUnit" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLengthUnit">
      <summary>
              Gets or sets the calculation methods of the <b>MaxLength</b> (based on byte or character).
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the calculational methods of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLength" /> are based on bytes,
              <see langword="false" /> if based on character.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit.Char" />.
            </value>
      <remarks>
              This property is related to the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLength" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.FocusPosition">
      <summary>
              Gets or sets the initial cursor position when the editor gets focus.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ClearCollection">
      <summary>
              Innernal use by designer.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>
            Starts the editing of a cell.
            </summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select everything</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.CancelEditing">
      <summary>
            Cancel the editing of a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.StopEditing">
      <summary>
            Stops the editing of a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Format(System.Object)">
      <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
      <param name="obj">Object in the data model with cell data to format</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetDisplayText(System.Object)">
      <summary>
            Gets the display text.
            </summary>
      <param name="value">The value.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetEditorValue">
      <summary>
            Gets the unformatted value in the editor control.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size required</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the editor control.
            </summary>
      <param name="editor">Name of the editor control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetHorizontalAlignment(System.Object)">
      <summary>
            Gets the horizontal alignment based on the value.
            </summary>
      <param name="value">Value of the horizontal alignment</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetVerticalAlignment(System.Object)">
      <summary>
            Gets the vertical alignment based on the value.
            </summary>
      <param name="value">Value of the vertical alignment</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>
            Determines whether the specified control is reusable.
            </summary>
      <param name="control">The control.</param>
      <returns>
        <c>true</c> if the specified control is reusable; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Parse(System.String)">
      <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.IsValid(System.Object)">
      <summary>
            Determines whether the specified value is valid.
            </summary>
      <param name="value">Specified value in the editor control</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.FindFirstMatchedAndCanBeSelectedIndex(System.String,System.Boolean)">
      <summary>
              Looks for the index of first <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> which matches the specified text in the dropdown list.
            </summary>
      <param name="text">
              A <see cref="T:System.String" /> value indicates the matched text.
            </param>
      <param name="ignoreCase">
              A <b>bool</b> value, true if we match string ignore upper or lower case; otherwise, <b>false.</b></param>
      <returns>
              A <b>int</b> value indicates the index of first <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" /> which matches the specified text in the dropdown list.
              If don't find ,then return -1.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.SetEditorValue(System.Object)">
      <summary>
            Sets the value of the editor control.
            </summary>
      <param name="value">Value of the editor control (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary that contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the cell is created.
              If <see langword="null" /> is returned, no shortcuts are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>.
              A <see cref="T:System.Type" /> list that contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method that allows derived classes to customize default side buttons when
              the cell is created.
              If <see langword="null" /> is returned, no side buttons are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">The default side buttons for initializing.</param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Initializes the editor control.
            </summary>
      <param name="control">The control.</param>
      <param name="appearance">The appearance.</param>
      <param name="zoomFactor">The zoom factor.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowSubEditor">
      <summary>
            Shows the subeditor control associated with the cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.CanOverflow">
      <summary>
            Determines whether a cell can overflow its data into an adjacent cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Clone">
      <summary>
            Creates and returns a cloned cell type.
            </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl">
      <summary>
              The editing control for GcComboBoxCellType.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            This API supports the .NET Framework infrastructure and is not intended to be used directly
            from your code.
            <para />
            Determines whether the specified key is a regular input key or a special key that requires
            preprocessing.
            </summary>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</param>
      <returns>
        <see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.
            </returns>
      <remarks>
            Call the <b>IsInputKey</b> method to determine whether the key specified by the keyData
            parameter is an input key that the control requires. This method is called during window
            message preprocessing to determine whether the specified input key should be
            preprocessed or sent directly to the control. If <b>IsInputKey</b> returns <see langword="true" />,
            the specified key is sent directly to the control. If <b>IsInputKey</b> returns <see langword="false" />,
            the specified key is preprocessed and only sent to the control if it is not consumed
            by the preprocessing phase. Keys that are preprocessed include the Tab, Return, Esc,
            and the Up Arrow, Down Arrow, Left Arrow, and Right Arrow keys.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>
            Moves the focus using the key exit event.
            </summary>
      <param name="e">The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> instance that contains the event data.</param>
      <remarks>
            When this <b>MoveFocusByKeyExit</b> method is called, focus will move.  The keys that are involved are  
            ExitKeys.CharInput, ExitKeys.CtrlRight, ExitKeys.NextControl, ExitKeys.Right, and ExitKeys.
            Tab moves the focus forward. Other ExitKeys move the focus backward.
            <br /><b>Notes for Inheritors: </b>
            The base method must be invoked when overriding it in the inherited class; 
            otherwise, the focus does not move.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.NextCell">
      <summary>
            Moves to the next cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.PreviousCell">
      <summary>
            Moves to the prevous cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the KeyDown event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            Raises the KeyPress event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.SubEditor">
      <summary>
            Gets the subeditor in the cell.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.AfterFocus">
      <summary>
            Occurs after the control gets focus.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>
            Raises the AfterFocus event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the GotFocus event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnGotFocus method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <br /><b>Notes to Inheritors:</b> When overriding OnGotFocus in a derived class, be sure to call the base class's OnGotFocus method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnDropDownOpened(System.Object,System.EventArgs)">
      <summary>
              Raises the <see cref="!:DropDownOpened" /> event.
            </summary>
      <param name="sender">
              A <see cref="T:System.Object" /> instance that indicates the event source.
            </param>
      <param name="e">
              A <see cref="T:System.EventArgs" /> instance that contains the event data.
            </param>
      <remarks>
              Raising an event invokes the event handler through a delegate. 
              <para />
              The <b>OnDropDownOpened</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
              <para /><b>Notes to Inheritors:</b> When overriding <b>OnDropDownOpened</b> in a derived class, be sure to call the base class's <b>OnDropDownOpened</b> method so that registered delegates receive the event. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnInvalidInput</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnInvalidInput</b> in a derived class, be sure to call the base class's <b>OnInvalidInput</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditorValue">
      <summary>
            Specifies what is written out to the data model for a selected item of GcComboBoxCellType.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditorValue.Text">
      <summary>
            [0] Writes the selected text of GcComboBox to the model
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditorValue.Index">
      <summary>
            [1] Writes the selected index of GcComboBox to the model
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditorValue.Value">
      <summary>
            [2] Writes the selected value of GcComboBox to the model
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType">
      <summary>
              Represents a <b>GcDateTimeCellType</b> class.
            </summary>
      <remarks>
              The GcDateTimeCell allows you to design a functional date-time input interface 
              quickly and efficiently.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.ClearCollection">
      <summary>
              Innernal use by designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.PaintByControl">
      <summary>
             Gets or sets a value that indicates how to paint the cell.
             If true, the cell uses the inner control's painting to paint the cell, in this case, the cell paints exactly the same as the editing control.
             All settings of the cell such as fields with different styles are shown when painting the cell. The cell's paint performance is slow if painting by the control,
             rather than painting the string directly. Also, the text in the cell cannot be selected when exporting to pdf.
             If false, performance is good but some settings do not take effect.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.ShowSubEditor">
      <summary>
            Shows the subeditor control associated with the cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.FocusPosition">
      <summary>
              Gets or sets the initial cursor position when the editor gets focus.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.ExcelExportFormat">
      <summary>
              Gets or sets the excel export format.
            </summary>
      <value>
              The excel export format.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DefaultActiveField">
      <summary>
              Gets or sets the default active field of the cell.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Views.Field" /> value that indicates the default active field.
            </value>
      <remarks>
              When the cell enters edit mode, the default active field gets the focus and caret first.
            </remarks>
      <exception cref="T:System.ArgumentException">
              The value is not a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.SerializationDefaultActiveFieldIndex">
      <summary>
             Internal use for serialization.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Fields">
      <summary>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateFieldCollection" /> that represents the items in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> object.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateFieldCollection" /> that represents the items in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />.
            </value>
      <remarks>
              This property determines how to display and edit the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> of this control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DisplayFields">
      <summary>
              Gets the display fields of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> object.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateDisplayFieldCollection" />
              object that indicates the collection of the display fields.
            </value>
      <remarks>
              This property determines how to display the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> of this control without input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.AlternateText">
      <summary>
              Gets the alternate text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> object.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText" /> value that indicates the alternate text.
            </value>
      <remarks>
              This property is set to show alternative text when the control value is empty era or <b>null</b> in edit mode and display mode.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.SideButtons">
      <summary>
              Gets a collection of side buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> value that indicates the collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed.
              They include the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />,  
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />, and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DropDownCalendar">
      <summary>
              Gets the settings for the drop-down calendar.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownCalendar" /> instance that indicates the settings for the drop-down calendar.
            </value>
      <remarks>
              The dropdown calendar control can be customized by setting this <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownCalendar" /> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <see cref="T:System.DateTime" /> value that indicates the default value of the editor.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property provides a hint for the user and is shown when the value is not completely entered.
              When a value is being typed, pressing a special shortcut key or key combination accepts the recommended value.
            </remarks>
      <exception cref="T:System.ArgumentException">The value isn't valid.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.AcceptsCrLf">
      <summary>
              Gets or sets a value that indicates how to process the CrLf characters when copying, cutting, or pasting the string.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration that indicates which mode the CrLf characters use when copying, cutting, and pasting the string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting causes the <b>GcDateTime</b> to be similar to the standard <b>TextBox</b> when copying, cutting, and pasting the string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.ValidateMode">
      <summary>
              Gets or sets the validation mode during control input.
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" /> enumeration values.  The default
              is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" />.
            </value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              A value that is not within the range of valid values for the enumeration was assigned to
              the property.
            </exception>
      <remarks>
        <para>
              If the <b>ValidateMode</b> property is set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" />,
              the control performs strict validation such as checking for leap-years and non-existing
              date values.  Also, automatic character filtering and field adjustments are made as the
              user enters data. For example, in the case of leap years, when the input mask is set to
              'yyyy.MM.dd', the user will not be able to enter February 29th, 2003. If the input mask
              is set to 'dd.MM.yyyy', entering February 29th, 2003 will automatically adjust the 29th
              to the 28th as soon as the last 3 is entered for the year.
            </para>
        <para>
              If this property is set to ValidateModeEx.Validate, the control
              performs loose validation which causes all fields to behave independently.
              For example, if the input mask is set to 'yyyy.MM.dd', the control allows
              you to enter a date such as February 31st, 2003 which normally does not exist as a date-time
              value.  The following table shows the valid range for the fields when ValidateModeEx.Validate is used.
            </para>
        <list type="table">
          <listheader>
            <term>Fields</term>
            <description>Valid Range</description>
          </listheader>
          <item>
            <term>yyyy</term>
            <description>1 - 9999</description>
          </item>
          <item>
            <term>yy</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>ee</term>
            <description>1 - 99</description>
          </item>
          <item>
            <term>MM</term>
            <description>1 - 12</description>
          </item>
          <item>
            <term>dd</term>
            <description>1 - 31</description>
          </item>
          <item>
            <term>HH</term>
            <description>0 - 23</description>
          </item>
          <item>
            <term>mm</term>
            <description>0 - 59</description>
          </item>
          <item>
            <term>ss</term>
            <description>0 - 59</description>
          </item>
        </list>
        <para>
              If this property is set to <see cref="T:ValidateModeEx" />, the
              control does not perform any validation.  The fields behave independently just as
              when set to <see cref="T:ValidateModeEx.Validate" />.  For example, if the
              input mask is set to 'yyyy.MM.dd', the control allows you to enter '0000.00.00' which
              is not a date-time value.  The following table shows the valid range for
              the fields when <see cref="T:ValidateModeEx" /> is used:
            </para>
        <list type="table">
          <listheader>
            <term>Fields</term>
            <description>Valid Range</description>
          </listheader>
          <item>
            <term>yyyy</term>
            <description>0 - 9999</description>
          </item>
          <item>
            <term>yy</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>ee</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>MM</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>dd</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>HH</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>mm</term>
            <description>0 - 99</description>
          </item>
          <item>
            <term>ss</term>
            <description>0 - 99</description>
          </item>
        </list>
        <para>
              This property only takes effect when entering data within the control.  The date-time value
              is validated as soon as focus leaves the control.
            </para>
        <para>
              During input, if the entered data is incomplete such as '2003.__.01', or a non date-time
              value such as '2002.02.31' is entered, the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" />
              property returns null.
            </para>
        <note type="cnotes">
              Performing spin actions causes date-time values to carry on in any mode of the
            <b>ValidateMode</b> property.  The valid range for the spin actions is equivalent
              to when entering data as shown in the tables above.
            </note>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.FieldsEditMode">
      <summary>
              Gets or sets the fields edit mode.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.FieldsEditMode" /> enumeration value that indicates the fields edit mode.
            <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellTypeEditMode.LeftSide" />.
            </value>
      <remarks>
              The <b>FieldsEditMode</b> property determines how to edit fields when the user enters data.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.ShowRecommendedValue">
      <summary>
              Gets or sets a value that indicates whether to show the recommended value.
            </summary>
      <value>
        <see langword="true" /> to show the recommended value; otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.RecommendedValue" /> property is shown when  <b>ShowRecommendedValue</b> is <see langword="true" /> and the value is not completely entered; otherwise, the value of the <b>RecommendedValue</b> property is not shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DropDown">
      <summary>
              Gets the drop-down settings for the drop-down function.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDown" /> instance that indicates the drop-down settings for the drop-down function.
            </value>
      <remarks>
              The drop-down behavior and the window appearance can be customized by setting this <b>DropDown</b> property.
              The property specifies whether to display the drop-down, whether to make it resizeable, the drop-down window direction, the
              drop-down window shadow, and the animations when opening and closing.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Spin">
      <summary>
              Gets the spin function settings.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin" /> value that indicates the spin function settings.
            </value>
      <remarks>
              The spin behaviors can be customized by setting this <b>Spin</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.MaxDate">
      <summary>
              Gets or sets the maximum allowable value when changing the field or value of the control using the spin setting.
            </summary>
      <value>
              A <see cref="T:System.DateTime" /> value that indicates the maximum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The value is less than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.MinDate">
      <summary>
              Gets or sets the minimum allowable value when changing the field or value of the control using the spin setting.
            </summary>
      <value>
              A <see cref="T:System.DateTime" /> value that indicates the minimum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The value is greater than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.MaxMinBehavior">
      <summary>
              Gets or sets the behavior when the new input value is outside of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxMinBehavior" /> enumeration value that indicates the behavior when the new input value is outside of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" />.
            <br />
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" />.
            </value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              The <b>value</b> is not a valid <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxMinBehavior" /> item.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DropDownPicker">
      <summary>
              Gets the settings for the drop-down picker.
            </summary>
      <value>
             A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker" /> instance that indicates the settings for the drop-down picker.
            </value>
      <remarks>
              The drop-down picker control can be customized by setting this <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DropDownPicker" /> property.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetEditorValue">
      <summary>
            Gets the unformatted value in the editor control.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.SetEditorValue(System.Object)">
      <summary>
            Sets the value of the editor control.
            </summary>
      <param name="value">Value of the editor control (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>
            Determines whether the specified control is reusable.
            </summary>
      <param name="control">The control.</param>
      <returns>
        <c>true</c> if the specified control is reusable; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Initializes the editor control.
            </summary>
      <param name="control">The control.</param>
      <param name="appearance">The appearance.</param>
      <param name="zoomFactor">The zoom factor.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary that contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the cell is created.
              If <see langword="null" /> is returned, no shortcuts are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>
            Starts the editing of a cell.
            </summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all the cell data</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.StopEditing">
      <summary>
            Stops the editing of a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Format(System.Object)">
      <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
      <param name="obj">Object in the data model with cell data to format</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Parse(System.String)">
      <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.FormatToClipboard(System.Object)">
      <summary>
            Formats to the Clipboard.
            </summary>
      <param name="obj">The object.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDisplayText(System.Object)">
      <summary>
            Gets the display text.
            </summary>
      <param name="value">The cell value.</param>
      <returns>The display text.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size required</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the editor control.
            </summary>
      <param name="editor">Name of the editor control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.IsValid(System.Object)">
      <summary>
            Determines whether the specified value is valid.
            </summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Clone">
      <summary>
            Creates and returns a base cell.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDefaultFields">
      <summary>
              Gets the default fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField" /> array that contains all default input fields.
            </returns>
      <remarks>
              The <b>GetDefaultFields</b> method allows derived classes to customize default fields when
              the control is created.
              If <see langword="null" /> is returned, no field is added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDefaultDisplayFields">
      <summary>
              Gets the default display fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" /> array that contains all default fields for display purposes.
            </returns>
      <remarks>
              The <b>GetDefaultDisplayFields</b> method allows derived classes to customize default display fields when
              the cell is created.
              If <see langword="null" /> is returned, no display field is added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>.
              A <see cref="T:System.Type" /> list that contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method allows derived classes to customize default side buttons when
              the cell is created.
              If <see langword="null" /> is returned, no side buttons are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">The default side buttons for initializing.</param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl">
      <summary>
              The editing control for GcDateTimeCellType.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>
            Moves the focus using the key exit event.
            </summary>
      <param name="e">The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> instance that contains the event data.</param>
      <remarks>
        <b>ExitKeys.CharInput</b>, <b>ExitKeys.CtrlRight</b>, <b>ExitKeys.NextControl</b>, 
            <b>ExitKeys.Right</b>, and <b>ExitKeys.Tab</b> move the focus forward.
            Other <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" /> move the focus backward.
            <note>
            The base method must be invoked when overriding it in the inherited class; otherwise, the focus does not move.
            </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</param>
      <returns>
        <see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.
            </returns>
      <remarks>
            Call the <b>IsInputKey</b> method to determine whether the key specified by the keyData parameter is an input key that the control uses. This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control. If <b>IsInputKey</b> returns <see langword="true" />, the specified key is sent directly to the control. If <b>IsInputKey</b> returns <see langword="false" />, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. Keys that are preprocessed include the Tab, Return, Esc, and the Up Arrow, Down Arrow, Left Arrow, and Right Arrow keys.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the KeyDown event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            Raises the KeyPress event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnGotFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnGotFocus</b> in a derived class, be sure to call the base class's <b>OnGotFocus</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnEnter(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnEnter</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnEnter</b> in a derived class, be sure to call the base class's <b>OnEnter</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.NextFieldThenCell">
      <summary>
            Moves to the next field then the cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.NextCell">
      <summary>
            Moves to the next cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.PreviousCell">
      <summary>
            Moves to the prevous cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.PreviousFieldThenCell">
      <summary>
            Moves to the previous field then the cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.Font">
      <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
      <value>
            The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.
            <br />The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
        <para>
            The <b>Font</b> property is an ambient property. An ambient property is a control property that,
            if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
            <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. For more information about
            ambient properties, see the <see cref="T:System.Windows.Forms.AmbientProperties" /> class or the <see cref="T:System.Windows.Forms.Control" /> class overview.
            </para>
        <para></para>
        <para>
            Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>.
            However, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnInvalidInput</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnInvalidInput</b> in a derived class, be sure to call the base class's <b>OnInvalidInput</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.SubEditor">
      <summary>
            Gets the subeditor in the cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnDropDownClosed(System.EventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownClosed" /> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnDropDownClosed method also allows derived classes to handle the event without attaching a delegate.
            This is the preferred technique for handling the event in a derived class.
            <br /><b>Notes to Inheritors:</b> When overriding OnDropDownClosed in a derived class,
            be sure to call the base class's OnDropDownClosed method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpening" /> event.
            </summary>
      <param name="e">A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnDropDownOpening method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <br /><b>Notes to Inheritors:</b> When overriding OnDropDownOpening in a derived class, be sure to call the base class's OnDropDownOpening method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.AfterFocus">
      <summary>
            Occurs after the control gets focus.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>
            Raises the AfterFocus event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType">
      <summary>
              Represents a <b>GcMaskCellType</b> class.
            </summary>
      <remarks>
              The GcMaskCellType provides number input for positive and negative values and 
              allows you to design a functional numeric input interface quickly and efficiently. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" /> class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.ClearCollection">
      <summary>
              Innernal use by designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.PaintByControl">
      <summary>
             Gets or sets a value that indicates how to paint the cell.
             If true, the cell uses the inner control's painting to paint the cell, in this case, the cell paints exactly the same as the editing control.
             All settings of the cell such as fields with different styles are shown when painting the cell. The cell's paint performance is slow if painting by the control,
             rather than painting the string directly. Also, the text in the cell cannot be selected when exporting to pdf.
             If false, performance is good but some settings do not take effect.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.ShowSubEditor">
      <summary>
            Shows the subeditor control associated with the cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.FocusPosition">
      <summary>
              Gets or sets the initial cursor position when the editor gets focus.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.ExcelExportFormat">
      <summary>
              Gets or sets the excel export format.
            </summary>
      <value>
              The excel export format.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.DefaultActiveField">
      <summary>
              Gets or sets the default active field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> value that indicates the default active field.
              <br /> The default is <see langword="null" />.
            </value>
      <remarks>
              When the control gets focus, the default active field gets the focus and caret first.
            </remarks>
      <exception cref="T:System.ArithmeticException">
              The specified field does not exist in the FieldCollection.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.SerializationDefaultActiveFieldIndex">
      <summary>
             Internal use for serialization.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Fields">
      <summary>
              Gets the fields of the <see cref="T:MaskFieldCollection"></see>.
            </summary>
      <value>
              A <see cref="T:FieldCollection"></see> that represents the items in the <see cref="T:GcMask"></see>.
            </value>
      <remarks>
              This property determines how to display the <see cref="N:GrapeCity.Win.Value" /> of this control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.AlternateText">
      <summary>
              Gets a value that indicates alternate text settings.
            </summary>
      <value>
               A <b>MaskAlternateText</b> value that indicates the alternate text settings.
            </value>
      <remarks>
              This property determines the text and text's color when the control's value is <see cref="F:System.String.Empty" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.AutoConvert">
      <summary>
              Gets or sets whether to automatically convert the entered characters according to
              the input control.
            </summary>
      <value>
        <see langword="true" /> if characters are automatically converted according to the input control;
              otherwise, <see langword="false" />. 
              <br />
              The default is <see langword="true" />.
            </value>
      <remarks>
              If the <b>AutoConvert</b> property is set to <see langword="true" />, all convertible characters are automatically converted accordingly to the input mask. For example, if the input mask is set to "A", then pressing a lower case character automatically converts the character into upper case. 
              <para />
              If SBCS is entered in a DBCS mask input, the entered character is automatically converted to DBCS. Also a DBCS space is automatically converted to a SBCS space when the control allows only SBCS. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.SideButtons">
      <summary>
              Gets a collection of side buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> that indicates the collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed.
              Buttons include the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />,
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />, and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the recommended value.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property provides a hint for user that is shown when the value is not completely entered.
              
              Pressing a special shortcut key or key combination accepts the recommended value when a value is being typed. 
            </remarks>
      <exception cref="T:System.ArgumentException">
              Occurs when an invalid value that does not match the current pattern
              is set for the <b>RecommendedValue</b> property.
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ShowRecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.AcceptsCrLf">
      <summary>
            Gets or sets how to process the CrLf characters when copying, cutting, or pasting the string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration that indicates which mode the CrLf characters use when copying, cutting, or pasting a string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting causes the <b>GcMask</b> to be similar to the standard <b>TextBox</b> when copying, cutting, or pasting a string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.AcceptsTabChar">
      <summary>
            Gets or sets how to process the Tab character when copying, cutting, or pasting a string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> enumeration that indicates which mode the Tab character uses when copying, cutting, or pasting a string.
            <br />The default is <b>TabCharMode.NoControl</b>.
            </value>
      <remarks>
              The <b>TabCharMode.Cut</b> setting causes <b>GcMask</b> to be similar to the standard <b>TextBox</b> when copying, cutting, or pasting a string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.ShowRecommendedValue">
      <summary>
              Gets or sets whether to show the recommended value.
            </summary>
      <value>
        <see langword="true" /> to show the recommended value; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.RecommendedValue" /> property is shown when <b>ShowRecommendedValue</b>
              is <see langword="true" /> and the value is not fully entered; otherwise, the value of the <b>RecommendedValue</b> property is not shown.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.RecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Spin">
      <summary>
              Gets information for the spin function.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Spin" /> object that indicates the spin behavior.
            </value>
      <remarks>
              The spin behavior can be customized by setting this <b>Spin</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.PasswordRevelationMode">
      <summary>
              Gets or sets the password revelation mode.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.PasswordRevelationMode" /> value, indicates the password revelation mode.
              <br />
              Default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.None">None</see>, indicates never reveal the typed password.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetEditorValue">
      <summary>
            Gets the unformatted value in the editor control.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.SetEditorValue(System.Object)">
      <summary>
            Sets the value of the editor control.
            </summary>
      <param name="value">Value of the editor control (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>
            Determines whether the specified control is reusable.
            </summary>
      <param name="control">The control.</param>
      <returns>
        <c>true</c> if the specified control is reusable; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Initializes the editor control.
            </summary>
      <param name="control">The control.</param>
      <param name="appearance">The appearance.</param>
      <param name="zoomFactor">The zoom factor.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary that contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the cell is created.
              If <see langword="null" /> is returned, no shortcuts are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>
            Starts cell editing.
            </summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all the cell data</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.StopEditing">
      <summary>
            Stops cell editing.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Format(System.Object)">
      <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
      <param name="obj">Object in the data model with cell data to format</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Parse(System.String)">
      <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.FormatToClipboard(System.Object)">
      <summary>
            Formats to the Clipboard.
            </summary>
      <param name="obj">The object.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetDisplayText(System.Object)">
      <summary>
            Gets the display text.
            </summary>
      <param name="value">The cell value.</param>
      <returns>The display text.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size required</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the editor control.
            </summary>
      <param name="editor">Name of the editor control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.IsValid(System.Object)">
      <summary>
            Determines whether the specified value is valid.
            </summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetHorizontalAlignment(System.Object)">
      <summary>
            Gets the horizontal alignment based on the value.
            </summary>
      <param name="value">Value of the horizontal alignment</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetVerticalAlignment(System.Object)">
      <summary>
            Gets the vertical alignment based on the value.
            </summary>
      <param name="value">Value of the vertical alignment</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Clone">
      <summary>
            Creates and returns a base cell.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetDefaultMaskFields">
      <summary>
              Gets the default display fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" /> array that contains all default fields for display purposes.
            </returns>
      <remarks>
              The <b>GetDefaultMaskFields</b> method allows derived classes to customize default display fields when
              the cell is created.
              If <see langword="null" /> is returned, no display field is added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>.
              A <see cref="T:System.Type" /> list that contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method allows derived classes to customize default side buttons when
              the cell is created.
              If <see langword="null" /> is returned, no side buttons are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">The default side buttons for initializing.</param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl">
      <summary>
              The editing control for GcMaskCellType.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>
            Moves the focus using the key exit event.
            </summary>
      <param name="e">The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> instance that contains the event data.</param>
      <remarks>
        <b>ExitKeys.CharInput</b>, <b>ExitKeys.CtrlRight</b>, <b>ExitKeys.NextControl</b>, 
            <b>ExitKeys.Right</b>, and <b>ExitKeys.Tab</b> move the focus forward.
            Other <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" /> move the focus backward.
            <note>
            The base method must be invoked when overriding it in the inherited class; otherwise, the focus does not move.
            </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</param>
      <returns>
        <see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.
            </returns>
      <remarks>
            Call the <b>IsInputKey</b> method to determine whether the key specified by the keyData parameter is an input key that the control uses. This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control. If <b>IsInputKey</b> returns <see langword="true" />, the specified key is sent directly to the control. If <b>IsInputKey</b> returns <see langword="false" />, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. Keys that are preprocessed include the Tab, Return, Esc, and the Up Arrow, Down Arrow, Left Arrow, and Right Arrow keys.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the KeyDown event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            Raises the KeyPress event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnGotFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnGotFocus</b> in a derived class, be sure to call the base class's <b>OnGotFocus</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnEnter(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnEnter</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnEnter</b> in a derived class, be sure to call the base class's <b>OnEnter</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.NextCell">
      <summary>
            Moves to the next cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.PreviousCell">
      <summary>
            Moves to the prevous cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.Font">
      <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
      <value>
            The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.
            <br />The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
        <para>
            The <b>Font</b> property is an ambient property. An ambient property is a control property that,
            if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
            <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. For more information about
            ambient properties, see the <see cref="T:System.Windows.Forms.AmbientProperties" /> class or the <see cref="T:System.Windows.Forms.Control" /> class overview.
            </para>
        <para></para>
        <para>
            Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>;
            however, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnInvalidInput</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnInvalidInput</b> in a derived class, be sure to call the base class's <b>OnInvalidInput</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.SubEditor">
      <summary>
            Gets the subeditor in the cell.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.AfterFocus">
      <summary>
            Occurs after the control gets focus.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>
            Raises the AfterFocus event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType">
      <summary>
              Represents a <b>GcNumberCellType</b> class.
            </summary>
      <remarks>
              The GcNumberCellType provides number input for positive and negative values and 
              allows you to design a functional numeric input interface quickly and efficiently. 
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ClearCollection">
      <summary>
              Innernal use by designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.PaintByControl">
      <summary>
             Gets or sets a value that indicates how to paint the cell.
             If true, the cell uses the inner control's painting to paint the cell, in this case, the cell paints exactly the same as the editing control.
             All settings of the cell such as fields with different styles are shown when painting the cell. The cell's paint performance is slow if painting by the control,
             rather than painting the string directly. Also, the text in the cell cannot be selected when exporting to pdf.
             If false, performance is good but some settings do not take effect.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ShowSubEditor">
      <summary>
            Shows the subeditor control associated with the cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.FocusPosition">
      <summary>
              Gets or sets the initial cursor position when the editor gets focus.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ExcelExportFormat">
      <summary>
              Gets or sets the excel export format.
            </summary>
      <value>
              The excel export format.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Fields">
      <summary>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberFields" /> object that represents the items in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> object.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberFields" /> object that represents the items in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> object.
            </value>
      <remarks>
              This property determines how to display and edit the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> of this control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.DisplayFields">
      <summary>
              Gets the display fields of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> object.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldCollection" />
              object that indicates the collection of the display fields.
            </value>
      <remarks>
              This property determines how to display the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /> object of this control without input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.AlternateText">
      <summary>
              Gets the alternate text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> control.
            </summary>
      <value>
              A <b>NumberAlternateText</b> value that indicates the NumberAlternateText.
            </value>
      <remarks>
              This property displays alternate text when the value of the control is Zero or Null in edit mode or display mode.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.SideButtons">
      <summary>
              Gets a collection of side buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> value that indicates the collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed.
              They include the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />,  
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />, and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.PopUpCalculator">
      <summary>
              Gets the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.PopUpCalculator" /> instance which the user can use to customize the pop-up calculator.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.PopUpCalculator" /> instance.
            </value>
      <remarks>
              The pop-up calculator control can be customized by setting this <b>PopUpCalculator</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.DropDownCalculator">
      <summary>
              Gets the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.DropDownCalculator" /> instance which the user can use to customize the drop-down calculator.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" /> instance.
            </value>
      <remarks>
              The drop-down calculator control can be customized by setting this <b>DropDownCalculator</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the recommended value.
              <br /> The default is <see cref="F:System.Decimal.Zero" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property provides a hint for the user that is shown before the value is fully entered. 
              When a value is being typed, pressing a special shortcut key or key combination accepts the recommended value. 
            </remarks>
      <exception cref="T:System.ArgumentException">
              Occurs when an invalid value that does not match the current pattern
              is set with the RecommendedValue property.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.AcceptsCrLf">
      <summary>
            Gets or sets a value that indicates how to process the CrLf characters when copying, cutting, or pasting a string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration that indicates which mode the CrLf characters use when copying, cutting, and pasting a string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting makes the <b>GcNumber</b> behave the same as the standard <b>TextBox</b> when copying, cutting, and pasting a string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.AllowDeleteToNull">
      <summary>
              Gets or sets a value that indicates whether to allow a null value when deleting the contents.
            </summary>
      <value>
        <see langword="true" /> if allowing a null value when deleting; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.NegativeColor">
      <summary>
              Gets or sets the color when the value sign of this control is negative.
            </summary>
      <value>
              The color of the negative value.
            </value>
      <remarks>
              If the <see cref="N:GrapeCity.Win.Value" /> property is smaller than zero and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.UseNegativeColor" /> property is <see langword="true" />, the text color uses this property value.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.UseNegativeColor">
      <summary>
              Gets or sets a value that indicates whether to use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.NegativeColor" /> property to display the negative value.
            </summary>
      <value>
        <see langword="true" /> means use <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.NegativeColor" /> to render the negative value; 
              <see langword="false" /> means use <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ForeColor" /> to render the negative value.
              <br /> The default is <see langword="true" />.
            </value>
      <remarks>
              If the <see cref="N:GrapeCity.Win.Value" /> property is smaller than zero and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.UseNegativeColor" /> property is <see langword="true" />, 
              the text color uses this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ValueSign">
      <summary>
              Gets or sets the value sign of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" /> value that indicates the value sign.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />.
            </value>
      <remarks>
              The <b>ValueSign</b> property determines what value can be accepted. 
              If the value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Positive" />, only numbers that are not smaller than zero are allowed. 
              If the value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Negative" />, only numbers that are not bigger than zero are allowed. 
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" /> means all numbers are allowed.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.RoundPattern">
      <summary>
              Gets or sets the round pattern of the value.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.RoundPattern" /> value that indicates the round pattern of the value.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.AcceptsDecimal">
      <summary>
            Gets or sets a value that indicates if the decimal part is accepted when pasting a value that includes the decimal part when the decimal part is not allowed by the format setting.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode" /> enumeration that indicates whether to accept the decimal part when pasting a value that includes the decimal part when the decimal part is not allowed by the format setting.
            <br />The default is <b>DecimalMode.Filter</b>.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ShowRecommendedValue">
      <summary>
              Gets or sets a value that indicates whether to show the recommended value.
            </summary>
      <value>
        <see langword="true" /> to show the recommended value; otherwise, <see langword="false" />.
            <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RecommendedValue" /> property is shown when  <b>ShowRecommendedValue</b> is <see langword="true" /> and the value is not completely entered; otherwise, the value of the <b>RecommendedValue</b> property is not shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.DropDown">
      <summary>
              Gets the drop-down settings for the drop-down function.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDown" /> instance that indicates the drop-down settings for the drop-down function.
            </value>
      <remarks>
              The drop-down behavior and the window appearance can be customized by setting this <b>DropDown</b> property.
              The property specifies whether to display the drop-down, whether to make it resizeable, the drop-down window direction, the
              drop-down window shadow, and the animations when opening and closing.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Spin">
      <summary>
              Gets the spin function settings.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin" /> value that indicates the spin function settings.
            </value>
      <remarks>
              The spin behaviors can be customized by setting this <b>Spin</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxValue">
      <summary>
              Gets or sets the maximum allowable value when using the spin option.
            </summary>
      <value>
              A <see cref="T:System.Decimal" /> value that indicates the maximum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MinValue" /> or greater than the default value.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MinValue">
      <summary>
              Gets or sets the minimum allowable value when using the spin option.
            </summary>
      <value>
              A <see cref="T:System.Decimal" /> value that indicates the minimum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is greater than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxValue" /> or less than the default value.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxMinBehavior">
      <summary>
            Gets or sets the behavior when the new input value is outside of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MinValue" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxValue" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxMinBehavior" /> enumeration value that indicates the behavior when the new input value is outside of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MinValue" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxValue" />.
              <br />
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.PromptChar">
      <summary>
              Gets or sets the character used as a prompt for input.
            </summary>
      <remarks>
              This property is not supported with <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.TabAction">
      <summary>
              Gets or sets whether the tab key moves the focus between controls or between
              fields within the control.
            </summary>
      <remarks>
              This property is not supported with <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ShowLiterals">
      <summary>
              Gets or sets whether to display the literals during user entry.
            </summary>
      <remarks>
              This property is not supported with <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetEditorValue">
      <summary>
            Gets the unformatted value in the editor control.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.SetEditorValue(System.Object)">
      <summary>
            Sets the value of the editor control.
            </summary>
      <param name="value">Value of the editor control (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>
            Determines whether the specified control is reusable.
            </summary>
      <param name="control">The control.</param>
      <returns>
        <c>true</c> if the specified control is reusable; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Initializes the editor control.
            </summary>
      <param name="control">The control.</param>
      <param name="appearance">The appearance.</param>
      <param name="zoomFactor">The zoom factor.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary that contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the cell is created.
              If <see langword="null" /> is returned, no shortcuts are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>
            Starts the editing of a cell.
            </summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all the cell data</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.StopEditing">
      <summary>
            Stops the editing of a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Format(System.Object)">
      <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
      <param name="obj">Object in the data model with cell data to format</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Parse(System.String)">
      <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.FormatToClipboard(System.Object)">
      <summary>
            Formats to the Clipboard.
            </summary>
      <param name="obj">The object.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetDisplayText(System.Object)">
      <summary>
            Gets the display text.
            </summary>
      <param name="value">The cell value.</param>
      <returns>The display text.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size required</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the editor control.
            </summary>
      <param name="editor">Name of the editor control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.IsValid(System.Object)">
      <summary>
            Determines whether the specified value is valid.
            </summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetHorizontalAlignment(System.Object)">
      <summary>
            Gets the horizontal alignment based on the value.
            </summary>
      <param name="value">Value of the horizontal alignment</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetVerticalAlignment(System.Object)">
      <summary>
            Gets the vertical alignment based on the value.
            </summary>
      <param name="value">Value of the vertical alignment</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Clone">
      <summary>
            Creates and returns a base cell.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetDefaultDisplayFields">
      <summary>
              Gets the default display fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" /> array that contains all default fields for display purposes.
            </returns>
      <remarks>
              The <b>GetDefaultDisplayFields</b> method allows derived classes to customize default display fields when
              the cell is created.
              If <see langword="null" /> is returned, no display field is added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>.
              A <see cref="T:System.Type" /> list that contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method allows derived classes to customize default side buttons when
              the cell is created.
              If <see langword="null" /> is returned, no side buttons are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">The default side buttons for initializing.</param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl">
      <summary>
              The editing control for GcNumberCellType.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>
            Moves the focus using the key exit event.
            </summary>
      <param name="e">The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> instance that contains the event data.</param>
      <remarks>
        <b>ExitKeys.CharInput</b>, <b>ExitKeys.CtrlRight</b>, <b>ExitKeys.NextControl</b>, 
            <b>ExitKeys.Right</b>, and <b>ExitKeys.Tab</b> move the focus forward.
            Other <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" /> move the focus backward.
            <note>
            The base method must be invoked when overriding it in the inherited class; otherwise, the focus does not move.
            </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</param>
      <returns>
        <see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.
            </returns>
      <remarks>
            Call the <b>IsInputKey</b> method to determine whether the key specified by the keyData parameter is an input key that the control uses. This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control. If <b>IsInputKey</b> returns <see langword="true" />, the specified key is sent directly to the control. If <b>IsInputKey</b> returns <see langword="false" />, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. Keys that are preprocessed include the Tab, Return, Esc, and the Up Arrow, Down Arrow, Left Arrow, and Right Arrow keys.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the KeyDown event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            Raises the KeyPress event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnGotFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnGotFocus</b> in a derived class, be sure to call the base class's <b>OnGotFocus</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnEnter(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnEnter</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnEnter</b> in a derived class, be sure to call the base class's <b>OnEnter</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.NextCell">
      <summary>
            Moves to the next cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.PreviousCell">
      <summary>
            Moves to the prevous cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.Font">
      <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
      <value>
            The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.
            <br />The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
        <para>
            The <b>Font</b> property is an ambient property. An ambient property is a control property that,
            if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
            <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. For more information about
            ambient properties, see the <see cref="T:System.Windows.Forms.AmbientProperties" /> class or the <see cref="T:System.Windows.Forms.Control" /> class overview.
            </para>
        <para></para>
        <para>
            Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>.
            However, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnInvalidInput</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnInvalidInput</b> in a derived class, be sure to call the base class's <b>OnInvalidInput</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.SubEditor">
      <summary>
            Gets the subeditor in the cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnDropDownClosed(System.EventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownClosed" /> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnDropDownClosed method also allows derived classes to handle the event without attaching a delegate.
            This is the preferred technique for handling the event in a derived class.
            <br /><b>Notes to Inheritors:</b> When overriding OnDropDownClosed in a derived class,
            be sure to call the base class's OnDropDownClosed method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpening" /> event.
            </summary>
      <param name="e">A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnDropDownOpening method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <br /><b>Notes to Inheritors:</b> When overriding OnDropDownOpening in a derived class, be sure to call the base class's OnDropDownOpening method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnPopUpOpening(GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpening" /> event.
             </summary>
      <param name="e">
               A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnPopUpOpening</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnPopUpOpening</b> in a derived class, be sure to call the base class's <b>OnPopUpOpening</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnPopUpClosed(System.EventArgs)">
      <summary>
               Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpClosed" /> event.
             </summary>
      <param name="e">
               A <see cref="T:System.EventArgs" /> instance that contains the event data.
             </param>
      <remarks>
               Raising an event invokes the event handler through a delegate.
            <para />
              The <b>OnPopUpClosed</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
              When overriding <b>OnPopUpClosed</b> in a derived class, be sure to call the base class's <b>OnPopUpClosed</b> method so that registered delegates receive the event.
             </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.AfterFocus">
      <summary>
            Occurs after the control gets focus.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>
            Raises the AfterFocus event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType">
      <summary>
              Represents a <b>GcTextBoxCellType</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType" /> class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AcceptsCrLf">
      <summary>
              Gets or sets a value that indicates how to process the CrLf characters when copying, cutting, or pasting a string.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration that indicates which mode the CrLf characters use when copying, cutting, and pasting a string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting causes the <b>GcTextBox</b> to be similar to the standard <b>TextBox</b> when copying, cutting, and pasting a string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AcceptsTabChar">
      <summary>
            Gets or sets a value that indicates how to process the Tab characters when copying, cutting, or pasting the string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> enumeration that indicates which mode the Tab characters use when copying, cutting, and pasting a string.
            <br />The default is <b>TabCharMode.NoControl</b>.
            </value>
      <remarks>
              This property only takes effect when the cell is in edit mode.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AllowSpace">
      <summary>
              Gets or sets the allow space settings.
            </summary>
      <value>
              An <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AllowSpace" /> enumeration that indicates which type of space character can be accepted.
              <br />The default is <b>AllowSpace.Both</b>.
            </value>
      <remarks>
        <para>
              Use the <b>AllowSpace</b> property to specify which kind of space will be allowed in the text.
              </para>
        <para></para>
        <para>
                If <b>AllowSpace</b> is <b>None</b>, this <b>GcTextBox</b> does not accept a space.
                The <b>AllowSpace.Narrow</b> setting means the SBCS space is allowed.
                The <b>AllowSpace.Wide</b> setting means the DBCS space is allowed.
                The <b>AllowSpace.Both</b> setting means all kinds of spaces are allowed.
              </para>
        <para></para>
        <note>
                If the AutoConvert propety is <see langword="true" /> and the AllowSpace setting is <b>AllowSpace.Wide</b>, the control
                automatically converts the SBCS space to a DBCS space when user enters a SBCS space character. The other settings have similar behavior.
                The <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Format(System.Object)" /> property is always used with the <b>AllowSpace</b> property.
              </note>
      </remarks>
      <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.FormatString" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AlternateText">
      <summary>
              Gets the alternate text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText" /> value that indicates the alternate text.
            </value>
      <remarks>
              If the current value is <see cref="F:System.String.Empty" /> and this control has input focus, this <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" /> property equals the
              <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.Null" /> setting, which is not null. The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" /> property
              equals the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.DisplayNull" /> setting if the current value is <see langword="null" />
              and this control does not contain the input focus.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoComplete">
      <summary>
              Gets the automatic complete related settings.
            </summary>
      <value>
              The automatic complete.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoCompleteCustomSource">
      <summary>
              Gets or sets a custom <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> to use
              when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" /> property is set to CustomSource.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> to use with <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" />.
            <br />The default is <see langword="null" />.
            </value>
      <remarks>
        <para>
              Use the <b>AutoCompleteCustomSource</b>, <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" />,
              and <b>AutoCompleteSource</b> properties to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />
              that automatically completes the input string by comparing the prefix being entered to the
              prefixes of all strings in a maintained source. This is useful for TextBox controls in which
              URLs, addresses, file names, or commands are frequently entered.
            <para></para><para>
              The use of the <b>AutoCompleteCustomSource</b> property is optional, but you must
              set the <b>AutoCompleteSource</b> property to CustomSource in order to use
            <b>AutoCompleteCustomSource</b>.
            </para><para></para><para>
              You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b>
              properties together.
            </para></para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoCompleteMode">
      <summary>
              Gets or sets an option that controls how automatic completion works for
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> control.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" /> values.
              The values are AutoAppend, AutoSuggest, AutoSuggestAppend, and None.
            <br />The default is <b>None</b>.
            </value>
      <remarks>
        <para>
              Use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteCustomSource" />, <b>AutoCompleteMode</b>,
              and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" /> properties to create a <b>GcTextBox</b> that automatically
              completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.
              This is useful for <b>GcTextBox</b> controls in which URLs, addresses, file names, or commands are frequently entered.
            </para>
        <para></para>
        <para>
              The use of the <b>AutoCompleteCustomSource</b> property is optional,
              but you must set the <b>AutoCompleteSource</b> property to <b>CustomSource</b>
              in order to use <b>AutoCompleteCustomSource</b>.
            </para>
        <para></para>
        <para>
              You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b>
              properties together.
            </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoCompleteSource">
      <summary>
              Gets or sets a value that specifies the source of strings used for automatic completion.
            </summary>
      <value>
              One of the values of System.Windows.Forms.AutoCompleteSource. The options
              are AllSystemSources, AllUrl, FileSystem, HistoryList, RecentlyUsedList,
              CustomSource, and None. <br />The default is <b>None</b>.
            </value>
      <remarks>
        <para>
              Use the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteCustomSource" />,<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" />,
              and <b>AutoCompleteSource</b> properties to create a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />
              that automatically completes input strings by comparing the prefix being entered to the
              prefixes of all strings in a maintained source. This is useful for <b>GcTextBox</b> controls
              in which URLs, addresses, file names, or commands are frequently entered.
            </para>
        <para></para>
        <para>
              The use of the <b>AutoCompleteCustomSource</b> property is optional, but you must set the
            <b>AutoCompleteSource</b> property to <b>CustomSource</b> in order to use
            <b>AutoCompleteCustomSource</b>.
            </para>
        <para></para>
        <para>
              You must use the <b>AutoCompleteMode</b> and <b>AutoCompleteSource</b> properties together.
            </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoConvert">
      <summary>
              Gets or sets whether to automatically convert the entered characters
              according to the input mask.
            </summary>
      <value>
              True if characters are automatically converted according to the input mask;
              otherwise, false. <br />The default is <see langword="true" />.
            </value>
      <remarks>
        <para>
              If the <b>AutoConvert</b> property is set to true, all convertible characters are 
              automatically converted accordingly to the input mask. For example, if 
              the input mask is "A", hitting a lower case character causes the control to automatically
              convert the character to upper case.
            </para>
        <para>
              If SBCS is entered in a DBCS mask input, the entered character is automatically
              converted to DBCS. Also a DBCS space is automatically converted to a SBCS space
              when the control allows only SBCS.
            </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Format" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.DisplayAlignment">
      <summary>
              Gets or sets the text alignment when displaying the horizontal axis when the control does not have input focus.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DisplayAlignment" /> enumeration values that specifies
              how text is aligned in the control. <br />The default is <b>DisplayAlignment.None</b>.
            </value>
      <remarks>
              This property is used to display text with different character spacing settings.
            <note>
              If the text of this <b>GcTextBox</b> is longer than this control's width, the character spacing effect disappears.
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.DropDown">
      <summary>
              Gets the drop-down settings used to customize the drop-down function.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDown" /> instance that contains drop-down window settings.
            </value>
      <remarks>
              The drop-down behavior and the window appearance can be customized by setting this <b>DropDown</b> property.
              The property specifies whether to enable the display, whether to resize, the drop-down window direction, the
              drop-down window shadow, and animations used when opening and closing.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.DropDownEditor">
      <summary>
              Gets the settings for the drop-down editor.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownEditor" /> instance that indicates the settings for the drop-down editor.
            </value>
      <remarks>
              The drop-down window can be customized by setting this <b>DropDownEditor</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Ellipsis">
      <summary>
              Gets or sets a value that indicates how the ellipsis character (...) appears,
              denoting that the <b>GcTextBox</b> text extends beyond the specified length of the <b>GcTextBox</b>.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" /> enumeration,
            <b>None</b>, means no ellipsis string is shown.
            <b>EllipsisEnd</b> means to trim the end of the string with the character.
            <b>EllipsisPath</b>, means to trim the center of the string with the character.
            <b>EllipsisWord</b>, means to trim the end of the string with the word.
            <br />The default is <b>EllipsisMode.None</b>.
            </value>
      <remarks>
              This <b>Ellipsis</b> property only takes effect when using <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />.
              When the text is longer than this control's width and this control does not have focus,
              the ellipsis string, specified by the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.EllipsisString" />
              property, is displayed.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> isn't a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.EllipsisString">
      <summary>
              Gets or sets what is shown as an ellipsis when the text width is longer than the control.
            </summary>
      <value>
              A <b>string</b> value that indicates the string used as an ellipsis.
            <br />The default is <b>(...)</b>.
            </value>
      <remarks>
              This property specifies the string that is used when <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Ellipsis" /> is set to <b>EllipsisMode.EllipsisEnd</b>
              or <b>EllipsisMode.EllipsisPath</b></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.FormatString">
      <summary>
              Gets or sets the input format to use in the control.
            </summary>
      <value>
              The string that is used to control how text is entered.
            <br />The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              This property specifies what kind of characters and symbols can be entered.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GridLine">
      <summary>
              Gets or sets a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> that indicates the grid line style for each line.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> that indicates the grid line style for each line.
            </value>
      <remarks>
              This property is used when grid lines are needed between each text line.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.LineSpace">
      <summary>
              Gets or sets the line space between two adjacent lines.
            </summary>
      <value>
              The <b>int</b> value that indicates the line space between two adjacent lines.
            <br />The default is <b>0</b>.
            </value>
      <remarks>
              The <b>LineSpace</b> property indicates the spaces between text lines.
            <note>
              This property only takes effect when the Multiline property is true.
            </note></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
              If value less than zero, an ArgumentOutOfRangeException will be thrown.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLength">
      <summary>
              Gets or sets the maximum number of characters or bytes that the control can hold.
            </summary>
      <value>
              The number of characters or bytes (determined by the
            <b>LengthAsByte</b> property) 
              that can be entered into the control. <br />The default is <b>zero</b>.
            </value>
      <remarks>
              The <b>MaxLength</b> property allows you to limit the number of characters
              a user can enter in the control. The default value is 0,
              which does not limit the number of characters. Any number greater than 0 indicates
              the maximum number of characters.
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLengthUnit" /> effects the display results with the <b>MaxLength</b> property.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
              If the value is less than zero, an ArgumentOutOfRangeException is thrown.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLengthUnit">
      <summary>
              Gets or sets whether the maximum number of characters allowed in the control
              are handled based on bytes, characters, or text elements.
            </summary>
      <value>
              The value is true if the <b>MaxLength</b> is based on byte;
              otherwise, based on character.
            <br />The default is <b>LengthUnit.Char</b>.
            </value>
      <remarks>
              Determines the unit for counting the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLength" /> property.
              The value <b>LengthUnit.Byte</b> means the MaxLength is counted by bytes.
              The value <b>LengthUnit.Char</b> means the MaxLength is counted by characters.
              The value <b>LengthUnit.TextElement</b> means the MaxLength is counted by text elements.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLineCount">
      <summary>
              Gets or sets the maximum number of acceptable lines.
            </summary>
      <value>
              An <b>int</b> value that indicates the maximum number of lines.
            <br />The default is <b>zero</b>.
            </value>
      <remarks>
        <b>MaxLineCount</b> limits the acceptable lines of text when the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CountWrappedLine" />
              property is <see langword="true" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Muilitline" /> property is <see langword="true" /> as well.
              The default value of this property is zero, which means no limit.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CountWrappedLine" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Multiline">
      <summary>
              Gets or sets whether the control can accept and display multiple lines of text.
            </summary>
      <value>
              True if the control is a multiline control; otherwise, false. 
            <br />The default is <see langword="false" />.
            </value>
      <remarks>
        <para>
              A multiple-line control wraps text as the user types text extending beyond the text box.
            </para>
        <para>
              You can also add scroll bars to larger controls using the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" /> property.
              If no horizontal scroll bar is specified, the text in a multiple-line control automatically wraps.
            </para>
        <note type="cnotes">
              On a form with no default buttons, pressing Enter causes the focus to move to
              the next line in a multiple-line control. If a default button exists, you must press
              Ctrl+Enter to move to the next line. Also to insert a tab, you must press Ctrl+Tab.
            </note>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.PasswordChar">
      <summary>
              Gets or sets the character used as a placeholder for the characters typed by the user.
            </summary>
      <value>
              The character used to mask characters entered in a single-line control.
              Set the value of this property to 0 (character value) if you do not want the control to
              mask characters as they are typed. Equals 0 (character value) by default.
            </value>
      <remarks>
        <para>
              The <b>PasswordChar</b> can be used to create a password field in a dialog box. Although you
              can use any SBCS character, most Windows-based applications use the asterisk (*) (Chr(42)).
            </para>
        <para>
              This property does not affect the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" /> property.
              <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" /> contains exactly what the user types or what
              was set from code. Setting the <b>PasswordChar</b> to 0, which is the default, will display
              the actual text in the control.
            </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <b>string</b> value that indicates the recommended value.
            <br />The default is <see cref="F:System.String.Empty" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property provides a hint for the user and is shown when the value is not completely entered.
              When a value is being entered,
              pressing a special shortcut key or key combination accepts the recommended value.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.ScrollBarMode">
      <summary>
              Gets or sets how to display the scroll bars.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBarMode" /> enumeration values
              that indicates whether the scroll bars are displayed as soon as
              the contents exceed the length of the control.
            <br />The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed" />.
            </value>
      <remarks>
              To display the scroll bars, you must have the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> property set to <see langword="true" />.
              If set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed" />, the scroll bars
              are displayed all the time. If set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Automatic" />,
              the scroll bars are visible only when the contents in the control exceed
              the length of the control.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.ScrollBars">
      <summary>
              Gets or sets which scroll bars appear in a multiline
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> control.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" /> enumeration values
              that indicates whether a multiline <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />
              control appears with no scroll bars, a horizontal scroll bar, a vertical
              scroll bar, or both. <br />The default is <b>None</b>.
            </value>
      <remarks>
              The horizontal scroll bars are not shown if the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" /> property
              is set to <b>WrapMode.WordWrap</b> or <b>WrapMode.CharWrap</b>,
              regardless of the value of the <b>ScrollBars</b> property.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBarMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.ShowRecommendedValue">
      <summary>
              Gets or sets a value that indicates whether to show the recommended value.
            </summary>
      <value>
        <see langword="true" /> to show the recommended value; otherwise, <see langword="false" />.
            <br />The default is <see langword="false" />.
            </value>
      <remarks>
              The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.RecommendedValue" /> property is shown when <b>ShowRecommendedValue</b>
              is <see langword="true" /> and the value is not completely entered; otherwise, the value of the <b>RecommendedValue</b> property is not shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.SideButtons">
      <summary>
              Gets the side buttons of this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> value that indicates the collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed.
              The buttons include the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />,
              the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />, and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.UseSystemPasswordChar">
      <summary>
              Gets or sets a value that indicates whether to use system password characters.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether to use system password characters.
              If the value is <see langword="true" />, the control uses the character for displaying passwords from the system settings.
              
            <br />The default is <see langword="false" />.
            </value>
      <remarks>
              The <b>UseSystemPasswordChar</b> property has precedence over the
              <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PasswordChar" /> property. Whenever the <b>UseSystemPasswordChar</b>
              is set to <see langword="true" />, the default system password character is used and any character set by
            <b>PasswordChar</b>is ignored.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.WrapMode">
      <summary>
              Gets or sets the wrap rule when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> control is multiline.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" /> enumeration that indicates the rule for wrapping the text.
            <br />The default is <b>WrapMode.WordWrap</b>.
            </value>
      <remarks>
              The <b>WrapMode</b> property takes effect for text wrap behaviors.
              The <b>WrapMode.WordWrap</b> value means wrap the text by word.
              The <b>WrapMode.CharWrap</b> value means wrap the text by character.
            <note>
              This property only takes effect when MultiLine is true.
            </note></remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.PasswordRevelationMode">
      <summary>
              Gets or sets the password revelation mode.
            </summary>
      <value>
              One of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.PasswordRevelationMode" /> value, indicates the password revelation mode.
              <br />
              Default value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.None">None</see>, indicates never reveal the typed password.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLengthCodePage">
      <summary>
            Gets or sets the code page for the encoding that used to count the max length in byte.
            </summary>
      <value>
            An <see cref="T:System.Int32" /> value indictes the code page for the encoding. <b />
            The default is -1, indicates using the built-in byte length counting method instead of using encoding.
            </value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLengthUnit" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.ClearCollection">
      <summary>
              Innernal use by designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.FocusPosition">
      <summary>
              Gets or sets the initial cursor position when the editor gets focus.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetEditorValue">
      <summary>
            Gets the unformatted value in the editor control.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.SetEditorValue(System.Object)">
      <summary>
            Sets the value of the editor control.
            </summary>
      <param name="value">Value of the editor control (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>
            Determines whether the specified control is reusable.
            </summary>
      <param name="control">The control.</param>
      <returns>
        <c>true</c> if the specified control is reusable; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary that contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the cell is created.
              If <see langword="null" /> is returned, no shortcuts are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>.
              A <see cref="T:System.Type" /> list that contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method that allows derived classes to customize default side buttons when
              the cell is created.
              If <see langword="null" /> is returned, no side buttons are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">The default side buttons for initializing.</param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>
            Starts the editing of a cell.
            </summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select everything</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Format(System.Object)">
      <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
      <param name="obj">Object in the data model with cell data to format</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Parse(System.String)">
      <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.IsValid(System.Object)">
      <summary>
            Determines whether the specified value is valid.
            </summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetDisplayText(System.Object)">
      <summary>
            Gets the display text.
            </summary>
      <param name="value">The value.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Initializes the editor control.
            </summary>
      <param name="control">The control.</param>
      <param name="appearance">The appearance.</param>
      <param name="zoomFactor">The zoom factor.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.StopEditing">
      <summary>
            Stops the editing of a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.ShowSubEditor">
      <summary>
            Shows the subeditor control associated with the cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size required</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the editor control.
            </summary>
      <param name="editor">Name of the editor control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.CanOverflow">
      <summary>
            Determines whether a cell can overflow its data into an adjacent cell.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>
            Paints (prints) the cell to PDF when not in edit mode, to the specified graphics interface
            with the specified appearance settings.
            </summary>
      <param name="g">PDF graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the painting of the cell</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Clone">
      <summary>
            Creates and returns a cloned cell type.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.FormatToClipboard(System.Object)">
      <summary>
            Formats to the Clipboard.
            </summary>
      <param name="obj">The object.</param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl">
      <summary>
              The editing control for GcTextBoxCellType.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl" /> class.
            </summary>
      <remarks>
            The parent container control defines the font settings for the GcTextBox.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            This API supports the .NET Framework infrastructure and is not intended to be used directly
            from your code.
            <para />
            Determines whether the specified key is a regular input key or a special key that requires
            preprocessing.
            </summary>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</param>
      <returns>
        <see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.
            </returns>
      <remarks>
            Call the <b>IsInputKey</b> method to determine whether the key specified by the keyData
            parameter is an input key that the control requires. This method is called during window
            message preprocessing to determine whether the specified input key should be
            preprocessed or sent directly to the control. If <b>IsInputKey</b> returns <see langword="true" />,
            the specified key is sent directly to the control. If <b>IsInputKey</b> returns <see langword="false" />,
            the specified key is preprocessed and only sent to the control if it is not consumed
            by the preprocessing phase. Keys that are preprocessed include the Tab, Return, Esc,
            and the Up Arrow, Down Arrow, Left Arrow, and Right Arrow keys.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>
            Moves the focus using the key exit event.
            </summary>
      <param name="e">The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> instance that contains the event data.</param>
      <remarks>
            When this <b>MoveFocusByKeyExit</b> method is called, focus will move.  The keys that are involved are  
            ExitKeys.CharInput, ExitKeys.CtrlRight, ExitKeys.NextControl, ExitKeys.Right, and ExitKeys.
            Tab moves the focus forward. Other ExitKeys move the focus backward.
            <br /><b>Notes for Inheritors: </b>
            The base method must be invoked when overriding it in the inherited class; 
            otherwise, the focus does not move.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.NextCell">
      <summary>
            Moves to the next cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.PreviousCell">
      <summary>
            Moves to the prevous cell. Uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the KeyDown event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            Raises the KeyPress event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the GotFocus event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnGotFocus method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <br /><b>Notes to Inheritors:</b> When overriding OnGotFocus in a derived class, be sure to call the base class's OnGotFocus method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnLostFocus(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnLostFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnLostFocus</b> in a derived class, be sure to call the base class's <b>OnLostFocus</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.InputNewLine">
      <summary>
              Creates a new line.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.Font">
      <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
      <value>
            The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.
            <br />The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
        <para>
            The <b>Font</b> property is an ambient property. An ambient property is a control property that,
            if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
            <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. For more information about
            ambient properties, see the <see cref="T:System.Windows.Forms.AmbientProperties" /> class or the <see cref="T:System.Windows.Forms.Control" /> class overview.
            </para>
        <para></para>
        <para>
            Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>.
            However, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnInvalidInput</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnInvalidInput</b> in a derived class, be sure to call the base class's <b>OnInvalidInput</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.SubEditor">
      <summary>
            Gets the subeditor in the cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnDropDownClosed(System.EventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownClosed" /> event.
            </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnDropDownClosed method also allows derived classes to handle the event without attaching a delegate.
            This is the preferred technique for handling the event in a derived class.
            <br /><b>Notes to Inheritors:</b> When overriding OnDropDownClosed in a derived class,
            be sure to call the base class's OnDropDownClosed method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpening" /> event.
            </summary>
      <param name="e">A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnDropDownOpening method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <br /><b>Notes to Inheritors:</b> When overriding OnDropDownOpening in a derived class, be sure to call the base class's OnDropDownOpening method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.AfterFocus">
      <summary>
            Occurs after the control gets focus.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>
            Raises the AfterFocus event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType">
      <summary>
              Represents a <b>GcTimeSpanCellType</b> class.
            </summary>
      <remarks>
              The GcTimeSpanCell allows you to design a functional date-time input interface 
              quickly and efficiently.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" /> class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ClearCollection">
      <summary>
              Internal use by designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.PaintByControl">
      <summary>
             Gets or sets a value that indicates how to paint the cell.
             If true, the cell uses the inner control's painting to paint the cell, in this case, the cell paints exactly the same as the editing control.
             All settings of the cell such as fields with different styles are shown when painting the cell. The cell's paint performance is slow if painting by the control,
             rather than painting the string directly. Also, the text in the cell cannot be selected when exporting to pdf.
             If false, performance is good but some settings do not take effect.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ShowSubEditor">
      <summary>
            Shows the subeditor control associated with the cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.FocusPosition">
      <summary>
              Gets or sets the initial cursor position when the editor gets focus.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ExcelExportFormat">
      <summary>
              Gets or sets the excel export format.
            </summary>
      <value>
              The excel export format.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.DefaultActiveField">
      <summary>
              Gets or sets the default active field.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> value that indicates the default active field.
              <br /> The defalut is <see langword="null" />.
            </value>
      <remarks>
              When the control gets focus, the default active field gets focus.
              If the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.HighlightText" /> property is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.Field" />, all of the text in the field is selected; 
              otherwise, the caret only moves to the first input position.
            </remarks>
      <exception cref="T:System.ArithmeticException">
              The specified field don't exist in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.SerializationDefaultActiveFieldIndex">
      <summary>
             Internal use for serialization.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Fields">
      <summary>
              Gets the fields.
            </summary>
      <value>A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection" /> object that represents the items in GcTimeSpan.</value>
      <remarks>
              This property determines how to display the <see cref="N:GrapeCity.Win.Value" /> of this control. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.DisplayFields">
      <summary>
              Gets the display fields.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection" />
              object that indicates the collection of the display fields.
            </value>
      <remarks>
              This property determines how to display the <see cref="N:GrapeCity.Win.Value" /> of this control without input focus. 
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.AlternateText">
      <summary>
              Gets the alternate text setting.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText" /> value that indicates the alternate text.
            </value>
      <remarks>
              This property specifies how to show alternative text when the value is <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Zero" /> 
              or <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Null" /> in edit mode and display mode.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.SideButtons">
      <summary>
              Gets a collection of side buttons.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> value that indicates the collection.
            </value>
      <remarks>
              The <b>SideButtons</b> can be added or removed. 
              Buttons include <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />, <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />, 
              <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />, and <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.RecommendedValue">
      <summary>
              Gets or sets the recommended value.
            </summary>
      <value>
              A <see cref="T:System.TimeSpan" /> value that indicates the recommended value.
              <br /> The default is <see cref="F:System.TimeSpan.Zero" />.
            </value>
      <remarks>
              The <b>RecommendedValue</b> property provides a hint for the user that is shown when the value is not fully entered. 
              When a value is being entered, pressing a special shortcut key or key combination accepts the recommended value. 
            </remarks>
      <exception cref="T:System.ArgumentException">
              Occurs when a value that does not match the current pattern
              is set to the <b>RecommendedValue</b> property.
            </exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ShowRecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.AcceptsCrLf">
      <summary>
            Gets or sets how to process the CrLf characters when copying, cutting, or pasting a string.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> enumeration that indicates which mode the CrLf characters use when copying, cutting, or pasting a string.
            <br />The default is <b>CrLfMode.NoControl</b>.
            </value>
      <remarks>
              The <b>CrLf.Cut</b> setting causes the <b>GcTimeSpan</b> cell to be similar to the standard <b>TextBox</b> when copying, cutting, or pasting a string.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <b>value</b> is not a valid <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> item.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ValidateMode">
      <summary>
              Gets or sets the validate mode.
            </summary>
      <value>
              One of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" /> enumeration values. The default 
              is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" />.
            </value>
      <remarks>
              The property retrieves the validate mode.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              A value that is not within the range of valid values for the enumeration was assigned to 
              the property.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ValueSign">
      <summary>
              Gets or sets the value sign.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" /> value that indicates the value sign.
              <br /> The defalut is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />.
            </value>
      <remarks>
              The <b>ValueSign</b> property determines what value can be accepted. 
              If the value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Positive" />, only values that are not smaller than <see cref="F:System.TimeSpan.Zero" /> are allowed. 
              If the value is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Negative" />, only values that are not bigger than <see cref="F:System.TimeSpan.Zero" /> are allowed. 
              The <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" /> setting means all values are allowed.
            </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
              value is not defined in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" />.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ShowRecommendedValue">
      <summary>
              Gets or sets whether to show the recommended value.
            </summary>
      <value>
        <see langword="true" /> to show the recommended value; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
      <remarks>
              The value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.RecommendedValue" /> property is shown when <b>ShowRecommendedValue</b> is <see langword="true" /> and the value is not fully entered; 
              otherwise, the value of the <b>RecommendedValue</b> property is not shown.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.RecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Spin">
      <summary>
              Gets the settings for the spin function.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin" /> value that indicates the spin function settings.
            </value>
      <remarks>
              The spin behaviors can be customized by setting this <b>Spin</b> property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.UseNegativeColor">
      <summary>
              Gets or sets whether to use <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NegativeColor" /> to render negative values.
            </summary>
      <value>
        <see langword="true" /> specifies to use <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NegativeColor" /> to render negative values; 
              <see langword="false" /> specifies to use <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ForeColor" /> to render negative values.
              <br /> The default is <see langword="true" />.
            </value>
      <remarks>
              If the <see cref="N:GrapeCity.Win.Value" /> property is smaller than <see cref="F:System.TimeSpan.Zero" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.UseNegativeColor" /> property is <see langword="true" />, 
              the text color uses this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxValue">
      <summary>
              Gets or sets the maximum allowable value when using the spin button to change the field or value.
            </summary>
      <value>
              A <see cref="T:System.TimeSpan" /> value that indicates the maximum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is less than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MinValue" /> or greater than the default value.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MinValue">
      <summary>
              Gets or sets the minimum allowable value when using a spin button to change the field or value.
            </summary>
      <value>
              A <see cref="T:System.TimeSpan" /> value that indicates the minimum allowable value.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is greater than <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxValue" /> or less than the default value.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.NegativeColor">
      <summary>
              Gets or sets the color when the value's sign is negative.
            </summary>
      <value>
              The color of the negative value.
            </value>
      <remarks>
              If the <see cref="N:GrapeCity.Win.Value" /> property is smaller than <see cref="F:System.TimeSpan.Zero" /> and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.UseNegativeColor" /> property is <see langword="true" />, the text color uses  this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxMinBehavior">
      <summary>
            Gets or sets the behavior when the new values are outside the range of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MinValue" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxValue" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxMinBehavior" /> enumeration value that indicates the behavior when the new input value is outside of <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MinValue" /> and <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxValue" />.
              <br />
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" />.
            </value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The <b>value</b> is not a valid <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxMinBehavior" /> item.
            </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Gets the edit control for this cell type with the specified appearance and scaling.
            </summary>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetEditorValue">
      <summary>
            Gets the unformatted value in the editor control.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.SetEditorValue(System.Object)">
      <summary>
            Sets the value of the editor control.
            </summary>
      <param name="value">Value of the editor control (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>
            Determines whether the specified control is reusable.
            </summary>
      <param name="control">The control.</param>
      <returns>
        <c>true</c> if the specified control is reusable; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Initializes the editor control.
            </summary>
      <param name="control">The control.</param>
      <param name="appearance">The appearance.</param>
      <param name="zoomFactor">The zoom factor.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDefaultShortcuts">
      <summary>
              Gets the default shortcuts.
            </summary>
      <returns>
              A dictionary that contains all default shortcuts.
            </returns>
      <remarks>
              The <b>GetDefaultShortcuts</b> method allows derived classes to customize default shortcuts when
              the cell is created.
              If <see langword="null" /> is returned, no shortcuts are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>
            Starts the editing of a cell.
            </summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select all the cell data</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.StopEditing">
      <summary>
            Stops the editing of a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Format(System.Object)">
      <summary>
            Formats the specified data into the format of the cell type and returns it as a string.
            </summary>
      <param name="obj">Object in the data model with cell data to format</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Parse(System.String)">
      <summary>
            Parses the specified string to the data type of the cell type and returns it as an object.
            </summary>
      <param name="s">Specified string from the cell on the sheet to parse</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.FormatToClipboard(System.Object)">
      <summary>
            Formats to the Clipboard.
            </summary>
      <param name="obj">The object.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDisplayText(System.Object)">
      <summary>
            Gets the display text.
            </summary>
      <param name="value">The cell value.</param>
      <returns>The display text.</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the renderer control.
            </summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="size">Preferred or maximum size required</param>
      <param name="appearance">Appearance settings of the renderer control</param>
      <param name="value">Object that contains the name of the renderer control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the renderer control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>
            Gets the preferred (maximum needed) size of the cell for the editor control.
            </summary>
      <param name="editor">Name of the editor control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.IsValid(System.Object)">
      <summary>
            Determines whether the specified value is valid.
            </summary>
      <param name="value">Value to validate (as object)</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Clone">
      <summary>
            Creates and returns a base cell.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDefaultFields">
      <summary>
              Gets the default fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField" /> array that contains all default input fields.
            </returns>
      <remarks>
              The <b>GetDefaultFields</b> method allows derived classes to customize default fields when
              the control is created.
              If <see langword="null" /> is returned, no field is added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDefaultDisplayFields">
      <summary>
              Gets the default display fields.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" /> array that contains all default fields for display purposes.
            </returns>
      <remarks>
              The <b>GetDefaultDisplayFields</b> method allows derived classes to customize default display fields when
              the cell is created.
              If <see langword="null" /> is returned, no display field is added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDefaultSideButtonTypes">
      <summary>
              Gets the default side buttons.
            </summary>
      <returns>.
              A <see cref="T:System.Type" /> list that contains all types of default side buttons.
            </returns>
      <remarks>
              The <b>GetDefaultSideButtonTypes</b> method allows derived classes to customize default side buttons when
              the cell is created.
              If <see langword="null" /> is returned, no side buttons are added to the cell.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>
              Initializes the default side buttons.
            </summary>
      <param name="defaultSideButtons">The default side buttons for initializing.</param>
      <remarks>
              The <b>InitializeDefaultSideButtons</b> method allows derived classes to initialize the default side buttons
              which is created by the <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDefaultSideButtonTypes" /> method.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl">
      <summary>
              The editing control for GcTimeSpanCellType.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>
            Moves the focus using the key exit event.
            </summary>
      <param name="e">The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> instance that contains the event data.</param>
      <remarks>
        <b>ExitKeys.CharInput</b>, <b>ExitKeys.CtrlRight</b>, <b>ExitKeys.NextControl</b>, 
            <b>ExitKeys.Right</b>, and <b>ExitKeys.Tab</b> move the focus forward.
            Other <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" /> move the focus backward.
            <note>
            The base method must be invoked when overriding it in the inherited class; otherwise, the focus does not move.
            </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</param>
      <returns>
        <see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.
            </returns>
      <remarks>
            Call the <b>IsInputKey</b> method to determine whether the key specified by the keyData parameter is an input key that the control uses. This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control. If <b>IsInputKey</b> returns <see langword="true" />, the specified key is sent directly to the control. If <b>IsInputKey</b> returns <see langword="false" />, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase. Keys that are preprocessed include the Tab, Return, Esc, and the Up Arrow, Down Arrow, Left Arrow, and Right Arrow keys.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Raises the KeyDown event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            Raises the KeyPress event.
            </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnGotFocus</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnGotFocus</b> in a derived class, be sure to call the base class's <b>OnGotFocus</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnEnter(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnEnter</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnEnter</b> in a derived class, be sure to call the base class's <b>OnEnter</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.NextFieldThenCell">
      <summary>
            Moves to the next field then the cell, uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.NextCell">
      <summary>
            Moves to the next cell, uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.PreviousCell">
      <summary>
            Moves to the prevous cell, uses a shortcut action.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.PreviousFieldThenCell">
      <summary>
            Moves to the previous field then the cell, uses a shortcut action.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.Font">
      <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
      <value>
            The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.
            <br />The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.
            </value>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
      <remarks>
        <para>
            The <b>Font</b> property is an ambient property. An ambient property is a control property that,
            if not set, is retrieved from the parent control. For example, a <see cref="T:System.Windows.Forms.Button" /> will have the same
            <see cref="P:System.Windows.Forms.Control.BackColor" /> as its parent <see cref="T:System.Windows.Forms.Form" /> by default. For more information about
            ambient properties, see the <see cref="T:System.Windows.Forms.AmbientProperties" /> class or the <see cref="T:System.Windows.Forms.Control" /> class overview.
            </para>
        <para></para>
        <para>
            Because the <b>Font</b> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <b>Font</b> property a new <b>Font</b>;
            however, you can base the new font on the existing font.
            </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> event.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs" /> instance that contains the event data.</param>
      <remarks>
            Raising an event invokes the event handler through a delegate.
            <para />
            The <b>OnInvalidInput</b> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            <para /><b>Notes to Inheritors:</b><para />
            When overriding <b>OnInvalidInput</b> in a derived class, be sure to call the base class's <b>OnInvalidInput</b> method so that registered delegates receive the event.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.SubEditor">
      <summary>
            Gets the subeditor in the cell.
            </summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.AfterFocus">
      <summary>
            Occurs after the control gets focus.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>
            Raises the AfterFocus event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase">
      <summary>
              Represents the base class for the input man cells.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Creates a new InputManCellTypeBase from serialization.
            </summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.AcceptsArrowKeys">
      <summary>
              Gets or sets how arrow keys are processed by the edit control.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.ShortcutKeys">
      <summary>
            Gets the InputMan EditingControl's shortcuts.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary" /> value that represents all the editing control's shortcuts.
            </value>
      <remarks>
            You can add some shortcuts to this dictionary, in edit mode, these shortcuts can be used like the InputMan control.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.Static">
      <summary>
            Gets or sets whether the cell is static, which prohibits user interaction.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.BackgroundImage">
      <summary>
            Gets or sets the background image for the cell.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.UseSpreadDropDownButtonRender">
      <summary>
            Gets or sets a value that indicates whether to paint the drop-down button with the spread drop-down button renderer.
            </summary>
      <value>
        <c>true</c> to paint the drop-down button with a spread drop-down button renderer; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.ReadOnly">
      <summary>
              Gets or sets a value that indicates whether this control is read-only.
            </summary>
      <value>
        <see langword="true" /> if the control is read-only; otherwise, <see langword="false" />.
            <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              When this property is set to <see langword="true" />, the contents of the control cannot be changed by the user at runtime. With this property set to <see langword="true" />, you can still set the value of the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" /> property in code. You can use this feature instead of disabling the control with the <see cref="P:System.Windows.Forms.Control.Enabled" /> property to allow the contents to be copied and ToolTips to be shown.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.EditMode">
      <summary>
              Gets or sets the edit mode of the control.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditMode" /> value that indicates the edit mode of this control.
            <br />
              The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.Insert" />.
            </value>
      <remarks>
              If the value of this property has the "Fixed" prefix, pressing the Insert key does not effect edit mode. The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OverWrite" /> property may effect this property.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.ShowTouchToolBar">
      <summary>
            Gets or sets the how to show the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchToolBar" />.
            </summary>
      <value>
            A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions" /> value indicates how to show the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchToolBar" />. The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.TapGripper" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchToolBar">
      <summary>
            Gets the shown <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchToolBar" /> by touch operation.
            </summary>
      <value>
            The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchToolBar" /> instance which will be shown by touch operation.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchContextMenuScale">
      <summary>
            Gets or sets the factor applies to context menu item's height while context menu is popped up by touch.
             </summary>
      <value>
             The factor applies to context menu item's height while context menu while popup by touch. The default is 1.5f.
             </value>
      <remarks>
              User can set <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchContextMenuScale" /> to make item's height larger in context menu when it is  popped up by touch.
             </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
             The assigned value is less than 1 or greater than 4.
             </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.ExitOnLastChar">
      <summary>
              Gets or sets whether the next control in the tab order receives the focus as
              soon as the control is filled with the last character.
            </summary>
      <value>
        <see langword="true" /> if the focus is moved to the next control in the tab order as soon as the control
              is filled with the last character defined by the input control; otherwise, <see langword="false" />.
            <br />
              The default is <see langword="false" />.
            </value>
      <remarks>
              The input focus moves to the next control when the last entered character causes the text to exceed what the control accepts.
            </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLeftRightKey" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetDefaultShortcuts">
      <summary>
            Gets the default shortcuts.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.CancelEditing">
      <summary>
            Cancels the editing of a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.StopEditing">
      <summary>
            Stops the editing of a cell.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.IsReusable(System.Windows.Forms.Control)">
      <summary>
            Checks if this control can be reused.
            </summary>
      <param name="control"></param>
      <returns>True if this control can be reused</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Gets the control associated with the editor for the specified parent control.
            </summary>
      <param name="parent">Parent control</param>
      <param name="appearance">Appearance settings of the control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the control</param>
      <returns>Control</returns>
      <remarks>After creating the control the first time, add it to parent.Controls and return the same instance when called again for that parent.</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>
            Initializes the editor control.
            </summary>
      <param name="control">Editor control to initialize</param>
      <param name="appearance">Appearance settings</param>
      <param name="zoomFactor">Numeric value for scaling the display of the control</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>
            Starts the editing of a cell.
            </summary>
      <param name="e">Event</param>
      <param name="selectAll">Whether to select everything</param>
      <param name="autoClipboard">Whether to allow shortcut keys for Clipboard actions</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>
            Paints the cell when not in edit mode to the specified graphics interface with the specified appearance settings.
            </summary>
      <param name="g">Graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the display of the cell</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetDisplayText(System.Object)">
      <summary>
            Gets the display text.
            </summary>
      <param name="value">The value.</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>
            Paints (prints) the cell to PDF when not in edit mode, to the specified graphics interface
            with the specified appearance settings.
            </summary>
      <param name="g">PDF graphics device interface for painting the cell</param>
      <param name="r">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the cell</param>
      <param name="value">Object that contains the name of the renderer control of the cell</param>
      <param name="isSelected">Whether the cell is selected</param>
      <param name="isLocked">Whether the cell is locked</param>
      <param name="zoomFactor">Numeric value for scaling the painting of the cell</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetErrorIconBound(System.Drawing.Graphics,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle,System.Single)">
      <summary>
            Gets a rectangle to draw an error icon in.
            </summary>
      <param name="g">A Graphichs object</param>
      <param name="appearance">Appearance settings</param>
      <param name="cellRectangle">Rectangle to paint cell</param>
      <param name="zoomFactor">Zoomfactor setting</param>
      <returns>A rectangle</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetReservedCursor(System.Object)">
      <summary>
            Gets the cursor reserved for this cell type.
            </summary>
      <param name="o">Object that is the reserved cursor (pointer)</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>
            Determines whether the specified cursor location has special meaning to the editor control.
            </summary>
      <param name="g">Graphics device interface for painting the editor control</param>
      <param name="x">X-coordinate of pointer location</param>
      <param name="y">Y-coordinate of pointer location</param>
      <param name="rc">Location and size of a rectangular region</param>
      <param name="appearance">Appearance settings of the editor control</param>
      <param name="value">Object that contains the name of the editor control</param>
      <param name="zoomFactor">Numeric value for scaling the display of the editor control</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.ExcelExportFormat">
      <summary>
              Gets or sets the format string used by Excel when exporting to an Excel file.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.Clone">
      <summary>
            Creates and returns a base input man cell.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.InitialByCreateInstance(System.Object,System.String,System.Object)">
      <summary>
             Supports designtime's CreateInstance.
            </summary>
      <param name="instance"></param>
      <param name="propertyName"></param>
      <param name="value"></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.CanOverflow">
      <summary>
            Determines whether a cell can overflow its data into an adjacent cell.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.CanBeOverflown">
      <summary>
            Determines whether data from another cell can overflow into this cell
            (whether this cell can be overflowed into).
            </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition">
      <summary>
            Specifies the position of the pointer when the edit control receives the focus.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.Inherit">
      <summary>
            Specifies that the position is determined by the editor type and selection policy
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.MouseLocation">
      <summary>
            Positions the pointer at the location of the pointer device,
            without any text selected
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.SelectFieldOfMouseLocation">
      <summary>
            Positions the pointer at the location of the pointer device,
            and selects the enter field.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.FirstInputPosition">
      <summary>
            Positions the pointer at the first input position in the control,
            without any text selected
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.End">
      <summary>
            Positions the pointer at the end of the text in the control,
            without any text selected
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.SelectAll">
      <summary>
            Positions the pointer at the beginning of the text in the control
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition">
      <summary>
            Specifies the position of the pointer when the edit control receives the focus.
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition.Inherit">
      <summary>
            Specifies that the position is determined by the editor type and selection policy
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition.MouseLocation">
      <summary>
            Positions the pointer at the location of the pointer device,
            without any text selected
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition.FirstInputPosition">
      <summary>
            Positions the pointer at the first input position in the control,
            without any text selected
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition.End">
      <summary>
            Positions the pointer at the end of the text in the control,
            without any text selected
            </summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition.SelectAll">
      <summary>
            Positions the pointer at the beginning of the text in the control
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcDateTimeCellSettings">
      <summary>
              Only used by the designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcDateTimeCellSettings.CellTypeSettingControl">
      <summary>
              Gets the cell type setting control.Innernal used by the designer.
            </summary>
      <value></value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcDateTimeCellSettings.GetProperty(System.String)">
      <summary>
            Gets the property.
            </summary>
      <param name="name">The name.</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcDateTimeCellSettings.CellType">
      <summary>
            Gets or sets the type of the cell.
            </summary>
      <value>The type of the cell.</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcNumberCellSettings">
      <summary>
              Only used by the designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcNumberCellSettings.CellTypeSettingControl">
      <summary>
              Gets the cell type setting control.Innernal used by the designer.
            </summary>
      <value></value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcNumberCellSettings.GetProperty(System.String)">
      <summary>
            Gets the property.
            </summary>
      <param name="name">The name.</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcNumberCellSettings.CellType">
      <summary>
            Gets or sets the type of the cell.
            </summary>
      <value>The type of the cell.</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTextCellSettings">
      <summary>
             Only used by the designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTextCellSettings.CellTypeSettingControl">
      <summary>
              Gets the cell type setting control.Innernal used by the designer.
            </summary>
      <value></value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTextCellSettings.GetProperty(System.String)">
      <summary>
            Gets the property.
            </summary>
      <param name="name">The name.</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTextCellSettings.CellType">
      <summary>
            Gets or sets the type of the cell.
            </summary>
      <value>The type of the cell.</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTimeSpanCellSettings">
      <summary>
              Only used by the designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTimeSpanCellSettings.CellTypeSettingControl">
      <summary>
              Gets the cell type setting control.Innernal used by the designer.
            </summary>
      <value></value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTimeSpanCellSettings.GetProperty(System.String)">
      <summary>
            Gets the property.
            </summary>
      <param name="name">The name.</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTimeSpanCellSettings.CellType">
      <summary>
            Gets or sets the type of the cell.
            </summary>
      <value>The type of the cell.</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcCharMaskCellSettings">
      <summary>
              Only used by the designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcCharMaskCellSettings.CellTypeSettingControl">
      <summary>
              Gets the cell type setting control.Innernal used by the designer.
            </summary>
      <value></value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcCharMaskCellSettings.GetProperty(System.String)">
      <summary>
            Gets the property.
            </summary>
      <param name="name">The name.</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcCharMaskCellSettings.CellType">
      <summary>
            Gets or sets the type of the cell.
            </summary>
      <value>The type of the cell.</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcComboBoxCellSettings">
      <summary>
             Only used by the designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcComboBoxCellSettings.CellTypeSettingControl">
      <summary>
              Gets the cell type setting control.Innernal used by the designer.
            </summary>
      <value></value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcComboBoxCellSettings.GetProperty(System.String)">
      <summary>
            Gets the property.
            </summary>
      <param name="name">The name.</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcComboBoxCellSettings.CellType">
      <summary>
            Gets or sets the type of the cell.
            </summary>
      <value>The type of the cell.</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcMaskCellSettings">
      <summary>
              Only used by the designer.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcMaskCellSettings.CellTypeSettingControl">
      <summary>
              Gets the cell type setting control.Innernal used by the designer.
            </summary>
      <value></value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcMaskCellSettings.GetProperty(System.String)">
      <summary>
            Gets the property.
            </summary>
      <param name="name">The name.</param>
      <returns></returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcMaskCellSettings.CellType">
      <summary>
            Gets or sets the type of the cell.
            </summary>
      <value>The type of the cell.</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo">
      <summary>
              Represents a <b>ItemStyleInfo</b> class to define style settings.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.BackColor">
      <summary>
              Gets or sets the background color.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that represents the background color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.ForeColor">
      <summary>
              Gets or sets the foreground color.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that represents the foreground color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.GradientEffect">
      <summary>
              Gets or sets a value that represents the background gradient effect.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.GradientEffect" /> value indicates the background gradient effect.
              <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo">
      <summary>
              Represents an <b>ItemTemplateInfo</b> class that defines a template for the items.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.#ctor(System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" /> class with values.
            </summary>
      <param name="indent">An <see cref="T:System.Int32" /> value that represents the indent of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="image">An <b>object</b> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Image" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="backColor">A <see cref="T:System.Drawing.Color" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.BackColor" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="foreColor">A <see cref="T:System.Drawing.Color" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ForeColor" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="height">An <see cref="T:System.Int32" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Height" /> of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="font">A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Font" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font" /> of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
      <param name="gradientEffect">A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.GradientEffect" /> that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />.</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.AutoItemHeight">
      <summary>
              Gets or sets whether the height is preferred.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether the height is preferred, <see langword="true" /> if 
              the height is preferred; otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.BackColor">
      <summary>
              Gets or sets the background color.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ForeColor">
      <summary>
              Gets or sets the foreground color.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Font">
      <summary>
              Gets or sets the font.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Font" /> value.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ShouldSerializeFont">
      <summary>
              Should serialize <b>Font</b>.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ResetFont">
      <summary>
              Resets the <b>Font</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ShouldSerializeForeColor">
      <summary>
              Should serialize <b>ForeColor</b>.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ResetForeColor">
      <summary>
              Resets the <b>ForeColor</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ShouldSerializeHeight">
      <summary>
              Should serialize the height.
            </summary>
      <returns>
              A <see langword="bool" /> value, true to generate code for the Height property; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ResetHeight">
      <summary>
              Resets the Height property.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.GradientEffect">
      <summary>
              Gets or sets the gradient effect.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.GradientEffect" /> value.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Height">
      <summary>
              Gets or sets the height.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the height.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Image">
      <summary>
              Gets or sets the image.
            </summary>
      <value>
              An <see cref="T:System.Object" /> value that indicates the image.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Indent">
      <summary>
              Gets or sets the indent.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the indent.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo">
      <summary>
              Represents a <b>ItemTemplateCollectionInfo</b> class to store <b>ItemTemplateInfo</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Contains(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo)">
      <summary>
              Determines whether the collection contains the specified item.
            </summary>
      <param name="item">
              The specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <returns>
        <see langword="true" /> if the object is found in the collection; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo)">
      <summary>
              Gets the index of the item.
            </summary>
      <param name="item">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object used to find the index.
            </param>
      <returns>
              The index if the object is found in the collection; otherwise,-1.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo)">
      <summary>
              Inserts an item in the collection at the specified position.
            </summary>
      <param name="index">
              The zero-based index at which the value should be inserted.
            </param>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" /> object to insert into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Remove(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo)">
      <summary>
              Deletes the specific item from the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" /> object that is deleted.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.RemoveAt(System.Int32)">
      <summary>
              Removes the item at the specific position from the collection.
            </summary>
      <param name="index">
              The index to be romoved.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Clear">
      <summary>
              Clears all the items in the collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Add(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo)">
      <summary>
              Adds an item to the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" /> object to add into the collection.
            </param>
      <returns>
              The index of the added item.
            </returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Item(System.Int32)">
      <summary>
              Gets or sets the item at the specified position.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the specified position in the collection.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo[])">
      <summary>
              Adds some items of specified collection to the end of the collection.
            </summary>
      <param name="items">  
              A specified collection added into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.ToArray">
      <summary>
              Copies the subitems of the collection to a new array.
            </summary>
      <returns>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" /> array that contains all the items in the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo[],System.Int32)">
      <summary>
              Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular 
              <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">
             The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from 
             <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. 
            </param>
      <param name="index">
               The zero-based index in array at which copying begins.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Count">
      <summary>
              Gets the count of the collection.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value indicates the count number of the collection.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.GetEnumerator">
      <summary>
              Gets an enumerator that iterates through the collection.
            </summary>
      <returns>
              Returns an enumerator of the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo">
      <summary>
              Represents a <b>ListColumnInfo</b> class to define column objects.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> class with header text.
            </summary>
      <param name="text">
              A <see cref="T:System.String" /> value that indicates the header text.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> class with display type.
            </summary>
      <param name="dataDisplayType">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" /> value that represents the display type of the column.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> class with settings.
            </summary>
      <param name="dataDisplayType">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" /> value that represents the display type of the column.
            </param>
      <param name="defaultSubItem">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo" /> object that represents the default subitem of the column.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> class with settings.
            </summary>
      <param name="dataDisplayType">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" /> value that represents the display type of the column.
            </param>
      <param name="defaultSubItem">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo" /> object that represents the default subitem of the column.
            </param>
      <param name="width">
              An <see cref="T:System.Int32" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Width" /> of the column.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo,System.Int32,System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> class with settings.
            </summary>
      <param name="dataDisplayType">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" /> value that represents the display type of the column.
            </param>
      <param name="defaultSubItem">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo" /> object that represents the default subitem of the column.
            </param>
      <param name="width">
              An <see cref="T:System.Int32" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Width" /> of the column.
            </param>
      <param name="visible">
              A <see langword="bool" /> value that indicates whether the column is visible.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,System.String,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo,System.Collections.IComparer,System.Windows.Forms.SortOrder,System.Boolean,System.Int32)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> class with settings.
            </summary>
      <param name="autoWidth">If set to <see langword="true" /> [auto width].</param>
      <param name="dataType">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" /> value that represents the display type of the column.
            </param>
      <param name="dataPropertyName">
              A <see cref="T:System.String" /> value that indicates the property name of the data source.
            </param>
      <param name="defaultSubItem">
               A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo" /> object that represents the default subitem of the column.
            </param>
      <param name="sortComparer">
              An <see cref="T:System.Collections.IComparer" /> value that indicates the comparer for sorting.
            </param>
      <param name="sortOrder">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.SortOrder" /> value that indicates the order for sorting.
            </param>
      <param name="visible">
              If set to <see langword="true" /> the column is visiable; otherwise, <see langword="false" />.
            </param>
      <param name="width">
              An <see cref="T:System.Int32" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Width" /> of the column.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Width">
      <summary>
              Gets or sets a value that represents the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> width.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that represents the width of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataPropertyName">
      <summary>
              Gets or sets a <see cref="T:System.String" /> value that represents the binding field name in the current binding data source.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the property name of the data source.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.SortOrder">
      <summary>
              Gets or sets the sort order.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.SortOrder" /> enumeration that indicates the sort order.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.SortComparer">
      <summary>
              Gets or sets the comparer class for the sort function.
            </summary>
      <value>
              An <see cref="T:System.Collections.IComparer" /> object that allows the user to implement their own sort algorithm.
            </value>
      <remarks>
              If value is <see langword="null" />, the built-in sort policy is used.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.AutoWidth">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> automatically calculates the width based on content.
            </summary>
      <value>
        <see langword="true" /> if <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> automatically calculates width based on content; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Header">
      <summary>
              Gets or sets the header settings of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> object.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" /> object that represents the header of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> object.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Visible">
      <summary>
              Gets or sets whether <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> is visible.
            </summary>
      <value>
        <see langword="true" /> if <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> is visible; otherwise, <see langword="false" />. 
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DefaultSubItem">
      <summary>
              Gets a value that represents the default subitem.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DefaultSubItem" /> value that indicates the default subitem in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> object.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType">
      <summary>
              Gets or sets the display type of the value.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" /> enumeration that represents the display type of the value. 
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.IsBinding">
      <summary>
              Determines whether the clolumn be bindging to DataSource.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ShouldSerializeHeader">
      <summary>
              Specifies whether the header should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetHeader">
      <summary>
              Resets the header.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ShouldSerializeDefaultSubItem">
      <summary>
              Specifies whether the default subitem should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetDefaultSubItem">
      <summary>
              Resets the default sub item.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetAutoWidth">
      <summary>
              Resets the automatic width.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetDataDisplayType">
      <summary>
              Resets the type of the data display.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetSortOrder">
      <summary>
              Resets the sort order.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetVisible">
      <summary>
              Resets the visible setting.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetWidth">
      <summary>
              Resets the width.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetSortComparer">
      <summary>
              Resets the sort comparer.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Dispose">
      <summary>
            Dispose the object.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.PropertyChanged">
      <summary>
            Event is raised when a property is changed. Internal only
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo">
      <summary>
              Represents a <b>ListColumnCollectionInfo</b> class to store <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> object.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>
              Gets the index of the item.
            </summary>
      <param name="item">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> object used to find the index.
            </param>
      <returns>
              An <see cref="T:System.Int32" /> value if the object is found in the collection; otherwise,-1.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>
              Inserts an item in the collection at the specified position.
            </summary>
      <param name="index">
              The zero-based index at which value should be inserted.
            </param>
      <param name="item">
              The object to insert into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.RemoveAt(System.Int32)">
      <summary>
              Removes the item at the specific position from the collection.
            </summary>
      <param name="index">
              The zero-based index of the item to remove.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Item(System.Int32)">
      <summary>
              Gets or sets the column at the specified position.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value that indicates the specified position in the collection.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.RemoveProcess(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>
              Process method before a column be removed to the collection.
            </summary>
      <param name="column">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> value which is removing from the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.AddProcess(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>
              Process method before a column is added to the collection.
            </summary>
      <param name="column">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> value which is adding to the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Add(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>
              Adds an item to the collection.
            </summary>
      <param name="listColumn">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> object to add into the collection.
            </param>
      <returns>
              The index of the added item.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Add(System.String)">
      <summary>
              Adds a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> with the given text to the collection.
            </summary>
      <param name="text">
              A <see cref="T:System.String" /> value that indicates the text of a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo[])">
      <summary>
              Adds columns of the specified collection to the end of the collection.
            </summary>
      <param name="columns">  
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> array added into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Clear">
      <summary>
              Clears all the items in the collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Contains(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>
              Determines whether the collection contains a specific item.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> item to locate in the collection.
            </param>
      <returns>
        <see langword="true" /> if the item is found in the collection; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo[],System.Int32)">
      <summary>
              Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular 
              <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">
              The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from 
             <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. 
            </param>
      <param name="arrayIndex">
               The zero-based index in array at which copying begins.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Count">
      <summary>
              Gets count of the collection.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the count number of the collection.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>
              Deletes a specific item form the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> item to be deleted.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.ToArray">
      <summary>
              Copies the subitems of the collection to a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> array.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> array value with items copied from the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.GetEnumerator">
      <summary>
              Gets the enumerator of the collection.
            </summary>
      <returns>
              An <see cref="T:System.Collections.IEnumerator" /> object that represents the current enumerator of the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo">
      <summary>
              Represents the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo" /> class to define the default value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.AutoWidth">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> calculates the width automatically. 
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> calculates the width automatically; otherwise, 
              <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.DataDisplayType">
      <summary>
              Gets or sets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.DataDisplayType" /> value indicates the display of the column.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.DataDisplayType" /> value that indicates the display of the column.
              <br /> The default is <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType.Text" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.DefaultSubItem">
      <summary>
              Gets or sets the default <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.DefaultSubItem" /> instance that indicates the default settings of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.Header">
      <summary>
              Gets or sets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" /> instance that indicates the header of the list control.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.SortOrder">
      <summary>
              Gets or sets the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.SortOrder" />.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.SortOrder" /> value that indicates the order when sorting.
              <br /> The default is <see cref="F:System.Windows.Forms.SortOrder.None" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.Width">
      <summary>
              Gets or sets the width of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the width of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> object.
              <br /> The default is 60.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.Visible">
      <summary>
              Gets or set a <see langword="bool" /> value that indicates whether <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" /> is visible.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if visible; otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.ShouldSerializeHeader">
      <summary>
              Shoulds the serialize header.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.ResetHeader">
      <summary>
              Resets the header.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.ShouldSerializeDefaultSubItem">
      <summary>
              Shoulds the serialize default sub item.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.ResetDefaultSubItem">
      <summary>
              Resets the default sub item.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.#ctor">
      <summary>
            Default Constructor
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo">
      <summary>
              Represents a <b>ListGridLinesInfo</b> class that defines list grid lines.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.HorizontalLines">
      <summary>
              Gets or sets the style for horizontal lines.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> object used to draw horizontal lines. 
              <br /> The default is a dark grey single line.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.VerticalLines">
      <summary>
              Gets or sets the style for vertical lines.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> object that is used to draw vertical lines. 
              <br /> The default is a dark grey single line.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.ShouldSerializeVerticalLines">
      <summary>
            Specifies whether the vertical lines should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.ResetVerticalLines">
      <summary>
              Resets the vertical lines to the default.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.ShouldSerializeHorizontalLines">
      <summary>
            Specifies whether the horizontal lines should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.ResetHorizontalLines">
      <summary>
              Resets the horizontal lines to the default.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo">
      <summary>
              Represents a <b>ListHeaderInfo</b> class that defines header settings.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.ContentAlignment">
      <summary>
              Gets or sets the content alignment.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.ContentAlignment" /> value that indicates the alignment of the content of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" /> object.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.ImageTextSpace">
      <summary>
              Gets or sets the space between the image and text.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> that represents the space between the image and text.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.TextAttachAlignment">
      <summary>
              Gets or sets how to attach the text to the image.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment" /> object that represents how to attach the text to the image.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Ellipsis">
      <summary>
              Gets or sets whether to display the ellipsis character when the text is beyond the width of the header.
            </summary>
      <value>
              A <see langword="bool" /> that indicates whether to display the ellipsis character when the text is beyond the width of the header. 
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.AllowResize">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether to allow setting the size. 
            </summary>
      <value>
        <see langword="true" /> if the user is allowed to set the size; otherwise,<see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.BackColor">
      <summary>
              Gets or sets a value that represents the backcolor.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.ForeColor">
      <summary>
              Gets or sets a value that represents the forecolor.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground color.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Clickable">
      <summary>
              Gets or sets whether the header is clickable.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" /> is clickable; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.GradientEffect">
      <summary>
              Gets or sets the gradient effect.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.GradientEffect" /> value that indicates the gradient effect.
              <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Image">
      <summary>
              Gets or sets the image.
            </summary>
      <value>
              An <b>Object</b> value that indicates the image.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Text">
      <summary>
              Gets or sets the caption string.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the caption string.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.TextEffect">
      <summary>
              Gets or sets the effect setting of the text.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.TextEffect" /> value that indicates the effect of the text.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.SortIndicatorAlignment">
      <summary>
              Gets or sets the alignment of the sort indicator.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.LeftRightAlignment" /> value that indicates the alignment of the sort indicator.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo">
      <summary>
              Represents a <b>ListHeaderPaneInfo</b> class used to define header pane settings.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Height">
      <summary>
              Gets or sets the height.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value that indicates the height of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />.
              <br /> The default is 20.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.ShouldSerializeHeight">
      <summary>
              Indicates whether the Height property should be persisted.
            </summary>
      <returns>
        <see langword="true" /> if the property value has changed from its default; 
              otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.ResetHeight">
      <summary>
              Resets the Height property to the default value.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Visible">
      <summary>
              Gets or sets whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" /> object is visible.
            </summary>
      <value>
        <see langword="true" />, if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" /> is visible; otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.AutoHeight">
      <summary>
              Gets or sets whether the height for <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" /> is automatically adjusted.
            </summary>
      <value>
        <see langword="true" />, if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" /> height is automatically adjusted by <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Font" /> of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" />; otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Font">
      <summary>
              Gets or sets the font.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Font" /> value for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" /> font.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.BackColor">
      <summary>
              Gets or sets the background color.  
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Control" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.GradientEffect">
      <summary>
            Gets or sets a value that represents the background gradient effect.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.GradientEffect" /> object.
              <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo">
      <summary>
              Represents a <b>ListItemInfo</b> class used to specify the default item settings.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> class with settings.
            </summary>
      <param name="subItem">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[])">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> objects.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.Object[])">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of objects.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[],System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> objects.
            </param>
      <param name="image">
              An <b>object</b> value that represents the image of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.Object[],System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of objects.
            </param>
      <param name="image">
              An <b>object</b> value that represents the image of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[],System.Int32,System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of subitems.
            </param>
      <param name="indent">
              An <see cref="T:System.Int32" /> value that represents the indent setting for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="image">
              An <b>object</b> value that represents the image of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.Object[],System.Int32,System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of objects.
            </param>
      <param name="indent">
              An <see cref="T:System.Int32" /> value that represents the indent setting of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="image">
              An <b>object</b> value that represents the image of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[],System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect,System.String,System.Object,System.Boolean)">
      <summary>
             Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> objects.
            </param>
      <param name="indent">
              An <see cref="T:System.Int32" /> value that represents the indent setting of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="image">
              An <b>object</b> value that represents the image of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="backColor">
              A <see cref="T:System.Drawing.Color" /> value that represents the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="foreColor">
              A <see cref="T:System.Drawing.Color" /> value that represents the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="height">
              An <see cref="T:System.Int32" /> value that represents the height of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="font">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Font" /> value that represents the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="gradientEffect">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.GradientEffect" /> that represents the gradient effect of  the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="toolTipText">
              A <see cref="T:System.String" /> value that represents the tooltip text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="tag">
              An <b>object</b> value that represents the tag of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="visible">
              A <see langword="bool" /> value that represents whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> is visible.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.Object[],System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect,System.String,System.Object,System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> class with settings.
            </summary>
      <param name="subItems">
              A collection of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" /> objects.
            </param>
      <param name="indent">
              An <see cref="T:System.Int32" /> value that represents the indent setting of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="image">
              An <b>object</b> value that represents the image of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="backColor">
              A <see cref="T:System.Drawing.Color" /> value that represents the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="foreColor">
              A <see cref="T:System.Drawing.Color" /> value that represents the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="height">
              An <see cref="T:System.Int32" /> value that represents the height of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="font">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Font" /> value that represents the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="gradientEffect">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.GradientEffect" /> that represents the gradient effect of  the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="toolTipText">
              A <see cref="T:System.String" /> value that represents the tooltip text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="tag">
              An <b>object</b> value that represents the tag of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <param name="visible">
              A <see langword="bool" /> value that represents whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object is visible.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.String)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> class with settings.
            </summary>
      <param name="text">
              A <see cref="T:System.String" /> value that represents the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Text" /> of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.BackColor">
      <summary>
              Gets or sets the background color.  
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> that represents the background color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ForeColor">
      <summary>
              Gets or sets the foreground color.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Font">
      <summary>
              Gets or sets the font.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Font" /> that represents the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Height">
      <summary>
              Gets or sets the height of the ListItemInfo object.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that represents the height of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Visible">
      <summary>
              Gets or sets whether the list item is visible.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> is visible; otherwise, <see langword="false" />. 
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Image">
      <summary>
              Gets or sets the ListItemInfo image.
            </summary>
      <value>
              An <see cref="T:System.Object" /> value that indicates the image of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Indent">
      <summary>
              Gets or sets the indent setting of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that represents the indent setting of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Text">
      <summary>
              Gets or sets the text in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </summary>
      <value>
              The text indicates the first <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Value" /> in <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Enabled">
      <summary>
              Gets or sets whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object is enabled.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object is enable; otherwise,<see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.AutoItemHeight">
      <summary>
              Gets whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object calculates the height automatically.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object calculates the height automatically based on the font of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object; 
              otherwise,<see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.SubItems">
      <summary>
              Gets or sets the subitem collection of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection" /> value that represents the subitem collection of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />. 
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Tag">
      <summary>
              Gets or sets the tag the user wants to set.
            </summary>
      <value>
              An <b>object</b> that stores what the user sets.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ToolTipText">
      <summary>
              Gets or sets tooltip text of the item.
            </summary>
      <value>
              A <see cref="T:System.String" /> object that represents text information for the tooltip.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeAutoItemHeight">
      <summary>
              Specifies whether the automatic item height should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetAutoItemHeight">
      <summary>
              Resets the height of the item that was set automatically.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeBackColor">
      <summary>
              Specifies whether the backcolor should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetBackColor">
      <summary>
              Resets the backcolor.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeForeColor">
      <summary>
              Specifies whether the forecolor should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetForeColor">
      <summary>
              Resets the forecolor.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeFont">
      <summary>
              Specifies whether the font should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetFont">
      <summary>
              Resets the font.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeHeight">
      <summary>
              Specifies whether the height should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetHeight">
      <summary>
              Resets the height.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeIndent">
      <summary>
              Specifies whether the indent setting should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetIndent">
      <summary>
              Resets the indent setting.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeVisible">
      <summary>
              Specifies whether the visible setting should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetVisible">
      <summary>
              Resets the visible setting.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeGradientEffect">
      <summary>
              Specifies whether the gradient effect should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetGradientEffect">
      <summary>
              Resets the gradient effect.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeImage">
      <summary>
              Specifies whether the image should be serialized.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetImage">
      <summary>
              Resets the image.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.GradientEffect">
      <summary>
            Gets or sets the background gradient effect.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.GradientEffect" /> object.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo">
      <summary>
              Represents a <b>ListItemCollectionInfo</b> class used to store <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> objects.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo)">
      <summary>
              Gets the item index.
            </summary>
      <param name="item">
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object to find the index for.
            </param>
      <returns>
              An <see cref="T:System.Int32" /> value that indicates the index if the item is found in the collection; otherwise,-1.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo)">
      <summary>
              Inserts an item in the collection at the specified position.
            </summary>
      <param name="index">
              The zero-based index at which the value should be inserted.
            </param>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> item to insert into the collectin.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.RemoveAt(System.Int32)">
      <summary>
              Removes the item at the specific position from the collection.
            </summary>
      <param name="index">
              The <see cref="T:System.Int32" /> value that indicates the index of the item to be removed.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Item(System.Int32)">
      <summary>
            Gets or Sets the ListItemInfo from the collection.
            </summary>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Add(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo)">
      <summary>
              Adds an item to the collection.
            </summary>
      <param name="item">
              The object to add into the collection.
            </param>
      <returns>
              The index of the added item.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Add(System.String)">
      <summary>
              Adds a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object with the text to the collection.
            </summary>
      <param name="text">
              A <see cref="T:System.String" /> value that represents <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Text" /> of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />.
            </param>
      <returns>
              The index of the added item.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo[])">
      <summary>
              Adds a range of items of the specified collection to the end of the collection.
            </summary>
      <param name="items">  
              A specified collection added into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.AddRange(System.String[])">
      <summary>
              Adds text of the specified collection to the end of the collection.
            </summary>
      <param name="texts">
              A specified collection added into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Clear">
      <summary>
              Clears all items in the collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Contains(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo)">
      <summary>
              Determines whether the collection contains the specified item.
            </summary>
      <param name="item">
              The specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object.
            </param>
      <returns>
        <see langword="true" /> if the object is found in the collection; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo[],System.Int32)">
      <summary>
              Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular 
              <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">
              The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from 
             <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. 
            </param>
      <param name="arrayIndex">
              The zero-based index in array at which copying begins.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Count">
      <summary>
              Gets the count of the collection.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the count of the collection.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo)">
      <summary>
              Deletes a specific item from the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> object to be deleted.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.ToArray">
      <summary>
              Copies the subitems of the collection to a new array.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" /> array that contains all the items in the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.GetEnumerator">
      <summary>
              Gets the enumerator of the collection.
            </summary>
      <returns>
              An <see cref="T:System.Collections.IEnumerator" /> object that represents the current enumerator of the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindObject(System.Object,System.Int32,System.Int32)">
      <summary>
              Finds the first item after specifed index that matches the specified object.
            </summary>
      <param name="obj">
              The object to search for.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value of the column index to search in.
            </param>
      <returns>
              The zero-based index of the first item found.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindAllObject(System.Object,System.Int32)">
      <summary>
              Finds the first item in the list that matches the specified object.
            </summary>
      <param name="obj">
              The object to search for.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value of the column index to search in.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" /> object that contains the matched items.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindAllString(System.String,System.Int32)">
      <summary>
              Finds the first item in the collection that starts with the specified string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value of the column index to search in.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection" /> object that contains the matched items.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindString(System.String,System.Int32,System.Int32)">
      <summary>
              Finds the first item after the given index which starts with the given string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value of the column to search in.
            </param>
      <returns>
              The zero-based index of the first item found; returns -1 if no match is found.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindAllStringExact(System.String,System.Int32)">
      <summary>
              Finds the first item in the list that matches the specified string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value of the column to search in.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" /> object that contains the matched items.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindStringExact(System.String,System.Int32,System.Int32)">
      <summary>
              Finds the first item after the specified index that matches the specified string.
            </summary>
      <param name="s">
              The <see cref="T:System.String" /> to search for.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value of the column to search in.
            </param>
      <returns>
              The zero-based index of the first item found; returns -1 if no match is found.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Find(System.Object,System.Collections.IComparer,System.Int32,System.Int32)">
      <summary>
              Finds the value by comparer from the start index.
            </summary>
      <param name="value">
              The <b>object</b> value to search for.
            </param>
      <param name="comparer">
              The <see cref="T:System.Collections.IComparer" /> value that indicates the comparer.
            </param>
      <param name="startIndex">
              The zero-based index of the item before the first item to be searched.
            </param>
      <param name="findTargetColumnIndex">
              The <see cref="T:System.Int32" /> value of the column to search in.
            </param>
      <returns>
              The index of the item If successful; otherwise, -1.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollectionInfo">
      <summary>
              Defines the <b>MatchedListItemCollectionInfo</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollectionInfo.Item(System.Int32)">
      <summary>
              Gets the item at the specified position.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value that indicates the specified position.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollectionInfo.CopyTo(System.Array,System.Int32)">
      <summary>
              Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
      <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
      <param name="index">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">The array is <see langword="null" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is less than zero. </exception>
      <exception cref="T:System.ArgumentException">The array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollectionInfo.Count">
      <summary>
              Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
      <value>
              The number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollectionInfo.GetEnumerator">
      <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
              An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo">
      <summary>
              Defines a <b>MaskAlternateTextInfo</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.DisplayNull">
      <summary>
              Gets the <b>Null</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Null</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.Null">
      <summary>
              Gets the <b>DisplayNull</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayNull</b> instance.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo">
      <summary>
              Represents a collection for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" /> object, which is read-only.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.AddRange(System.String)">
      <summary>
              Adds the content of another <see cref="T:IList&lt;MaskField&gt;"></see> to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <see cref="T:System.String" /> value that indicates the specified format string.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.OnAddRangeComplete(System.Object[])">
      <summary>
              Performs additional custom processes after inserting a new element array into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="value">
              The new value of the element.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.OnClear">
      <summary>
              Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.OnInsertComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert the value.
            </param>
      <param name="value">
              The new value of the element at the index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which the value can be found.
            </param>
      <param name="value">
              The value of the element to remove from the index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.GetFormatString">
      <summary>
            Gets the format string generated from the MaskFieldInfo fields.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.OnFieldPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.FieldPropertyChanged" /> event.
            </summary>
      <param name="e"></param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldInfosBuilder">
      <summary>
              Represents a builder that creates the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" /> object using the specified format.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldInfosBuilder.BuildFields(System.String)">
      <summary>
              Builds a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" /> object using the specified format.
            </summary>
      <param name="format">
              The format defined for the GcMask cell.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" /> array that indicates the build fields.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldInfosBuilder.BuildFormatFromFields(GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo[])">
      <summary>
            Builds format strings from existing fields.
            </summary>
      <param name="fields"></param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateTextInfo">
      <summary>
              Defines the <b>NumberAlternateTextInfo</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateTextInfo.Null">
      <summary>
              Gets the <b>Null</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Null</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateTextInfo.DisplayNull">
      <summary>
              Gets the <b>DisplayNull</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayNull</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateTextInfo.Zero">
      <summary>
              Gets the <b>Zero</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Zero</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateTextInfo.DisplayZero">
      <summary>
              Gets the <b>DisplayZero</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayZero</b> instance.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo">
      <summary>
              Represents the display field collection for <b>GcNumberCellType</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo.AddRange(System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;NumberDisplayField&gt;"></see> to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <b>string</b> value that indicates the specified format string.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo.AddRange(System.String,System.String,System.String,System.String,System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;NumberDisplayField&gt;"></see> to the end of the collection,
              which is built from specified arguments.
            </summary>
      <param name="pattern">
              A <b>string</b> value that indicates the pattern.
            </param>
      <param name="positivePrefix">
              A <b>string</b> value that indicates the prefix string when value is positive.
            </param>
      <param name="positiveSuffix">
              A <b>string</b> value that indicates the suffix string when value is positive.
            </param>
      <param name="negativePrefix">
              A <b>string</b> value that indicates the prefix string when value is negative.
            </param>
      <param name="negativeSuffix">
              A <b>string</b> value that indicates the suffix string when value is negative.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo.OnAddRange(System.Object[])">
      <summary>
              Performs additional custom processes before inserting a new element array into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="value">
              The new value of the element array.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo.OnInsert(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert value.
            </param>
      <param name="value">
              The new value of the element at index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
              The value to replace with newValue.
            </param>
      <param name="newValue">
              The new value of the element at index.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldInfosBuilder">
      <summary>
              Represents a builder to build the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo" /> object using a format.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldInfosBuilder.BuildFields(System.String)">
      <summary>
              Builds a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo" /> object using the specified format.
            </summary>
      <param name="format">
              The specified format defined by the date control.
            </param>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo" /> array that indicates the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> fields.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldInfosBuilder.BuildFields(System.String,System.String,System.String,System.String,System.String)">
      <summary>
              Builds a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo" /> object using the specified format.
            </summary>
      <param name="pattern">
              A <see cref="T:System.String" /> value that indicates the pattern.
            </param>
      <param name="positivePrefix">
              A <see cref="T:System.String" /> value that indicates the prefix string when value is positive.
            </param>
      <param name="positiveSuffix">
              A <see cref="T:System.String" /> value that indicates the suffix string when value is positive.
            </param>
      <param name="negativePrefix">
              A <see cref="T:System.String" /> value that indicates the prefix string when value is negative.
            </param>
      <param name="negativeSuffix">
              A <see cref="T:System.String" /> value that indicates the suffix string when value is negative.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo">
      <summary>
              Represents a collection for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo" /> object, which is read-only.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.Item(System.Int32)">
      <summary>
              Gets the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFieldInfo" /> object at the specified index.
            </summary>
      <value>
              The specified <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField" /> object in this collection.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.SignPrefix">
      <summary>
              Gets the sign prefix field of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> object.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignFieldInfo" /> object that indicates the sign prefix.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.IntegerPart">
      <summary>
              Gets the integer part field of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo" /> object that indicates the field for the integer part.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.DecimalSeparator">
      <summary>
              Gets the decimal separator field of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorFieldInfo" /> object that indicates the field for the decimal separator.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.DecimalPart">
      <summary>
              Gets the decimal part field of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> object.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartFieldInfo" /> object that indicates the field for the decimal part.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.SignSuffix">
      <summary>
              Gets the sign suffix field of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" /> object.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignFieldInfo" /> object that indicates the sign suffix.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.SetFields(System.String)">
      <summary>
              Parses the format and sync settings for each field.
            </summary>
      <param name="format">
              A <see cref="T:System.String" /> value that indicates the format for the fields.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.SetFields(System.String,System.String,System.String,System.String,System.String)">
      <summary>
              Parses the pattern and sync settings for each field.
            </summary>
      <param name="pattern">
              A <see cref="T:System.String" /> value that indicates the pattern for the fields.
            </param>
      <param name="positivePrefix">
              A <see cref="T:System.String" /> value that indicates the string for the positive prefix.
            </param>
      <param name="positiveSuffix">
              A <see cref="T:System.String" /> value that indicates the string for the positive suffix.
            </param>
      <param name="negativePrefix">
              A <see cref="T:System.String" /> value that indicates the string for the negative prefix.
            </param>
      <param name="negativeSuffix">
              A <see cref="T:System.String" /> value that indicates the string for the negative suffix.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.Count">
      <summary>
              Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the count.
            </value>
      <returns>
              The number of elements contained in <see cref="T:System.Collections.ICollection"></see>.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.GetEnumerator">
      <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
              An <see cref="T:System.Collections.Generic.IEnumerator`1"></see> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo">
      <summary>
              Represents information for the drop-down calendar.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Align">
      <summary>
              Gets or sets the alignment of the pop-up window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.LeftRightAlignment" /> value. 
              <br /> The default is <see cref="F:System.Windows.Forms.LeftRightAlignment.Left" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.AllowPopUp">
      <summary>
              Gets or sets whether to allow the pop-up window to be displayed.
            </summary>
      <value>
        <see langword="true" /> to allow the pop-up; otherwise, <see langword="false" />.
              <br /> The default is <see langword="true" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.BackColor">
      <summary>
              Gets or sets the background color of the pop-up window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the background color of the pop-up window.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.Window" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.BackgroundImage">
      <summary>
              Gets or sets the background image displayed in the pop-up window.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Image" /> that represents the image to display in the
              background of the pop-up window.
              <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.BackgroundImageLayout">
      <summary>
              Gets or sets the layout mode of the background image.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.ImageLayout" /> value that indicates the layout mode of the background image.
              <br /> The default is <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.BorderStyle">
      <summary>
              Gets or sets the border style.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.BorderStyle" /> value that indicates the border style.
              <br /> The default is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.DecimalDigit">
      <summary>
              Gets or sets the decimal digit.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value that indicates the number of digits of the decimal part.
              <br /> The default is 2.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Font">
      <summary>
              Gets or sets the font used in the pop-up window.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Font" /> value that indicates the font used in the pop-up window.
            </value>
      <remarks>
              The default value is the same as the control font.
              If a <see langword="null" /> value is set, the value is the default value automatically, without exception.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.ForeColor">
      <summary>
              Gets or sets the foreground color of the pop-up window.
            </summary>
      <value>
              A <see cref="T:System.Drawing.Color" /> value that indicates the foreground color of the pop-up window.
              <br /> The default is <see cref="P:System.Drawing.SystemColors.WindowText" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Lines">
      <summary>
              Gets or sets how many lines show in the pop-up window.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value that indicates how many lines show in the pop-up window.
              <br /> The default is 12.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Padding">
      <summary>
              Gets or sets the padding of the pop-up window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.Padding" /> value.
              <br /> The default is "1,1,1,1".
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.SingleBorderColor">
      <summary>
              Gets or sets the color for the single line border in the pop-up window.
            </summary>
      <value>
              The <see cref="T:System.Drawing.Color" /> value that indicates the color of the single line border.
              <br /> The default value is the <see cref="P:System.Drawing.SystemColors.WindowFrame" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.TextHAlign">
      <summary>
             Gets or sets the horizontal alignment of the text of the pop-up window.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.HorizontalAlignment" /> value.
              <br /> The default is <see cref="F:System.Windows.Forms.HorizontalAlignment.Right" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.UseDecimalDigit">
      <summary>
             Gets or sets whether to use the <b>DecimalDigit</b> property.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to use the decimal digit; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Width">
      <summary>
              Gets or sets the width of the pop-up window.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value that indicates the width of the pop-up window.
              <br /> The default is 0.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">
              The value is less than zero.
            </exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary">
      <summary>
            Represents a Keys/String pair collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Add(System.Windows.Forms.Keys,System.String)">
      <summary>
             Adds a Keys/String element to the collection.
             </summary>
      <param name="key">
             The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Keys" /> to use as the keys of the shortcut.
             </param>
      <param name="value">
             The <see cref="T:System.String" /> to use as the value of the shortcut.
             </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry[])">
      <summary>
            Adds a <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry" /> array with a set of key/value pairs to the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary" />.
            </summary>
      <param name="entries">
            The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry" /> array with a set of key/value pairs.
            </param>
      <remarks>
              This method is used by the MultiRow internal structure. It is not recommended for use.
            </remarks>=
        </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.ContainsKey(System.Windows.Forms.Keys)">
      <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
      <param name="key">
            The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Keys" /> to locate in the collection.
            </param>
      <returns>
        <see langword="true" /> if the collection contains an element with the <paramref name="key" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Keys">
      <summary>
            Gets a collection that contains the keys of the all elements.
            </summary>
      <value>
            A Keys collection that contains the keys of the collection.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Remove(System.Windows.Forms.Keys)">
      <summary>
            Removes the element with the specified key.
            </summary>
      <param name="key">
            The key of the element to remove.
            </param>
      <returns>
        <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />. This method
             also returns <see langword="false" /> if key was not found in the original collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.TryGetValue(System.Windows.Forms.Keys,System.String@)">
      <summary>
            Gets the value associated with the specified key.
            </summary>
      <param name="key">
            The key whose value to get.
            </param>
      <param name="value">
            This method returns the value associated with the specified key, if
            the key is found; otherwise, this method returns the default value for the type of the value
            parameter. This parameter is passed uninitialized.
            </param>
      <returns>
        <see langword="true" /> if the collection contains an element with the specified key; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Clear">
      <summary>
              Removes all shortcuts from the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary" />.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Values">
      <summary>
            Gets a collection that contains the values in the inner collection.
            </summary>
      <value>
            A string collection that contains the values of the collection.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Item(System.Windows.Forms.Keys)">
      <summary>
            Gets or sets the element with the specified key.
            </summary>
      <param name="key">
            The key of the element to get or set.
            </param>
      <returns>
            The element with the specified key.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            The assigned value is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
            The assigned value is an invalid action name.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary" />.
            </summary>
      <value>
            A <see cref="T:System.Int32" /> value that represents the number of elements contained in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Clone">
      <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
      <returns>
            A <see cref="T:System.Object" /> value that is a copy of this instance.
            </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry">
      <summary>
            Represents one Keys/String pair.
            </summary>
      <remarks>
              This class is used by the GcMultiRow internal structure. It is not recommended for use.
            </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry.#ctor(System.Windows.Forms.Keys,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry" /> class.
            </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry.Key">
      <summary></summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry.Value">
      <summary></summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo">
      <summary>
              Represents the normal side button with image and text.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Checked">
      <summary>
              Gets or sets a value that indicates whether the check box is in the checked state.
            </summary>
      <value>
              A <see langword="bool" /> value that indicates whether the check box is in the checked state.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.CheckOnClick">
      <summary>
              Gets or sets a value that indicates whether to check the button when clicked.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to check the button when clicked; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.ContentAlignment">
      <summary>
              Gets or sets the alignment of the image attached to the text (Classical Appearance).
            </summary>
      <value>
              A <see cref="T:System.Drawing.ContentAlignment" /> that indicates the alignment of the image attached to the text.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Image">
      <summary>
              Gets or sets the image displayed on a button view.
            </summary>
      <value>
              A <see cref="P:SideButton.Image" /> that indicates the image displayed on a button view.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Text">
      <summary>
              Gets or sets the text displayed on a button view.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the text displayed on a button view.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.TextAlignment">
      <summary>
              Gets or sets the alignment of the text with the image.
            </summary>
      <value>
              A <see cref="T:System.Windows.Forms.LeftRightAlignment" /> enumeration,
            <b>Left</b> means the text is on the left side of the image,
            <b>Right</b> means the text is on the right side of the image.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Behavior">
      <summary>
            Gets or sets the behavior when clicking the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior" /> enumeration, 
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" /> means clicking the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo" />, causes spin up behavior,
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" /> means clicking the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo" />, causes spin down behavior. 
            </value>
      <remarks>
            When set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />, the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Text" /> property is changed to "+", and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" /> property is changed to 60.
            When set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />, the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Text" /> property is changed to "-", and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" /> property is changed to 60.
            When set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.None" />, the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Text" /> property is changed to <see cref="F:System.String.Empty" />, and the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" /> property is changed to 0.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Delay">
      <summary>
              Gets or sets the delay time, in milliseconds, before repeating the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> event.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the delay time, in milliseconds, before repeating the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
              The default is 250.
            </value>
      <remarks>
              The value must be greater than or equals to 0. 
              If <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.CheckOnClick" /> property is <see langword="true" /> 
              or <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" /> property is 0, the Spin action will be stopped.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is smaller than 0.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval">
      <summary>
              Gets or sets the interval of firing the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the interval of firing the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
              The default is 0.
            </value>
      <remarks>
              The value must be greater than or equal to 0. 
              If the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.CheckOnClick" /> property is <see langword="true" /> 
              or the <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" /> property is 0, the spin action is stopped.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is smaller than 0.
            </exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo">
      <summary>
              Represents the base class of side buttons.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.Tag">
      <summary>
              Gets or sets the object that contains data about the side button object.
            </summary>
      <value>
              An <see cref="T:System.Object" /> that contains data about the side button object. The default is <see langword="null" />.
            </value>
      <remarks>
        <para>
                Any type derived form <see cref="T:System.Object" /> class can be assigned to this property. If the Tag property is set through the Windows Form designer, only text can be assigned.
              </para>
        <para>
                A common use for the Tag property is to store data that is closely associated with the side button object. 
              </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.BackColor">
      <summary>
              Gets or sets the backcolor of the side button.
            </summary>
      <value>
              The backcolor of the side button.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.ButtonWidth">
      <summary>
              Gets or sets the width of the side button.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value that indicates the width of the side button.
            </value>
      <remarks>
              The value of this property retrieves the width of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.Enabled">
      <summary>
              Gets or sets a value that indicates whether this <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> is enabled.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if enabled; otherwise, <see langword="false" />.
            <br /> The default is <see langword="true" />.
            </value>
      <remarks>
              With the <b>Enabled</b> property, you can enable or disable controls at run time. For example, you can disable controls that do not apply to the current state of the application. You can also disable a control to restrict its use. For example, a button can be disabled to prevent the user from clicking it. If a control is disabled, it cannot be selected.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.FlatAppearance">
      <summary>
              Gets the appearance of the border and the colors used to indicate check state and mouse state.
            </summary>
      <value>
              One of the <seealso cref="T:FlatButtonAppearance" /> settings.
            </value>
      <remarks>
              With the <b>FlatAppearance</b> property, you can customize the appearance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> object when the <see cref="T:System.Windows.Forms.FlatStyle" /> of the control, which the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> belongs to, is <b>FlatStyle.Flat</b>.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.ForeColor">
      <summary>
              Gets or sets the color of the foreground.
            </summary>
      <value>The color of the foreground.</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.Name">
      <summary>
              Gets or sets the name of the object.
            </summary>
      <value>
              A <see cref="T:System.String" /> value that indicates the name of the object.
            <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.Position">
      <summary>
              Gets or sets the position of the side button.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition" /> enumeration that indicates the position of the side button.
            <br /> The default is <see cref="F:ButtonPosition.RightInside" />.
            </value>
      <remarks>
              With the <b>Position</b> property, you can change the position of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> object.
              The button can be inside or outside at the left or right of the container control's border.
            </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.UseVisualStyleBackColor">
      <summary>
              Gets or sets whether to use the visual style backcolor when flat style is system and the system theme is active.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to use the visual style backcolor when
              flat style is system and system theme is active; otherwise, <see langword="false" />.
            </value>
      <remarks>
              Visual styles are specifications for the control appearance.
              For example, visual styles can define the color, size, and font of the controls. They also enable you to configure the visual interface to coordinate
              with your application interface. Additionally, they provide a mechanism for all Windows-based applications to have visual styles applied.
            <note>
              Only the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" /> and the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" /> are effected by this property.
            </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.Visible">
      <summary>
              Gets or sets the visibility of the side button.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility" /> enumeration that indicates the visibility settings for the side button.
            <br /> The default is <see cref="F:ButtonVisibility.ShowAlways" />.
            </value>
      <remarks>
              The <b>Visible</b> property determines when the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> is visible. The button can be always shown,
              shown only if the container control gets focus, or never shown.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollectionInfo">
      <summary>
              Represents the collection for Side buttons.
            </summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButtonInfo">
      <summary>
              Represents the <b>SpinButton</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SpinButtonInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButtonInfo.Delay">
      <summary>
              Gets or sets the delay time, in milliseconds.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value that indicates the delay time, in milliseconds.
            </value>
      <remarks>
              The value must be positive.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs when value is smaller than 0.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButtonInfo.Interval">
      <summary>
              Gets or sets the spin interval.
            </summary>
      <value>
              A <see cref="T:System.Int32" /> value that indicates the spin interval.
            </value>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs when value is smaller than 1.</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButtonInfo.IsDefaultBehavior">
      <summary>
              Gets or sets a value that indicates whether this instance is the default behavior.
            </summary>
      <value>
        <see langword="true" /> if this button controls the default drop-down behavior; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButtonInfo.UseVisualStyleBackColor">
      <summary>
              Gets or sets whether to use the visual style backcolor when flat style is system and system theme is active.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to use the visual style backcolor when 
              flat style is system and system theme is active; otherwise, false.
            </value>
      <remarks>
              This property is invalid for <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />.
            </remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo">
      <summary>
              Represents a <b>StatusBarInfo</b> class used to define status bar settings.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.Text">
      <summary>
              Gets or sets the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" />.
            </summary>
      <value>
              The <see cref="T:System.String" /> value that indicates the text of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.Visible">
      <summary>
              Gets or set a <see langword="bool" /> value that indicates whether the status bar is visible.
            </summary>
      <value>
              The <see langword="bool" /> value, <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" /> is visible; otherwise, <see langword="false" />.
              <br /> The default is <see langword="false" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo">
      <summary>
              Represents a <b>SubItemInfo</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.#ctor(System.Object,System.Object,System.Drawing.ContentAlignment,System.Boolean,System.Boolean)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> class with values.
            </summary>
      <param name="value">
              An <b>object</b> that indicates the value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object.
            </param>
      <param name="tag">
              An <b>object</b> that indicates the tag value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object.
            </param>
      <param name="contentAlignment">
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ContentAlignment" /> enumeration that indicates the alignment of the content.
            </param>
      <param name="wordWrap">
              A <see langword="bool" /> value, <see langword="true" /> to allow wrapping by word; otherwise, <see langword="false" />.
            </param>
      <param name="ellipsis">
              A <see langword="bool" /> value, <see langword="true" /> to automatically show the ellipsis when content is not completely displayed; otherwise, <see langword="false" />.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.#ctor(System.Object)">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> class with values.
            </summary>
      <param name="value">
              An <b>object</b> that indicates the value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Padding">
      <summary>
              Gets or sets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Padding" /> value that indicates the margin of <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Padding" /> value that indicates the margin.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Value">
      <summary>
              Gets or sets the value of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object.
            </summary>
      <value>
              The <see cref="T:System.Object" /> value that indicates the value.
              <br /> The default is <see langword="null" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Tag">
      <summary>
              Gets or sets a value the user set.
            </summary>
      <value>
              An <see cref="T:System.Object" /> object that represents the tag of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object.
              <br /> The default is <see cref="F:System.String.Empty" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ContentAlignment">
      <summary>
              Gets or sets the alignment of the text.
            </summary>
      <value>
              The <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ContentAlignment" /> value that indicates the alignment of the text.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.WordWrap">
      <summary>
              Gets or sets a <see langword="bool" /> value that indicates whether the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object can wrap by word.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object can wrap; otherwise,<see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Ellipsis">
      <summary>
              Gets or sets whether to display the ellipsis when the text is not completely displayed.
            </summary>
      <value>
        <see langword="true" /> if the text uses the ellipsis; otherwise,<see langword="false" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ResetContentAlignment">
      <summary>
              Resets the content alignment.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ResetEllipsis">
      <summary>
              Resets the ellipsis.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ResetWordWrap">
      <summary>
            Resets the word wrap.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ResetPadding">
      <summary>
              Resets the padding.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo">
      <summary>
              Defines the <b>SubItemCollectionInfo</b> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>
              Gets the index of the item.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object to get the index for.
            </param>
      <returns>
              The index if the item is found in the collection; otherwise,-1.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>
              Inserts an item to the collection at the specified position
            </summary>
      <param name="index">
              The zero-based index at which value should be inserted.
            </param>
      <param name="item">
              The item to insert into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.RemoveAt(System.Int32)">
      <summary>
              Removes the item at the specified position from the collection.
            </summary>
      <param name="index">
              The index of the item to be removed.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Item(System.Int32)">
      <summary>
              Gets or sets the item at the specified position.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value that indicates the specified position.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Add(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>
              Adds an item to the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> value to add into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Add(System.Object)">
      <summary>
            Adds an item to the collection.
            </summary>
      <param name="item">The object to add into the collection.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.AddRange(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[])">
      <summary>
              Adds subitems in the specified collection to the end of the collection.
            </summary>
      <param name="subItems"> A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> array added into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.AddRange(System.Object[])">
      <summary>
              Adds subitems in the specified collection to the end of the collection.
            </summary>
      <param name="subItems"> An <b>object</b> array added into the collection.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Clear">
      <summary>
              Clears all the items in the collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Contains(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>
              Determines whether the collection contains a specific item.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> to locate in the collection.
            </param>
      <returns>
        <see langword="true" /> if the item is found in the collection; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[],System.Int32)">
      <summary>
              Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular 
              <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">
             The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from 
             <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. 
            </param>
      <param name="arrayIndex">
               The zero-based index in array at which copying begins.
            </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Count">
      <summary>
              Gets a value that represents the count of the collection.
            </summary>
      <value>
              The <see cref="T:System.Int32" /> value indicates the count.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.IsReadOnly">
      <summary>
              Gets whether the collection is read-only.
            </summary>
      <value>
        <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Remove(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>
              Deletes a specific item from the collection.
            </summary>
      <param name="item">
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> value to be deleted.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.ToArray">
      <summary>
              Copies the subitems of the colletion to a new <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> array.
            </summary>
      <returns>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> array returned with all items of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo" /></returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.GetEnumerator">
      <summary>
              Gets the enumerator.
            </summary>
      <returns>
              The enumerator.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo">
      <summary>
              Represents a <b>DefaultSubItemInfo</b> class used to define default values for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> class.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo" /> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Ellipsis">
      <summary>
              Gets or sets whether to use an ellipsis when there is not enough space to draw the content.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> to use an ellipsis when there is not enough space to draw the content; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.WordWrap">
      <summary>
              Gets or sets whether the content can be wrapped.
            </summary>
      <value>
              A <see langword="bool" /> value, <see langword="true" /> if the content can be wrapped; otherwise, <see langword="false" />.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Padding">
      <summary>
              Gets or sets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Padding" /> value that indicates the distance between the content and the boundary of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Padding" /> value that indicates the distance between the content and the boundary of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" /> object.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ContentAlignment">
      <summary>
              Gets or sets a <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ContentAlignment" /> value that indicates the alignment of the content.
            </summary>
      <value>
              A <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ContentAlignment" /> value that indicates the alignment of the content.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ShouldSerializePadding">
      <summary>
              Specifies whether <b>Padding</b> should be serialized.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ResetPadding">
      <summary>
              Resets the <b>Padding</b> setting.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ShouldSerializeWordWrap">
      <summary>
              Specifies whether <b>WordWrap</b> should be serialized.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ResetWordWrap">
      <summary>
              Resets the <b>WordWrap</b> setting.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ShouldSerializeEllipsis">
      <summary>
             Specifies whether <b>Ellipsis</b> should be serialized.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ResetEllipsis">
      <summary>
              Resets the <b>Ellipsis</b> setting.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ShouldSerializeContentAlignment">
      <summary>
             Specifies whether <b>ContentAlignment</b> should be serialized.
            </summary>
      <returns>
              A <see langword="bool" /> value.
            </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ResetContentAlignment">
      <summary>
              Resets the <b>ContentAlignment</b> setting.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo">
      <summary>
              Represents the symbol button class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Symbol">
      <summary>
              Gets or sets the symbol to be drawn.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Symbols" /> object that indicates the symbol to be drawn.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.SymbolDirection">
      <summary>
              Gets or sets the direction of the symbol.
            </summary>
      <value>
              A <see cref="P:SymbolButton.SymbolDirection" /> that indicates the direction of the symbol.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Behavior">
      <summary>
            Gets or sets the behavior when clicking the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo" />.
            </summary>
      <value>
              A <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior" /> enumeration, 
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" /> means clicking the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo" />, causes spin up behavior,
              <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" /> means clicking the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo" />, causes spin down behavior. 
            </value>
      <remarks>
        <remarks>
            When set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />, the 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Symbol" /> property is changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Arrow" />, the 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.SymbolDirection" /> property is changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Up" />, and the 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Interval" /> property is changed to 60.
            When set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />, the 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Symbol" /> property is changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Arrow" />, the 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.SymbolDirection" /> property is changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Down" />, and the 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Interval" /> property is changed to 60.
            When set to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />, the 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Symbol" /> property is changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.None" />, the 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.SymbolDirection" /> property is changed to <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Left" />, and the 
            <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Interval" /> property is changed to 0.
            </remarks>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Delay">
      <summary>
              Gets or sets the delay time, in milliseconds, before repeating the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> event.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the delay time, in milliseconds, before repeating the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
              The default is 250.
            </value>
      <remarks>
              The value must be greater than or equals to 0. 
              If <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.CheckOnClick" /> property is <see langword="true" /> 
              or <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" /> property is 0, the Spin action will be stopped.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is smaller than 0.
            </exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Interval">
      <summary>
              Gets or sets the interval of firing the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
            </summary>
      <value>
              An <see cref="T:System.Int32" /> value that indicates the interval of firing the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> events.
              The default is 0.
            </value>
      <remarks>
              The value must be greater than or equals to 0. 
              If <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.CheckOnClick" /> property is <see langword="true" /> 
              or <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" /> property is 0, the Spin action will be stopped.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is smaller than 0.
            </exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateTextInfo">
      <summary>
              Defines a <b>TextBoxAlternateText</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateTextInfo.DisplayNull">
      <summary>
              Gets the <b>DisplayNull</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayNull</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateTextInfo.Null">
      <summary>
              Gets the <b>Null</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Null</b> instance.
            </value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo">
      <summary>
              Defines the <b>TimeSpanAlternateTextInfo</b> class.
            </summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.DisplayZero">
      <summary>
              Gets the <b>DisplayZero</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              The <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayEmptyEra</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.DisplayNull">
      <summary>
              Gets the <b>DisplayNull</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>DisplayNull</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.Zero">
      <summary>
              Gets the <b>Zero</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>EmptyEra</b> instance.
            </value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.Null">
      <summary>
              Gets the <b>Null</b> instance of the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> type.
            </summary>
      <value>
              An <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> value that indicates the <b>Null</b> instance.
            </value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Gets the object data.
            </summary>
      <param name="info">The information.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            Saves the object to XML.
            </summary>
      <param name="w">XmlTextWriter object used to save the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            Loads the object from XML.
            </summary>
      <param name="r">XmlNodeReader from which to read the object</param>
      <returns>true if successful; false otherwise</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo">
      <summary>
              Represents the display field collection for <b>GcDateTimeCellType</b>.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo.AddRange(System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;TimeSpanDisplayFieldInfo&gt;"></see> to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <b>string</b> value that indicates the specified format string.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo.AddRange(System.String,System.Int32,System.Char,System.String,System.String,System.String,System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;TimeSpanDisplayFieldInfo&gt;"></see> to the end of the collection,
              which is built from specified arguments.
            </summary>
      <param name="pattern">
              A <b>string</b> value that indicates the pattern string of the format.
            </param>
      <param name="decimalPlaces">
              An <b>int</b> value that indicates the number of decimal places to display in the GcTimeSpan cell.
            </param>
      <param name="decimalPoint">
              A <b>char</b> value that indicates the character that represents the decimal point.
            </param>
      <param name="positivePrefix">
              A <b>string</b> value that indicates the prefix string when value is positive.
            </param>
      <param name="positiveSuffix">
              A <b>string</b> value that indicates the suffix string when value is positive.
            </param>
      <param name="negativePrefix">
              A <b>string</b> value that indicates the prefix string when value is negative.
            </param>
      <param name="negativeSuffix">
              A <b>string</b> value that indicates the suffix string when value is negative.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo.OnAddRange(System.Object[])">
      <summary>
              Performs additional custom processes before inserting a new element array into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="value">
              The new value of the element array.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo.OnInsert(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert the value.
            </param>
      <param name="value">
              The new value of the element at the index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
              The value to replace with newValue.
            </param>
      <param name="newValue">
              The new value of the element at the specified index.
            </param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo">
      <summary>
              Represents a collection for the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo" /> object, which is read-only.
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.AddRange(System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;TimeSpanField&gt;"></see> to the end of the collection,
              which is built from a specified format string.
            </summary>
      <param name="format">
              A <see cref="T:System.String" /> value that indicates the specified format string.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.AddRange(System.String,System.Int32,System.Char,System.String,System.String,System.String,System.String)">
      <summary>
              Adds the contents of another <see cref="T:IList&lt;TimeSpanField&gt;"></see> to the end of the collection,
              which is built from specified arguments.
            </summary>
      <param name="pattern">
              A <see cref="T:System.String" /> value that indicates the pattern string of the format.
            </param>
      <param name="decimalPlaces">
              An <see cref="T:System.Int32" /> value that indicates the number of decimal places to display in the <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" /> cell.
            </param>
      <param name="decimalPoint">
              A <b>char</b> value that indicates the character that represents the decimal point.
            </param>
      <param name="positivePrefix">
              A <see cref="T:System.String" /> value that indicates the prefix string when value is positive.
            </param>
      <param name="positiveSuffix">
              A <see cref="T:System.String" /> value that indicates the suffix string when value is positive.
            </param>
      <param name="negativePrefix">
              A <see cref="T:System.String" /> value that indicates the prefix string when value is negative.
            </param>
      <param name="negativeSuffix">
              A <see cref="T:System.String" /> value that indicates the suffix string when value is negative.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which value can be found.
            </param>
      <param name="value">
              The value of the element to remove from index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnAddRange(System.Object[])">
      <summary>
              Performs additional custom processes before inserting a new element array into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="value">
              The new value of the element array.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnClear">
      <summary>
            Clear event listeners before clearing items
            </summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnFieldPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
            Raises the <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.FieldPropertyChanged" /> event.
            </summary>
      <param name="e"></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnInsert(System.Int32,System.Object)">
      <summary>
              Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which to insert the value.
            </param>
      <param name="value">
              The new value of the element at the index.
            </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
              Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">
              The zero-based index at which oldValue can be found.
            </param>
      <param name="oldValue">
              The value to replace with newValue.
            </param>
      <param name="newValue">
              The new value of the element at the specified index.
            </param>
    </member>
  </members>
</doc>